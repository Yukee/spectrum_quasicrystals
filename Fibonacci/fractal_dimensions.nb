(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1154981,      22527]
NotebookOptionsPosition[   1143122,      22170]
NotebookOutlinePosition[   1143722,      22194]
CellTagsIndexPosition[   1143633,      22189]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.621746080389682*^9, 3.62174608226017*^9}, {
  3.621746135693265*^9, 3.621746138092404*^9}, {3.621746173598854*^9, 
  3.621746176545178*^9}, {3.621746380188685*^9, 3.621746380796864*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/\"\>"], \
"Output",
 CellChangeTimes->{
  3.621746138720299*^9, 3.6217461772329283`*^9, 3.6217463820837097`*^9, 
   3.621914084597064*^9, 3.622354902377564*^9, 3.6224500465525513`*^9, 
   3.623673817987068*^9, {3.623732923752467*^9, 3.6237329431664143`*^9}, 
   3.623733011172534*^9, 3.6265009345731573`*^9, 3.626503064282505*^9, 
   3.626518136823456*^9, 3.6265986644273252`*^9, 3.626766190657977*^9, 
   3.6267758308974867`*^9, 3.626942336671768*^9, 3.6297104411821547`*^9, 
   3.629712724622324*^9, 3.629781022135947*^9, 3.630046408966426*^9, 
   3.6313337238449497`*^9, 3.631354144526745*^9, 3.631354355972702*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Thickness", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"th", "=", "0.003"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.621748603657528*^9, 3.621748631317513*^9}}],

Cell[CellGroupData[{

Cell["Setup and tests", "Section",
 CellChangeTimes->{{3.6297125430928926`*^9, 3.6297125483893642`*^9}}],

Cell[CellGroupData[{

Cell["Hamiltonians", "Subsection",
 CellChangeTimes->{{3.629712555829027*^9, 3.629712557652924*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hp", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
   3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
   3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
   3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
   3.629711744441989*^9}, {3.629712260739542*^9, 3.6297122613888474`*^9}, {
   3.629712372304244*^9, 3.629712372429983*^9}, 3.6313353026608963`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "antiperiodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ha", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{"-", "tw"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "free", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Omega]", "=", 
     RowBox[{"N", " ", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Sqrt", "[", "5", "]"}], "-", "1"}], "2"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rot", "=", "28"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "rotate", " ", "the", " ", "sequence", " ", "of", " ", "couplings"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fib", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", 
        RowBox[{"(", " ", 
         RowBox[{"n", "+", "1", "+", "rot"}], ")"}]}], "]"}], "-", 
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "rot"}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"jump", "[", 
      RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fib", "[", 
         RowBox[{"n", "-", "1"}], "]"}], "<", "1"}], ",", "ts", ",", "tw"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hf", "[", 
     RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F2", "=", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"jump", "[", 
            RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ar", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"ar", "+", 
         RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hpn", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tbl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
          RowBox[{"jump", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"tbl", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "F2"}], "}"}], "\[Rule]", "tw"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"tbl", ",", 
         RowBox[{"{", 
          RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}, {
  3.6313347078403673`*^9, 3.631334724799961*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hpn", "[", 
   RowBox[{"4", ",", "tw", ",", "ts"}], "]"}], "//", "MatrixForm"}]], "Input",\

 CellChangeTimes->{{3.631334764650066*^9, 3.631334778411381*^9}, 
   3.631334808908852*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "ts", "0", "0", "0", "0", "0", "tw"},
     {"ts", "0", "tw", "0", "0", "0", "0", "0"},
     {"0", "tw", "0", "tw", "0", "0", "0", "0"},
     {"0", "0", "tw", "0", "ts", "0", "0", "0"},
     {"0", "0", "0", "ts", "0", "tw", "0", "0"},
     {"0", "0", "0", "0", "tw", "0", "tw", "0"},
     {"0", "0", "0", "0", "0", "tw", "0", "ts"},
     {"tw", "0", "0", "0", "0", "0", "ts", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.631334774282947*^9, 3.631334778586624*^9}, 
   3.631334809317875*^9, 3.631354352853109*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hp", "[", 
   RowBox[{"4", ",", "tw", ",", "ts"}], "]"}], "//", "MatrixForm"}]], "Input",\

 CellChangeTimes->{{3.6313347890189037`*^9, 3.631334818380761*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "tw", "0", "ts", "0", "0"},
     {"0", "0", "0", "0", "tw", "0", "ts", "0"},
     {"0", "0", "0", "0", "0", "tw", "0", "ts"},
     {"tw", "0", "0", "0", "0", "0", "tw", "0"},
     {"0", "tw", "0", "0", "0", "0", "0", "tw"},
     {"ts", "0", "tw", "0", "0", "0", "0", "0"},
     {"0", "ts", "0", "tw", "0", "0", "0", "0"},
     {"0", "0", "ts", "0", "tw", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.631334789608203*^9, 3.631334818662771*^9}, 
   3.6313543528961906`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"wavefunctions", " ", "in", " ", "the", " ", "co"}], "-", 
     "basis"}], ",", " ", 
    RowBox[{"ordered", " ", "by", " ", "IDoS", " ", "label"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"wf", "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"val", ",", "vec", ",", 
        RowBox[{"i", "=", "9"}], ",", 
        RowBox[{"ts", "=", "10."}], ",", 
        RowBox[{"tw", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"val", ",", "vec"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hp", "[", 
          RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
         "energy"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"vec", "[", 
        RowBox[{"[", 
         RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6261835580584307`*^9, 3.626183644508493*^9}, {
   3.626183676171571*^9, 3.626183722191566*^9}, 3.626183781822111*^9, {
   3.626183816030047*^9, 3.626183827677142*^9}, {3.626502475078207*^9, 
   3.626502499271872*^9}, {3.6265025384425087`*^9, 3.626502589859262*^9}, {
   3.626502627438632*^9, 3.626502679484573*^9}, {3.626598691082008*^9, 
   3.6265986912104263`*^9}, {3.62659905583876*^9, 3.626599055965111*^9}, {
   3.626604541376775*^9, 3.626604560702219*^9}, {3.626759456423348*^9, 
   3.626759463557775*^9}, 3.626759502409028*^9, 3.6267597483770742`*^9, 
   3.626759779130186*^9, {3.626759843498399*^9, 3.62675985900183*^9}, {
   3.626760751698635*^9, 3.626760751818429*^9}, 3.626766173062235*^9, {
   3.626766253686771*^9, 3.626766253796822*^9}, 3.6267715298587723`*^9, {
   3.626772752281295*^9, 3.6267727667613487`*^9}, {3.626772823898781*^9, 
   3.626772833321363*^9}, 3.626773006859661*^9, 3.626776746353821*^9, {
   3.6267767996656427`*^9, 3.626776815960644*^9}, {3.626777473399418*^9, 
   3.6267774933994617`*^9}, {3.626777736599781*^9, 3.6267777367036657`*^9}, {
   3.62677783840864*^9, 3.626777838551655*^9}, {3.62971055504248*^9, 
   3.629710587311894*^9}, {3.6297107232516212`*^9, 3.62971072329027*^9}, {
   3.629711802823543*^9, 3.6297118405675583`*^9}, 3.629712157017377*^9, {
   3.629712209691208*^9, 3.6297122113700237`*^9}, {3.629712268794414*^9, 
   3.629712269290574*^9}, {3.629712376716538*^9, 3.629712376858807*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", " ", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", "wf", "]"}], "2"], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<energy label\>\"", ",", "\"\<co-number label\>\""}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Amplitude labelled by co-number and energy\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.62618368918817*^9, 3.626183694490307*^9}, {
   3.626502744190041*^9, 3.626502814889082*^9}, {3.6265028549743223`*^9, 
   3.62650287197738*^9}, {3.626503091284193*^9, 3.6265030914950733`*^9}, {
   3.6265986984568977`*^9, 3.626598729528029*^9}, {3.6265988098331203`*^9, 
   3.626598883816874*^9}, {3.626598926684988*^9, 3.6265989630503283`*^9}, 
   3.626599000668439*^9, {3.6265990405104437`*^9, 3.626599069433609*^9}, {
   3.626603992683824*^9, 3.626604212924157*^9}, 3.626604760848592*^9, {
   3.626759469653737*^9, 3.626759477078129*^9}, {3.626759588791606*^9, 
   3.626759603637807*^9}, {3.6267596394145403`*^9, 3.626759735656221*^9}, {
   3.6267604993753147`*^9, 3.626760533036696*^9}, {3.626760581966168*^9, 
   3.626760587904387*^9}, {3.626760632127334*^9, 3.626760648639998*^9}, 
   3.626760685711729*^9, {3.626760730528881*^9, 3.626760743407308*^9}, {
   3.6267611333901653`*^9, 3.6267612614961348`*^9}, {3.626761301014719*^9, 
   3.6267614221833553`*^9}, {3.626761452632259*^9, 3.6267614851430387`*^9}, {
   3.6267615156896544`*^9, 3.626761546275902*^9}, {3.626761582423127*^9, 
   3.626761623268655*^9}, {3.6267616661052017`*^9, 3.626761706900961*^9}, 
   3.626762099911704*^9, 3.626762162477565*^9, {3.626762195768537*^9, 
   3.6267622291914587`*^9}, 3.626762262040223*^9, 3.626762300120229*^9, {
   3.6267659916342287`*^9, 3.626766041574085*^9}, {3.626766122645426*^9, 
   3.6267661361316633`*^9}, {3.626772538056816*^9, 3.6267725844699793`*^9}, {
   3.62677676156988*^9, 3.626776774689362*^9}, {3.626776807953587*^9, 
   3.626776832538534*^9}, {3.626777740306184*^9, 3.6267777434638557`*^9}, {
   3.626777775768298*^9, 3.626777781175796*^9}, {3.6297105357119617`*^9, 
   3.6297105381282787`*^9}, {3.6297106116346188`*^9, 3.629710617585248*^9}, {
   3.629710771473804*^9, 3.629710913280717*^9}, {3.629710947284174*^9, 
   3.629710954051413*^9}, {3.629712134649639*^9, 3.629712147275887*^9}, {
   3.629712235114546*^9, 3.629712250586071*^9}, {3.630651701102632*^9, 
   3.6306517031504707`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1: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
GvIG2VAfcNRmyRl5Q/uacLoLc7vxY+9k3CvVRLIbGzdhfsrr1/jJSYNpkwan
e3i/jfLrphxxzLkpfErv0hiwseRgI5WKOn9a7GH6GRaIfX/oYaFHg0/TjqIm
2P/al9LiRt+oYNltN2c6OAjFkxc1PmP9Dn/3T+XsZAGwbfTJG2ngI3k7rLeA
DUlNlELZewSY2Xw4ayTGgnV6bfy+eH5OsfSEljwLauZEeUexP3Ybezx24N5t
E3Hvg8IKAv7mHK099pABLkONim54XlTkutE9PH9Q4edZHVEahO5pv/IB719x
wr/8AN6/7FziYAzeL/rktHkWng8dGlo+ifXkSm6NUhOmwQsJc193rF/dhtPl
K9avs8t6rgTr/7T1UNoovpfL7sbta/je1NffdvLiey9MVj31xP48ENPpmcD+
mPXU+3CkM0B1/H7sa+yn6b/LXXybWZBOf/1gNxcNNnSRZgex/9e50syHsf+f
ZlvXrcb+3+W+02mB82pNF24Rw3kxlJPP38J5aT8kBtPw/luJGVHvcL7Gp+tW
GeB8X7+pdviD9R+jp76WQTx0FRTc/7WBBj8Cjkqya9jQu+Beo4742Z5RFL99
OQvoYlLs+3j+kNkutQXE243J3tJo7KdTV6J6NOLzkNONv4w6KlzKsJm6ivhc
tTXzxC7Es1upRJE04nnH4CRFEvGse6S++Crif79IS/9PxD/v89b8EsR/9WxX
8j3ki5149d53i71ABtuAqqvd8FiuV/WfAerkkto3GeTXr6hue1fkl7jvtR8T
yMd/fANqachH3Yii5xvzUYdLNM8nY//L7lnYxyN/LaKvgjfyd3O29A0l5Pu2
ezv5/ZHvVQWbW7Yg33/4XhU6j/rwXPPIwzjUhxHZxTPL+3C/GZfPt8d+Htij
V9CFejJwWWlBCvtJecSws0D9mY892rkbc8+/5P5Hd1B/uPenfHdAvcqIiqen
oF5lbJufeoF69WPNc0E66tv9Jck/O1Hfem6Hhiegvk090j8vhHrIW0oJfYZ6
mPw3pvVELhW6uGRyIlA/BUfsLt1C/azkUQ7lR/2s5atex43vpRCthV2otwEF
92q0S2mw8US3PRN9fVN8Fuk06nOjyPd0R9RnM55jfWmo5xwBtdbtI0yQXVB/
VYPzmTSbFGDgex9c0A38UsqCUK3rnym/aCBRESa/hH7xvi00MBv9gqG/yXUw
gwbqh0N2nkR/yZmzMlpAf2G82nPZcAT1PFi12hn9iN929uYx9KPl8v0h0zpD
sOH4ACsI/WvfbNAQL/oX1/7hrF3oXxKDp3pL0e+8rLU/8RjTgEfjkWYs+l3x
1FqbGvTHRoGGvBsr+yFn2QpR7fU94LDv2CQX+qlY6wjlPPppcfQcqcx0CMan
inYXo/8qXu3bKBjOAhG9wC3B6L+R5pcyZbCeVHLW8Vn067zjlbRO9OvXe1e/
iMHzqk1/jnbh+aK7IivD0N+pWb1JWZgHbC4rNNZiHki+K7UzAfPApI9Nljbm
h3uGtYXnMT+IbZPn2eFLg7jidQZ/ZXGPqByYvok5PyaXtW3emQkvdvV3ZpZj
/ox89eOSMRuWVKTag1Jwr6n0btetJGAxTkD3LpMOlz1vZbsXkoEUYv501zwB
MnLLvKkNmHdvM7xmX1BBvnNt7ynM/92cKbUajbg3dccq6MWSYfXByV9tnSxY
Zfagc0XgIMR6uUty3+yDiEcxzG+YYxUlH9zniaRCzMuNLOePg3BInlwt0cGC
qrUSpUl+g3D/4KrmTc59sOepSvTHQgIeau1fPlNFh+GKJ56zL8jQO74wnbWE
OccxNCU3kwnX14WYCDhT4RQjWOg05vvqO5+jtcrw/brR5WF5Q9AkoWCU+YOA
pGcll5x+oA4nuOc+mqTBfCLrS953ArRmVVQMaKiHtM6epjV0kKvmuq2ZgH2W
80u4dAH3MTcT36IDZAgDVzGXOczBr5/1N7UwYU90s4t7LBV6wq+fp3eh78ju
8bA6x4BNg262nhsoYBYwkx9bgHzZaTK++JwNz3sEXqRN0UHp7JLNJvy+7vBa
lUsv2UAbV94gPE8HtXg1sn0/5g2rXX3ijgw46eJ0ZHwHBVjuHx6NzhJwpEy6
fccPJrjc0pOnvqWC23clqQic167sp/Q6Fh0e/lBQf1ZEhvnu/uPPv+F+1Pz7
HmMZG77duOl2QpkOORqq5oC8nnfUWR7WwoKVW568cxylgWG53S01DwK+k+38
eJ6if8u3tms/HoIGibw1RRzDEGEnHbUijgmZMyPb/ppS4cqKpzMm0QRYqlF7
g3fTQVlqbaeUEBl0o2NqTdNZcCfJN/z+mkFISJJ0SvrVC5ML4k1UVQLIWdJ2
vA+oUPDlxqh0yiAMKuSujX/HgvW1f72/rBuEz9909P/97oWqhbr1qi8JkFeo
ybLaSwc73yY9bxEy/Aqf+uqGcyf7Pl4HWUzMK9qqEq449xNZdr9eEXBqx8vy
d6p0eKGjqd20mQxZns++XsR9R19Aw5pDhg2bGv64vrtKB/e2yicn0BeXKOHr
Hu9DPzpw5pE3kwH8q1KT4jHPP3aiucp54/kfpywVf9ChWfWA4mH0OX6BGOv6
ywQMSU64J/kz4bX8mn01OxFXR2j3BC5gjvtrZKdtz4SgQ1znVugQqC83Fblw
TxzMbRHUwj0xwutgzIevBMRe9KaLKLLhTXPxpnMudBjT5D58A/FGDy04p3KR
DtKOwUFeqmSg36mq719EXd35WXRzDhNUlK27DnpS4eCT99xk7I/Wz+filip0
uFQgeXiDOBk2tya9asZ9/yNvsbKSOO4rTb9O5OO+L+EwzvsjDfuz4sKoxTgb
qsfftJU5M6ClzDJd4B8Bs5VWnze9w34Kbp1MdaBC6Y8Z2m88ryDxbnAznj9V
NvDwGp6/cz22tBrvbxuzOeyB94dzPI9cjfzQtS1ObsR6/HjzaycRZ/usZA4X
iJEhmFqfwsD6/xxZzdf7kQkVS2lhQzepMGg1l/QA35tm/CL9Lb73RHlA0E98
r/IA3C7E/vg6t3T/3MMG2VdL7X+d6XBT8X3AXuxnYnbXzinM9Zo1PYGzh5iQ
oXGdMxr7v/JLwIMt2P9ihv7sI+x/n+4zjvU4L6fHqvbdOK8H/PTlTJyXU2J8
bRTON+t8xF07nO8zLr73D3G+/oPiV8QRD1euygvHIh5MZbRFKxAPfGtD6QaI
H8cZuusRxE/E4ocSDks6XNlWwvUF8fbU9LOdBuLNbfKIthPibf/2Ufp1xOcK
a1VJ/6z/fo+2LMAd8Zm3tdjzNPZnZD5leRviObylVq8b8VzpelzpOuKfw+sX
SQnxz7F7xYXDiP8Nv3bYNSNfnAePboi5j37v5DFakzwI189zJ0civ57+Sdgh
uHYQjI9YWV3t6gWnvtjnR5GPSU4rg8WRj2tbNnRWbiCDXVARuwr56xpw62Fl
LO4L1Uo9SchfLYrJ77PI9/CPeu03ke9ufo3tycj3s8laGidQH7ruv57UR30I
J1rNhVAfLrt12T9CPXmR/zBs53I2QNLe0gScc+C7Q2W3UX/chrIjLqP+XL+n
oq6E+hP6O992DvVK6uetGnobExaOhg09Qb3aUSOvE4j69laRTykE9c2xyvbI
6Z0UaC9aeVQO9XD8kpWsMOqhe5lX45c5OpSKjf+KxO871nH/gyg2cK9tHlhC
/WTaeY63oN4qXTaUnD7LgLmwW7bCqLfDv+w1r6E+u/prEmu+Yz75FlLciPos
zJz9fQHxJjN5ZaoW8erx9YKvCOLtzarxmDLU/83rQmRXof5Druizm6j/uwrk
vN+iX3y9ZWubjX6R27FnYRD9wqLqRe4B9JdVOT+PtGGOuTsdU74H/UX90bRo
Ms793LkDeZPoR33a2im26EeSn2Tn69G/Dq0WNrKupgPf+mBPo2gyOLjcolHb
WbBUPbNFGP3ueHztT/MbfeD2McyAgv6YzL7WcxP98S5LgNWC/kiavFLA85OF
OTnD+Sn6af+6z0I16Kca2ZtuH0D/3Xzwq+v3Bjq8eZikwI4hg/+4jdM+9OuV
hy44JqFf1x+TV3iLfh1Fd9x/Fef1yWE8hkB/v13vlv0D/X1/JCW3APOA7vvh
r8KYB0I4rEN2Yx4Iz/jss0MO69c+Om6N+WH26/TzfMwPDyPP2FZVsKG211tY
pI8MEta/n2qcIf33/0bDPePYEOT1Y6XKfTI0nR4X6hMigf7ob/HYZgJ+8Vyq
r5FiwEKH+3EfBhkoVzt+7sa94MbTfq7dihQg562yMA0hweuCzete8yIfEzvW
/MuhwEah29I0ggRJZP+KRq5hCFv97cuVm0woPBpgoy1Hhczhb/L1qFeRG9sW
E1GvgrUcJIRcGPCtoqfBacUw8A5Ye1NCmRDFKfmeR5sKyfvXRE9sI+DLp7At
W7ZTQY+xOBl6bhDGjJ5v2C5BwI+Z4DwFTio8jDh/VGHfIOxu9gicwJz5t+Fk
0DNTxNtyRTsXCQoIRHFd9lhig22iHj/nPQqA3zO125UkeKX7RapkNeZbQeXC
RyUUIEaDvPdOkcDltlSELN8wVG41ypE+yASFbSFvRXspULLRpcZjhIDRneo5
K/IZUOadKeF4nQJ5Sx/7J/C7nG18yUohFrD1kyS15qmwlL65eBH1yt/qw/1D
DTRY1J8vXiwbAh5+72X5+N236tzy6Toa1J/9+ai/dAjyYvNhCfO/arfFT741
LDieZPyFZ5wK5JVvIjUomFuEy8OUHjBAUvaCT8whCrycdKjPQTwbPxsva11g
wPVEj20f0iiQfenRJ+kGNpgN37nx/A8ZeDq19leYk+DCrSBe22Q2SF38HuL4
nAw/LN1PykiRwD317q1g1BNlbdXIU+oMiA5UDXz0jwzmtbqjAssIKL9ueLc4
FHNSaUJlyjcS/Fudf4EiQoBJRlFb6DQF9hiWh3huH4Rzaw5cGls5DPOkNRV1
qONP3RKLMw9QYVZhWJUUS8DUdJFDMvrAJdeH5axSBhy6yNVbzTsMFr5QdvMq
Ewx27W2b4qNC+oyectokG0pqspY2WFKg9GDssGAmCSx3XVaTSWUD//i1RfJL
xKW/SNmObSRIs3zxTj8f89jr1qSj2XT4c/yUcg/iundr+flIdzYYiz6L0hcm
w47qfTIa0QOwO+7IddsINrReKHpucI0My2/fz1zgIIH4Pe7sQtybBO+qJD/p
Y8C9edgc9JgCB+9zO5QRmA9kaX/OvGcAd59kROlVCtgvJJXH1KO/C19erBVi
w2W51M2hJ+nwLv5VzWqcV7FOTIXRfQbcmPtq0g8UuMSfV2mLe+65O7p7LuKe
bFVa+zLElAIu5WrSEbm4R19hhlu+w7pSlQNfCzAgNWrD8WD8rjpsF5eM3ycG
eFrG8buIWnLud1ECbsclPzttQkCdzXbieyATXN+e+f3f/2NPlA05NvyHDZd2
Hnja4MoAj+mDD7fFY96I3XlsN/Z/YLSgY0UJAw5z1I6tjWFD/epTv9NDMC/p
TcgrHWZBINdzo6k4AgTE6k5o4fmgvndWJ/D8Ol7jwgS83x/69mfi/dQpbx03
vF9ObyngLdbTI3Y4+irW43hOwkcoiAlcCmvs/bB+4w6h9zSs33ZDjfCJdQwQ
kD28LAa/X/TSDJDC7yZuXgeP4rvUlVOk72F/2k7sCKrG/hiuqXzJwP7U306z
nCATcNi7xIEVxICHaY0md7Gfq60z3qRi/zcrfhgNwv7T/jA7lLH/YplzzZ04
L9OJ2uNfcF5jCmIR4oijg5eFDBJwvi9yz52Swvm+SNfeLIPz7TqZpR2HeLAL
6FPoRjxs2JuWarKMBL3u57xMET+3Rxz/lm8kg8mFPwp+LwbgYXAwnzXizcw2
Z/Yj4u3nqxPKBx+QQa/nq7Ap4jNHPDTa5RUZklTVCoMRn9K6pAsuiOfgVyHW
wYibUX+fP3kZJIgf+bdUhPi/b8Vu/Iz4rzEfFjvJTwXm5sjra7D/Ud6brkVi
//MDI/ekIF8mb2run0d+/ZyzzL2P/BLRormcR365KaUWLiAfbW6/lp1DPp5J
LAzpRD7uTLj4eJaDgObXTjtPIn/32KVW6iB/I+89EXJBvpfeMtIaUmNAzl6t
wF3I90Nyo7RY1IemexPb5lAfXohG6QahPshmSHYP12POrrzUwY16orRpk/pV
1JPbYld2NaL+dJj9ENRaZMDZyRvb+NMpsHwgXVEa8e+p33ewBvF/oOOyjybq
1XnOEgke3PeF/+TXN/KzoONGzM2cMSoMKzlaN6Ee8oarGFnV06AiufWRJuqk
aKC8ERW/T71oVmzH75zz/4rj8Pv66IxlLNRbXUP9Bh3UW/N75nZRqLf/o+i6
A7Fco7hUUllZDSmRFaGUsjo2IQ3cskMqhURGkhXZDckmK6OyiYiSJCOrgexv
L0RCSd3Tv+997/Od55zfOpVPhoaTTDw+v7gownEV9Tm/6/H2TtTnO+YKijyo
5/r/+drWHqaDXt+dnPph9IUrFbc+ov4fmBTgXkL936YXHHAP9X/IQ3DRBv3i
0ifXuuRgEqyTS1bbhn7B/f08ZeMwCzyTFIb+oL+MWuxx7UF/2R50208L/Siz
1ZUzA/0okWymG49+BHzbDwyjfy1SS7qq0P8cE1f/kEf/2mP1ieX879/5vOOL
koqjA5fa8A8H9LsNt1uPNyG/alYCN5LRH1e8pM+7oT/qmURlfkI/vbx7Z+V2
9FNt3nci01Jk2DTCd60S/df/ao2zWyUJDF29d+tPYZ1Vrj8XJpjww6XeLVuR
BNortHMrURNwuZ1eF47+flbD3/sM+rvwreuG29HfveX/uJVgHtifu5D1GnUz
YZ3AJg3hCVghUqJjMT+Elf93M3aECHrPXjwcPTEBujzXkvjDsD9bay56aeC+
beM06N4+Dg9z709LvmFCFd935cIJIoz9iefKN5+Ar/TKKrccFjRH76cdxD69
svzaeroIfSx7tdNaQRaAvLFTzQTuz1tLmYFCkxBj2M0U6mXC0NNLE/ZrSHBz
IWXi7eUJ7PMFNjnkddeadxHNxTSIP8K3L8wB/W5jx73iOBb4LWoMPFihAEvx
pLgPkwCr6wPizmG+0hF8lhqJe4JaR+ZeVhLqcO+XTNFtLDg3c8WK8zcJ1MqG
5tX2TsK+hommd5Loyy1aEceVyFAmLdxdaD0J46a/rWuKWUDZcP/ISxL2Y6go
ndOBBk8rSMbSiJ8tm7Omv9eRYEewX8Ls3ARkeIl+ySUzoe7ONZ5UdRKEBhg/
Fvj3fTX6RruMNk6Bfc8jdziIe1H8w821g6hviXJS15HXJXdU2Smom7qahPQO
dTLIc8ydLqhCnfwmRpDJRd87GXWAZx0N2ri6+vxCWbBzYyHZuRP3gvVO1kOv
CKAXKOU5h8+7Fl1zoj9QoPGUB0dtMwFCvqtuOYZ6O75b5ofSUyb0jTy7s8JP
g5ZH5Ki0dVOgTFLTncG8yEe2TxQWI0P9h9Ep6WXMGxyFsd9ZNBj8yn6MnEqC
d0ErdXwxTCA4ynNOn0B9KxQw3UYeBxeVDW8MUR9sJAeU7L8R4f2mxUpt+wn4
os0ooWDfzm0Qm75KZELQ19UiFnY0+MRjPTeAOGgfaZXR5SRDW/aA3fChSaDP
22rwIO9ubCJoqAeRYO0bI3fmqwl4vu/gtC7yWlu46YVMFerMqNxQyQUSpBWJ
pQr6s4Cr6nPisRwKpDw96WiYTgC7Y8Uc19EvmipvDLWG0YCjXrsyV5MEdb5B
V9YizvfpMrfzh+MeXvT1yFbMvcX+Z61NUCeTqNRSvSgS5Gb85sl/PwHfpTxL
wv79POaAZqfULyZc7jjy1PIGDUjBTwwFcM9RuJopIelOBFudgAcZaycgfZpk
3+3OhIAm7YdhnET45qfoqHNrHEzil5MqplhwsjA5L6WcBq66ZS3eLiSwdtee
iMY+/6mQf/pkmga63TkjTukkUNaJD/+IfsEndYR/7iILRrgGPW410EHNWFn2
MObDt6EjJVdqaeAXd1Lf5TLqukstGOF9x21WyTFDaVDXsb+UpEECZs2FQX70
KZVjPbqnHjHBNGrhz7HVNPiw80NmAuKqiX/bn2eIK3Hm5/cvEVfG4mk/jPBz
eTYLSki6suB7T42IxUs6PL+qYnsS+7DeRp/v6jITzm/v2b7hJvo1wd4bnrCg
hR59dSfuB4IctqE61pibxg9mzvOzYK8G9cKAHeaO7Q9lJO7QYeSoy4mj+H4u
+5jzKOpTdt+jQ0wrGghtUAo2xPPldGZFq/D84ROx5x3xfKv9863bsB6PB+Uy
KlhPSmPxk1SsxyPyY0AG1p8h5/HtEtZf8nxrsMu/+s0clznxvv8duHEyEe/7
+mWl0WO8rxm0jihif87dFftyE/vT63+4NAL7s91TMu4E9lPHrJF9FPvpNGai
/xb7uXu/cvWqH0woL87hmsT+H95JGtfE/l83PH7zKs4rjGzynybOyyqwcGQ1
zku+aupnO86309t/aW0F4vNhcUs/zjcRAkKTEQ+RD0SXf6zDHL6BdSk8bBze
KgpJGiN+jmU1N1Ygftp+pd9ZRvw8uOMbE4d9YMzcbyT9ZMLCwzDHPwGYl055
LO5HfFI2r7MeiCTBN0N2Xn3EZ44k3VQD8TzgzlubhXges/+t6o94vildm3cW
72tISQs/g/jfddGwUhfxH9DN/1se+RIc/Jxej3y5sWLiWIB8STotfdIW+VVH
yOJJQn4dUpQa4vq313RfGvqxwoTbuqtoH26S0K/N3OOQj9YHTS2/IX+lnxXc
LEf+Kv/os1M7PAkHvxJ7R5DvEbOdy1XI9+88r889Rb6X3n5E4kN9yF+qTOqb
IUKu1edagt0E1O29mGSIevIo7kRuwEki6Aqd1hlEPRkqZMbwYp/91d6p3Eb9
mY3iPHYb9Uf88PjTe6hXVp2UE/s86RCzVWTMHfVqPFZZXRf1bRXXJ3Zv1DeD
Ta6DFgI0sP/vAPdX1EMNuWjT7aiHb9iucZxBPSzZ33TgHj4vGYhU60P9vGxj
a334NQG63JcOlCOuVNb7fKLkMCF1exfjOQcNc/6+1bdQn6MK4+fzUJ/fc0qd
8kZ9Fr+sFn4W9fxzesibZ6jn98bvbhYeIsHrlsqly6j/B86duMaF+j/QIvOk
+t4EKA9+KQH0ixBKkK7jCxIkfLyacOL7BIRUsx9+hX17K0FWCkB/4X7MOllh
T4OXidM2pehHl+YdlAiKZLj9UaTbCP0oYuE9mwr6l1LjiVIf9K+j7J/mU9G/
JBKjZE3R7zoNO/W2od9Z+uftjUe/6yEP7L2P/sguZxsmhf7IOfafuDD640qe
lbMu+ql+X8FXhSe4J9zbsG8S/bQyxZlnvAf3x1ADg/7VJBgCP7IL+m/xux9v
RdGvy5b31IpPksDFo4g5jH6tFvbsixP6O8Fz7Icf4uJATBJvGfr7yJzUpplm
zCHE7tRtmAeqDdw26WMeUGkc8z6K+UFWb4j9L+aHfe2Pu+U6xkFcN4uxt4UF
UzccxGXVmEBkqsU+ukmFvVcVjWnZLND9m+h1+gwVZkMcmKfUiBConf+2rooB
nVLvRnLkJiFIjDmz+GcEON/Cw+UUFkj8fKDYe4AKYuQ9VG8RIix69D8dRVzt
klO1jGnCOVqsNC1EkkH7WUnMC8zDvdv/Jshp0CCYw+7ZUTbc7x49urfEh/tO
SefjBHsWfPF8fUzsPh2WufcVK5SyYMA71HT4ARUKq42T13sQQV39zh+e3ywo
4N/CodVIh8Nqglo6t8nwm0QUk3yDz3Vu/LCeokLWkwHShwYiBLyOmQijMmD/
gKeDdfkkVOSc0TGqHIWoA91n+DtwjrerbpFwL5r8fZRa+hVzd47DsYYazMO+
bq8OJTKBcVKg5N/3shCXihZssf5Mt94vbR8YwEHY3n5+mgL1v3AR7cR+nj96
OIuNCVfLVH4n7qOCVdhJqYNtOK9XtU7ca3APHLR4cruHCNKdBoNstSwI+FmW
XxWLfn5NqO4snQrBrCsTO+sxp+36VdTlywSJnm0RzR+oIAk8/Vdy/32/okLH
fgcquB5ekjXSImI+PW/1pJcFB1OS3w6OM0DzinmEAQcVCK0JRuf7cS/ecqlX
/RMDyImLn6YWKEB1vjg5hJ/r7cOzj+M2Ewb79NdMTFKBldDualWEe6VqTEH1
dSqo1Z8LPXGaCLddK+7tbWTAoZDrOaO6k/BIKz6tZucodHZtDb6cgXvHqQYh
VT0qPOvcVT4gQ4ShoodT9/6ygPZ99/M3j+lQdTq469AFMuz0DizLjGeBFSHY
9OsqKgi7aIjJzxDgz2eBt6EcLFBOSGW6//v5fZJXJSGbDmNMv/cPUGdS8qOj
7xZSoSD/d7pMMBF8DbgsvfF81UtztKgCOtzWynuueZEMl3tfFBUEs+CEbJf3
kRYKtAUtGrTWEYBxR+uEaxwDjrqIGpHeTcCxpW2FI74jsHRv2OFGBOJqove5
0ygF/EbZjAN7CBD8pZlt4B3mhy7zR493MSHYhCtNzY4KUOxGu3wb8/y85Ymj
yojP6ZlbmhM0iPhoLpmFc7f0MPEsWMUEzVrK7rn9VJhP0bjyXzj6YOFXR+1B
CqyP1RZd10mAgpeOMYWINzdCDX0rJxOoY7aR/upUUH2hd9FPDfeRI1wphsfx
/ztX3Zdzig6raie1O6aYUDanOhV9mQWkgWSV7e/oYK2q53tQjwVr+J9dLDdB
/zn3uuiHLh2O9o4+ZOH53wkzkSYcuDfIBIQIqVIhtiN1w6g2C7J+VFfEm7Kg
rSqYedOQDkmLdx3nu5hQqJ7OyPPDHCoQPXh3kQ5rX9uVvc9ggtG20bfnorEf
iRKzIloMeLyOse8dvr+u7tC3anw/cdXNC5/x/bSv37+W4vl/rp6szcLz3XK8
A1rwfMYhktcC1tO/rBuwHuv58b1RpekwFUxkGY+dsf78h7zOj7D+PN+ureVY
P1+bOn8G3pf3ype5NLxvdGtsqyPeV66YkfwY+2P55kqCCvbnle9rHVvsD4el
TUkmnh/f7rhog/20Edja14P9/NSk0O+B/R/ybnheiv2fGlEXPY/9l1K3Zi/C
eR2IfOR0DufVHrZnOA3nZfbiXZ0mzrfZc87SGud7Y4TIfwvnK3bk/egE4kGB
XHjfGfHAufnECaItFUjPP7x5gPgJL6nY2Iv4iVNcPjqM+KmY+Oy1H/F2UeNn
yWnEm1L8QPkOxFvwkzb9O/++/8SWuaPvDQWq5FcMziM+P42t9XdFPDuczFro
QDyz+ziwPUQ8v9p0Se4Z4p/36qWx34j/2IWF9EjEPw/FPdEc+fKAR2U2CPny
vO+8tkwOHY4cizGNQH4RhB4tuiG/lAR0xD5MEyCAL6MjDc9/w3W9KAT5qCrR
EjZxngy1cxsJt5C/YjszLhUgfxtFt5eryBLh9ebtHueQ7zuLM9Uv6U1C69Pe
e95io7DKfYBDG/Vhv3vxSUPUhz0XL4XO/kcEg9+Oa3pRTx7a1h8xQj0x42A3
O0Sgwq29qZKeqD+p+5re/PzIAM+z6rFJqD/ZhQ6B2ahX/wXr9m+bYEBFHm9P
JuqV/tbtV06jvqVdOubTak+FSMqKLB2IIGbh2yiLeiiqZpYeg3pYmmavfgn1
MNJZa3nhOQvSJ2wqf6B+dhf1rapD/VQt0o0+hnp7Oi6lNgD1VnLP8Sdk1Fsb
pwLfHpx7Z3DmHlvU598BAZWaqM+693O3mqOeN5kHktZ3MyBAeIi/afrf9yGf
39OK+t9/93XFjwdMuCZ62tkY9d/L+nXDHsSbu3ni4MlNNGCZ6VG5h4mgwy+2
2hT9xbzUtPVD2SQkqwiZxlSMwqZXs41c6EerfdOyp1hUuH9mlOSBfpT2MXLX
WvSvrp8tAmHoX5UevdGp6F8jyhJchuh3ZlpOOUaJVIjn0E++iH5ne1f/tdQm
9NN9itmh6I9Kt7qavt6jw9nbDdI5WL/ViR1HmtRpkFbt9IzxlwgpXwajqOi/
y7rxhkbov8fEtH0eof/O0/ctCaRiH1qvhWsepMK+Q5LUfvTryhme3Bn096Lj
DF8F+UlIilWg1PwdAR0TTWoP5oH0/dWijNNUmFRwYX5XJULocDL3bswPvM4b
lS5jfrASW/y0gPnB92db37kmJqwn9cpyDhDh1/sFpd3HJsCoWKJHA/PMF/8d
EyWYZzb4NH6xEJ6Ei5UzEik+OHfeR7IySRRwvDj5N/k+Adwz7Rcn55hg4XQy
KNaOBMtrQkzZiybgff/NlzrJTJDbLD7c5EWE+/xnt7isn4B7tMADmzGHjz07
Z8yLe8dEtni2JO4dZ5wlMhowL61WU70uiTluqvWrT+ZjGkxvKbP1ZrCg+n5L
EE8uDQR7WFF9Z0hQ1nwmtInJhIiTLF0tExIEk+dyC9InYHTK5RWPAAtYETIF
ziMkCAw4sevlpkngbLesn7/DgrUWG7RH1lGBKvw64Nw8AYw2NYy172bB4sK3
7kk5Mnwoda7u/m8SbMh713PhHF+Iq3Gf/UgCnnUv1lLXT8IsPUm8F/PtkFb5
6yZzOsTGu+/68osEDQoH9Qwwh+8vKNpn9O/fuUZWNW1rJ4HJt44CjjLcjxo3
ju/E3Jet2xb1U5EGDv3DVzdVsOCy8lSPVxUTknv8FimiNNBMM9/TiHmYPllt
FHIW90KSeMiqVDqc2vhtrQ/mcKd8F3nvPCbs+b2m5A0nDf77mlCijPlWwKs1
+BmNBhcvHerai/lWSbFTn7JhCp7GtFZHKdOht1h+UnUA97j6969bh5gwkrQw
vU+UBCvjW+jRgROwZjR0Pgz7HpxXWdK9QgLL0en6VoVJ2FU/Kzzji3N/ZlAl
m4FzF4lY6UkigGRc74VVDCaY/Lc1o9OABGNFH4XzUyaAnTg0kn2PCdJnMute
ORIhgftI7MflcXjzVsDGfhJ95/z8l/+u02Cl6L6250ES0DhN+8YSWNCe9uVd
pQIL5DvsCDc/0GB3vyvfzQnco39pdZ7zwXt1R2ew7yeBRN97sSVP3IePDTVl
8hFhdV09l8qdcTi26OtfWcrE/NBg3V2Ke59CWc3ivglwqHJIYXqw4N2aawYa
/hSoUR9STvEjQJYL03YL7o9VgimCZ3F/ZPVzuI22TUBUTp7qmyjcN5bZ+hKP
EYH/0FPJxIlx8Kk8dJ2+yIJpbVXHi2M0cHGaVdCJJwGfyuXK9ZxT8GBll121
FB1oedx8gl0k+Gi0J8S6mwVJWd6GFjMM0KrVPfhyGxWE3lNvWnNNwXDJFWWx
E3RINOt5zr1Agl/+8n1E9imQv2n47REvHR6VR0tw1JHg8yPX7QqIn/BMhazN
r5nQfNLZIkOBBtK6iVUm+PzXhjvXTr5iQpGrg2/SXtS5GYOzV0QQN8mD9rXW
uD8RHUh2oeg7Qe4n3e+jPlTVzqspsuDUzDr7Jz00eD2z4maFet7ndzV9jTDm
NRPBLzLZiE+xgPtV6UyIXhNF6cBcISc1bNyozQCxqMW7x/H9OXvRYgN8/1lw
784QfF/JQyA0Hc9XOyQyI4vnl6wS7DmH54+Os+5mYj06IhpWBViP2MJlyy1Y
T+Rw/BdtrH/7nGrYA6xfNEvk9RTW77vO8+chfH7uedi9z/jcTLRwgz7e92vW
jgO/sT95R2X0ufnoEM4eLuGC/alVnLY+h/2sedciOXacDtu2Cbg//0EC5UmJ
vBPY/+cROy2TsP9VzL9BAiJUmLOxExLHefF2sFfukqZD3491fN44r8Q4feE+
nK+fzxmu5VHcd/gWFYhxqB8neDb/RDz0Skpe3mVGhIb8aZFTk+PABj9//v3L
hCm92ldzt0kgFcTlFoT4CY53P/gR8Xby8IPZbj8K9NHHlFURbyqFk5Z0xGdw
wvi8dRkRrKi95f/tn4CN4va6zYjnJvGa3ZsQz4SjfsL+8eOwdsnG+yHiX61t
l1g/4t9MLDzDEfH/dWmWjfsBCy7uUGvO+ffz8iOu5oeRL5NZu5b0kV+RaQJh
dH8abD6drL0J+cWRoFc/gHzcdKv5lKkTETxuhIbe/z0OTiMuMR10JvjJ/lgF
yN/H3ypE9JG/qyaI19dhXtx0XZozGflu4B68opBMgHurr51OR31Y8HrArvGH
BF/20et3K06CwUZ74h3Uk+Nu/RaPt5PguOzi1B7UEz7LxqI/qD+7TxesX0D9
qV2WmkxB/fGpzjYWQb1KfkzaA6hXQVs0u7ofkjBf0GUuo77dit2kVoP69kip
eWHrehooxPy0YqIeRrts0b2CeriyoDDbkEKHpkufE9ehfsZvSx2tRv3kWnNA
+8gOxP/pvlt8iB+nLw59o8iXvbwbIRf1NtNCutAe9bnUK/p2Deozcaik6Trq
c8LJzL9DqOc1VmuqAlHPBa0qBoJQz+M3irntRv3P/LbN6QPqv5J11VqDDZPQ
zXh/owL9oluaL+Aa+sU9a9fqK+gXMnnOp0fQX+5EyrI80F9WtbYGrEV/uSx4
Rlwa/eiy5frlXvSjNT3Gu0T4J6GFfzovEv3ri9T74ipjErxQ6Cs0RP/qPpLz
Khb9Ts4+/+MN9LtfYtQoJSsS1C1vf1WB/ii5i3z7As7B6VfSq3n0x7I3MX1/
CCxwmbj1IyeEBj/NZLLfqZOgPZSWeh39l0fHwMfEG/fq9lCBt+i/T6e+b/33
95RhB/eS/tiSoMXU/mReIfr+4OTtcvR33pHgoIfo7/r1w38X0N+/9Ajtt8Q8
YGX094AIgQQP22u/VGEeSDS2m9+L+eHai2d3b3zBfMn/+WCr6QScf3HUVA5z
789PdsbpuSRQCfvTe3t8AuJGL4r/ecEEtvb6ntedRLi7K70yQh+f7+c/mBCD
++nLyA/N+1jQ00bIXxlCfYsPXVWEe41o+c2chBAirEgvn3zJPwESPmnDXZ+Z
cGTl1rfVAiSIbEi6UewzAXpaOcIsxBv32tjZGis6ONpxGdaxk2HN1TssoS4W
cOb2rzC30oBbdNIxkoD5+b4R21qOKWg838YdG0CHdzK7rogokCGwKul513rM
bfue7CBUkiDo+BPPp1MTIJ6uK7Qyy4TajAszWjYkiFDI4PUtmIAlPy0ZUjoL
NguJPXWQY4Fn51c69RUNOF99p0/wsGBHZp1RIeJMZ0Ax6Noq5Mv6xztWdrFg
ZM7uksVOrI/7ajTFZBLkm1/nvMX6cwM89jZZY85UGr0mtIYMx1Zb+46unYJ7
+55+eXCDDqVXDU5fVySDD2e6623Mn9naeU8C3jKBsuuW68UDNHC7v0EiHPnQ
nzWwak0o7umRAg/HRRlgkD3LxYfvsyZETz5oY4JbdtRk8GEauMvreW0twXxb
+vI9RzcTHts90ubQRt2+WSmbifW8T0kPemdDh8yMniavtWT49pAg9QL1tt/M
drhGnQ723+sLLMZQb78YCfrxsqC+70a4Eerp/ciJ642rJ6G+3Obeno9MKMh9
O6XLRYIj7C0y265OQJqW6lJKFgsC7q21PLuHBRSZotBPDTQon12i+KUy4Y6+
x4EL/kTI4ioOPsQ9AbmhdP7bLUx4X9yVu5dEhD7ZG0/X/jcBUoUNO8rXT4FX
v+n0T0fUmRdWofncZLgg4ukwh/elCczUGyVT4WuM7qo1V4mwLTisJ4x7Ct4l
13xwMKJDscIuxx4mCZKrn5zYkYn7Bpj0N4cSYf1SgHi0wATEG+aXR3oxofx3
UlWmIBFyb09dz3wwDlsCGK8I99DXHII5PNDvxoKbeW700uBI8Y81p8OZcPmO
8KS2DhFU+b+FGvaNQ5TL+OlZAuY8Dd0tlQdIkOLhzX4pbgK6Gup33kIcTn18
dWJ0Jx1K2B7Gib/DPOBN3dj/E/doY4mOBQoNfo9v9KtIJMGnzuGb8zO43zr1
FTdeYsFhyZGwoTd0mGrik05fMwVnwmzTTm5G/AwFZtQ0kaAyO3JEGe9blqp/
y9OYDj+aLvLETJPAiN3/hz32hzh0fzKslYl5qe1e60Ea2MdqrOpEPAjnOFY7
tjNBuM+Z8e/vwznuWvsPoG4wKCvHS1xZkODt/iAE95VX0cPvIxH/X486PQ9F
/K92pq3zfk2D3n3j341jUU/k2GtvIq8Txt9cpA6ij8lUGfCtRX98eHfLAu7F
d51s9/Dm0aF5V4TEdXy/rNSlwg3fn57tHsrB97tTD6Za4flq7/40JOD5hSdG
kurwfOFH1UbFWI+Jc5plE9aj4ugo/g7r+TunM/YJ6//xoqZgJ9afl1GYHYv1
F6Zd3WKJ913drDnzFu97yvnW1+0qNDDnvPNCE/sTXZnqo4D9uRHz7O1+7E83
iT2mCvvZZ6Y504T9TJXzyxB8RQLi8EGzd9j/i2PuZd3Y/xH+3k07W+iw1exH
0Quc1+hNHZ9onJfQnU1+p3BepZPPwtJxvhezsx8bi9Eh+dTduFCc78eaawH1
iAcq784gScSD7/OT6zYiHrTOnCXEI35OvlC70Y344Q1R9l/bPw7SMXr3qhFv
ecMiXMGIt1vuNZmvEW+BKaofTyA+8/u8tm5CfKZseXJrPGEcLpwTUrBEPM+5
XXEzCyOCdXmGKA3x/JIS9SwO75tVvv61KOJf7te5zf6If0Ntpzcb0DftJnp4
nyNfmkY0VzkjX8KhRrsA+ZX2YmlZ3YkOB6aFOpeRX4t9QQePIx8VbxZx5hCJ
8OqqVXmB5QSUZDu/LUX+XvBM6P6O/A1t6QhIQv7GKY1LtyHftwq6Hj+OfNdS
r567g3zvWTVb+b0feeeXbV67kQQ3THL2NnhOQMNvNb+7qCfiObZDNagna0a+
Xt++ZhJ4PL+1ZKP+WIbduG2E+uOV87rgxygJ1IWfmT5AvWIGG8Zx2qKP98Vy
dqBe8SQaH5dAPDxp42t4+4EJSrLExVItGjw+zFTkQDxwv2+3/4x6OP5JT24A
9dA2tPxUJeqnl7j677kQFnik7uRIQ/38nJ0YF4jvN8scr3uJemvzH1S9Qr2d
vnTWnIr67G789/1J1GcVzRhucdTnWKv6t/VYT5vjNnU21E85l9QmN9TzHkJl
Awn1/7XETSHqDjL01/lGR6L+HyGTTX+iX2y5nJop2EECvz17gj6iX3BEpS3V
IP797r8s9/z3vR8vuv33Iv41WIOH3qEfbfPStay2JkGHX4DgZvSjv0NRW8no
X+Fssd7Hq0gwkZfvuWF6Apx+mo3yIA4fBouwHUW/Ozp/TvLtXjLsNsmIXulk
wYPPs0VB6I+ynRRHGfTH3ME0VQLWr8JS+buIfjpx//093tVk8GtV/PPw87/v
4Xf4z48fcbvaJ8QY/VdcgzU2hn499zVHfSfq5+jY9mMiiLcg8bpzr9HfhbSY
beXIa5mv00J16O9ZCn/02jAPmGYlHTyAeeDtpeu1UpgHZsfVy3QxP7jnH3nE
mUeC6i9LvWTMD3attX2F2Pct+16yKgNY8OnqxSjeNQzQ/LUQKSmLuXcsqKrY
kgXLDmaetW504PC7PaPZgPoZkbx04goTti+ZL4+2UGFS6IDGEdwrPmlufVgR
iPW83nJUhYsB9UM3d0k0Y/7QCN39xZAJ3q/Obqy8SwWbjJmnHPUsWOqzLJx/
TwW+RGP+vRlEqF7zd6lrNQukSijg7oz/fZWRwEI+HbZIvJCVS8Y8sz6Mt1Se
CkNJu587IS+DN9U+yMZ6ynYTnV66MSEjrofT5zUVWrZS9ya/ZMGMdty00Xkm
7GziKZmupcJSzu6+Vcj3r8ypwgQuKsiTGhoDlwjQWFV8w4adBdohg24/8HM7
nMVixQvpkP6o7+3WShawK9jccntMherFVONjN4kwIpBUu66dAd73+jU1nSZh
T20hq8loFEYWHpxffsqCVR+tncJwnuVrT5TQjWlwONs3bUcmA7pzIkpqZidA
7sld2eflIyB6OLBFso8FoZNJaZlKiPv3ql6wgHtMMxfzET5/UNGu3bwf86d/
xHGRJSJ0mPWnzuM5dnaPhb9+nwBQl9uaXjUC/EH0q1rPMCf8SlpVjbmA4P2m
8LYRDfyI2+XlOxng6L72bf2FSTirf2lc9sQoGPMpeP3Aew3WqjrrF1Nh+UAg
32PMgy7G3m0jy0wQ75Q/ZH2eBb1yrwsY5XRwtzBXjMf+j6+Ti3BRoMK0Uca9
CSEirJr587Ya+xyY5doa5sIEVe2KHtpzKrz4M9lCqGGBa3qav+IDJnAE9Hrq
fadCoKtWi8AA7lfpRw4rm9DgfPDq+TPcJEgfS286h/yyffbmvp0j+oz6wpvo
DDps7NLzVBlBXVZvN1R1ooHLPm0X610kEE0065SpQ1/wMqv7cYsJfGw2hZLj
VDAQz7DIUGbBkexC9+6TLLhX67PxB+rWU70ixaK9LPhYzSnNZsGCgZ2vr7Nc
6GAn81lqHeoGPcemvPAMCxzTchNm/ekQTebmMnnDgqjKT55btJgQIZWk7xdB
hYRPqYIdiFurN7MvznZRwaF8vZnUIyK8EZ15KIQ6w7hZ8TfXAfHPHaB5/SEd
3h+KkfDE/f1XRuev3/xUkFit+p73DwHWOykOxSFuGR+vhmq5M6HNITJbopkK
J0v66ZJtLDCKl5F/uJMJFfGheiHWVBC4aBEQfZUFsts2xi3eosBHqYWO9lAC
PB+yVD74hwmrD/NOB7ogDyyeOTuV0GFhLiy89waeX3xPY2MlBajiDK2PxQTI
y3FgLaAu8QXz0M3/Ii6uy92cUKQC277+y/3of1Zhd4jK5ui/Di9bi9GXjs3Y
+q78+/66XtEJZi4dGk4eP+bnTAY+bXmNfHz/xZ89dD18P+RYucUMvs+uZsU7
hefvO1+/8BDP/1xCfXdIiQprP9zbVYf1yI6WUTMrKNDcO6N1Despal92csb6
8xq8aP9+7nDDhbpP27F+9jsGozl4XxKFOXEunALf/b91yIQRYE5w6J0i9ke6
IHCHOfZHw6r1lwz25+Ivmd9h2E+uBtG7YdhPjURdRgD2c3hTyuvT2H+TXsbj
u9h/rooj78tXCNC39+h5KjcLjH8dW1uN8/rwy72rCecV8ivWj4Dz3Xi3n6cb
5+vPvsYsAue755gg3QLxcKFTxvkLIN7mhpZ3Ih7cDisuDoqx4OiOpZo6xM/a
qKRdh67T4YUFO1sA4k1532P5TYi3QO5qzv3n6XCYXye8A/E5JrHxYiPik9ke
GliG+AyUN5regXj+a/Wr9RDmlIgDm2cDEc9iBae4dyD+hz1oc52ONLAYN3BZ
FiNBbLf2dALy5beiVJwp8uWkGfsBPeTL+bv7peSRX3su7ozPRn559a18r0V+
WZ+nZbNq/v08+PSlqQQmPNAXlJ6ao4Jj5BL1yb/f2xIh9PEt8rfEx32rFupk
iIJj1zXku5K6sdLSXioMLOTcC0W++1h/SC5FfQgzbNe4jPpwbWv1QaUKvJeK
2GfuKhbEhW+rq0Q9EYr05VuDftUpU2n2o4MBD3dPyiqg/kiVSdEvHx+FavKM
mTHqVaIA8/tV1KvzwGGviHqVy6npJ5fFgI357eXn5ycgq9uD16p6BK6kb4uK
RD2cIdFY5qiHLKnY4y8XibDO3kPqCD6XLPWb2bAP9/ptB7yyUD9tKBsbqRkM
ELJxFJBFvW0UNlVeKhsB9bvx0bOoz9L1HJ5vUZ/3qHEtamGfYrvZHh5BPdcf
WhhoRz13P8YkBB4dhZLr446rUCdNHQMU/uZTIeXxI+PpQCKU5h1/Go1+Mbla
4wIJ/ULKV/73SAEdyG3CB7ahv8TUdf/+i/6ip/K8cRj95Vzo1IYc7HO39cQE
B/rRk+hTzsnY5/Hi8udJiNvejXc9/6B/8TbHnupC/5JbefeOH/v/TiOnXgv9
rkVvz/PV6HctglbtWeiPkbK39IPwczNn1HPVH2PueDPJ8+/vzZ9lqfx2bMf/
n6LHH4d+aqMd/kce/bfE8rNwIvrvn5j8Zmv032+Sd7j40K8P1tekvUG//lDC
NXgD/fo8bwj/AazHx02X4wH6+z15Pv2Db6mgwMioNcc8IO1EKEnBPHDay3ry
KuYBt8+bcq9jfvAvOTPXgvnB38F2syXmhzsl/5WYIT5SmZlaO4EFbSU6fOn/
/nzxaZJeDs67eN/PbQo+LFgQO6QYNkUHEUuhQHt7FlQ8en+IS4cFtX3GeXe3
04Exbj5BIuIeLdHtJuDAAN0Rz2QRWwp4XPeb3I/8OVi00k8xYEEB6ZS7ixId
Nqie5D8+zoLWNCHl9zcZ4FTde7kM9SPXS/33jX+/n+lX7LdESQqENOREvFMk
gLvE1Ybnn3HPaVlLXt/EwLnTzVKHKEAxUxJt+M6CE79+jK35QYc+842t8z1k
aDwmmeQzh34xNTgetUKHI/oTyQeHyXDftlfO6wvmcJuyx+IvGLCDcTByx0cK
cKTc0xDFfnGMPhaNWUOBVE21cD4BAtz/7N3aM8GCvQbfp2q9GRD9+v03Jz8K
ODx+4jOHesTxtFFL5CAFZBTvj+pqEqBL5PBR+1Y63BEmrs64Pwrmfz5vqW4d
gk28hdzS7izYPip74bgnBUS+3jWq8SRAXSM9gkcb80yPTHPmEzK43aC/mXo7
CT9FmaS3WizYSf5YaF5MBgcH8nR3yyQEgd8TTzzne+0r99SrFEhbPsr16SoB
mufbS5+30SE+b9goJ3MU8lvrCP0fhkB5/kWz21nUjVd3YuEQBZrCOI+KAQEu
SJP4fMdwD/EQ9fa5xQCljZ7DinEU4Ft7T/8n9oE9yyrlHCcFfCU3l7kKE8CQ
M6f9IurVjSjurWWVDMidst6Y0kGBV1rDQjLYH3luKmmbPwNgTRBd4SYFovgN
Lqhh/3d9q1ER+ot+NPfsjPYoGZqaxsZ7u1nA350cp85iwK/+47n5wlQAaReD
Jjd83/FnwXUPCtS/5t0ueoUAHn60r1vxc4sWNle+qmbATPZswqkPFAjyuGET
/pMJ3YdOhRy6wIL3wvN0r2rcL9eNflhGnBzw6LRQf4nnS+ZtUBmgwL04lcHy
R8jroogz/dJ43v2ltrJaGsyxVE4WYf2ZKnclX19D/Ruf3fLanwJft+9VDKlh
wv5+0bdGuAf9upbkSdjGgN836myn8P0PIfkts14MuPB4bJOdLwU0ez71jSFu
hX8+33BCmgLnG+1jDPcRYHWDisfsJxacyqUoKbcwgHDxq/3lCQocqDtYqLyE
+ea1kZDgAB0I65KnnYvIsPrUzUk1xLNQfFK2wxId1BUzUpw/kaE65kJnNM4r
8/ZTi9kwBuzUGtMNjaXALzHlL46IE597D+KTC8ngdDd/47E3k2BPdPq16RsL
jjf3PI/iZgDZwkTK+hsZxnwS9LIL/v370c85Z7F/11PDPxwPoEHFAesw4g/0
/bqHCfcpdEizblMfeUkGwd7a4DTca4qSrnf4/Pu9MaGbQxy1GMD3wfzxEL5v
/Eg7+yO+z3P3VoRyIxk0eeIuJOH5K99DynLx/KkPWpsL8fw/xq4DIljP3q8S
xQZYj6fY3RF2rGfrspb3Uaz/Z0vl4T1Yv7/mk43TzZMgKOE4HYz3bXI/7aSM
+Ey8lhY/iPfNf3GrSQ/78/0xI0EU+/Pu17gZF/bnwQnFDlns51LhvPh/2M//
NMwPN2A/88Q1TZax//sa1CRm3zDA48AOIUHs/44f7w4s4rwSW5MdGnFeJ3mt
YgpwXjaClcFEnO/UhRN9ysj34aE0m2qcL10+8u9JxEOCWX27FeIhyynmr7QI
Ax5YaCpU4vuBx4mbgxA/Yk8P9lxE/HzbrbRcgHibubvvvKAM8v5d9aZ1dTRY
fPTl2yzi09LSz+km4vOKtYNFPOLziv2u2Ersl0dDTYAU4nm3LJvNXsQz7/h0
rcS/HM7rln8T8R/gdvDochcF7Fd5Ex8jXwoTt5ziQr70eQhtb/IggOjpQfY2
5NeBGt20m8ivK+u4WMvIL9kAUz095CPb+g2yH//QwbDpGw9jhAw7hj4d3oH1
H5tPmLNF/lYeVlO+jfylXSks8MLPtclx3OiOfFd4kdWshXyf3RNWtOk/FgRd
UpvqQ31w8NtU9h71oe3VqLIbzsvRsj2kFueVD/KSkagnRt1t9haoPwtzJSr9
KhQoV+I52nyEAFv0HfqCUa8uGj8QjMoYhRhLH5Yg6tVlF1fuaNS3/PDsNxxe
FKg8psel7EWAzUtLoc8QJ9lbvp+i4Fy9uJnTV1AP04jDNCnUzzfp64U3PiWD
9QfiG9PWSZCgVz/hwXMu8R3lJ1yhAHvUQ6P/UG+vdeZKPUR9fnZF7nBNwihc
8NjK6/VuCI52ZgxuwDqL/LIeRqGe7w+NHc1FPd+vGZA7hP3hcjCc8EE8CMVx
FW5E/Zf0yhpagzoZw9f6fjv6RTkTwiv4CfBtvt3sIvqLmo5N1Tn0l4Qdc70+
6C/2NXLewdj/9xx7+w1W/n3/xG6zsa9k0KfKalUgnj0nc1gG6F96UW08pr1k
4I71S3mNOBEasRpoa2TA0pa9a3XQ78JT9jokIm6t2tz02aUo4MadESGpRADX
PuOD+uinlNBmrQ1BDBigxdVwROB8XEU3OaL/fpZz/PD538+1L9qP7UT/jTG0
bpxGv36qIe7QZ4/7bmH1sbc2FNjjcsVUCf2df7uLpij6u82rI/s/o7/7pGtc
68E8cLTGVkgU88ApZd1sDcwDmY3lN8UwP/y8oGaghPnBLV3l0QTmh3qpp7rj
nUxwSTLg2uCP+fOqzv59P9H39aiuqngu1eVGwWVTFqRdefhhzoAO7UMd5kO4
j+wxlNm+jY0J0xrVFyi4jyyS168LjWRBac55BeJ+Foj0i8lmjNHgwmHe4Evv
ME+MzegH7mZC4seEr7/OUuGavxmxM40FzY5RnbMauKftdnkcLk4EqWqnwqu/
WXD45YmTT+vRn28F7x4KIwNtdeDVR7gvKCZnWwTPUEGV66fjk0YifG9q27O/
Fv3xx5bTrjFMWBI9qP6Minkbukqz8Pntxu/ZCZFMMJ6UojCJVCgaV+TjxNy4
+gOv5VwfFWz3m65fySPCucIluX+/t32z1iufH1V0oF4s5ly+Tob8Xp/c3Acs
cGGz7f6ynQq9AVfXP+IgQjFl2lIjjwHeytXyTqsmYT7z41Fi6wh0pnCW9qqy
4D9Jv2tSMbjX1cvM1hZNgvybWqeNQwxwcyjwMoydBJNzc1f3hYzCibVaafKj
6PubBalR52mQrVtitVWSBFyVHvcG8PkRL2mHSFcasL9knqmSJkG1luXPM18Z
YGPnbJl1ZxL2aMV4VYePQo9WX/c2NRZsgucdXrFk0D2/8nyweBI+jVVtnMtn
AFvZLVLL2klYZ7u9q7tzBF42Mk2DEtFH8lVzysSo0KS47u3CeiLkPQzuuot9
WC1yhVsR+8C2umdg3p8MbOfkgkuq0ac6FHV+lVPhb23NqdORRODYss7FAPes
TUsJNxVvMcHa/2XlzjEqXDKf/28Q39/7MbdEOo0JM3KxagG/qbDO8oQHBfWn
sku3Sd+DBlkeZVH9ciQwsSH/9wR94fGWbp2fH+kg1fUx+Wg+GViiBNFB1DeD
hKLIPDMabFC3G7PkI8GeD4eFuHGOLlfvNJJdUe9zfrZXv6SCqzCX9zD6WoNf
9rFPi0xoF1bn0/OnQa93XoMl7t17DqbsOl5Ih1WRIUW6rmSwM+J/Sy5kQRjV
9+PINyZ483hp8l6hwWYzRfXTuBfXKRyiGO9AvVd+2dd5hgo5vBfchDNR983/
uBwypEL8UlvcVTkiREq+vmu+zALznd/UpN9gji2i/3wZR4aVlppZ3Q4WvM0P
HH+ziQZRNbqinsNEqN1i46r/nAUClmZf0+7hnjj7zWsYcR1fdLkTXuHz7XML
ARZMyJL95H4hmwrJYZRmTvSz2scHtBfeUmCAv9Rdt54AC3mPCq+tmgI3CQ0D
kVTkLa/tj6D/EHc1xSYELxY82bHHd1UM6tq+Bd71kQSwExq569+D+7vBqgeD
VAYUEXcUDPJR4UK4d6UD6g6RpChJMsY8Hl89X6lFBwfe4Ia3WUyQeiMRWRyF
PLMv6tqhyYAz17YS4vH9Wxcf7PyI7+tnv3Zxx/dXAgluYXj+HgfLiCQ8X7nM
yTYUz2cbTi/9hfWcZ27o9MB6Qm59472I9VhqpHZcwvrjNtDM7bD+IN0t8AXr
L7Cdt/8WjDlm0JwVhfeteF3lTnpBAJaWy/RB7M/B1VlrGrE//Pb3apuwP2dC
HA2OYz/n3HO7zmA/VRsPyIZjP5n0Qgvbjn8/Z2d3QIkf9+F1R0R7sP8y8e/c
7HBe+w/r7SU3o6557y13wXlV06+t/5Px7/cGim7qMKCCb8GHOH6cry9Fxv7f
vwMcEiJ+j0M8EC74i0hYUeFP2ZacGcSPI1tnaxrih+1rzfdaxPXV4eIUB8Qb
pxlLgBvxFnfqrT3rIhnel65N6vuX6+xNbYSXmHDEZNEqHfHZeQDmhBHPejGE
sjzE8w53zRA7xPMX3U8h3xD/DPvoEb7jNBCOPz1Wjfh/8n3sejby5d3f6yfU
P9Ehne3eZDbyRUTRfmM38ms9m7ProDsN7myvifJGfrUzp653Ix/N6s0aXJGP
584ahvchHwuDuXVOIH9n+KhXpsKYQNFlc30/SoXpaFFCK76/Opkv+UIFFbZt
KD/1HPmutxJRnIr6QFBu+cuqpOOez38nE/WhJ/kn3QX1JGDgjKkO6knRKNfb
ZNST9pQddJnHDFj4URh0gmMS3s84vInrGoHy8y37lFGv4jcm75xAvdpbt/j8
0JNJoEQwRMRR3w4LQsMm1LfrxQaBC7dG4efA2e8zqIdTRzir51EPt/BQzvDL
kMB5/NghQXw+Y6ycIIL6GTtbaVW/mwS/A8W1dFBvE4o6uD6h3q5aPnhxBvWW
4SVsUof6/PVM0s4X0WSQuqgwewb1uUI+3H8t6rkf627CZzbU1Q33zCVRzxMW
LqxtQP3f8kFDQk+UCvSuy+v/oP63wJzZReyDqvTlW4cw/9lmupw6FUCGFy80
S2Zw3z/GpsgWgf6iNXFyfRb6y/hAa18i+lFR/qPST+hHr4SIirokKiRKda/T
wOc7eNyPSqN/3aL7z1qgf32R9fj07/s8ic6hxSzEsYX9d8f1TUR4J+IafgP9
ccvnfF1X9EeR4y1fQ9EfI0/ZhlShn/I9LPQNRz9V7b/0WBL99F0vZ+5Z9N/3
renmTei/6zmP7z7liDq84DxwCv2aZ8fqA/Po169eCdZNol9f0u5TIqK/rz8b
yDP4lwE3OJdE76K/b7HQVtuIecCQsPlZIOaBI3bRtocNkTcqawUrMD+08hM3
iWB+2OKg0uyL+WGPgNZTczoLLux9EV6hxoBLlc431slTIODZNPkXDXl9wZlt
DerIm46PAlsVKbDNg7zzNubAl9wzDr4aqB+l+1+8XEsHjcdmhgKOLLiyyYPI
hfmRv/GITuAWOlxRnrcZ6GFCUGTfvQe+LDj7nw5d5Tvm1Hn5HXbm2GeOE3e3
oT7VLgTWie9F/sW9VZ4hYe554UsQOYP7o59BGeUUBVxuPxG0w3qUrKcndmsz
IOeDVm38AQo4PZG+onkCc9eSyFjZNBlIBquTBNgIwHPBcqMkPp8+bxahg8/t
yY8Sqv9OAvv9UZc7eI7cDYGMr8CAlgCm/tB+zKfhazKekFmg/Sp86IA5A7iJ
3opuphRgy5iOrsFcKpJ4xEBTnwVbS9N80mTpsP/mQGUt8t3UnpKfVc4AI6Nb
1aNtFGiJiRqXsMF8kqKjdGcnBZ5qHWeL2UPAPYqT9gDve1urrbpghQzrkoV0
BbkJMHvkeOumRjpUc3BuELgwCpc+5eouFQ1B7J/Q/W4v6ZAixe76xnkUvBrO
rNQXDMGVlG+TW/GcByfz8m4tk+Ha/r20wxsJsCntqE7zGRaIlynmjghS4JYq
1QR2EeCs3/RD7yHMk9sKV7Ejv5M2b7sSUUfBvTU8rm2ACfqbaakF3iyIIuud
1qHSQf931+cSvNf5upLKCbxX7RvnPwfeU8CR/xqhEefyvk5Y5rwV7r9Hs3el
W1DAUJRm8gzref6rh1vwDxm6HJ4ZeOO9PiXtEx7BnLxHgW187gcZfsoaUZ04
CKCx1XRhloG6Wr7EN6yIPI55JVIjSgF9WnGs7zzuNc/Nn4l+o8OhhF08Ae1k
CPB7QejO/ve9VO3v/hPDHKFdeb6rhAZ1Bk/s/DFvByhPbGU4MuDV1tCJYQcK
RKVu4lMYRL8rz/0VUcKAQeWbh961UED+pKlCUwkTDuteqNl9iwWHHt33vi/F
gD1Db9+WYn9oNmuf+qCuXK5PL73+nIJ77TF3Iwrqw/nhJYHjDLhZNRa7aECB
G4Z911lYj0VtQea9nSwYmLOIfveMBjv0QqaCce9ItDmqfn+BDreZvPFs/WTI
cv6lk4J4W+/dF5+CePs7eXE5FPE2EZ36dddp7OelFO0kbgpsn5LimtqGeAi1
4JvDOT6QCPSsFaJAllfG5RWco42q5eYqAgsq2hIOCVzAus0vV5Wcp8Ci6rPZ
DtyPPg27SPU+Z8Dza7/pXL0UUGuki38nMUHbTJuty4MFXqopD9wwrwUIdz0N
wHrY7sTU2msxIOpg/FCkMgV+JX241or9lzZ8cph7mg4X+L/VvnpHhvX0oMeV
eSyw/tVQ95sL9471HQ2qiTRI//PxZA++z372z55O3FumR5U9LuL7g6Wt3Z54
/m4fldZsPJ/t0lGJcTx/T8ndU7vITJjsy/9Vj/V0m+SvkcZ6UnIquz9h/eXz
L7bcwfqPaGll1/RQoL7PTK0Y7/u59Ii+Jd43N1J6Zc0FCgTaOJUMYX/CLNJF
jLE/vjtyL2dhfyzLYzXVsJ+DqteTVvNQQE97F5epCAGgk00sF+shx0qG/If9
v13yrGIP9v/myHU+X5xXnc4Po484r787u76cxnkNj3dkEHC+PlmnnvbjfE2k
N30URbzxZpgbn/r3e7KCFZl9ZgxYEyyuk414iLraRM1H/HDrVtTVIn5I06eX
ehE/27Xn7FiIt8F3HWUCt/79fWYmyQTxJrtqy9QhxKdD+wJLF/Hp8Pf1lAfi
U3g8L8QD8Zy9LU5a3okBqmaae5TPot6Ov3o1iPU8PCH6QhDxP8e1sN0H66Ec
L78Ygv3v7SnMGp6hw0s7l7fiyJe0Cv2tNOQXe0r+DlElBsw23XDh2kEBW0+o
akE+8jjsjIlAPrZ9PkZdjXx8pfu19C3yt7+93CkU+funqsCgH/nLHhDwqg35
ntt3adtu5PtlIdKALvI9P/HdUh7qQ9wjq9fiFQzYt7jTKA71YTpizDYV9eTx
g/BHtagn8h8PUyJRT17x0upcsT/b2c159VB/uE2/1I2g/mR6nx4vwjkKT5gd
u4J65UBmmUyIEYDSRNDbj/WUiIUvfUN9e3xbmpaM+rbcIWx5EPXQVbb2QLHT
KBSHCaxbeTwEQV71uUaon19Wmx+RvzgKe7hpqs+LhyA0VDjiBp7jdpXioIp6
O6AjolvDRQCVigAdDdRniQsSEcuoz92JR9noqM8fSaN3m/Fesn5qybaoe70C
bZduo57zPDOyjkT9v8E3bGKG+t+UfmfNBOr/J+aG69XoF6KDg51zpxiQWFpL
FkS/cJQdiApHvJ1welW8HfF/pKzwrhLiP0nLuYgL/ag32V3p8xQZ5O4/TrBE
P/rau7XfEp+3t/3eLzpDhi3pKw+90L84pstnz+M5G711PhLwHJnUcHcV9DvG
7qb/yDiX+9ni3+zQH3mfsf/UNKeAFan/WCze1yimKno9+in/+mjZUfl/Od1M
vhj9d2y1R1I++u8aPRX/QPTfvQ/nfbXRr3kf9o0ua7HAo8e4SgX9WjYIvp3+
9+fqMbEukejvPelSRuwcmF8Ef7xZgzmhL6R2rlmDAUeTNnc0K1Ag+qlq91F8
Hi/okvAd8wOJsrPVHvMDq0FGUAWf80QMlvipM0Dr08sz3HspcGJqknMW75XT
pspjgLli7c73dp6YKw5ozd5bdmOBulOrZzF+7tg6/vPx+Lnzqr/OyJ9lwc6J
8L+OmCs+Zu7mHtxKB+Xyavdv3UwozZl4RsN7VddzVifM0+EtSayEin0YeH89
iKr/73tPMzeewj4Y/uzl+4l96wjN/TR0mgEff1u43MVc4RuZd8gc60lSyZo+
j7liiyb7KjL2eZeSW+ptnEtNqjRxEefibRGerrTq3881161k4fOBP8JHXL7h
nvC7OfsuPv8oc56yC8+R1WpSrtDBvLRQ6ZWqQgFlFdjugp8bcaC6uM6GAWAx
1fzsNAWM84KymcjH8QKnl7k4r1CnYaXjinTYx5JeQ0ccvik2cLAoY8DAoKyO
7DsKnBrbcW0j4tZXzq1GDHF7WdxqfA/i9sVPyUZjvK/8nYVn9r/J0HhJXn0R
+eLwIevCnwbMKatlS+86joKOksbQEeSLgK37rzzkUVPiweMT50ahpjtmZ2Dh
EJxV4TguZYH46E/fdIiNAtf8fz8048VccYONQMXPLV1wnf8tTgFPG5UHEXsJ
sC/F92Ye6vbmTX12g7UMEFEgb7rU9+/Pz01EfVGvJNQP6haL41w8xNnGymmQ
4hTQ54R6tfX3g/c56O82ez/kynSQwer0HfOLTMy18UHn38gzgBh0NStzKwVk
8+WOXj+GPpslv+EogQyGmXemTH9MgupX9w1Pj6Oex3vE7mSRgX1g2mRoZRKW
E4X+a0I+pnvyNZUjH8V7P6c3miDvBnWbfmM/w/KjdXtL0TfL5EoDWimg0Rim
7zzMhJWUp7KncN899HuP/MdJOnDflNF9RWWB4OvNLfr6DHgR0mfLrkYBft7r
yQ1Yf/dZR6Pj6I83njqs2dxGBrP59gUi+mO6nZZ35UbMp6bZRyMSaHDN0JTz
xAIL/pOI7Kkn0mFJuvizyAsy9H9xTrXA+3oeyAwz2Is68+zbftNtFPAWv1Rn
y2DCjB/59AfkQfo4q1+/kw70e/4uW7HPHzpVZHwaGPBoZ52M0hfUYQM3H79J
3Iujb85bXGFAk1TLfNJVCihJHBZ1x3nJfbON+yJGAf+HPicL5QhAMgnx/mOF
+XuQvfISft6Gsx/m+KVwjpQzK/143/zIvoJmPQY84Nzx3lyVAiYdPHfXoz9G
7K+cKsY9ofLmkOCWL2TIXLp0PxPnWz9rw5WzCz8/5tdgSBkNPO7Un1RG/7LP
fxZU58yA1sPOzCNOFCj4dNTRAf2uke9xjfozBojN/2zd9IYCcRAvr5bFBIND
P5NHoliwVzr8+gzqwRp33XBLfH9y8UTLTXw/VeY5ryu+z7fwWkETzz/cyHbV
F883WVOYQ3WkwMq9c9UPsJ7hwXXbiFjP46bn4oNYzxMnzsq/cyx4stV+mYn1
y1c+tL+C9fcfc/g6gvcNzpZMDcb7bvvkGPT7MOqnl9cXYWsWXC0kcgxif/ZX
t81dxf40/Navt8B+btsVeMgV+3lC+8ZJI+zn6nGXFHfs/xlPWfZk7P9hm+Aj
09j/2KUgHQmcVzEpZpsyzkuKuTw2+JkC5/j5aDE437vLRqde4nwXZ5d02XC+
+67YvTRGPDwUOXovCvFgPPksMA8/X7jsFNkK8bNPY7jZH/GD2TL2bR0ZSuJa
tn5FvDXqsULmEW+PQ2wfjCDerhZ61VcgPucMuf+7j/icHxcx80B8lpIUxNrx
vjODl2tWI561TIUEnuJ8TT+MCB1E/NsJGSk6I/6H6TsathDo8MNTc3IO+VIQ
e/AkP+pPHpG62Id8yfgtovwe+eUbfa7cA/lVnL711HnkVwXbWfcW5OMqu+MT
ccjHA3J0k8N/cE+/qUo5i/xV6TGpGZ4kg+DRxKmp+UmonYn0tcf7kq7tubYG
72tftZc2j3xX7QgpdcP6fwjS6h1QHwhLfFZ9mGesX+hpueF89cQnTzBRT2Tz
xo4erKBB/99A6xLs87ys5Ikk1J/8nzLv+VF/wnPm9NhsMde1Gh+9JEGBhDKl
ByTUKzqvIIsb9Y3B3vCy/S8Z9HazJ83wECD37uDAV9RD2v2QWz9dRuHGul4h
Ndy/ulOVY9pQP3+tHbvue3YUvBcXCCH5Q6AktkXMGfVW325gVRfqLet/js47
nur2jePIHomioYxSQk9oSdRlJKskCoWIUkYkIxQZkVVWWVlRdiplRMiWKCuS
eZztHKWIMn+X31/P63Ve3+c+933dn8/7c13inJpdqqbYV4yU7xGaRv04W0ba
vBFf/Xeai6OfZMch5p6UzCjWkxLz2zkB62kkQIkMQJ6rxkt3bjZGHco1l8Ui
/4c9qE95kP9xnw+DBeZFgZhN+TzmRUVYPh+7OQU8Y5wb5DFf2M8L73LFfNGr
n92tifkifb7AphzzaKZjLq4b82jB6H3mD8yjfB7fQy74enLbiYcRmF8aLBFP
urCv6JVIu6CH61Ru01/Mw7yLdavRVztIAZpN/yQb3u/zlNnmRMzHC61JYocx
H3tmfP3e4XkPa4ve+4t5akqNTUnEPJXOvJAmjn3FqZ3Hc/sxf9d1bNh5CvOX
Xf+s7LI1nstSisMd8/pW5KbUbVvosFMx8YMs9hWD5N1OSZjvR7aI9+tgvr8M
GZSn4n6ai8liYej/uyb3cluwH3iwQ+EXYP9AT9uTeRD7h+YMFsEy7CtiNN69
PfuJAXbrt2476o3z9AXxUdZ5OuiPnt06i33MuEBzx/hJ5L2aYdmALh0u/e58
EPCJCZK/jqQ6szEgL2yO4+9+KhyRS82Vvs+E+Q1FKhz7cW4rVNWRGaWBPJu8
+87m1e+rdS3Q38UA2hZBspUdFUJs363Ne4J5FhQ11q5OhRcc5qYjO4mwdyxD
UX+RCQN63clvUC/KXxdtD90jw2evlHGBRiaoFR1RmvhDBSdfadLRBiJ8i/7v
1O7Vz38IzrpWuPrvIBICEWtoVKiXyd0YiK9b/ufaZh7GgMCyfw2/SFTYsf/z
9qD3+LrxhXSRXiocJS8/+vacCEFHZB6dXWLC+qb32VVv6TB7zo3JcpsMpzjX
S7x8hPPa/pnACCncN9+H6be8RBj1MG8PfjYBlxTSLPPZCWBnU73hTNsQnAoe
naerMIFhMENIjCCD4yP9gC35BAin1SWTByagK6iwwOsBAb66ty9IBw9DJrt1
U84wEzbVH04vukYD/uqe4392kWC7jsKXhSGcXzIldxVfoYGkeKy2hTQJbtYq
sSV9m4C07IAmiQgCOF1hzj31H4aHx0W/Z+D7XntYEmkQTgaONPfKf7kE4GlW
3/g5awK8WsNzdFgIIJXW/uhK4xBMioUcYcdzzX6hmUeJU2H25n8qYtxEkJEO
aVrA+st9a7VaW06HiwfP9Av7I4dmB6M3N6A+RDK7s35R4RuLt1hoLRFeRcfm
NpUx4UrANy71BwzgCZQKd2ZQoYz5zmdtLXLMaRs0nWPAhhcRRLEsKox/zpKX
CmCCj2DoWzvkIOWeWFhW5ThEcZaE+LNOQkXaA6WBJDpcM7TMkjElg3GHV1wS
8vRF+JmpsjAKmJFyh+kh49DAunk8/wv6pE9J5yFlAm4kJMlLC1LBmDnWs/q5
BurR6kJZOjiXq7A8st2P57gnMrX9EBOqtk+Lj6GPf5beU5E5v8opP9ODmHMc
ajUFCTg/Bf4uWFPkTQehJJW0+03Yz284WeAkx4DY2NHX3deo2D9u1zuBum39
SwgXBSr0zILnJWkiOJRLq+5A/fzXQN7KWUYHuEzOKr1DhuH2J6o5VVifYMUq
1U4qHM7/PHk3iwgPLJ88mUR9HtxYviEohAFFr267KhGo4MBldGD8LRPuv65K
IydjP7V5aHL7IhU6aNS+5ZHV3//x2PPGhQZ+D/PSlfaQYHEdoSbqL/IKJG/W
9tKBf9jK7/RzMtwXygg2xtwXlE7WbjWiQUT70It9wiS4ZK2pvAb1v782sEvG
kQGp86xb+aupcKLtcdB7zMHEmqcFlfzY13DfcRuPp8GWP0Wv9BaYsNvJ1NSh
HvnN33ZuwwMyUJVSrZvxea/+P6ne+Dyjp1YmEp//MKd64d/q73Xn/DfqgOsL
KdRcscP10xhFkkdwP05mFVMXcD/+vuMveoRIkOpNfZKA++8197jsh/tPynu6
/+8zMlSs/a6ycRTvPf9coKQrDaLGstJj8Ly8rqZCTKyPfZtgTDbWJ4ws8ezT
AhWYM49qiFhPs2Xb7Y1YTymy8rswrOfPnPxvD3A/r8tO23/+QgVxs95JSax/
62nxi5vxvgwLYuV08b7eJj1l8vuRoXF5Q9HF1d/nb6ofCcb7ndA94vkB77dk
BXxjUQ8/9mSmyqIetlrtuHYb9TAQuCPUbrVPqpV6HoL6GWYv97BH/Zz2qJI4
g3qzyDHd/AX1ZtAaU0Awp4PN4pFn3KjPTL5h0Teoz+e7ZrbnoT63pwhzZH5Z
/Xyk4bOdqGdS21nP26hn29x7CgGo/1/vbzzRQ/0fjHsxHIH6/8+lwjYM/ZJY
RtiRiH6Z2Zxp3nmOjPny6KEK+ktlyJ5ntc/g6xcJY60aB9OzH0w3oR/Hgt2U
gtGPmd6fkxufUmHd7si2KvRv6NV7IkHoX//S4e4G9O+JTvoeVvR7t26t30H0
e3Wxn5gM+j30vT/tF/LhZK2HkxHyocdBQMoR+fBd41baVuRJburHF/+QJwJN
Miq+yBNN/j6VROTPXOAV/qqVMWDlDU/PbRiCAnHpW/eRV+N1XYdGwsggbOBT
mYK8EvZNHf2MfNNjPrMuQr7dXlD4YX13GA5LHXUmIg8XeqBLHXko3J6gvbiD
BBFyZ3bXIj9rHm6e3uyAehX8fPysDAmY/5m9L0be7jlyf91EFAE+D4dxXA0a
BqX8Liu2I9iXbvp6iCOSDFaU4wE+yOesvQ35lcjzb551swc5CHBrmoVP8NMQ
2IxJvk/AcxXar/9vG/Lf9V3T9Dnk/46s/9wurn7+/PC6BB/Mi2Cp0qx8XzzH
+Q8hKegvYQnV6SDMl/PK/x4p5xDBLvrFTATqU+1Ew3vR1b9fDzrqm4J5pLxb
5oZ4+erndRh6TWJ+OZ/92HMB82vMKO/uH6x/2Oj5oTuYd0a75Ugj9cgN72QT
daz/vKJ/7h/Mx0Ked0UPMB/dwgrdPqBu7U5fP3hEgwoNZsamR3cRod1ByUgB
81fJrCGVG/PXnWL8hBPzV+/I7K3ZUMy1WF0QxbxWSVboc8a8/hDR9soL813z
GyW/GPN9a/Wb06cPYL5/mTeQxv4jKFa2tQv7gRHDCzKPsB8IVLImBWH/wJZ4
d+Pq57QRnOWM3uN8wC/03prvChOYKYyrCcAEvkGuf4HCOOclTW1w78Gcrnws
CZ5M8NCSr2mZpEMq3/rJHismgMwzXdBEXziCkc02OrQ2j7EO4pxicY793jnr
Cfji3zp50xLnYo2G1+w47/dczfg2h/1evonlYoEi8oMldlsVcvLG9Ys8uYET
8EqRva09HPscXvt+c1x/r4v/ZndZCgySVIjb949DYb6EQ8hX9MXXi0pnaydA
4s7OtlOD2J+nu4Sk4bzmuzWC/9MfOrAs6eTNd5Jh51/Zp4RfmCOZL8qvsk6A
N1n8r/EYGRzc7L6rY//M0i3AdK6cAE7XyPnuXgrAphnH1tXvD7Asiw3nokDg
u+sXC0XGgVl+T9tuDPvqstqwh14TMJXxRmrHbQrYNcakp9kwIdpDKXULzlHX
CJeyRgDnzZ/p7tKtdGAzLST1ZAwD54/hX4ZfBoBofIgE2Afm9V+sr7mB82oA
k1fUbRySkx6/+IP9m7Ybx8W9BWT4mJT3L6qRAF7HHhkC3mOf14Vb3oVkKGov
6ihsIkAYq73OLM5Rig6tVR6uFHAcUdKZcx2H2Fnute1NdCjLSsv4HD8Me4eZ
MootA/AxNdR4B+7T1ffWmVnsdxczlw+xHRuHZScRQUnst18wykXvW61+X2xB
v+AFChzR5kutwnkhfbvc9V42nPtOhe1/JDQOAwOsJr1Yf960dxVa1RNQsu7i
9fhvFHiedibkKObCmfALLN19dPAT03rCn0cG+PViOOAPE3SPhMrvotNBVCpu
n/YHMrwbVPMxx3uP7GTJVL03AVbbG6oPPqDAf/EKqr5Yh8G/yQx2/P9DI2LX
F9UTIOp56EmtKSaE9+c5HeOfAJeq7KLnP8hw5Un8JPMpE5byGvcNbkJ/811j
o2fTwHLp3EQTvq+lDbXOjEqHkAYjqfFqMrzkS5Mx/M6AiBNmBhXIaakicogH
zpdHnRZ97XFO7JYePZOkMwHz7cFrNxylgMMV52Bi1urnNd0dvCqMee4k1GH7
hAZsySrZBORb897OPp6HEzC0bd8PuRQKfCseUG7C+eutwCWt4V0UOEZ695mo
OA5cJy9mJqPeDD/NOG2pQL5WgmUdzmsx6pz+vKir5uBFYYL3BLg/vtJxwJ8C
1Uuaak6o25MlZo8D2Cfgn6/QO0cSGQYHH1d//4z+DD7p+4+B63y6ZXxKlAp3
OxLEPFEPLL3BGUrXKcDb4rmBxWUchvSmwmj4vh6cYos8ZRPw9MFGPq4vFAiL
f5QcQmCApvSYo+AN5JnTO4WEb3T4sb1W4j98Xvg/S75f6AvFKPX4QJzfd5rE
ybMmIw/f1XHc2IO8+RU/pN5Ig+iIpsVD+PyU9qulYny+yuyenhw+n5j9w8EM
18/OvHNDEteH8y9qBnF91XF64Qg+/3iymeck7ke0vufsRdzPpekw/we4/zuZ
l2fScf8zm25ssMb939FKTSHheelPMp3L8byBiVXcsyJU2JagZn0J63M9eU12
Pdbn+ssOtnqsj1Iev8UGrOfzVCOODKwny6X84GE/CtiTzBqi8X1vlGT6WGL9
r/9ceL6pmwKzYdTeIryvwxoBP1zxvs7G1X6+h/eVzaIewMD7faYj/bHlwQRc
pXs+60mmQOvSlZwB1EPTHXl6PurBN6NDtBL1kLpmNs0S9TPNF2n9HfXjyqpu
7oT6qRGbm5NAvU3UTxt9RL01JQ9sWP152NJly5YvqE9VH9W3IqhP4ehH/RGo
T441KW2zqOehuk07k1HP/v2FFbGoZ8bRAFcV1H9RzVmfANQ/6af17CLqX/Cd
VHoc+uVck6/6TfSLy1Dker4GAlzQ0jK1RX9do5+N+xc8AdRJTo+RKAqkh+ey
3ML3dZTap3IN/Rh5zvBOKvrxBIe5rQ76VzGr+Hc0+pebGnqmNJcMh28ueLah
3/+7d6U5BP2+W3tL+QT63Vxis0o28mG7qd6mq8gH+4UH+w8iHzJ6xJiyyJNI
dn4ebeSJbdGPBxXnKTBS712qivzp1jHPscO5/eX030OXkD8aOe4Mtmbk5CK5
h/poGGxPKYr/QF55DrqThlEPPU+o9lzIt+pIZZ0k5JvV5dDXZshDBy3VdjLy
sEA8t4O3mQAlN7P1h7EOb59J89Tlk6H9RPG//5Cfc967dcyRt+zPYeMeNwoM
dVN4PZG3+9QPJEy20KFk0fZVZfowfPZLWYj5PACG6emqIbjPPblGOi+UKVD6
8GrWXeS5gZH/tfNjq99H7pTQify/0uvq5Iv8lzpG6RjDvDgkm0iZxbxw4rt2
kVd0HHgHHMr1UW+jE5dG5NAXsUe+vLqN+RISs6OxH3U7eP98Uz7mEXPzoEYB
5pEap6dtLubX+YMjy2GYX5GtkRezMb94NTdH3cb6r6nmhQTMu8evCOufY94V
k9w91DEfS56mNXJgPv6KA2LDvnE4fC1xvhHv3TC0ZOEy5qnqok6AJ+Ypj/G2
oD7sa/eTVEe4sY89pWEUOYX5K2P9XboL8/qO2qvYxNW/s3hzT7kN8/rBQsVW
tovYNxRwae3FfGfxM6jbgvkemadPPo79gLnyvl1G2A9sUpI4tfrvpYssttEq
2D9EiZ+2DcH+4erkekc17B+Wx5o0tzUy4NOL2CWyL97P+eMHx9Cv78VeJx/b
zYSbRjFflrF+a83EVde70OFd5lNZciUTkrZs8852Y4Bn71DSz2Yq1GlqvnhT
w4A9b388J91hgsDDmT+cAhMgu5ggMvIB63lJOPyZHgMKg2ZEROKo4KITJu+J
c8QDZn+jNc4R2T8G2z88JYJ68gdeChv2TzZ/LOrtsE//wD9yJocOHqKaP68l
McE76GTFsX1UiHboTz+8mQjcx+karrhOpHNbIacLAz54+d+Vrce51THL6AH2
jZLHBpYi7BlQvPX3X+0KKtwytsscjkG+PSiVcF5HBTXfNK6vC+MQEP+G2cmK
vot66bf7Ms6vRWyHp3PpEKSbq7nrDRMO7HVWkyyggmxZvopdIBEMshOmq1e/
by/g6alMewIE3XsDRYbDkNbwoXxPERPSPuRvO9yL/eFPJbWDejhv3R+Qu5o+
AUn1fK9WZsZAY6axUaZ0CByU3Us7u3DOeV+38mQ/DYy0eS8N/CXCIWniA1N8
fXEpxtxbiQabLn0IXpolgpIeVT42bQLIqvM6g7/HgOye0KdZMgQHjjsVUQtx
Xrh83Z+zjwFH1Go1kgxo8N8jU//k1gkYpMY3bb9EgG2xrvoaOsNASzj5WL9k
9XtzHlvq5FAh/MRndz5/IpxyTsvdK4B1MGgR+2vNhD/dFtxfE+hw8xntyrcI
JuyI17Zy+UMBs3PfuS6RxuF1YMQ7V6yzo93irjNXGcgfoz6Dd1TQ/K5hzN2C
vnP3NLeQZEBPi8CuUAucu98IrHVzY4Lp+3MCEcEUWFjMynEMHAeOJ9b1tcsM
GPqpOKyHOvW5U1QWW0SHberPGPqop6sDNSyKbynARvkq8qpwHC7FuHxkacf6
3JYdFFqZALaOHfvDFajQNMIz0CCBHNeo6hc/z4Qnoq9vf/OlQ2b19LHo1Z+D
ObDtJL+jQ9fVX5o9gWTIiFjhPL8P34939pG2MRNSx47ODF6kA+tOsYxhnO88
YvZzXjBigNK+5be/U6iQf9Tu178KJkj4CY9AIxVY68sOiSYR4cbN7XO8iwz4
RYtS0rNnwgeLmo3PX9HhzeFmuek0JsTFfRMQMaCCCNcB3469RHBXvOxWUPX/
78cy8nVmwOOZ0++2faBCP4exBQvOj2/NZE85xOE87mcfc+w3FUoNJiwXkFcP
veR6m/RpIDTZQ/nHTwKh+jMa01zIk4uvasiXmNBeXX2kLJ0Od4Ibxd8P4usC
8aQNNjQItk8k+UmQgD304AE+3L+Xtg+h6h4Dck413JMfo4KZgFtLgSQTvoal
VX3EuXtsuvjVHR86uEoMRCakMyD02IeoyjAmkAxSLS4fnQD7bZ8S7+DzBzmO
1H3H50MIWVCPzz+bVBUSwfVNL3b0+OD6+zdzqfaOUuFqfllgL+5nZsBdJQj3
E1MRSxrC/Uh2Fwo14f6Lv59snMX93yh8/XEB9/9p599/43heZr7eXXM8L9eT
AUoKnvdQuoH/bCn228e+XijE+iy+3v79MdZnQ5Kj4Vus57aRvVqHsZ5SH+Jd
m2upkHGx4gFfOhOOWb+zDcL67z6/13ePAhEu2bbuUsH7inWekj+M97XVpS3M
Gu/r/Ua3hwTcv+srpfDuBirQXd8fKk/E56s31PegHh7fGl2finrIsa9c1ntC
heKU8/1yqJ/voXEppqgf9c9KwVLWdFg5N3kpZHWuNCreJ1NJhxOpL6LkgshQ
9vkl92/U55Um8W4B1Ofc7mpmHOqT9a9HDi/qefCRX8eX5Ql4kHSVroR65rdP
MLRD/e/IyTiXhvqXPtwpIlg0DiKF7+Ji0S9qzh3jF9Av2xwztfvRLyMPxArN
3Vb//tCjYiv6a6ggL4cP/ZV1U9VzGedW8wtS9mnoR93Fj67D6EdjekyCD/pX
/47RZkH079t1j6JmkJMX2763TqHfO613lQyi351ze7k+oN+PWWr1WyIfeL/I
iVKRD2fIV32ikQ/zNy7s24c82VD0luv7cyq4zfS4F/kRwdiwzqIT+XNSocL6
JfLn3s436ivIn7ihy1+GkVfdBpujdJFX72/cjvyJvOqLvmN4AfnmPfv1hSHy
7fC48di910OwRf/rlAvy8F6b2wsy8pD/TWWw5RwRQoQCjSvw9XNTYwV7kZ+W
04KXfJGfJPXj3OnI23kuRf2oP2NACOGuIiNvQb7l0SHks9vAkuAs5uSvSs/f
w7o0kKHLi95Hnl9X8XuzHnkuOeWq9+PUMLi6JD8/hvwnz5+MfYD81+B+plKP
/I/OFqjOwrxo4z4ZrIJ5kZ8823w4jw4Re9yONmG+0D70ti0LUkFmdzaXF+ZL
CVuqezDWWWNnCF8H5tH2M8WaaVjn/MKf4j6oW4cQ8fTG6ww4qVl/sLuOCjZq
B4wDMe+kT/8nUIR5l1XVlZ6IeacYbn9kwxrkGNHc9DXm46meTaf5MR8DpBJa
LXGdIYk519+fqRCZSmi/hHka9ijmcC/m76JuTQIF81ey/JW1M+ZvyT7aEAHz
ul3ZOLMH9eWQyXK1DvvW89x5nD8x32/td3O8hPnOmil5Ognz/ZM8n+M67Ad6
2vd8FTTFvua4cJs59gM/O51uGmD/4KT0Z64X+wdBZ6OcFOwfrGVaB707GOD7
/aV20RIREj/uTz12dQzKa2kOvX4MSE6jjsYpESFqREGiunIUjJ7f1HCLxn71
+ND+WQUmcDmcDsvtpoG09J4pmisDRNWzGikCRKg1HNwYGTEKP9PLCRGxDHil
OXRj42UijPcodSwtj0Ly8LSm7tpJuDlEDzyoRQeHipXlBRIJnK5LFCy9YEJw
4rWsFTz/1vmkCv3r6OvP7M/DeCYhxvCxPpsdHdYm/htgFSRDnHKAFTQx4HrN
jrAkGursQEcG6/kxMC6R4qEnM6BbMk8q3Ad1cNj8woLAGKhrHS4/k8EE25jr
x7bKMWHfDzXtmkoavIuKiuHHPoDj+NPN99eSIM1b8drTm2NAk6y5UyDIhIbs
oOW9HSTYo1FYHcJOgFHD+lk6/yQ4Jo+8jlGjg7h/XIfwKAk8hg72rvBOQl/q
wxql83TweXzuEQ8b5teDjxuyUc+q1q88JLoYYGI69mGbNg1+pRho9b1iQrzg
O+mVtwzYoRpe+luCBjsqplYKuZEDjap5T5G3KXLE5Yw05A+vpapBMd7r3tNL
nM0MeFnXJO1xiAZhoL6xlH0SNu1pSTgbTIewD5elK1TIYD7luNDHPQlnVnSE
8q7S4dUyYesuETLEZgqoXZBmQodQmdGkLBm8Iu50iZ3DPr9WPnPLZuxX73sc
vjtHAvl1Idz6sgQ4LvbzmvwT1KdLX122POYAf/2u5Q80ULafaz2PfeAmFbOe
O7EkqDHr6M7pHIPHX4K/ioniPZoF+ApNkMDHtoOZvo0AWWklfRs5JkF6NFy/
NoAONjL56oaHyKDp1XeftRvXlQgneB2gwYPyotjEf0S4vjA2Koz1nMwtTriM
vJ7tf/TwCC8Zou54Lrj9YEDkl6en9xiToDmLpdQkcwxOXFyJW1fIAInnk6fv
PiciRwJIL+TH4Jdt7exVzEXDNx1CDzEHbA7IWKoP02DbvV9eS1hHM3JrreAk
Pn9umsJhOQZXTqW5mPMhT+7wHO18R4LGgF8rr6bHgLW75mGCwCToPs+OHtSh
Q2xeY4YkgwRnZj1sJZaZkClddkV9ngYvE6N63Z+jHsJ3P6rE+ZPr0f03ZRbY
Fy82nnALwdx04GlUJGN9BINNfCJoUHHatMbkOAkOBKULfZ1gQplRU0Qjzqvl
njtlDS+Q4JjdswvRqB8hvcKYbNSPur7iuXbUz2ctl6ZXv7H/GVYOXVygw2+6
U4/sABnCejZ5cTYwwUSSYKGkijlCJJcu+lPh0Y+CR6JRyLeSL8MsCxS4IewV
cZg+DkNCWbtrvDBHpg3PGj6hwC4LMRuhhHGYTefm4c5kwD2LIet9WL/6kUWi
suoEUJQfRfbh8yx1CvlV+HzRCxGbG/j8/dYKpeVIJrCRf4TFz1NguPZ2xABt
HGhOwsmL9bhPrgcO7rif6o1ZKyZ3qeBa6JFVifs3mY30rsT9+5W+DO/+RobR
tgLlZDzvz0srQZfwvJ9EPPg88bxSeTEek1gfu205o0rPaNDeIiH7AuszqrXx
0iasZ79m1jIf1vPZkkXNjBYJgpODLkdh/a+uk37XgvXfNlHxtQzrf2Tr1SZl
vK+jvxIqX+B9ldFDe7vxvnJUmpwy8X75a+YCk/F+5925TT+ifmVuRXfdQD00
XJiIPVpJglYCY0UQ54O/HaHJzaifXXnPdgYzifA3touRYzEGROMruxKwXpOH
lPj99q1+v9z+jvkhGmwRcbyhg/oUJAlN8OUQ4c3Pp6P8e8aAv4lXXBX1PP7Q
rzTjDL7f8Mi7mYwxaI3/zsaD+peNvvAsB/X/kP/Mt1jUv60RSZqOeapskhfF
g37JvVISexj9coLj3Rsp9BdjbljND/3V/ps5O3uQDAf/eR4+gH5sPXDpiz+e
5299C3MJ/TioxmGvgf5ls/LyF0T/av/t7tZB/xrL66kspTDBknGz5S36/ex8
aalWHQ0WaNvW7Ec+2Nuee8BEPui53OXORz4Y3BIb0ECebD30deEu8sRUPqjr
/VkCvAm7LN6B/ImgTItPIH+09qfb+yF/9uSemKlBXo0fFwsXRl7NReZ9t0Fe
2WSdu6iBfOsVWeDVw7pKzwa6fEK+7WvV7/RDHlaof3tRgjw8tqn/ARl5aLRf
274d+Vk6e3mfRikDkly1V/QkaaD+58uvItTPFm/2q8OdDBiRkr7VfJwGnR4K
c3+wnkL3jrS7I58F24RGbJDPs7s747uQ523tS5Y7kOcb9iR1vBkhwXP9V6P1
yP+wQDuTVOS/WNbzahLyP71P6s1X7Et+cvrdnRcgwbXStdc1MS+klZd/XsJ8
2cfK1Twui33iSS5RR8wXA4coikQK9rs27VUivqt/V+Nz7sLaMZi8KxLAjfll
77cyyYf5letS+CzLfAze2y+3+GPefT6oYX4c8y7vU+mO85h3BvFCAqJYn0U7
vTnneCqsORlfkY/5eEx7XsIY81Tpz1GPaU3kS7BW6TPMUx+z7bV1mL+coSx8
zzB/39t6NlStjIK5c51wCeZ1wbKf3AXMa5/6RKmO8FG4WNoupIX5HvzBW4VL
EXlsqrVxEvP9vZeJDp8/A3iG+Xwl9hFB6pq7yO2qUUh3tVrWwP5BPjmyUAL7
h7A1wk9H7ccgU+iL3uYABuwcGvO1UyZCn935M0n1o5At1cGyAfv59X1puVae
JHgW9uq8csUYHHwZfL7ChQm+RGao6S0K8NeJxXV6jUP4eier/mcMuGjkaR/1
mAiSCesaqJJjUKOrydPswgD22zonlniJcMWXMP4kdBQE5qtLDMaYkLOWy+e+
Bw2u150+palEgol7nAPBq99ruSB/qxlz38PJfNizmgY9ry3v/0dAfXur/Lzt
TQP7Sw18q5+DOFZFkxPCuknv1A8dtSVCavJRW/OlUVjZ/TvhxgQD9n28FUHT
IcFwZUrs5eQx6NRTuRN4iwnhCa7clekUePu+To83eRw2JIq82CiGc6JxjasD
CxkS5g6I8igR4KjEFfXc76iH00Zd7jhfEXh/6K3zx3ypb1i7kW8Sbhw852x3
gA4vt0pOzvWT4FbLL9nmeewnCzzUjjJoUH/m2s1rSSRIpdVtW8G+d7lQxq4v
gwEXCBWJi2toYL6kcLKnmAHnz76PrwliQsD8wOYp6QlgJNvaMfD5R9O5AReQ
65us+fYWstOAo/ab5yfU1WRgu1ZRPQP2fPphwbGPBqUfqnxL0S/lM/3TL/ah
XzJFOm73kcCEN6tDCffJW7JjPdGMjvPaCePTeD7hGrcrZ7Yw4b8xbv+pRRJ0
fDcoZN9LgB3PtIpid2EfXjR5cng/GZS7G0xqrAiQONCZL4H9s/E/J5VZRSqE
9vgoiG0iQvMbW40orNuRPPFNHujPC7y3VL/sI4BcTN5SIfbzBR3GeW4PSVDq
29DG+nkMtP6lizj8ZILfjQvsBhU0uPXTanCHMwniQmUs1uQxwSD1SoHoFANU
/ORteFxosF1BdH6FxASjrOjE9HAa8DnEFT/GvIib85oMzWbAlcLnh/bGEWHf
TpmzT8XHYFD+4ylYwbp0R/yKCyaB+731A9GNY7BpJtHimzcTOLfxH6l6RgHW
EdK8RjrOfV8WyZqYO9yV8wIV0yRQ+tH0nHUXAYqNoOwL5lnts6sCn7hJICCo
UVLnMgZRRMIxrzWTsKXoiJOiMB0EbqbGqGPOHC9cQwrAOjuT797oOkeHIJa3
TvFLJPialGmxEfulrw9irU72TcC9dQMn8/5RYNzkjs34JM53M+FW7q9p8PNk
aZeSPQnq6KqcX/C8N0dqJRrCaKB9Jm6hT5MEPxMYHa/eoj6jgm8oPmGAeVrN
lm9LVBA9UX7jMHK1y0pwreQ7BjhbPr58dSf6Qzi86xi+r++J5i3Hv06AgxhN
xOAvBQasZtPlsR/YILtiUZ1EgfieLaF98ePQH3IUdscjr9JLxUq2UGH5aJ1W
PTsRZo0CX6WyIm9lFeQFk+hwlK82f+s5MrRZGwwJ4vO1Xb3Nx/H564xmLTt8
nhhMYz2O6x+fHX0ll0yBzbtEQg8+GgdO3+hiXdyPufUWATbczwxFvn16jgKe
I6/i9+L+p49Xidni/gkxZ4prcP+GCuSpHDxvn7uC/008b0eX72WFZSr0Nehl
l2F9WoRG285hffavJC7cwvp88XFpmMd6Nn5wLBnDenJkvOyKwXp6suQelsL3
Lc0hn+bF+gsNbV1zButPE+ati8D7UlrusY3G+2J8mpNSw/vy5Ol9+hDvt9xb
7EMa3u+GxoSYDLzfmJTeb0moh+yrWu7HUA+9BhLltqiHT39/6FqgfooTB213
zpCA/fSH5zaon7+bI2qmUG9+dObD3c8pQFEYnc9EvXWw9k/sQn3O/c5P3Yn6
PL5984Ai6tO9mNBWjXr2mvjYWYl6rqbrnmaRwHmdRzqRiud99bVYUwn1z7Yx
qfgQ6v+XuJT/v1wm3AgWqjBHv5S8pubboF/kJWK9A9Ffm46qnq9Af93RMB8M
Qn+12JelxKMffX65mbCjH3eJfWzL6sD+efjss2foX9+QFWcC+rfP0U11734C
lL8ZOcGFfh/cE0kKQ79nBt5VeL+RCDTfM3o+yAf9Lv6/rsgHDfePJtbIh/VU
u1YH5El+Jb3bCutIOHyi0A55MueWV6CKde5pu8XxFPmTJB3B/XcF5zbKi+EO
5JVxXYWu2H6s82/Bju/Iq+e7Ro2/Fq9+v6rkIUfkW0XCPuFiJczlfZahBORh
2XeTh6nIwwfxLbfYOGigO/n1NutLBvzrl3j4Imj1c1koEQXIz4WAKvU/+Lx4
fM+NTfh8h4gnwQT5+eDpSvML5LPKSDz1ywTOkyvXb/IgnyeopW4KuE9+tkN1
ncjzMpctk6bfcK5ymLe9gfzfLrxHmSpOgvc67Yav/cag6QPXOsXVz6VXzGjs
Q56eM1cQvYZ58cpVfjQZ84XFzshKJoMCyWvf6zlgvli73X+ngnl0OMxkygLz
iOuPdwIH5hHlpgm3LubX48suks52RDiwI9BcFOfuiUhHaRHMu7eF5ilrMe+s
BD/ymWDeDXkUcZdgPj66G+1WivnY4XfZUBHz8a/EK5HLmKcnB6kdM5int9fr
n3qKeToe0y8fjfnrprKj6Abm78RkGnM4ZBTWtn89svY5A3Lik1k2J+A8brWv
5oTUGJwNj53NwHxfs5F/H92LAjKuUnFumO/Bc9/TFhYYEDP73njKAzm5q+z8
t/IxSGtVkTHC/uGuGIfIFPYPpydTdUwbRsHzSa7Y+o9MeHAm+GyxMOaXflC2
ux4Vghu5BULwntSkhn9u6aRAb5aO/O+GcdjutNKnHjYBN+59tVB7Pwb7H59e
d+vaEJxsq2/m8GeCZ76u+68qCnCvJGtfLxmHMIkMjfoVJgRe0Lvo/YwOHFcE
NIOvkMEpxTGjsQTX/1d/1zGPCga/bUcod4lwtva0bjc/9pk/WGS22DCh8PKJ
XTaJdKB8u78xOoIJ/DrnynbOYD9w4YWnFnEctmic/D6K66sFRMmVZNNhfPsL
U7/LZLDkChA1SWWCsHNA7ictKnRJSKZ478Z7W3LJq30/AbHOLX8bNAnAf6Nm
nYr4MNSFP4R1mGtfJPOfOntTwfkp9539pkTo9f5zjrWCCfJp5+eW7jHglaLZ
QNAYFRIdfTLXIK/+nT8Z0Im82m2zYcIU57NJlrq6qE6cm+adfqWPTcCVt3FX
T3JRgeHnnZyZxYSQdY2+AjZUKPw1qMCpQYSX+/n2nalkwuYDVy4FeTIgkUN+
nUA7FRo23lqbV8YE11i3Y5wPkRtWet43mVQgPBHMbf+EfcvOUv/sTTTQjzX8
7UAggkzTOtGANiac2PVNajsPA7YFKL/6qkaF9oMJLVI9WMdQToWzXyagJ/F1
5M0pCpx+NGjjXMqEnusleroJDBBR2SVlOUeFy6eLLnzuYIKAs2pMlhQNuBq9
xVXpRBAcbr+4MjkBSZbhZf8+EGBiQOV2desw7BCSffHq4+rPpc2f7hWkwT9x
Tad9A0So8xq7s3b1e1SJSp//NNBhe5iipmQ0GbrGWdcWYo7sTTrlwpJBhSPb
pyoqbhHByIzPt34DEzj25Cv8Z4V9inRonFMkHVYiEwWs+rH/L9/QcfskDd7U
eXp5rSXB0YUl2WHkQy+/qbh6Ex1iFlzre2PIANX9vQPou236Sbey9alwg5nT
4rgX+/nbue+M8N4fiZm8zNUgQEbUyr+KrcNw/zxnpXkOExauLEtV3qCC+s67
esGncY4cum+zt5EJKTlC+e77GSDqDL/qPKigs5g7mUtlwEGxDUXt15kwfkd7
//kvdFhTUjRa18AE63Feff1DDKCeMJELQh3Ve3oUd+P6Tbt/EYduUmF8MNH6
4hkiOG80++PYwoSn5XJtzdsY0Cxw7ug2cyq80z34yDKfCbKnWRvX4vucOrtG
Y4stDdavGLk8YZmETez+ix/T6SAXG2zCepEMt9dU+G3Qw/xS7uok4X8jnibG
Z+C8tYdflOtDLRM6xSMPSp5hQJ19dMrfJ1T4tiNRUx7XL72ez3eexoCPvvxl
n+1owJsOdxWwf7B/eNthIoUOJdUTC+PmZNAemTTUV0ZdaaxP7PUnA4sw3y9C
OgEKOU5YquDzWrlfLPLwebXwvSWR+LxPZJrEQVw/PnRpSRTXP3vCyPkWrt/h
vpX0EfdTrDwqM2KE59rXY/QU9xO+XtiQosuE4TfX+/7g/hWiI7eTcf/uifqx
sXjeIwxZXv4MOmQ0QZo5nncTYW+5Ma6vf+hFlxHWpy6sNsIN6/PppdGmS1jP
+vS+fm5xBqhqCt33wHoSTwcZVGL9jS3XRbti/Vki0qxXVr+/d/Ob95/wvmDh
oho33pe7cOKYHN6XGT9bjQ+u+zjx1ethvN9QR5X6dLxfYc/AYGnUw/sH1WWl
qIeozIUjmz2p4H7371Y3XP/ZvlEvGTcqnLnlozeO+rGSFU68j3o7cPyW3gHk
jN2c5pTXtmEwSSS71aE+3f3Ktx9CfV5MKWrhQ32O2LJzUVHPr3cWrFtupMOW
ljfefqhnCfvnBcdR/zUT+73Xov67XG97bUT921y9ov8I/WKfp33wGPplRMhX
6jX65TX3zI0G9Nezy3sbrqO/xD0mKjZ645wn+D2DHf24/tPwoDKun/SeGXkL
/bhWWWzdR/TvbT6V2SfoXy43NadY9O/PvbaBrej3mf1Xtl5Hv0u6zt5baRkG
X9nKuVLkg3PGBdWDyIclN3/xIZyzfy4QjnohT0pCOdU4kSeZ7I797MgT+c/R
ExuRP+3XS9QSkD+67de/fkT+hFrxqnghr64J3FO4jLyKezv9b89RKtTVsfKS
kW+Gvx/3rNtMg71E3d+tyDe7u36M12Wrv2fbpNj4gAFHZR/sFUMerm1nP6eD
/DwiJuTaiPzkO0I9fxn5yWceeigMebvuOHFnpjUVWjIICrnqRHh4rSU9Aflc
uv4D0RL5PHW3b9sfTioc7r7rJ4A877+ZefMh8vytvHnmCvaf+4V+es+VM+HU
PQ4O9RCcv6+s3/Ed+V/0MiBrN+aF92T47ADq5s402504zAvTwoGQWbz3I48Z
cUZaBBj8zso1h/niRnjw5gjmkWNGhvFFzKMPHTtTNmMeVeUZl9Mxv7Ykj229
gfnl/GOKfxfmF+ebx2+9MO8SfD0uVUxToJP7jSdpfBy0X/65xSLAhEq3y1I8
mI+ct4wTt2A+GnywZBvGPC1pyu7txzxVPG41oh1ABGp50uUKXP+Zxh+nSszf
28kfI79j/qpMvZUVx7yW9pJtvfieAuJnHmm3Y16zVT/6x4P5/tnidd3LqjFw
luPf8u7qECSkixY4Yz/w4OxiyosvFKg2OiUfj/2AyJriv1tRP46O/SecsX/I
Emk+vxX7B9FvJSdUHRmQ8OmAz/mVcZjanrVM8BqFGKsu1aUgBuxn1Xr/6RgR
dvDwnkhpH4WQLW8T/j5HnhorP2hYYoCZ4VSZWAANUr2EreuwnzljYeGoi/2M
8Z+VwIvYz0xF73qiHcUAu/zteY+x7g3GIFnDHAV513/ypePYV9sUt5jdpUFI
ukll7hEShPElpM17MmGXwMNcQiIFFJed0jfiPPVzxag+YHL182+Ty6tf0qDf
b09E6WUSnBz95DWE+1DWGN5k6UcCjxfG4bK1Y3Dp+7/inK3YzzS6nrTnIoOq
oYCnmDIByr6pD0kVMCFzc18KmYDzqOPURV0LGkzL3D7yookBe9f/WF+COao1
9F9X7fkx2HHiI9eZMNSrSnTVzZNEcLgzq8I/OgqOP5q2zCEHdveX5mxi0iC+
PnOzTDIJohz+Nn/lmgTL5phQWxc65AjzneIVx/ffc7Wyb/X7cQ45ZusVM6CX
dX6dyEbsl0dGbP+EMKE1UboyZBTnqEe0JLOucQhs55O0DcZ5P2Tv+vkeClyi
OtuebhmHixLi7R3YhyvH/ymQfMqAtbPT/K+xb78dHJ/5A+esLoMnBSFhdPj5
POfOI3Uy2Dn+YS/EPlwunto8f4gOOq6yJoe/kyB9Z/41Ms5Nt5JCsm+HkuCc
D4Up2jIGIkc9pQ1FkQNvHTmnJ0gQyjlJtRUnQN+FYsoD5Pma9RlejWQGdFVf
a7xig32N2R02Cxkm7LCRn7ZTJsOuqwa5n20I8OHYLlZHcSZ4PLxTckqQDFOB
Len/jhLgvUEt/9gi6kerpzJvBjnZ86M3MZMEqZfeQnMcE/Zfhrr5TVSQTWEE
HF+D/cyxw+F9P5hwvrR95V0p3vuJylmaAwmi/aI/9BBxTpFlnJ49hPcu3Dr7
68EYfD5JNKaL4Bx9ZpRTgU4Cpx7T3d+3EkBVaVe+YSYTZp8q+r7egfW7dktG
tQTfP+C2XPwIA5K8iyMDZEmg/zD22Pd7Y3Ca1DLQg3xMcnryKssN5zQ1stRz
7jEQXYwTN/jLhEuSdjLiYzQIn/SJq8H5j7lG3mw9+pdfsVo8dJkGQ0m0vXL5
JEjsDXjlIc2ENnqq9mUzzH3xlT8t7jgfh03YsrFP4pxSa8aK91Wu25VBBjII
ftrtYYD6iX4x9J3lJubpqSvO3dvJ8JFrlJ8buSG3ZZ3pShH2mTKOj2xEaLBA
PnnizRzy7diWTtfvdDj+3oOvt4gMRVdN6/91MSFd2fGxcP8EiB7PPVqMfe+W
YLkPxj5MMKDW/x7NoUAK+/cm8cxxoHw5YiKG9b/n9dpjUYQK+Rv9cwtYiJB6
mrrIl45zzZvHaZNhTOja4M198NgEEP/sKduPz3trxX10EKXCgoN3Lg8rEaSs
DlsdwfXtt4yn3cT1z5aMNtVmjAM/ixH5J+7ng7ho9lncT6S33X2OBQqknjLZ
UY37NzVzqf8P9995v6LuDu7fwZVMF8Lz8u6/rFuN54XpF/o8eN7rdtsTNbA+
VY/CaJpYH6kgqTLZHWR4ODUF/FhPe7/1+rX36aC0QcT0IdYzrHHXWBbW3/E6
i7oJ1p+syHc1COvfI7utUh7vK2MxzX0a7+v7xPjecLwvxb7Mqn14v10mQd2v
Rmnw8MndOGu830+J+8p5Exkw97RWX+EmEeIXOLex84xBevu6U5aoH3v1iF/T
q5/T9NlV6zbqJ+WjRPtx1NvG8KH706i3otT9bnGotx2eX0tZ0V9HZD9YpKI+
iXvP7FbZRoCcNmliKupZ+E9zqQPquflszkIc6vmPnRzzB+qfHvjirEwZDbqT
3s7qOJKgSrV+6AXWvzLxovMD9Ium7q8AMhsRvu3syG9Bf5nd+n1FFf31PXCm
9zD6y8d+0+Ug9OMhOyuuKvQj72BduvkxAhgoRGRoon/lI/TTZw+RYZn/TK4r
+ter/m1DIvp9XH76WhD63TK8yHct+t36ytX79rj/DVEGFjYMEnRdolLrkA9P
lso4OpAnN+qfGa5FnkhKMJnlzWOgG0O92oD8KbNuFbumTAeo22GSiPwRZyT7
/UVeZVz+maqF+r/iNrHvKPJqJVQ6vx/5JlqklzaSyYCUOuWG88i3O7+XgnyR
hwnGgteu9lKgSOWqbTHysKaCuTKE/Bxq07qyCfmZpvkj6W/nOKQ02gy3I2+L
t4m+jkTe6hwqu+CMvKWz/qZ/+r+/1B49Qz7v12lJuIR8vtfaUz6CPE/i/Xqm
kEGDpBs5m1uTSJD7bz/5PvI/wPXNuRXk/8g/FcU25H+5+zorL8wL0vePPjsx
L05u5e+zwbwQcTuyshHzpZ4lKE9mHOePjKK8DMyXQjamUC3mUesTo6c9mEeh
+VyevphHRuUD6xsxv047LTb8uEMCCxPz8LaaMfi6U2tnMuad85QPv/wr5NSX
XREbrpDAQSmMZb0X6nbAZdEwiQIbjezTvTAftfW4PqZint6P77g54U+DsJPn
K3UxTy20Yr3vYP4mjZ7Q3G5GhPEvQaJ3JkfBqT43MGL1+xp2KHdWuZPA5eBI
6ErZGOwKqnRnwz651inybiDua2zzgeuNmM8uwmqbDwTjvKp61dQciKAdeUrN
vGMU2KR1HdixfyiJXzfavjwOkdkXuaWxf8icUtSSDcR+/eyTW1uPYH9z0nJJ
u3kUrMyqxa+vfr+edFqQiiARap5vqjsbNQp5ozeWfbAfXtx6zFc6nQr+nf+S
/3kRYdIkZ7L4CQM4ldcbb/AngnmyiYSA0BhMZhx6dwn9MnH7wsbugyTgnzsb
vQf9omTpaRHOOwn0tl1SBpZ0oMj+Zt/OSQZX+4io789wXjNK3woc2GdtlhJZ
CadBUb3zkyHkxtDnmzMGQXTYfPaA64XDZKj/2uJdsokJ0zXLx4v+kGDN/Cf9
tzIEULxw+dEIC/bDZV3V3yJI0OE/k0hoG4NzRropZtg/O21xuONxBPU6GCjd
vkwEz/VB0TlZDFhfl3jkZzQRcoMaaFu3jYGGz/7nYs0MONY9w9sxQYT1rD/n
/C+MwSfvjQeNlpmwvDtZV2yBBoF+Ozn35ZDA6vrCwXQS5ml9pA7tPg2WuzV6
NmmS4PWPztH7P5lgQ/OO2yk0AYE3fphI/iHD320fv61gH8husfuWRjcF/srv
DetsGoc0Wl6xHvros2KMXxT2Fc6PlOSmmsehMOX+tjHkzEnTRM5wkQlIP8P3
mzlPhlu58XmfcP3Q1Opp9koajN7yG8q+jrl6eI1hgcAksKVZnDHToUNyvuSI
G/YLjgLzwq+RD7lxhjHFTBL4tVafIkkQQLz+F0f1mtXvAdHyLE1EfnkOvVzb
NwblRev5IwZxzrr50f6ANQ3+FCv0VoqTQHnd653vkVezQWZz1evIICl7PU0F
CBAQvlVXbBcTAqr/3WtTIgN3wX2JXxbIn0mRwvPIk+xJ1cNOUXQQcWdWVmpj
P/KPf/ta9KN20P5yB/Sjx/366Vn0Y+9cuFs05yRwDCZPMrzoyO8LmsayZCiw
Gj07Joj1/PT0suRnEkgpcN814yDAQHG9ddNPnJM7qoTizpHgVIueRkbWGJz4
s+WpL84pdYJWlun/YX30Pjc/myaCU4uQb0YB9nmDFr5Wz4hwdm375gk51Odx
m2ajAQYETl+V4dxKgiWfAPva22Mg15rwmoT74YkLqI2TooNmqeyz9BYSBNoO
TGgsMUFn6PJd61kaHCeEiIhkkeBI9J1dzeWrv++kahwRij6luGc8HKfCyb69
UcrIt23bG2VDMR/5uU8lBGE+mvbtTj6DOn9TWjX6I4QO5A8nMnYfJYPTzNzV
eeR8o1599yTWp+tx8P3nljR4pXDF4BJyOCaOx2AumwEt49+Ou/HQQDFwecfX
eiY872/Nua3GgFP/VBReB1Ah00n+duFDJlR/PzUSj3PaokrfDp3pcTBNsUl3
uc0EPf1Fk7OvKDBZzU04lzcOLvZs2Rx4rq/LLKfay+jw4z+f8Co/Mlh5uKia
4vN2fmIrlJcUyHNaS5jNHYfU2G0jDbj+q9y9+1m5qHAqqnNHDq7fRWNnHcX9
BE9tTVbB/Xxr9COfx/2sa73oYob7L/EpNVd5xgC1jY8ftuL+26J+RUzheSmK
LmMKyI8TbdC1iOf9e1TBywLrE/JZsLsI62MTFXGuSw314LL75X9YTz2eG8qt
WM9oNZ6xAaxnioyX3nus//QbqnU71t9ETJFOxvo/UaPel8VzvRO8J/f7Dw0M
oiNFyp6SQOhH2IYlvN/Ui5c2sGyngzqX9LMlvF/hmD+0zaiHu1VaD3zESHCo
8qKTDephxPeOWR/qZ5twwIYJ1M9U++QGPfkxsP+y+5gt6s1A6w6XEuptfq6n
WRv1xlgwC3qI+rRJSrzFgfpM4Nl9Qh31uRTSVf4X9dyTFfTuAeo5LoLtbtnq
3ztaxxgm4356pydH81H/w3zpf+d3kyEkllObHf1yzWG0sRD1wKjyP2q4Wp8Q
wc+n0V/dvVTtF+ivJ7l57MInyBB0SY7Mhn58QN2kaIV+JJ9+IBGHfpxRzg7r
Rf82mB0+KS9EhuNBV9OS0L+J3RyuWej3iWMFVU/R74Mscr2bJbAfSFnJeoZ8
oCjZSuoiH+LExl++/DoGRQeZnh+RJx0OCmSxSRIU7qg4pSVJgLWZPPJvkT+d
pS+1RJA/gp6XH21B/lh2hPCRkFfrHNJ1byKv+j7eGmJzIWEfGai+Oke4HNXa
8An5Jhzaonp8gQxZ9WUGSsjDcbuXuyWQh1KaynKxyMNprSrVTfj6Lxme9mLk
p7b/7jAFfN3YtP99LK4PrB33iOsmgF9tH+/HGeSkDk9PCPKZ9Kfgty/yeU2g
Ts87DRKUpPMkXUOex/7xSQtDnt/9IsEZizzf1NTaQsL+YWdK5w115L+aRsei
BPL/VzPTeRjzwn2uqvd2DBGMNcjE25gXnnKmyoD5MnMqTIYL8yUx/L70dcyX
fftuKjVjHnmOTV1zwjwqkJ5PDMI84l1+N9iG+XUgYTR58ywJdM8166/fTYDT
cu7eFNR5IbWZwoN5Fy3hvXMN5t26zzEOpGerv9f4e+0SOxP2ki9/ysV8fDjj
4n8X83RrSffeB5in7heLDX0wT+sYnwbl0D/NWof8tDF/FZT3P+qIGgMbLqFP
ZMxrw+vKzEzM6xkzzy3OmNdhHHaX4jDf3eniX2Ix3y9vn0k2v0UEk2xjjUPY
D0wzvWlFa4lwZ9fXtoTIUbj2/ImkDfYP0g9rhfKxf6j8nDG9pmUUdohXbbqp
xASOGc7XKcbY1xfw1Srb0KHX3MzAtAnneu3306XyDNjgoCV73xE5xGl1VieN
CWvT/fKEdanQ+cpDSHEPEcodh7Pu4L1Yt84vLRbRQV+nhtJ4gww7585yXnjM
hBEp8fIwaSo4+X2vMBTA+9G32bMjZwKydZL6u7gJcJxHTvPnlyGcyz3+xh1m
gg/X4fUJ98jQezXzxHg2AdgOdFqxPJuAZ4T6CPM1BEjvv8we0ToEsxeSF8Lj
sb5+K7rXtlLBSJbMApxEYPWb2rHMMgliTry/D6Siv8bLmxMvkKE7d/D0encm
EG8fUx6OoECrYiZb6/1xuL40q/cQ9eAmPhTs1z4B9c07tUuYFGCYD2w8/4kJ
jECnUY81DKCauhw9d5AK5x3SEl0bmXCO9dHRzDkqzKrm36tsJMJXIqdgK847
63Oc1Pb10CFFUjRBM5sMw90mRIVRJqgNOwpHu2I/HHHx9dQeEgx5zeXzlOL8
/C/bcjiJARHv5N41zVNhafsM+Ru+znnvbJRbPAMs5qPqn0xTQbeJy1LqG/rl
QC+ZcZoGW7xPK7kLkeB6VMCsAPbbufo1pYVtdLjtP3h9OZEMp8lv9t56wgQx
2+d1v4AKr1mTpyR2EsHgZxCXD3LvbYHA2h2ECbjNV7s4jznQeoadENyN/ba2
WrpnzwQYPc1hUP9Q4GDMvtAnAUy4LGKhHtZCgTdcQnvuvh8Hjeyi+c14779I
PsWxL+kwdqFg8T8PMnDVv3TXrsacEjl3IrCfCm1rN3p05REho1RBT29wAvSn
t+zljCXA2GND/5n7w+D38OuDu2rou5NPqf8lkMHT7e47+TcEeNF8I3D30AQo
6PmpaMYT4OSLvZb/IoaB+3q1j3EN5t0GMVvlISqsn+3wpBcRYcC25KnuP5wH
bawOfP1CB4Hh7x8608lwuUfreV8bE443xcef3UADib0uKYXDRGiYGyR3VeEc
m/B2400nBhh93xb9oYYKsbtIcALn0K0/x79ouDGh3Z+m5jtMBwv7rvGIdtzn
CRcuz4UJOKa8INggR4XuxPArUpiDp2RDNj+hMYCdxMWy6zINYg0WhgxwLo6t
VDoSm0uHnRUvWJ44kEHtht3jgtXPDx8VlHX4zQBiSNziFjcaNO5Zw1bRwASj
nQsWUYfw/dne+Kz+nLXirH+MOephq/zv/f/eUEHu88uqX+FEyEv1fFOK916/
zeiKbjMdJv5Ql5XisH6psRkbsP4TfO2WOX1USIRytfVY/8sRT+ysaplwjOtO
81sTBkgYt4ZeyqDCXUV/aqAsEyy5FPNWP1/wlIyA8R5nOmj8bNsilcGAKx8n
bt8PY8Jc0IfieLXV7/eQ3vgKn1+IiM/ywufzVTY3UJzowPH7qfpVXH+bZGfF
TVy/YBv/UV5c36E+mO0/3E/5t6LX61EPLbGv1W7ifvTY78TU4v4zDz0z48T9
e9bJl36PJUPj3qj/1PG8py8KjUbieedvl1bF4Xl3NC1KF2N93PhzHT5jfaIP
uTYo+lBhuN/h5tvVz9P+aycmg/V0OdNX0nCDBlPEmRUNrP/rp8M6PVj/JKaD
/m+sv5JicNhGvK/r65RkhvG+bm1q1PPD+1rs6K99hPdrYl3/bx/ebxsbNDvh
/WYeOrZuE+rBz+nuV2PUww3noU+1qAc76/H6QdRP40tuXkXUz+DzS9oOqB+z
fwe5f6LeBOM8aHWoN8OAaym8I0Q4vFDYeAz1aaHDo7mxkw5BQom8uzPIIKLz
SfQI6plH94hA2yAViNk9nhGoZ8HQwYvWqH+B9Kc9n1H//SY3jcsjh8HqbctU
IvqFtilI7Qn6xbzB510E+uXobKOTMPrLJX023ieGAOY/ecMOob8WqE/7rLD+
ouMHn/zA+s/bCHko5uP8yvumfwf6t3OpI/M0+td514+SPncyaDqq7whGvyfp
+jK2oN/vlYrukUS/y0wsrfFFPhD30ArLkQ9NX20Pwixy0jScFIQ8iWu4xEIY
mwDOfrY32cgTbb6c2Gjkz9TeUFFrdSrQTOKn/JE/7dK+m9nx3luUHBsmkVc/
ShLLzyWRwSRD5B838s356nSMP/KN9D+Krjue6jaKUyqkiURDRkbUa1fWqWxK
pGWTVUkZmRllZTQQopSEsjepiESkKCMq63L3MJNZvMe/9/N47hnfcc79uL+7
94w8H+qb1dtRzq+VK89RYXtUjnr47YABz2/Uw6DBf5G8+Dr/1jnjx6if/BFX
r11F/fw2p6Orj3q7Js/I5S/qbVP/+dKT+0ngY7SB1TG3sofWHZjopIMky/w4
8zkZnLXylc6hnscoldMUUM9b6EXhlqjnhpOdqidR/3kuCYxWof5bxe67XYD6
v9Hpn0QK+oXJQTkfNfSLEwmXFi3QL5rb2spk0F9e6QvfMYylwFLoo1WSUSNg
x8/QnUY/Uj9VteyDfoRyuHkc/YhN+WWKB/rX2ZLd0ws7qLCtl8FGWEME5z+q
agfR77LVqOJk9DuhiJwFvU/9cHSDi2U++uN41/aLqyPIUP36ke7RLNynov4Y
s7JXfrfJS0MH/bTFkmIkj366Y5feJU/031djS+tn0H+zv3ZXF6L/nu8khkRi
3zWHjSfeoF/3bF31xA39et3w5ckD6O+HO9LMsvWokGoTsKVDhgiKkyZXj+M8
8F72IvsczgPRT5Y9B3Ee4Ntor/8M54ds38v50Tg/fKwRkJuypcP4yf9WB42i
X5w/LNC1mwFnK0puKq6jAPixXVnnwoJPZnv39Wmi7rae6w7fRIdvPBevRzBY
IPh5qLpUAfOIWLT2FqFAxQ1XmzwdFkhvunlGr44Msk6Df4Z7huHWP8GPVXj+
iFC5u4s8AwIOaNHqhXEvv7K7U/g4C3wMBA6r9688V+Wv6PqJYVCOyP9QmUGH
i+eq63/86oduy9wRDcOfQHY6MZ1lhPP86XY7/l9kONpXGSI7NgwuvFfqjv1i
wXyCcmFyOgOu6MjutCqlQL6wpPpeXRZYi1zaf/U9Gf4GdKTU/xgGemh8dM0M
C1Y9apYhEejA95KRYllJhn+qLvWi31nw0/EymfYe49zQQKoapEBdzRmvYJzb
b3K+9T39kAHtBaFqK5/vRshoTx3Cebj+Ub6YCi8Dbs9KdvyaJcNjKeaioTP6
3e3nXvdMKeDDx2vx98wIZBADytwRh0y1p8VabQwYerSwt3qUAgM1X485zqIv
rzk8fbOfDpS674b3i8nQdm1qOnuCBcdjn77O5WKAmFthojqTDOz7pjKqf678
v+XpNMVMBuyUve0gWkWBanHd2XUGLFg/dn+XTTsZdky4OC4Rh+HoLek5bsyX
zuVlEk2mw4h85ZqQt6irMUsDBZhv0qHIP0bvGJD270LaxE8KvOcp+bQD8xX1
WpSnpzKgaPiUTV8uBfp8nz9+jPlK6xi4ZuD8z4j6WuKB839ZliPxjiMLmrqe
B7wzoIDNPb1YhZMjcMSeoiXajXru0xfztIUBPqpbXidSKaBKpu2rvMiCxL37
Ju2tKKDyd2+so+0IqMjpcJ4Zxvzv3HIZ3zMIHPsyNCIlfoF61E6rZTxv4sAR
X2RNgcSG8bgIuxGoZ1tl1z7Agj96JZ4/bjPgNDV6aDEeef3hsV2JAwt2t48O
DOtQgGNhMaLXaAR2CrKiPmBeB4VPdEYkMWC30KG+jVkUMI1594Y/mwVvtqq1
luEe5npb0+I37jEU34cXSSMs2Cp4aqrFiQF93vePzjtSYGJpz8zjVibsVr6n
eMuPBbI9Y0LbF+nQ+zcggoH1Mf5CmorbyIBjRdanX02SQdglS2wO9wu2vW6/
/XC/ULtUcnA+igaH4l6KG2P84f3L8oqxDHAQXV9yOZkClVwXl+spTHCzEWsR
uYp7VRTPUsW3led/7BQawfMvjJbPnsZ812c/NjqB+ZqbX+lf+V3DHTmcQ6sx
36T1r59tw3zZ3wVWL2G+Z1Z98Zl/wABLWwO+1c8p0F4s69+UwYL8SX9XoiAL
zv3hkNXNpoGeYd0yOxH7cqGxZRXmy/DPcvjtQIFPIX/cbj1hQrOUa9GeaBa8
GzCrXAMMeDFSLTqH9akycO/RxvM2RXaFhlifqwKKZ7/i/THc7dYZeD+pXn9k
LIsGdmd9+qYxHl+6b7haIgM6HqyxscB4/BUD/J0x/hd9kjHJ2hQoff3u2SvD
EXgVJTrLxHzDHM0MtmK+ie5D7DNxFHg5v+G/cazPhpHIhs1YH3i8/do1rM9D
qQw9bTyf/SEfvLGeP842z7/HegYvP9Edw/qL8Aiyv8X6lzy5cssE9ztfx1sX
prFf+8mHyMbYr3b/DG477NfI2Me9rdjfd9WT+91XnhNIW4jtXKDD7aEnOmOY
74T8C1Ik5ut8tGs2A/Odmmx8KIz4SZW5X+OO+Jk5Fbo5DfFzo5Sc/xrztVw7
P9SMeEs2nhZ3RrzRnuT+e4j55rFviL6O/RLNYY/0w37ZXeTU+IHxd9lxOCVj
voNlbUlZ2N8LRRvrBC6xYFmOTN5hQ4EofkYcCfF/YrCYHIt8WRr49JhTdBCK
EkmK2pK/gK9upjkN+UI8Z5A2bYk6nisTuwb5lT4/5Lwd+dhtfTuFgHxkXW1b
xUI+JrSe1c1G/qo+C/sqY0iBY4SjsfHI38ChHL9srM9amyfWtsh3z9O8LkLI
9wvXq17sxbzY7pwUf4n6cLgwmS8c9SFOdI4tE/WkSlhh9T3Uk00KwhS9XxR4
Jii2gx31h2dyt81n1B8LZ4+TPag/P5bMEsf1WZAsUtwy0UaGg0/dHNNRrzLj
54IbUN+453PuTT5HX51tFfxcSQFZTpZAGurhFU/DZibqYXLGpcEHqIdB4j3C
V1E/O3bfpWiifnrFCrIfQv1kD7z+3Rn1doOYYW0E6u2Zr1XXNo1RIMB4wMYB
9dngdFjLIurzeecNFpZnR0DigeHXY5jvk/Jl/umtDNjywfV2GOq5nbiVSRTm
ayOy6fJW1H8Lv4+TQqj/Vl12xO2Y77zRtt/7GhgwejT4wMYhCujviC0ow3zF
b3kdlsD+xPS9GClDf/k8r/STB/2IejrqBxv60Xbp3hR79CPOG55px9G/evOj
00+jf81sdu/kQP/iuwPnatHvckSLK0PR784dKAmJRb8T7j1CCUZ/NFvrfqfu
Zz/sn3RihRj8hE+6stfWoZ9m3FAhtfeRoWmMXaxgfGVv46UXoP9eYLcNzkX/
nbiwLL99D+pohvX7BvTrp312eRXo15tf/fhzpHcYPK5fNb2P52eIivnX0N9l
TYFvN/q7cZSF+k+sm/S39/+xNFd+r9XIoRXnAWOalIQXzg+RQBbnF8Y5nHal
NQbnBwudMDJNDfH8VdS1zpgFm08smXub0OGd+3u/khb0tY6E4WP8TFD0eBTT
f5wKXQ9o17pwvhq1WEot3UWFvNU9EtbriJBWcj9Y7yPuNVTVN4IBLIg177j1
hJ0BG9MELH/dYUG1Q1Pi1SUKzC5dV1RkjcBlE++lKezT6FrJfG8SAbJMj1h8
fdoP4pGvbN1rmVAXrdJmGYR96MwYHEXeK1vMkAUeMWDvCNv5aToBVKuE+tRe
9EOKX73Lf3dWngd+Tdp9kQLLlfqQSh+BPauPr6nXxr0mrP1cEPbHNfTDorgW
HeYIBSZrenDfvKbyxkeXBmIS2s5qXCQQWJAM/4P5Cmy1vnmdlwl3LHzC/Q2p
MLcYcNUB95fMdZUQ9JcBbZvXHt4jSwWorlhe+b+4VzUyac9HqPAyHjfqMiI4
UFcRPmPdk1ad3FJ8AvFudO/yzuO4xxc1HJfCfJLVNUI3V1NgctfRoI3FI1Ar
Y9++vZ4FcZIvCtqMmbD0NXOCkkKFXOFNWYebV/bc+E1bhJnQFe9Q3GFOhTU3
Kn4kuLNg437L7uwQCjju8ubgCh4Bpb98dC2cGztDM6vycW40Jy6fCLKjQ6PD
C841ySx4wEh1ui1JhZqHtlTaJiLkVnvL6Xew4MBXjdpXuN9sb3xS1MFGhcU+
z6Lu9yw4HZCxS16LCbVsM033oqmgrxGbeKsf9aTCRTrGgQY3Df/sChElAZH+
b1+FIQvknSSfGuFcc5xicWe/Kh04/UFrqIoFt3i3ffv2Bve3TVtriPeJ8M8x
4efRr7h/WYpEKHgOg8QIzwVjmwHI2O+1b289E44ZcftbBbKg4t+p4F/cDHh1
fuSEXTvqfl532MS1YbASS/A5ajkA6kHupSvPWaUovlwjVEOFz2n7W9njicDw
PhtKKGeCTdbTmWHct3qzZHxP72JA+psu2+iVfd+Ek7O7ggrjQVcIxTFEaMqW
7WjFfN2K52S9MF//YcoWCuYrwOhOBvQXx6PNmpnoL6rsvYcycX44VPs0v6YN
/Xjgt4b3bwZYiVf+kduDfUkZORamhP2dSTL1N0Vc9GcdSbWkQ0fbJtkTuF8U
B8f08ZqwgL2iJYJ0BvfmECGP7Xroi2erNz7D+mVQ2qrTgA6L8okXaRgPS7me
vfAYE4YmmuUJUVQIYbM3/YH7ZvKBs694f1HBdtXFpA35RBgUf9J56QsTFDZ7
LPb44r5wwTnCbo4Od/Sy84Kw/ndjhLR2vKYCfelQjMs9InjZBv0zQ7y1f5c7
ffQEE77ef7u/L5kKP1X9HrPJoW7/nRwQNWOBolGLiuMFOjRtPLYz9S8LtEav
82e+pkP4l+qZG7fI0Lpv9+cDeJ7n5pkfW/D8fevul7vxfOeszx5DvH+ipt8+
DO/XbvT1VXhIhRSRcj0njOdd7eGxwmoqvCrQjOHEeNr5tFalYPydD7r/NGH8
ot6eM0IYv5eEWcUE5uu8qMJzC/NNOH0h6Qrm+zj1kc4U1ueLMd/0ZazPlZr1
tCisT/S1+me6WM+hnzu47mM9/879lD6H9XxfW2l5A+t/ctXY91VYf+uP3TNP
sf58Oeq8Z7BfM54K52KwX5atKV8HsV8Pz6S0l2F//RrTjV5hf7+e94Ao7C/n
r4CPboiH1U37DicgHpJ4ibnWiAdxTYnpeoznXnKWaiXiZ5Q/01Ijhgr5icN/
3RFvJ8Iky50Rb+9kPAkmiLc+p7+lGyuQ55KrJr8hPhVfHaRtRHzKZV7gO4p4
rmSLsriNeP47Jtlqh3iuSvF1l0b8nz9dQndA/OcFGN8MsxiAhF2CFmbIl5F2
Ny8j5MvmzbbjiciXJfF/VX7Ir1ulOsJ1yK/uGJPzPLYDwGd2gvAR61+mq3zD
Afm4t1agJhz52P0z02IE69VBi0lRRf6+nHP+Rz1MBzWHoNlU5PuXm/rBs8j3
krTxXYPI98da/rGDmK/igz+bxrH++l8OBx5EvnCaXjNb+b1ykyp66zzqyZ05
8zkpdiq0a1Rks5JWnkf9erMQ6k+ojhM1GvVHm+faa37UK4VlqKlBvfr37Xd/
A+rV4rMXavmob9R5NWnemxR4eu0ax0XUN4Pb/Le0UA+vdZHZv+5Gflu/dApA
PdzZaDG5EfFWuvHUm00nmeDFYaeqmUoFVtQ3+ibU20/XrPZnvsJ96bNuUHHR
CJzpzdm0gPqsFFm2/inqs6zNo74eIzooDr648BP1PCKaZ3ITEflAlDboRz1P
dbhl5Ib6H7qHS0EN9f98v8F4iwwVfBJEXjLRLw7Nc96rQr9gv6/Q/g39YtXb
N6MsnDeePD/jxIX+Qu8ycO7nJMF/vC++x6MfdSxftr6HfrTJ/VXMZfSje0/L
WvXQv4qTTIIH0L8Oc2rBHPqXaEos5zDObfaR/bUu6He2a3tJQdn9oJS8Re4Y
+qPw2q7OK5hfbH2Sm+ImBgRvJfRJpzCg7IKRzioyAcLYw03upvfDdp+9c+/x
/sFkErCj/9YUBCh2M0fg7jPlIm/06zWuTys40a8prgNT59CvW1//6mSiv3+U
HBrbvZsKpDPfJGrQ321+NJ95g/nKMChdbDgPvFMfPBKB88BxZWl+AXUWeJlF
OhXh/OBqy/35P5wfBgPfmD+tYQJvycmQG51EEHmfcGWLIQGun+g8OxHIhOnf
YQ6G/xEhSne/58tXQ7D6W6NI3gsWjPSserB7ngnK/lqhc/7oz+H/zf2oY4KO
0/Tg+19EmA/e7pVzkgAHOtm6MrewYO7Q+/ucPSTY9m7ZTIVnGELvPjggvvKc
MduCvxyfaLDEOHi7IIAE87dN4x6ufH9NRb3k6gHEdSst2+ULDYS5QkyM6Sx4
e1mliJVGA1vWpwnL0yRolT4aVEJjwo0MfoUrWiQIOJzbZZVMAKZ19THHIMRZ
T4+3lxwRQpwa2w+9HgJO5mpaWhr6aTEk7pBhwbZqvYKOdzRQeVhe7+rKhCwB
6fdOq4jAzfNEke3GEHzZEMoxH8+E4fa7xfJORHA1647TYCNAmbnEqYBpFugb
nSOt+kqDhTXNVsMhJDBX4OG6xDYK63yLOUM56HBrU5yBdREJ3N8dro8rZsF7
W7b1YYiLwXolJ0UZGvBe0Yh+XMoCzfXpXD3FTKhR3kDZI0iDL5LC77irkLd6
+uX8qD8cZm8+bBFiwOoTXEsNeD4+R6e9rYgJUT+mqj8I0OA+09xwfsMocO8R
ttbVocOV0rWDVVQSlORyXVmH8ehoTbp8WUWHdvfYtcMFJJibfGGs9IsJ1w5v
PnJiNwl+L5UdNwgiAP/PaUHFOCYsehRce2FHRDy3h55bGIJXFxkeoQksqH0o
0NmNfUlycWbjaqdB353fmR5vmOAiFdxB+0KEN4eac07oEoCqfEyGwbPyPeJr
Z3/Wk4Cb9wdb+zwBlm0zKzX+4H69+t3Q1U4aPKmyDP8VSoKIK59cFTJxLrnF
6XZuM+rHdG1QTgoNPgc6T5StGgUhc/b2xo10aP3U/0bvFeqb3m5fNzEWeGYz
vjbvJUN54l6fW6bDoLaDfDwX/77C+q5jdgcJbpamOjhzDkN16IHTt/D+j9ct
l3Q3Yt9lxQ6MJdHg+fXyGlky4ueug8tlVRIc0eiR14sjwFH5hgMRGP/ZTVeS
+epIULPE8Uh7jgCrG4fPWWKdVeXX7LxogPHoGr6UHUVcu3TO3mUfBTVpmzOZ
XHQgluy61llGgp3cusms30w4L2ByQA/3TheevMNDNTjne0pYfMM6xPE6mrB9
p8Hd46yP/BEk2Jt3RzoU8+X5OyXM2EAHSoHMq+gqEmgf0QvIQvxkkjPHl5Cv
uTJVHeH7aJAVaL+lAV+v2+fx8VDNik5oTQdL0+C0xLqcNfi+jTM2hmn4vsk3
r3GovcO5IJ+hr451+PAzx4Yf62SvwqdoinW+rHJHWDQR9YFilK6G/ZXRSp9L
/oyvyxQu3FuPe99dU+N4O9zb4gU26aXSwU+XMv4bedp1gZZ1HM9/k3twux/P
i/NO7tXF+zOn/pp0bcL9g/08ff4hDXS2FfYqYjyOAQ3asRjPVMIN7z+1dFjN
b6lUjfETtuzqDsD4/dOXNXowfvLLE+eK8PVbS7PDNfi60uz87f2Y75ZvwXce
YX2qWrqun0M8zC3tfUXD+jgcV5p9hfVk6oYtJnTTIGRh8mNVOAlkhJ45v8P3
ff2ApXge33f9wpMWcXzf5TuNFi+wX31/NPM2c9NhdNX2a/LlJMiRoSk5YX//
GZhvlMD+ym29Z/2dRQJjy4r4J4iHyLHjzFuIB6rdcmom4oFcqz/0h8SEJmNo
GzhMgim/ChXafQII7JDy9cU60C3X8UQj3u7aDfnqJNMgWru3+D3WPerw1ddb
O0lQtznRoQnx+XeXLN8ZxLN8C9cNC8TzQSUZH1HEc8Xz82afMd/Xe0dEFXA/
7NzR++YF4p/I8eGeFN7vcbEiIBXvo0kFNC9jH/lUS0/txTr4qAzEsCO/7jva
h99Afq22U7q3agML+MdO5uu+J4Grdyfb/gUCbOmJ+qiK/L1HNz9ohfw9cz27
cEyHAHnn4zJKkO9WO258+YD9HfP39PjQRoPqONvZS6gPbOXfuBTtiSCYsMWf
f3EIwg+re/z7yYRTM8zs+l0kKDgYb8oIJEDa18V2YdSf0U2dNYdXo980RKw9
UkgCJTM7ydUbR+HLIa+THKhXHYGGibaoVxfIq0Reo76V35/s24R6+I+neNWO
7TSoEWgaPYR6SGvNL+RAPbRz+qj0RZABnhwHC+LxvO2UocD2EibIXf70nx/q
5xaJI08eIX7S/U7/O4J6e+mO345+xI/O+SXXWxhPuVac9Tjqc5J9jEEN6nOT
otK4Pep5arDP/STUNVL5F6tQ1HOjZtbwfwlMyOMrM3iH+h+ycyY2DfU/bVCf
qIR+IdHNIfmTHf0u0FzjWMAQ8C9aV19Ff7kv058qi/5Sl62mJlBHg3h+sT2P
0Y+CBRY3sckT4djkuqYZ9CMtj550f/QvOZvJh0PHSMDnefvHvyQCcP/nUe6M
fud0UGC1xRMaeGg2TrxBv2P5ztY1Ie9s3qTnWWNf9g5MbxNFf3zokvF5Pfpp
ZcLnlw9baDCZonH7BPqp9t8p5Rr03xPbn5O80X/t9iyYJaH/urQ1Cj1Hv46T
+KatjH5d+GbG1wD9Ouvg56Vy9Pd342cj+udwr9S+fSgD/V1zjYaSJMZvqZzz
rwfngY+d7hedqofgWOPJQJealefLyZDHOoiQNO/uUWZAAEtFmxO5IUx4+9cq
WFuFCJv1JxL53g+BU1CSdBcV56KbMWzKR0lwvyM9fyCRAG2WSqk6OK+nJ3hp
ST+nwMC7Ca21aSPgJvC4k3sX7hchUkckuchg0sZ1P+PQMFxfiGst7WGCBs3u
mTE/CXQaa9qVfQmQ1LB979+1o3BNfds873U6uIck6schn8RpYrau/jj/2384
bfySAlbDBcXBz0Zg0nk0Rmf9KCx0bBmxOUcHhc8Cz58tk2C/2busK7eZkLKs
7SltSIT6R7v9/vQNwXXG90nu1SwIf7DA9zCRBGnsorPnuwhQUctrWnKNBQ9/
PlErukEBsd+5d5IDRiDzqLJSNuL4wzLXRfVSxM+ZStZjRQLoOogZ2rgxwYLh
ZuGAc9u5E8km724Nwd2j16ofjWMdHOPuSL+mQXrp5EHyFRKsbS43mSbjPHQ/
Yh3lLg0+NplFntDDeSfVNtq7ggV5+bfP16YxIVbO6jFpmQplGr87AHWh8LBO
TY8NC3RUi6NVEnCO1Q5NkMDz6ld3SLU/xb3Em8M1fRUN7J0WHhKQR606mxLW
4VyRnmrbULuNBt6ZIlK8K9+bSJPaZFxGg+LdIT/GnUnwaHH5LnMRdc1mMtlu
ggauar12Q2mow9u5xCoeMkH0x2PfYS8iCO3zvCTNTQANf+0vP5aY4NntZd98
iwTBXp8j2T4QwLnI8dMBnGtXrQm++iaPAk4fHk/6Zo5A7rfUUYsdLEh8fXAq
mZ0MkfH1WzcpDIN7hZDzz2acV6vLbbXGibB2Z3t2qDUBFh8HR9LXjcKtnXG6
g2504Py8J9pyFxkOCIuum0UdM6GTPL4LUkFhsj9yFQcRuErpo9Ico9DK/eb2
XCQdOOKh6LYmGXq3PDMo5WOBuGgDXzWRBAmVVx8KbR+GtRHGy9YSLDjy9Uv6
HwUyjD3fs+aP1TDIbzlJV05mQUGu1e0LUlQYOvXo5MvNRNh+PjBPTwB5RIyu
NB3H+UquduqA6DD8nhkLG2IwoTfp9FcOAxLk8xJSxR8RQO8r39xLjF+eTj20
JE6HWddPFg9bSeA1dzk7EfG515IudgL34avbpB6S/pLg2z1xsgPuvymJ9u+b
/zDg+UuXlGNiVNgRaNRhxj0KiXvtd8zJ0cFR64X5cjcJFJLkWwvmWMC9LYOr
e5gGQqYXN6rFIc4jjzzzKsE4G+vKHrxigsdm2hNLMRpMPWOdOIav09dLLw9U
M8Ew97Dg5r00OPqcKSO+mwU/vM9yV5uz4Bl/WahhEB1U5/Jenln5/nv9paDe
fSwIvjR09W0tDcJ7C/855bCAyP5DOHSUCSrJDoHPLuOcQNhicgXxysm77Vtk
NOrutfWbXh5hwF6o+HUNzzcIyW49gucb7F8qGOB5fc41fpIrz59RXxtGw/vF
znX9Y8O53aRM5+8f1IfDU1ObPmE8OqtfbInDeBI4f+87jvG3iAdNPsb4v18P
+lotToM7u1U/XMLXh/Jd679jvhTtLGoZ5qt3DVwSsT5OBvUVzlgfnmW3jf33
kXfPNZSuYD01po66O8nTwTvpmbnNdxJ4zOxrcMP6+xZWlkdg/f/zyjdmilJh
u51H6FPsF81LY9t67Ff3sOuJu9gvuT9rLeuxv52VLXdd99KB7d0Hixns754j
4S9yGCv/XyWn7KdPApWT7542pRJANPTqBjvEz2DDZe46xM+mB6+m7iJ+TJlW
kbsQbyoDNxT+4J6+wPbspD7i7bqlVZoO4lNtimkYhfjMPiaxJhnxKaGWUPAJ
8bz07/mlvSQS9PJdeuiPeC7cPtGqiPhPENsYUIX4d7cKc5RD/BvP/5c1iHzp
3cmx6yLyxSh9JDJzNRHOKvnlDmH8NavVT++5Sof05f7OMuRXxr/iqOfIxwP+
95uqxnAPP1eQJ4Z8rFqINfFC/n5I2a7HsYoMxb/fbL2K/NXtPiurh3z367D5
IJlPAUP+5Mke5Huj8alL9agPNr8TeCxQH4o3dURmNBBgzzcvNibqySXB+i1X
rxNBbOKBYxTqSfH3DTJdqD/U+M3Hfo/TwJreb3cT9cfuE2+sDOoV+yUux7eo
V/Xu/j+MXUiwqo3Nm4H6lmfjEN5UyARZp0w/Z9S30f4blTtRD63PNCtvTmfC
2bz6ihnUw8z9qexXUT9P1OZUNaF+Pjv+dmEing6/5M0LXPH85wRF52XE77Lj
drIaGw0EM96P9q38DumHrDI/1OcSL/PIMV0S+LvY7yhHPTeQ9xhORj0vXc06
qO1Ggri86iuSqP8pLwzqe9YSgVF7yoIN9V9gMX1LP/qFu86BVZ/QL27t7qUu
oF90PxQZe4j+smdDLeUI+otmRvGdg+gvS3XEe1OrWBBaJlgvjX7U/0Rydr6T
AL3c0qGZ6F9FRy7xVKF/xUtcuFrePwTJ7b9dTiI+axlO3TvR71KTLc8boN9x
bNzWEIb+uPZAVu5b9EctxZfFAyv+aLFVfwr9NE+sYe1Z9NN1FSYJVPTTCi2J
0QD035Bc9bUNfCSYXH7U1eNDgOtH7yqLIR99bbiSEtGvbf/juM92GPF2S+Kv
Nfr7NtvTKcno7w2bmVpO6O8djfuOp+E8UKbu7JxzhARbuYNLgnEe0GS27CPg
/GCveWt7B84Pmd2KsZ04P/y+/U/N9gMLlt2s+gcPMaFTwWY78wYVgq3W6Uyn
s+D5wa5rW05TIWNyyiQN/+6oqa32hTIGWGv/FFWSwrlh3JX37EI/RJ2VErqZ
j/eUuWt9v00F5qFkrocORJBQeh4tiHM+lRqgYYP7zrYxlQs+KegP1jlJjRGI
qwtx43mDFLjefDUw9dsIBC3E5hzCeZKyl9fLNoMOr+oUr7nak2EwjPyZLYMF
gs0Opk3nqXD+sKJDmSoRiMlOh04tYt9v8+jfdWaB258ms7eldNjqGB6+FnXw
cuzGUp1RCqRqO0sYDoyAoOZgRWYMAzRZu7rMkQ9BDyyF3rj3w9mczHLNSJwv
07+4thMo4PLcScm7cwSUn2kNatbiPqDrN0W2Z0L+1QeFomVUWN5bW2bbiHOy
pbe1tAITZiv++mzwosIW6WexpzpZIPBcermumwG6b/lC02YpYG/lnCyI+W6k
fDEu6KNAYfx38+W2EbgnDnMZ73BPidciPT7PhCleMdH+bCr0FT7r132N84/i
3Jx/IOJubSfXse9U0FhbYHU8G/XH9u7C2itUIN+f++FmRITyRk5Nva8sKPXb
0C9KZ4Bf8tLOu1upINgwTdJuZcHt+ZLbRdxMqNjdET6sSYW8NZeFLarRd9wX
bPNDmWA7brDTY4AKTY8OET++ZMGI594aMV8qnJMKLOc/QwSpdeGlWq8ZsLly
n1gP4q+09eMHqa0DYNWcWPaigAUvU904lu5QYXzBKHfrRSKIUl6L7FzG93sx
1SHpxAJORlHK2pX/DwJJTZdPK8+jE75I3kCDv9Lz5nw/iKCmb5gi+xfxxtD+
7I/7/PuLZ43UI8gwoywuz8T5ucZEuNkQ60s9dKiv1pQI56/cdfu4lQVp2eFu
NGvcQ7vuvLp4jw7GT73Lcr6w4M4RWY7gnTRYmxUh8YFEhJGnHF9kKQwwOvX8
9WgB4naZ8utl4QD8+nfWL7aFBY+n0oV4uGlQe+i7Uk03EQ728zXfxb5LLs7c
/G6L+9kDNYuLxVSo+WbQ2/geeRoQrfvhBr5/V63vRU4GzG08+1Yfz5t33SBl
Ik6+tFxx+FxKBf5jZM0avH9fgmUzBe+/tmx7MOA7EQaUWzaZYd8l91w0K7Bg
wp5WS8/kHCpcd7FIFME9x0qq0HvsNAvakq8ZvblEh6MuDpSHuUy4Ge+jUhCO
e2ooDiayDHDgbdUdlGZByIbZNKczLAjS26uU4UqHNyYVfsp4v6+je6CnJRPu
uiWfTMulwr09nB7jsiwQehekob3yu5H+aZWrXOjQmGUSZ9fEhKTvBj1X0U+2
cD88Pr+KAQoTrns0UZcv3i/7/hD5pGm9/ISFc0VXRZ6dAp7/Y0rpC8HzlbMx
fZqrGfBU7sLR93h/gKqQ1hm8/55LnLY+3m9Z/eYMYDxngxqvymE82w//WqOD
8ZitdvfhwflDON7i4WmM/6e5fLYlxm/iW1t1CfMlbOBVr8V8+d3df23bz4Aw
3wrH33i+NsvgxjLe7xHu8GsZ66Pe/l7BAO/XX8dnP4b1TFwSqBnFek679GZ0
Y/2f2qjvPL2eBqamFgd/Yv1TfKxSTmG/DrG+9thjv84llghex359JmS+TMb+
Ds3sPd6N/T3yvnRtEfY3+fpGRtjK/yGPPL8nYMcE3+bZzDrEw0cxg75MvF+n
7uY1f+zv15ivSjvw/saJ1LE/ZAbkSwcL2yPeShIzSfSCAbjgF3YyDvE54mVU
vBnxOW0aK+GI+LwYSNVIQTz/FRHxmkc8F9ff1C1CPPdYbktcjXxU3MW2sxrx
3xaj0LfzFBH6ik28VZAvoatTaw+ufP6l9IidHE6GP4LKfcbIr7dKmrx+yK9t
P5bMK3uJIDfDOzWK8wC/2P3eQ8jHwt7nkseRjwajkfx1yN+zzsbmrnepsPaE
bq4H8levcuxeAPK9ZMC49oLqMHgrc7+hIN9/XNe9WYTxKLzQdqnyoQL03Cqv
Ok0EIzf3vw6oJ5XROHignlDf3O0URD3xsxhbp4b6k0uwSppA/ZE2u9t+CKjA
a73KXgP1qtP2Nd0R9YrZ+saZhHplQ3g9r4j6FvOgIDvVlQqrNJd+bER9C+R/
+doE9dDn+HHmQdTDw5389YxuKozVHNqRgn038xufHED9dNEfclV8QYWjoefn
5VFvw8sKMwX7KRBP/Gpu0z4CpXEvLlqhPs+8CZoMQn3uiDx/SAf1+dndD/cv
oZ5rXv90kirPhNCbR/ZXeVIh8ZAGuzL2neeAOJvUBSaIZZ6c9Uf912lP2nYO
/cL7SmG92jAFwqZtlbrRL+bve/VeQX95/GH+UNt7ApRLbRf/e60fxDUTRMai
WFDxbr/VDxYFgqZcJZj9I9Aduf7iTfSvQ+vdjwWif31a19nojf5Vl9t7QBD9
Lu6B9gsFcypoxu532KJGhP6EiM8H0B/Xbqi7mYH+KDM9Xt2A/ih2sEqhAPON
Sip+pIF+etf7eqAq+qmAuP5rPfTf266DB0+g/3qyaXXJof/6BAoFpaBfl4WY
phyLogJHbBzXDPq1w/InkVT09zVu/2rq0d+1LIq5+Bb7IV6Ff6QP54HJy1NC
WWZUiE6fM9HAeSBxfLXgJZwf+iJL2tNwfrBcymh/gPMDzf+jj00dE8y37B+9
/ZMILi0Em25jAkh68+ctr2MBOa1hx9c8Epg8fmr/kkIAoRnfXM9HLMivfPSD
ivq3XXnEga+BBrsyY/Yav2VC6UwubddXImxs2+P0WY8A6Q/2zF4NY4Lx7ln5
cSBC8IH8DeLtQ/Dywf07gRtGQSssniACdGjn/t5zYpgE0fON35VjWHBR6f0P
ovzK7598aYj6RYOx4fo3f3Fu7+o8uWWdIB3KuOTfytfjPjIUMpblwYTXt0qS
z28lwk7pWMs7cUPwaLQtN+4JE/qTfPopoUTYIxwpcJKPAAdUBju232WBv8fZ
4C45Fnxs/v3tvx4a/P7FmswYZsL0knjCWXkS3OJdb7c3hgCDEToZLyKYkJkX
OfVEhwgztxdDO74PgbphoEbGPO57BpILOyg0kCsYOvP7AQniqZIj9rg33Qwq
DDCzXvlezah5yDoy3BycdupG/jarc8l9/4p7sP3Xk5e0aOAS4ljzpJ4FzHlf
9ZsUKjwQXS/3s5II7ZYvr0/V4fnH9WdvEqmwOXfbb41yIlx+nfR2sBDxcYH7
4UALExzv6p1WUkX9MB55sx3nVb2eurG1AXRQSfnUc2U/GfpSaV6uK8/RpV7J
uCxFh/msA8NxbbgvjIt8iv3IhPCwgissJtaH95bQUUsCBPgRS/5xod88si+v
LSfB360t6pfHsO8iHZ/OIm5lX2h7Fiui7wTUDA7ivnj9SYh1MO6ruU6pS29P
kqBmn+VM4VMCpLVOmLXkMOF+++TmF+k4x7aIeb+RJMC656XimzaOwti/V4Ll
R+nQd1WWHkUkgY+wIddXxBUfyLU1Ia4adsjpRL+nway4lF0a1yi0aExLBl+g
g5c+Qd1sIxnMg79oRE8yYXiL55btFjiHnykJL8wmwLE9A0EJ3Lgv5BK+na8i
wdvicGrhBAGaz11qe5+EfnTu8pXn+9GPmoInxD/R4FJC5JNPIshfl+ZbbrvJ
wPsxkbzLaBiefbpwXmcTC+7rf4299JkE2w4kvl1cNQyr5X7zXUPcvj7tyyLq
00HKf+d8EIsEvwT/kUqw7+tiflscs6SDaaPFnkYOMjBqfvGETDBh57bZlJjL
LOBNZn3nbKCDZ5iPryz2yz7UryHUH3FCGpd9J0sGPsG4lF7M11ZYM37Sjo5W
XC6px0OGpqGBf5OIH+GvbuybED8RLSquDsdowFn8J3ET4qHazOiHfjvODzd/
3rU+SgMvPqrt0BjOuymhn8VcWbDbu7A/oJEOCVJzHjV3WPBNvSX6D+Jfu+fD
+BvEf8H2T4zXqSwQkeUfl8G5YOxtd/q+DzR4z+Toe4V7VutQqn2XA9bjiojb
wxd0qJESexuL52/llE6r4/mE3JYD7ng+fPvTDAbef61eJpyE96fTvtp54/2h
4kflSjGec/zCHUoYT8OFDNd6jMdFb/zVGoz/l+osOQbjZ69M6q3A+J31SL8W
Md9/1Pe/v+DrWxIDRHgwX4/S6LdtWJ+7axlPFe3poC3i7vEU68PPDDytgvX8
7/GXiiNYT8MSRaIz1rOv4KZ6Ida/JtXigT/W/2rOnO6H93Q4WDaz7iX2S9Uj
/WI49qt/btvlHWvI8OLh/KQf9jfG7fNgBvY3Q9uuWAL7+3by9FtrxMMa4RJC
D+IhL+reW4vVwzB/KVG1FPHz9D5Flg3xo3T5Efmd4TBU6236N454s+prc45H
vH3pjbEfakGd0f9KyEN8KoW+3/sR8fmQJ4TKM0nAOd3e7hTieUvfCd9YcxIs
JN+LNkY8n64VCUvAfOfEnynXI/4XA9Mi8xD/4f9l/XyGfPF++6WzB/lykUu8
ux35IhJY934G47eT723UQX4N71SgSyO/PgVbyi8jHyvXbstXeEaE0Cgdd0Ep
AnjS+G7qIX/tZbwd/0P+ul06vGiM/JWSl3kkhXy/IzrsW498r3IpcRMfoYFy
xnfebRj/gevHOGUqSMDu3qD+CfWhQu0V8zTqSd7xqE5b1BOR07bCIxYEeF/3
qycM9Uew4sRML+rP9IzU8Djqz5tK2kNR7NfWcd7hRuxXjsOGu/yoV+tF0lJo
iIdTN2yiH6O+TZyP5R44TIOWW6m93KiTRRcz8kdRD88tbv6dhnroZu5pHoGv
c+x/SN2K+mn0bbNcAOrnkM9YVCvihyZWqSHwjQnHk2NT61FvR0NE1pzHvlc6
mkcloT473M3N7EF9PiMe8ysK9ZweqJtdRKaBvAX5TCLq+XbVkuAB1H/6SN6d
fbpEGFwH/vd7hqBjbyifK/qFZSPb3Cc5Eiya0h0/RhNAWCKcXQ/9RfDPa78G
xL/or+WjjO80OJl56HYz+tFYxyMfrzAivBh+ubUI/ejFPv4tV9G/lvXu/P28
hQjqL/Wc2u8PQfe68l38a0bBMV3O+Tr6XbGlzNs49Lsb9MtrHNEfOavFuzrR
Hw/V/lDUQn987/ZE2hH7XllVEluhiXpS/atnjECCKb3Y7mz03+6zO77cOEKE
2qKx1SPov1OjwvoC6NerayKM49uJ4L9++dIV9GuptZ3+2oir9QoHB+cQV7Wi
PVPm6O+UJ+s2bOdkgbpPprt6Pgmc5lLs11IJoPzRMlUS5wfXX5xmi7gfWnHV
OXjj/OD79IPzv7Urz+tR0zR4QYJYMVWj1yMEkNt5KHDl/66fyPVEjWqS4LbO
oQizBwSYcLddJfiNBePt5HKaDA12N/MGSU0Rwc8KVBgFTHioLCCkkUeEP7/3
/Bg+QIDd7RpnCa1McKjiMV4zS4QgBV2l+gsE+EbXyhKZZMHarodSq+ppsNOv
YNsPTxKk3JfcsQvn3ipOzc/29bg/OJ5lvU4kQt7dl+qbabhfvzJ/YfGQBg9n
uXrDkQfiSxmOr3CvcXhS94r7OREeRIScOi9NALtpwlcbfyakCbw32iuB++o4
NfB4/hCsLnG9GYL3j+u0jgo1UGEL3U/tcDIRdhwN2ro9kwn/yiaFt8YT4c6V
za7Du5AvSe517EOozzy/xx7vI8G32x5FqREE+K6/+904+yjovlIuNl9PhzXy
c6dOIs/kNuRrD1FRvx6z7wxJpsHUtXHej8YkEDA1UJ0l4JyQYF5W7In7j5P5
hzU+FHDuj7+96SPudx8E2OlLVHCkH+nd+JkIJzyHS97g64/sHG1o7DQwu17w
JLeNCEf1q0IbB1hw0142VCiKAUVR+TJmCRTwDrHM3jbFAr31PxOPN9JgjV50
ZIIPCR5LzEWf41n5/IdbjU2Vjnsyn+OPfhJEctSc6EacyJpuvBpVRIJ7hU01
RDoBUu4eCj71mwk5PtED+TYkkI8zFWrKIeB8IJZT1I18sXcP9jlCg5Km2hgO
DpyjMqLVzatQl77U8F5uQNyu31+sAsgvr5AvHgu4z+YMebDcSRDx+UyCYCUB
9lx0jXL7jXO71ereE6000C3dqNt6gwQx/xb9V34vVZNXvOmxDg2uSgyKB3GS
wNE8Z6j7HwueNXCen5rD+bKfGGeaRQJiVde+n1swX7bsqtkeEigVRoms3TAM
xvkXhDpXfu8g651mCuoChfdR1I1OAqz5JvJEvA/3tKXibDdrGmwVjir+bxcJ
QqR7rvsJoE4eMfCSnSBBcs1mjlHRYdBsIj+e28OCz384/RuFyHB9/nLpuN4w
iN+n1TBQJyf+7WgUwz28Iy5Oz5ePDEejwzRr1o/CMSe/P1qn6aAr+U0qcpEE
NoFNb32qWPDmsvFdk/tMCNL/MSMxRgWTtug1e/EeuXttPSev0CGc+/uqEzvI
4C79tegT6kmMmM3x7YF0WL9L4oKUHBme3uvO2Yj7hWXfxJfyPiZ4iIQ2bjej
gc/81nMDeegvJyL5l/qZsEBpVG07TQOO+01FG3D/fX+KM1zWhgVX2LJ/B9+n
Q/kH1QuZqHt7ji9eeYa6Ryv5I2KLureR++JCRigL3JX3tRQpsaCnfJvuFOqr
6eY974cfM0Eqikl4Hc2CyEPUt75HGbA0v2HfNzy/+fXdhid4XuGj6KsCPN/Q
lajgjfffbHnoWYr333lKL8nC+3nThUOGsF8iX7OiNTCezWMpoY0Yj4C9oBIV
4zdz/rWuBuOPKOOc9Mb4lyTaP3Ngvjca0n79wXzJZzQ3umO+vPHfY7uwPhbq
ZZo9N+gQSru0veM/MhQ6hUntwHraefuT4rGePBB/PAvrWctXN3gF699vuvAo
Aes/FZh4JBjrT5qI3vER+7Ul+AuVHftVO8U7dAD7dVNyZIiA94iRmzucsL/W
Tcfj27G/nWm/DxEQD4xdUuLnEA9ZT9xL4xAPj0xbeuMQPznb9rWkIn4OCKzn
OC42DOQ/vGwaK9+r+hy38AvxNuMeWnwP8TYb6v7q9crn4V8G6PsQn5er06N2
Ij5jhpruTmJ9FH5GrHfqJQGLK0zECfEcpFgVWIP43zAjuToC8T8RQ4+byiRB
bi+XQA3ypVlXy/0A8iWqmyi+G/my7p41MwL5ZShNknmL/NJbzaUrHYj8eMc3
rop8pF9922uLfLTmVnr4pgLnmTPTgnHIXyeO4cIZ5G/4Z+O8JORvUY68TjLy
/XnifWku5Hur14eY7NUkYPxse7YD9eETOGkJoz7Idfwn7Iz6oLm/qISFemKz
b7zhD+pJGHd9zTEG6ifbWklA/TEzl6YkHKbDEFHQ0R/1xzL7BOd/qFc9va/p
r1Gv2FLDIidRr54RirPfoL491/9x3wr1TbTWxTsP9e308fETz1EPyx+Ecd1A
PeQRLXtiiHpouyqcIYmv28bNnTm7TIVcNbVeN9TP6uqTAuzDLMjOL8xyQ70V
kX/iX+RNAQNq9fBH1Oef7Xuat6A+/971h9cF9bn26mYRzlWjMBi2jaMZ9Xxd
2NSpItTzNMKakdZBJvh2tp/ehPpv+fFkuSrq/7k/1HFj9As9Jv+bp+gX4bIK
zkd2E4D43Zr4EP3FaWv+sSj0lz+qXmop6C9Z4DMliX60djCtNGUvERSvZkXe
yxuCunKeY2PoX0o/iaYP0b9YehknXqF/NbhU/pzFOIHpZzqKcSZmb+rdi37n
XykYrIz3y37fvecr+mNplQlrexLmu0llnSr66dN0v6Br6Ke7W19sO+hFgvWC
XX656L+/b9DK/WaIsNVD/LA9+m/d5jxekUIm/HVTq/iEfr1cfqzryH8E2Gzk
ls6G/h6wao3tDfR3VW/BoE+TRAi82Pa0GueBwvnSMTucBwIit8VMJxBAobny
E/863FNmdzyowvkh4aaS0XYiASKucm37iHnd5vkl9zgcddcjqiZWlgFm+cyk
oAYmPP3KKxdygwUy5EG1U+sYMLq7IDh8JwuiRv+pm1qwwFqBHF0TQge/rvwX
Wkwm7I/7ruZ3hQWqimKcjE+4X6b6kutwno+vI6c6nGeBwaeGs32+dBi9vNE4
Ceuz5PGSW/gWE96NR1g79VHhWFB40IlgFiz8+WKip4JzfcffCl8WDfg7Lvc5
1bCgYBWH+gMXJvA1NklnvqZCuvbj3HeHcZ+qCi+KPYl1bXq6odqMDmoux6h5
Wix44Hbbn2iEPm9QceajNs5xSW1NEe9ZQLD7e/eoDhO4u1oEDO5Q4Yqk2Gj2
TRY4rD659rIy7pXcBlfGabgvr8k+5VyL+9cC9fWAHRP0nSTDm0qocL9VbET3
CwsUfzgGNQvRoOtY+g5dIhFMtovvr8S5d/P2wONLX+jgdJN33+bHZLj5SGGW
Uox7mca0cfxjKsyd+dxTcx37nNS2z6QN9WRz3qDRDAP3BfcDk2JU+BY2ojWP
/Q3Xoeu1DDCg7bOK2J3VVHhu0qsP8SyIPff+t8hWKrDzqfia/huBSk8pt8KV
5/y8Usu6WEYHTdOW7DFfMiQU8xwRw/cVS7rRL5ZChbPiJy81eBCBrke84tXI
gs5Zr6PZ8ky4pJA1YuNJBVZr6cD6bBZMe235Mb2aBTUDClmGUTRQopmcEMC8
HJ0j7wl30OFv9TnjiGdk8K5mmK58brlPNu4ZC/XyxLxs4GgkDQhG4uPVTfj3
xzLtRKSZABQ51d0uVBDXL1ReQL/gpD6vmIumglDQn1eeTkQgCbt5Hl1igX7G
GdvoIjpkqV6s/OZJhqneLC+uWBb4aAobGM5QYMSiSHgPeQRu7lwT5t/BAokd
utfcfjGgOUdDftcyBZK0mBdz21nAdcC2R2uUAZ6VN0bYt1NxX7HOdcH3vewV
WOJymwryCfldBx2IoOZ837BrAXHlsEc9tAlxs99fRDaeDL4mzOnmZha0zG6K
S19Lg/GLfXENHUTIjOWasSEzgKb/W3Uwbxhy8n33D+UNQNocQ+KmGgu0nucP
VODfnz94pEW/eBi6y9TUxt8z4MyJBrGNJsNwu+156n65AfCwnnhs7M2CsVnL
m4OJFDh3VvOuf9wISKpEnFq6xgKBAbXp9UEUaJ8Kcvt4YwR6DDeE3EhiwEtd
8mmxQQLIZj0f1k7uB6v2iCtyiP9Db5MXz90mw3Tj9Rd6L4ZB4cMjb0o9A86v
Wp3mcmIYWv6zGkiRHYDcNrPoDc9ZcN3lgWSANRUeF7AbftIkwstv+w/2oa6K
1gVveIN+L0rs+yJoSIa8d16LuzVYcGvidt5cChnOBte3plQOw9pLkhYdeF77
xb4df/H8Q4GUbR54vvylvcSfDBY8eVTWyYP3X7BYZ3gZ7xeNWGO2C+vQYC2p
Mo3xyA6ld53dPwCa075f9TH+ytu+Jk0Y/9C2ay9eYPzDt59naGO+z2n1b5IH
CKA1acOMTOoHQSvfym3uyN/cnQb+WJ+/2n5uewNHIOTg0iEVrOc+mRsyHljP
Axzad4WwnuLXX2yXaGCAxEtK7SOsf30A5T4T6/+6c+6DC/ar4XtrlB726zJZ
p4VeNIzz79PtUtjffVPtz0yxv4mrlA6KYH9dfQbOERAPKY0TJJ51NBB9+z1O
pJMIj5ai3D4hfr4YfjFoRPwU2Su7huF9Z91ddU8i3hJfPLZciES+Q2nXjwtE
mO4jxaYjPmX415MiEJ8U+kFZc8SnSPh6uzDEM4fSI3sZxPOp67eoTUsUoP9L
7hFB/JutZ3v6CvEvUpgjHIL4j7jtddII+SL5JtdUD/kiv7bA1R/5sl/0becw
vq+cUINtLPKLsG/xFS/yC0i7thYjHwekT151QD5WCI2GeSMft+2ZPKCB/OXU
ISXkIX9/NLorJCN/v588t08E+X4s5NfNgW90uB3+mOMA8t3IIZ9tFZ7nt6wl
q3CwQH7r+GgG6kNMMd0gCPWkdHOLogPqyfQ/aso61JOo70vP1VB//tpbycej
/sT5GFwS8SQC33rRuEzUq19PqaV5qFelEeHjOn5kyN9HJkugvhXFEJ5WbKFC
w3s136m/I/Dfzn7ncdTDLNmkM9yDDDjK9vsKEfWw/G/XOgvUzy3SS9+4UD/n
lCpIqaif3vXiFsv4voXc3zOXUG8P5DT17PAmwmTIPu46zGtM7ptmDerzhNE5
QvUjMjzOkg85gHrutD5cygL1PGMiawd1hAhnnz71tkL9jxt+0Cxsz4TaVGLb
zlIqBB4MqvVFv2gMYa6/gX7xalZ9UYlOA+9/Xc/vo7+88ze5uazNhOSnPO2T
sVQw9E17FYh+9JsuFjKNfsR7MIe0XocOcUpHf7IQ/5dVaTkB6F8LvXnBnuhf
3pcclyzR79roxQbf0e+i5255LaDfKbrtK7yB/pjqL2ekgv54n8gpoYD+eLeT
TyYd/bQ/ZvFv/00mGLz9xLsR/fRWbkdlPPrvpFpo+nX037GqKvIePzpEEtf4
8qNf3+XxPBqNfj20R+Dhf624d248VVSG/i7lYX/wCPr7a+3JBR/0d/u3Os4n
cR5YMipRjsN54FtnZ+tDnAe8bYp1pnF+kIzTkInB+YErPHG/Ls4P1u92Gd38
gXNUknfYBS8WBA957pCl0EHvju0n7RIm5Ln+cFbBvWSfj+rzD6IMaFnPatvY
y4RYPYsSBp5/ksb/4Dxt5fNgLpewc7jPTFA2PNBGnVMQGxqRoIMp9LR/w3lv
h+2Guo0eK8994YnL7afD5lvbPv89jf6o0WJ1Swdxbfq5tGQf7hm/N+TH/2LB
Vr1fUpFPGGAzyyjOKKJA8E6ySs0lFvy3QP/ehzq3W+2zlwfOlVnq107lmCBP
7fuIgnoseOtlIqQij3Wo9Iz4fYIFu9T6Dwnqs8CFnyPYQJkOxurGSvbXkT/d
PDHj2M+MwZPBlxZp8FJdfVh1kAVMJ9Wv7BEMOPZWNlPtHgWIN3oTErG+Fw//
KvRAXJzkOmKjLUqHcd2u61v7WTBSJnLc+wEDxn3ir5zOoMBw+PnzT5yQ76yG
hTBjCkxOd7HOmY3ANaN/B/eOo+9qRx15w8uAPo3nztFzZJC0UCIcwnyFo+M+
/UhnwMTiSf/yUgosDw233MN9YUT2SHtzEwMWZP0tu4kUMHpK5+Sexvq8/Wc+
PUWHyicL51TbyDC7mHE10BB5oer9l9hNhsG6MJtc+jDsltoiu5GGeUbMmyhr
MUBcK49T/yAFJoSl9hS2MeGRmHS3rS8L+uqq0/xn6ND41ifKmo4+vqfV+5oq
A956//2vRIYCqh0DJbOZLBAye33uwHoW5PrSK3viaSD5Qy00k4l7XNzYZhUZ
9A2y1VC8AAV63JoCihBXVV4/gkwRJ79OBt6hkOkQ1PNRbXDleSZivv/ZyjHA
h2Zf7rAb54FvXN+2YJ/CzifGbGwlg+mmogAgDEPnvHAP3wze7xWirod/7+lf
UC658v138tsCD9zXGt/ZW/2oY0C0/ynPv30U4D41nkjAeorfVi3xfswAleZ9
ZtR8CtQ/znh/eQL5/1PjgMp6Bty71RaoP4r6v/kij6E97jWvvXKE1Siw/z9u
8+BjI2DAsWcpGPv7rCnN82kcA0imjbQHTyjwwGOb16GLLDj1uPmzggUF0mTO
lQZbj8Ce2XH3ll90CGn776DN8gBwsO3S/7npF+wcVexoPobzkrWE4vmyleeu
CA1kfR4GI7MHUSOI5za3Dzy59hR4bTcQs+AwAqKvj1c3uuFcZ6euvdWLAh8v
cQTt8BoBx999PlRNnI8/cSvNor7H/PDdFFszDF5JTMN1L+lwag9t946Zfrh3
emzxpdVPqJ03KJRC/ZJIklWm9ZJBZsnSWp81DIZnPySMo34pCpYvWCNfEjbV
nzuuQIeUKHWCw8r3DWOaSd6In63xOpUGiJ/8nPlLzTg/2HnuyNWMo8PWwO9c
n3B+KL1gGGSE59XfUe5z4nleMKpk0IbhvPMuh/d4/4Okk2zX8P6D/8op8Xh/
T+c5w80YD3+jESEA49HLsbemM4eBoXdWShPj77ktZ6Y02w827fJTTtY/wVio
/ecy5nvnETPKMYMMAQc8NzEw32MPLM4UYH1CEi3HszxxzhTgDqrxHIH9/hHM
BaynkWqW/bYLFMgq640xdxwBw49HrxZj/ZPv6AwySslQFLFnQAfr36MV8SAe
+9VoT12lszQAlmE/TXdgvy6kcPaYYH9nXXP2PMP+it8yLR3A/jJdJfqiEA/+
gxOOVogHl12c6eqIB3UVi2sXED/Kkaf/3UH8SN3iMB9A/OxWekyyQ7wN1tPV
/BBv66uiP6Yj3vJf//FgID45nt17roj4bEi4yhWH+DwUXPnVBfFMzt5wWQjn
waXCjTVm/RS4bi9Rvhvx//5O14E1iP9p7YlL396QoSRPwG0e6zsXW66c8YkM
FrXlAYShYei7Wm/Tjfxy4RbTyEB+/d65+98b5FeztWteP/Lx7Kya3xHko8qF
qH/P8L5Id+XsVOQvj9+j3X7IXxUhQWk68jf1Um/XKPL9f4quO57qPgrbSWVE
SHbREIko8ygNishrZEeIJJUm2SKKiEi2KCGUkb21yMjKXt197ZKRvMdffd77
+b7nd77Pec7znMN1r7qqo+P697iK5GauyT4lg+NOb8dLqA/GKqLOsqgPJ49q
Ec+jPqwdCJjxQT1ZSWnqu4Z64vc2V6YG9aT2icBGQdQfz2R97fljOBdzTlXP
KBNhUCKmIwb5M81meu5cNwG6eXxs2KljkK08IcOA+qaa/uaS8jwFFL6XpEWh
vqWcImc+Rz2sOxFT+wD1MGSxkscb9TBkTpb5AOIJ19R7hVKp4CC/uYHjPRF4
Cpm3HUC9lbYeVLiLemuzkSisgHr718bpdxDqc7zYeCY/6vNieh990Wgczo60
xLFjfTe++Gb+AfX8co5+SQ7qeZerd3096j97lUbWBdT/nB16bf8kKMDWrcRy
EP1isz5xUBv94sM0mf4U/cJaL4tFEf3lyLk3TxhU6XCiRXtLPvqLUaZgscRZ
OlRVgyI76lzDbu5pZvSjIr0vkp7oX4+G7lD2YT1t7Y6/8UL/ct/8yImKfG7z
1m//in7nqd/7Uwb97q0F38MEvO+MrdyO4+iPlHo5p9Poj2JR1xJa0U9pZQ72
T9FPczVrtBbQT7UP3P/3D/23Yvxa2SrO4w4WgowO6L+HQy8eNkG/Jl4J5M04
vv796gJX9+ymQO+Ok8mjPTSgNywUryBPjoVtlExGfz9yn3XpBs4Dp6fV7KRw
Hgh+eJLXB+eBK613dhghr5x4toZ64Pmd35yyr+P8cPHHPsn6HBqkZIvPjwTi
fMe75XnEXipwM2v8CP5CA+ujKiaku3Sgz726WfaXAk219sMbDyMuS8NMjxCP
pFdvrjabUcB8Mlxl8TUNyn8tOJ94gPemcxlpH6DCkVyucYf9qJOZJmfv4L1/
agfYd16iwImAxASZavSzrsiwIksaLKTR4+ffkIAjRbr5cw3mGaQd5HOfDjtG
1RIdsS83bi18u6mMDkd9lAzZfGgQMCPSrN9Lgrh5+7+iR1BnQvaO7cJ8Pm36
xLfPlAJ3HdXOiyMP3N87hPHr0YH7Xz5THM6H8Uf3jc/gczdE27s+MqXB/tzN
TRIvSbDpdMj4vwoaaL0XWp7wRn5ZHTMV4qFCdQZr0RGc8+Nv2Yve308Dxo1p
7OGuJBi79MVw5DUdEivStaLukCBLs3vwpskEeKScPpjITQcVZvZ3RTZ0sOEo
cc2Jwv3+6wfFwmac/2qeOxwUJANBQ+4b29gEnNmcRhbB16+uJh5hZKXBGU0D
RrvDJDCP9vP81IZ17zq57TPuT5+mU46JcpLgcpfZSgHuI2IDTy4VPCTBI8lh
DxOHCSAVVjpIseH+8K5n4Yk9HQSLXNvd0ijw4Kdrd14IHSxHpAe1SEQ4NbVJ
j+vHOJQWm7w8iM/dsWNM0JuFBuSLG53fK5PA+9yfQ1PIs+DN8kZX0Ae6fT5d
GTm2/n6W07p/P9NAeheXk9A91F2vIImwVQqY1TzdM4e6/VqOKXI34izPmBU1
iDg/s6QH8uH8P8QxVBn+jwrPAhsS+uVIoKfy73gr8lLD6rTCxQ4iHL4v6sTV
NA6rVubvnTfQIVTrYZsg5v/12ktScAoFguLWLmnifp2SdUXLxIYEIive2SEw
AUcSa9o6cH/5zd3r0477y46v905TWEjQIH9/UQ2fq/dxW+CDVdxfQiuvecuS
4E/plJHWR9Rb7wsNDWskmHr2gN7SPAGKArFigTzod/6/YmyxXo0ZQ6kG6J+9
edEPCYl06FlmV7Y6SYK7fIcFC/dNgEirYEFqHvJCyp8YLToGR36FVBtPDsK9
X9yLBwpRD713Jx/NpAH3CtsXqU1kyF5VPFYygT4xXPsjCffwnfGJReKZQ1AY
7R/RhTz76db6ma+CCKKOkg/fvhuHzdUPug7dwHnGxqfxTzDOtftbDRyDxkGZ
+brhf8VUkHyd86fqwBgwlPI4PmAZAkP/1i2UPNTn7AE+Yh0Nzv1HuL0mTwb+
7Q4le0Oo8DVPjeN62Si86J1NKXAYhFqtovyX+FyTTpt8lXKck27s3D1dMA6H
PJU09yBu9eazKRuxXq0XlNj2Y71s/wUSutNoUO9bs/sh8sg09tZZvyNU6BlT
26GA5+NvnHj6CXE22H+vsgtxLnN6tbUS46unAstrjN/fKLL7LN7r+PmlH3PB
VNAwFbj2s3QU+PbnvZm7OAjZ2z/Lj2D+h5+GSO7BfWg5JK3W9CAZgusHZMPw
vp0rbVGn5cfgrI2JpTbrEEzGRV8XRnx4o5LcwxCfzf2dBmyIT2uZxywdn3tR
LV8kAPGkfhB+uPn9OLBpfXHwRfzjIhI1eRD/1MXz1fYZQyBuJdCtgvWafuYV
uZZBA4ePp31bOcjgFx4Y3ov1TfHM9BMXG4OmF81FW6cGYeJhmtS3xPWfg+0Z
mzpBAp16dUFj5MPR3TPTxsifW6uRL64hf1yedhx4hvyhDI8Wn0e+7T99VPAg
AxkEyL50mZYJcHge0H0Ccds74nJLG3HzN2HYLY24xR0qm/uEfBZcDHi8dYQK
Uf+UYrRYSRB1fQurNPK/c+ARjWSNvM0KzN6D/J/UWxuLxX7Z20j7sgH7RTow
//xR7JejtjOvieu/n9orE9KO/XWlVdDpKvaXcsPcBVF8bsXOg/lnsL7iBhuM
ArG+Tm30xQbs3w05yc+OYP92TSWIS56kQN32jO2t2O/BqTmuMtjvCS53C9qw
368eTXIQRt+SjozWszyz/n7zzqF41AeBswYfd6OeaDCFS9egnlg/b3q3EXUs
svrejVjkzcOtJ0M6iej3iTx6Bb3j8LuBX+kPKx2iZD3+pmL+VWm2toWoV9bL
ujZfUN+or69VioSSoPzmD48i1Lfl5WCzDtTDhskXG4JRDw0rJhY/biFBdsaL
TXz43MifOie1UT/rbmw6U4rP3ZTZ1P4CX1+c+8DVKECGGprit9ejiP+TmQtf
UZ9/BLvmvMR6lQnXDzqiPneFVxT+QT13ehj47B/qeU9k22An6rnt5s1Rx1D/
70WUcKui/od3/axWQv3fYTH2vh39IlXuw9ov5N1bXWWCLfrFYt9OVhL6yx5P
znvf0F9SRz9z3kN/cTEZCzmLfsSl/DmIFXG+wl3pcQ518hVzVcsM+ukI80ei
EvqX61L5S3f0r+x7ZWHb0O/E4kKPNXrTgLPSzn+hhwTLES3LC+iPbOyvfdzQ
H+/Mndoijv6YIRRbLYHP/Vuh/nwB/dS1J2vidDYJ9iUW80Sj/8bsLdNxMl7/
vJyIznD039NDii7SWTSwuGtx8RD6td7ajoZVOSp0tVfmDSjjfHDbiz0R8zka
k7TKfZ4CjPPjG4pxHlhtTDTowXlAh7WQ4IHzwA1y0Fw0zg9r0lWLMzg/nGNk
3N2F8wNfR2/Tyct0qJHna8rCuShn+9THVA4K9G/ILzuNc7vG6XYmB9wbRJ7e
pCVtoQDh2LaqDyM0WPT4l16G88+flyeb9AdwD715wa+5G/dTt/Te9Z8HtO1r
9AIqBTzv8d95VUaDDHNO7TofOqz9zH6ezkeFyDylAAMCDbYasP9+cxVx1S64
NfadAg2RvPJDDsjXjaFur4EO+zLXQj5tpYC+Vdjvm5jnL06PmjjMM+4A6bAl
5nnryN/qVAL6haEG6fZ/VKjr1LrXoEeEJ7xczZvxdabnDKUmZlQ4ZL6nffQc
ES7Izmok4POGzJU0udXp8DFP03YHCwX65vyqGf5DXNxyX6ifxL0n/nfPW1nc
A/N2CWks00C2s89l3gl1hZUjz6qQAtPNJjWtOJf3EL6J5uJcc9wjdQQWyNDu
OHry0wQdmHUqMvtsqTDimhsqYU2E8zMVXDlEOkyU0q766lHhug8pK0KbCB2l
jmN3ziM/qrSyonmJMPM+8bqE+Di4/VTk7cc5OXVzhrE27hvdxvcCL+8dh/no
+7OCuI/Mr2VfeqhEhTdlRm+UpIhQzDWw0aQX56pTZRaKhaj7sfc6TjYTgYnT
i2PpFd7rrLIk5x8aiHn3H9C8QwYfFt6Ki2Ooh2e7efrcqXBeeDTsBO5/V1Mq
T4ThvlBp2RUZP00BJ8JNz+bPBOiQoPA/fEeDXqYoqPGnQ9FkRNmgOBUOMgmw
HJyng1R5Y0HaIgXcdr4hlOP++vtnVa3ICOremVueW32p0LfTc/Qi+sADzRTL
fdi/loTqoYbfNGiKZ68JvUWGucoIxdUfOOe/sm8VyqICc1Hu9qRKIqxaVt85
TMd5+lmkktlu3DsWrnve3EqEr6dO0IKN6HCg9XX9DO4h5Y+eOP5lHwem7g/D
8gbrf2ea0bFCwb2e477N6soYmJoyHGZF3O5wTD7YrEyFoOOZWj8RtwQNpcJD
WJcukjffcwMqmHeWib06RYSwxy3sv73oQPkjk7QL+17XyYaVYYYMXwdUbiX/
Rh1WtFizxTkeTfAc1BDgpOlSUYQpHYIIAhFMm4hg9zXxe74g1qvXspaIOnKn
rGRb6QgBoIbIv3V+DKIX+Tx5KihwXn3KuMNqCLb++R3Ekd4H2f9dqflZSwFp
OYe8XM8hSNY06FYq6QO610LXB106kNauPL3RQYCf5XE+OcQxGB+6fjUN++JO
6HYigyMRcvTXFMedxsFvbNVuiWkSDIV2bJiJoMBww+EuTl0CvDgnG15ru/6+
zd1+aoeIMBf+5Lq/+jj8O+AR54z9lhPKLKr6kgB36b78AdVj8Dt8i+L2lzSQ
2H6XgQf94Qf/V8d4xI+Xzf+QIZ7nz5H80pKO+2bYA/6deD7SS2zmB8aP28He
nYXxa6dDr49ifAldFmBmngRZRfelt5jPpSdeYR90CPC90HdTKOavln0kKtqB
CLdpLIcCMf8/meTD7XjfzSP6pBG8L4vIUx8O0hhwLa+OvUV8srds9Iy+NwTM
YmvDd4r7wMYo0EwH8fxqrRtKtR4CI4GTXp8RT/JbF+tWxN+gv7v2NOIvbE3n
L5wbA3s/msBrrNevxsVxd6xX/f6475zbx8FdW8soC+v76UzerAjWd6fkrQ3k
agLEJ0r3fVz//pSbn9OVkA9T/xnFnEA+aGWqRWoif54xfGczRf5UJ692n0X+
vJtaMl/Bvb5k9nn0WcRL7J5dmJo0EX5nN3kJIj+3zjTcj0B+Xsjyt0lGfvZe
P3w2Bfls9fahgM0SAcYnQx0tN45DekOj8VHkf3Lez93bkP+NdcXyIsh/fZOH
pvPYL7fDOQetsF+Syc4Xf2G/EHqe+4hjf3m1XKaxLtDgSGsj+xj21wu9xqTd
2I+TF79cafehgtZ0Vexm7MfHL7h378b+tU+7Vj2B/ct63vHA1m4CjB7UJplj
vx/2lT3Rjv1uPhCgIymBdd/QIBmD+uB7c0+gGepDS0Gp/E3Uh77EzcPmqCfv
lfzFdlyjwoxhYlci6snLW/4kJsxH/lIYXwvmk60jSiTeJoPFnTGiDepV2IUt
+rPvqaBuXxUy/ZUIZ/ff5uPCPpUnmd76ivqmPcU5/xj79Fb50YI61MN22Ya1
bhEi/JvzCdyEevhl3Ox4JOqnTqLEKgMfET7xxV33Q/1cNaunF2FdMjvATgP1
tldXxvYw6u3+f30uVajPRw9cKtxxgQr3Up0776I+j1asTP1FPb/tcnB7Aup5
6oNcw+XfZDiW/FXXFfW/xVTDYRz131GAX0wA9f/ruPSUHPrF7AzXMxn0i1c5
jDrO6BfuGmc43dBfNHs6tCXQX1wTFaYuoL8c8tqWxY9+1FhgnM2LfpSw60pw
KPpRe/vvsVh8PfMw5Vcp+pcl+2q9kD4RQE9e6iX2RczTnrJg9Lu5o/NZ29Dv
vqe6MeSjP0Y9kPIoxf5rfzrPv4WXAgHJA++80U/ff3edfo7PVzWtJCagn15x
qXzVhf6rPXRdowD91+JPyUZr9F83B7aCJfRr01nW74bo1zIa7fQlCgV+GbmH
h6K/n595kfUV/T0xStU4Gv29+Y8x5S7OA0PfFFeNcB64m+FndR7ngZ1jB2MF
MU+xtwVfyzBPgw3jJkTMM8L1h3EHvr5ZR6XoFr4+vPHv9vaNFJg6t0O71JUO
J6f2PBfH12MfyRvcZKcAT/5sQcUQDTaml47evI76fbyJcnqYAo0lu3n68V77
mhR+3sZ7cUh3febGe72wt6kMfkWD4YH+Z99wLlq8nP/F/SAVjlTUtT0l0uDV
as03BTw/ycIYvtyOcfq6d47h/HqmTy/HXgv34PTM3MZtFFgwLWa8foUOj6VL
/AexXi9crHltNlAgUDkuaAnrUnv0lcuuczj/3z0x/E6XCJKGd6rvIa+sLdSL
vuhTQcr9h5D2CSK8Trs1Hn+RDoxzvTGiGP9e55dreXwUeK6sL7N7/XPH0rO6
W1E3fii4JX6YIwMcfB4ulEcDx9Ny2Uw4j2U0vDFhk8b9zE+POoLnkx9y14Th
eeFwxgtps2TY8ztsp9g4HU55X9kwd5kKh+VFNza7EoE290ohDfPJ0Fu6X4c8
n2zaNU9Ant/cZn/nLvaLHIt6WbgwEXa1CJyY2j0Ohyu+lhWZIV+HjMr2cKMe
PTNQ3CuCuldNGtyEfWF4+1B5rQMVyubKBRMv4v+nckPxCuqD/JU3ptv+UMBX
M1o8/zsBmronXq520kC6poZr8y2sv7E+zx86BfSMY1olsX95psLMT2L/7mJa
tRneRYRNw4+qu1Gvcs7u37TzDRUEKt7qLFcRwWTBlJb8kg4hwV+6/LbQ4USS
giE5hgy3mxLE2VAfCuN3tGnjfqnjnLKHsRX1KqebGUi4z/atJqbqUKHq4i3D
65o4D6R4XFPGum/6svTDGOu+qk7PftBBgfLvK2Q66lV/0jVG1kkKRH3XibRv
Qj9ZqN8hgLjxa/0DG0PUgarDDLk6OC/lvbmffJYO/u4zYa4kAhgOt4o2LI2B
xwERAynUZzq9UkrtDwEGRoak/DaMw5FAxdUg1Pmzg92ql1So8Lv0EvN/+4jA
m+rwRADzzJ1e6M7SpUIw0dWzFRAHV/3ERNzTTCGQyIg6w7jJRvfhPBl4rmSo
iqLv3PMKKCunUWC39IRQXgMB8spuHk/Eeu1yXeOp4CLCG+t3tC/C46CRqFYW
pU+H7LsD8SXjBCh+mSae+3sMPgRf8r6M/piRVsWlencIXjVbPowo6oPu/0bq
Kspwzv17e3zJZAhG7uyydk3qA9kInQI51E+WoMCgM+grRZzXzrGIjUOa6Kq1
KOrL7WIJ88n13xccCJ25UDUGYbyfv6Shv/tsusH97CgdlPXsyrOEKKA8sf1i
MfrskRCzpv5hAngd1P1yDn12o+2jcBrqQPmb5kP6Tqjv9sfnmZzHwchXKVEM
55N3tUKX02MoECoXtiXWkABLD71nmF3X97vc0HI8z9aoOW+H59XLdjMkYXzb
rNvX3DB+UtvZL3OzY+DLfHWpDfMRftLNEYT5PLZxk7mI+eTpTNcqY/4vY5jy
LHA+SYsKnKnB/KUcTPX58b6TGekHhnmIkJJ761ymKPrsW/2UOcTHWPQ7P6/Z
EEg9v/nf3uQ+2C67lKKIeAr62w+I3xkChtxNT9sL++DER1nhbMS/1qxyaucE
Ab6wJopvWhiD2CcBY+u/t/38SLRKH+tlvlJCu4z1usKSbM2H9f1gL/fpL9a3
3iLFgbWRAH8t5pu/Ih8W6omj6/ullcjl8mPIh6tHbN5vQf5Qe9InqMgfiR17
GqW0iDBEVemPQL7x/N4rK4V8swrKKVvZSwQ/c673GsjP7S1JnlnIT+ZjP6RG
kJ+/Az9sD0Y+G0VyKf8jEkD6fpeoA/LZNqJScwvy/7/d2fqpyH/euXldZtQ3
W1WmjwvYL4kljfP12M9/kh6f3IT90pf/TYsd++vKidhhR+yv9H2jKs3YXyTt
NmklzLOn9k32OPaj2fODLz5jP+6QTV/lwv698969jhH7t0BxYvjNN9Qba+vP
WdjvTikinzSx3zucb7NFYb873X4w1oz6QFb6IeiI+lAw7fL0XDURZite5OxH
PeliGznDgnry6JvWthDUk5Km0E6ZLhp8PLaTYwX9y9PJPOAd5uvb4Wpqj3rl
9p+Jgxnq1XYPg8tsnQTgk54q24b6xvvkYa4P6ptE9b/W46hvBwiVwt+wXncq
FTljUQ9b/ugqPkQ9vE9z57uA+mkrZekgjvp59rLIiSeonycfpZrEIW7jiplh
zKj/Icuj6hrHifDNKophL+ozR2ztUj7qc9KKXY0H6rN15Kvyd6jn/1jeNiZg
fes8f08RUc/lJTSrdFD/WVujMmYD6MDQU/yxVmr9fU6vVxaRDyfFTgyM4Hlv
cTuZVfSL51E7tn5Gf0m7pfZkC/pLN6F7zBn9xZt8bcwd84k/Sq7bdBb18GWM
wwv0oz3JSXbM+HqAxbLlONaXpB0aY4H1Zb3E9f0Y+h093ShkEv0OzM6lv0S/
K/7i9R8XxqdZFWSew/jMxe9EfNEfdZp3pDpg3dk8rTq1se5Rc792aGHdw4xY
6EXovz62mpGV6L/G3hWq+9B/Oz/6j+WgX4cdbaOE4Pl83s9mpujXTClxoxT0
9zdSwgMX0d8TTDssWNHfV+1u8YZhv7+63JR0EOcB1Xu7hstwHvC19AlaQ93I
bU7Mc1h/XZj9URjODzZ+Re6sb2nAoNbX7Iy+6eFul/8a52K2r1VxjN9pINLj
qf8J/Ugot03pF86nFXOS0nHYp/fT+Y+r6aAPfJ1N6FKiwJMq388BWTS45Stx
fivmf3XnocwbclQozrsgWorn9rhwDrKdxn29KvLdPg0KxOQWdju0ob5RePKt
yFS4+viRaggPCb5OFwhurqNBdM+K1Yb7OP9qPCn02UiFzxEyW19/ocN3E5cb
bZw02CL+Tsn0OAl6X5F/GmA/qtZFy/45hb49PGhbfYgCspaX1L/hvvMn2rQ8
Ff99Yp9hFqpGAY0s2/+4G+jQ0vRAb1qVBj9Dpl0yfUjAfWWWbR6fm3CBrvUe
95Kz9p/IkuxUUNtZXzr+lQ4KGvtiw9locDZh7usVFRKEFiWkpwTR4eJ8yZPQ
PiLUJKic3NUyDix7kwUzNmM/F6ftl7lAB8LQmeLMOAqwtIj1P8qmQ1tf6ZGI
QBIs3P8WOmI7AbNaCYcGEIdk6adL2gQquDTn5rlvISGfhvYdxOeO9ui/VNiE
dfiaIRgJJLj/JOjpYDvep93/jskBMhw+lmIk+XsCgl9x0w7zYT2I/loXrOlw
Xs8d1B9TIJgwcUU0B//bt81cLJgEPX7qIUL2ExBuXD5MrqdDzcpg8B81GgiV
FT1j8iOBiv2OKyuIlzyxqOgJ/ntTPeGzNuLGZCnHyM44CW0CtPG5BAq86uf2
0rJAPy34W22J9XU4YUjag/X9QEtsK8b6pvwyYolqpEMEDyv/iDwNVk00mMyv
kyD+pI5KWzLucVFaadNnSTC972G5tMIEjBjb9oluo8MjJbddmzD/Ea6nN0fD
KKAgyVjl0kwHv6Lv7GR+MpgSRpLIIxPguCvZTw1f59ngtVGNhQYXB1mELZVJ
ILXYEkpoX38fu9dFvWGcc4L+lqiykOByscrLnDTkG9suaLAkQeIVLeoZjQmo
vD3H9gh188dsGHcP+l72XieqbiwFnHVZeWp8UYfZskZzGoiQJvXZclfZOHxf
WvBVD6JCqwv3xtl3o1D4SvBZhMUgkOKdtPPf0aFKK3TyXD7O11Xx524I4twV
zBw3VoT6uOVr8Au5MVC89+vlCtMQPDxoIul0gw4HXRLbukKIIBOraSf1AH2Z
Hu+RhPp1bGHJ+GE7EWYUrFXONY5D9e3JiQAaFewfZCa8KB8DhZ3e9RK1QzA6
pzljVoT82Xn6SWASDVwbysOoDGTQmFtyOoTP9XRffj+8fwzOZZcwZDAMwVLg
Oy+ZXDqwd7YldoeR4ND5jTkKThNQc1Fjemr98wSMjfprflKhY4KDv24zCch3
RjS5UTf5d5qdavcmQDKprHYtaQzsmrVbFvF8jturFm88b5x/tsUFz2+2qRHk
xfjmbNOnnDG+KBtXTqfjBEjkOxx3xXx+V4nqu8qOgarO8oId4xCEWJz4Zof5
G6sn+x/F/Gsj/mlFY/5RFQFsenjfM2r+jJx43yOPVFou1gzB2a2Pe4oRnxcN
/W9+Iz7PH5ipFCA+Hpsu1ugjni0JFZ6XEM872sftPgaNg4P21ZuC6JfFllPi
uw+MgabAkRdlzENwVOGCUybWi2WP0ko01qt91iThi+D658Y9TmfF+t4WoF91
wPpGMXcnt5sPgoX7H49e5ENy50Ol7Y3oT3fqLQORD7lOz5XLkD93b01xNCF/
2NRvWLIgfzyfnNKKRr7dU9GmmiDf7gidpNLVJyAo8mPuAPKzyWv39QjkZ3Vp
KcNT5Cfb4wzrE8jnabG2lUVmGky+1vnOjHyW0JkXC8DXlfwLrU0EyHDjcH/S
qdEJmHIoezOD/U57t3GfMPZL0OoDZulHFMgSN+0pwf7602irF4D99fVHePmn
gxPw77He7hDsx4LFgp0SB2lwI2zpTAH2Y3Wt6RNZ7N/GOjpdBfvXsi/SZgX7
92X9oWEe7Pc8eeguwH5XeGV8kGJOgL1GdQl78Vy7i2C+D+pD+9nXKv9UKSBX
WVsxh3qSzHfwXjHqyeugxTM5viS4vamnTRn1h1+vIO8x6s/Sd+WQe6g/d2NL
hJwwf8/LBFUDzL/QxqtgAfMPd3l6oBHx6WNOkyTLkWHHTIZRw68J0FPr1d+N
eshUvVRwE/Uw+t8FexLq4dOsNB4C8vA+EGmMqJ/zsTMOgqifv2Z5NDJQb8Nf
xYevoN5ub/sUqnlhAnhVFsm3UJ+ZFDQV1FGfw5rhOA31OS7iDYSgnidK96gK
o54/04WTTc3j8KKiYuAHPve/XT0v21D/G9ry+BpR/xmt4pQl6mmg9tNALQ39
Ivtmp/nQBioMcznJC6G/5Az3ab5Ff3H/T1H8LPqLumvd5hTEy4x7vuYd/qto
+JzYirr6OTaCzwf9q//4n91E9K+1GXL7XfSv3bullJLQ736pb/Pj4aKBv7Gb
71v0u/41DspQLQ3mjZ7bC6I/msoEHmtEf1TiK39/FXEQYHJKE0I/XTZrmzmA
ftpYXT4VivV9SMgeE8C6heQEaV3D+iZ/63tujH7dvVJlvRP9eivPnkOl6Nc5
459NmtDfhaU9NffprH+u2+rmJ+jv2/oFnDs7aOBtJPDfD5wHauIbGlVmKHD2
mkWKIs4PqdXqH81wfmjzdxO3x/lBOuScg+pPGli7FvJzu+N9053bAroosHRa
h8e1iAaGsl8IeX6oQ10GXwOFqTByPmQP9zgNXhlzWAziebr8YEBTLwWIklJp
Zbfp4HromdZWFZxDOVpUxv6Q4b/wRT0WMg0aL/WlZrvRIS7SdFtrK+49xxQd
nuD8ekLQPGgYz1Mn/07tXCHDy21HR37N0MHrr6RmPNapUkb6UACZABdH9zx0
8qbD60FP90RlOvy0uhvWOYnxw/J0rpoirzqrDiwdx/3VI0IlaA8F3t7cPTeD
c+y26pR0A23kBZORVpkEBSJOexzZifWIPfAkjnf959vHXG6XT5Ph2KL9jA0d
80u6OXpWmgrOTPoyArgnxR/N3ZzjhHOGrZ3SqiYd1JX05ri4KeC3N3drEM7/
QvINu76fpELiPEGGU50IWQ/SxCSQNzaG3qTWVgJE1F52vPBzDD7Gb38eg3uQ
o3rhlnQyBRhNvyfE1hDgxs1Hcte76LBFVGRLxEcq7BANN+n/SYTNp+TEy/rp
sNf8DM07kQrNQPA9/pYISpsja1en6ODM7xtez0cF9lLmHOISAS715gcvYJ4p
c4MPnhgTQWuPdOLz8+Nw3uUvR+IAziFtA6cjYqlwZ5uS+ZVMIgzm8Gw+lUmH
Yv3QIGcm9M8j30iawWQIi7Mn0EdwDp+9d/L1vfWfe94oVfUlwvchaVb39zS4
Ghmw87I/HRaVm6f8xKjgniGU/2Zi/XNyLnemXKDC5a1b3HbbEOHv4J6XDhj/
v9+XLdMZ6WDifItD5QEZ9jj8cvw2sP55szGN2s9wrzngGvXhJREE5rfVs1xc
//saSY/RY0SwsPm1oKo7DnUSK69Hp3GP3ljN3MlJhQ3v9NI55whQz9pzQQXj
1Ip6su+Mp8LCsbt+3VlEeDFjlLy/mw56o9Udr+qoEB4lGG07TIQpkS9OHxdw
3lb6Lpw+SgGBjV76LMUE4Ili5bM7QYdDeZdq/1UR4E64gkdj9xj8iD8X64X7
19aHb77NK1DBQkPsXYsEEST9uo3O4T7OUue2R2iIAKSn5cvNM2Nwsc6IMyiV
Anepj0fLutCHJPtcdpzsAzJzxJd3muu/Z6SFs6USYIfX9K+yijHosq5eGcV+
aPxRvxzpgfXebh0X6jEOhoK8Ho0udNAQ+7hf0o4IKrLz5x9cHIdU6peRv8fo
UPr4Hc/JQgJUFZiEe7SMQbKssteWMQoMitu99RMbhv0eLv4RUv2Q8+iqmivG
eXsQ5J/aEmF1cvXrXvtx2CDoKkFgmoQ5PePXd55QoF1NjrNelwDm5TpbelDf
nW5y3syQIcJ9JfEsDqVxeCz31PRMGg0mfsUcqQihg7btuRVD3L81RlWvTeH5
Ka3pzzz7iXAtRCjLBc9n+17/N4Xxmxyz4pUw/pkNNxovY3yL9xeSAzGfBkbx
B2uYD7v24teHmI+FZ3NSD9ZDo1jw3iXRYYhbkHrUvqsfpht67//E+yZUtlf+
eE+AXEvLcD68r/ucOHcuxmk0IvQWXSCC0cDieWnEpySwwGYJ8Tya+dLgH+K5
eNksjox4vt/nt/8r4q/H2DLugfiHt1N+CVaOQYtHFa0c61V+rpuvs3sQ/iYI
X+jDepmbT0yvv8/g/szjztxBAtzTqF2+gvVVVjhTdh35oOpuMqCkSIXe6wPL
OyWJIOvK+04H+ZMzFuwahfwJUDvi4Yj8efKgTbsd+eZzVprrAt4voaua+W0R
AdTOm3spIz9llrY2OiA/Ba2tdNmRnxLJbYEHkM9jrNL8jshnlzuHvu5/QwTx
8l9fe5D/ozMuPNu4qBBAYKc7Iv9XBdmlRLBfGjKYP+trE8GkYGohHvvla/Py
sV6ME5FDLmHE/uJayTt1AfvL8pbkRwvsx5uD/C4/sR+/Jh40jsR+5N4s8bgQ
+3drTXWTNfbvwpDhznZrIjR8azmUhP3OyUcUMcd+N9bttVXDfqccsGKfQH1w
/iFlTEF9eKgmx/QU9cGbV5BiiPFjnIZuS6Oe2LPwJJMw/gfGBdmn6/1eEnK+
HfVnTnc2vQH1x/9d1c5h1Csu6b/ykqhXJ3pkElVQr3o9YpM2TK//nqLT1w/1
LTzwlN0T1Le3eYdW61EP2W+kDKmhHppt2qs8mUuEjs0Pzl1C/ZRj/SLUjvoZ
YaSbcpBAhF0KvBVhqLePd9ru+Il6ez8sgjCJehueEx2gsv77RGEbdfU2AgRu
dXSsQX2WiHo/HY56PqcjIBCJei5es3e8RA31/Bzb0PrnVeUPrKpyAtZBUsvf
BPV/3NblmzP6xe2Sz983o1/8+hY5VsNNBF/V7c7n0F+UC+eimNBfMo1vkW6i
vyQ5fJMQs0QcjjInaaIf5fPZvPNAP7J/wb5dC/1r0MBCiQN5JGUX8PkL+tf1
mYDzR9DvNpgL3HqLfhd6+sr27VNkYM5TZaKhPyZNtJ4ZQH88eGHcuw/90VOh
L7oK/fRnQqXPN/TTEwwbLwwvk+FikpFID4kGu37eelWB/aHmczqDt40CvVub
20no15tKF1UZ8fwX4R/ZCejX7Tqy5zXR30/+cDNuRn/X0SbP+6K/s1umj6nj
PFDwxpFWg/NAbp22+RecBwTu/Il2xvlhdYqfZ+0q+kzRTS0NnB/iJSYVB7Jp
ILzjAJcSzmsR9e321H1U4NtwM9HqE85nZU+eF96jg0WR4J6/axTw0c5nVFfC
PTGIW03pHB3ybjxgCbSgQCBDzLjbJA3Gnnss5rji3H0nwPj1RwokdhCTg7Ae
lH+1y5dxDsobOSPHdgbnn9iO5d84jzXabWSq2UwD59TeiYSjJFgLJBDOhuL8
+sLl9xEFOlzyYY38OUCGLdE21g6tdLh+NebI1mkqfL82S3EQIsHHukOK0QY4
l75mYfPDeY/DbvPtXoX1zytr+qiKzyOxmhpY49xVMTxfZqtMAU3Ppynncf6M
rYhw3sdBg536pnQFTRJwVPmotuD9rxZqBI4r0qGzZO/j/HEyXPpWonEE5/xp
XdMXBxVpEO4t/OryTRLI1PKUHce9bOP2pcaTj0jg8WVyNQb3Pqbsp9GH/yE+
bFr3mvMoIBxnxLXHgwDfu6TO2YThfTkucJyZJ8Lo71aPB+Pj8EB3MdO9A3mz
Juyd308Ft1wFr5trRNh/UIAv5dv6nMd0We0XFQyPT/coS5Bg/PSBX0H5iKcE
6WdfPAn2/XZhA48JMNhJKA5fwv2Xpv6cDee2R/8NXHFLJMB+HZ3yecTNS/hL
T5M0GXjjnq28m5yAvzPbvacr6PA+5OlkzmUabOy+WlBeRYIV7wTmbkmcr6R2
3l01w73/SvZfldsUIA86ypCQD1eOlYf4IR/sx9W9ZJAP/bxmX67sQX3omP8y
aUKH7db7cr+5USDlTe2jLVW4V9YLa8lfpEFL5IN9vYUk6DyU0XwT8S8Q5Z9I
2koGr7O6rnKDE1B92L0zZxnrLsIbEoa86ciUvxj6lABTjt/LeXDvaPgaWXLZ
nwR9ge9amG0moIcutqsK78W+43RhDZ0KJtu/HP9PgASR3aIyg4jnH0e7mh+9
VChJEREuWiFCeFN/yyH0xYhaeo0I6o6Xgz9JsWccLOmM/41gvT5Uqwo6Z1Ng
JuFGmKUbAXgZUsRCM5A/Oz1zEpwRlwDxU7d0JsB90kp+9APOGY1G/KeUx2BB
1mfMfMsQHHyow/UPdUTvuv6dZX8CnEzkkEtOG4OvgeQH/JFUSG1dNDRsH4Ur
+SK34gIHofBz8YIT9u2dl5M2jp5ESGn43Hz33jj0SZ4zEcF9gL7n7jPGGCJM
57XGlT0Zhw8svcL+6EMfPpjMzJ8dA6EqR+MCuSFgvm2lt/69P1971HwtYgjw
6eO+2GfvxiDLusBEgkoFv3M24dwfxkD0R0qKecUQXLx2hnX9cw6Dr6df5dxD
BvPlTL+2KdzjNkjoDZTT4YDxykPCddw33b4TT34iwdHhtuMK6TRgCgkWdkL8
OCvC5X8fpsKNFCH3Djx/Tu117O4bqB/pEfLJeN44VsPZBOOf1gxs8ML4AXqp
fnLTE3A+9cRdKoUKs4yq84ElY1B7xOpNQvkQiBlepvxTo8NxDst9k9EE6Lop
H6uM+as2HF3+gPc9z+EZ5meA89OFN6evHhgCyl+bORbER84qTismmggtVl1x
FohPxtRrc1/EU/1aa+F3xPPztobmXsQzssE7a+QJFeLvdJU0tI3CImu/T1/A
IPDlqd7gP0KHVg25lksBBFCeYpFbxXpl5X7aIlBKhVbBOwWdWN+5zrpeAc4h
EO/PrbyGfBA2izeVQz60yEuf4kc+/P2PXZ6C/InrjeCQRv54XyrRYkH++NNa
DugjXjbh3/geId/ySrxIT5Fv8hpS7MSO9fdDF7+LRX4edbX7boX8VHqw/VQh
8nkv00It4yQVvug/iMhGPq/AqNnSGzr8Xc23W/Uj4Zz4oSXDegJE250X0rBf
ulhqYlqwX07203NHsV8aLWLlwrG/rtMWDm/iJUNaqrZrOPaXFs8nZwHsx7sD
1xSm7GlgZvVl1Bf7sZl5dfEF9m+esVnjIPbvTXdlkYfYv3/oNSul2O8t1abh
UeufG90uz3Ed+50j4nfnK9SHxbQab87zdDhlkfzIF/XBMpQ3lYB60nVVc2US
9cRno8wyTzXu6ZKmZgN4rwoDsv951J+p4wkrRqg/M2G0p3GoV1wsUWGN3yjA
Lya2kx/1quuahFkS6lvB1CeVUy+QT6cc2JJR3749F5nNWv970gpTq6V5Kgxw
KYaPiJOAMDb72RHxzCZ+DptF/RwdnWpsRv0czlOcOoF6+1vDt3hojgj5L7s8
pFFv7Y49LpHFeh2cpAVvyadAZDOnuS/qsyiRWdga9byT0Le9CPU8dQd5dR71
fINSldAx1P9W++zH0wo0ENS9YMWL+r+cu+vyMvoF5+E07w70iwNflFZd0C+S
tj6uP4v4f0hXvX0F/eW5/1blMPSXgnjXBWf0o5DQMl099COB2bV9QuhH3R0R
zI7oX5M70zZFoX/lnWVgFVGkQN6yg+pVxM0whLyvfYoK1upKqVvQ7zhjoGT9
e4V5BdhWdNEfN11ZEt03SIabcs0idPRTok4xF+MWGgx2RcvOo5+G1z1ufY/+
Gxqw67c5Pp9jziyl9jQFnnJPvQf066PbuP9Vol9HO96eoCOPwv/b+H0L+vt1
hrdaJ9Hf/7twL/oz+jvrn+0tYciHixrzT9ORDyUfd8WXIB/CeKIvbsyhQWXy
0427EA9q12BnBs4PxRIU8p1xOqyVXnmU4kyFUE6Na2XOuG/q/Hp7ZhL3Xy3e
OyLiVKC2vN9GZieC26+Y2rUUnKssWKl1UnQwojy/+7uIDLqHvvDL4Xm3ryWp
E3jeOrV8fnIjEXp2pg8pYPztR9pobpep8HxF95awKxEc2QZiTO3pMJwqVflM
iw4D/yLMn/FTQI7xq3PudcR/LWB4ShXr86ll5P4aGfRya8tE52jAmH7NaRb3
lZ92Wm2xNRRYZUgY1sQ5SV/0hq4C6mvdZmXvVywUKO6gFbzB+VDbUuTxJpwP
W4WA5aU4BeQ9Szeq9NFgMpTJTdSDDkeyk0e2EShgra94urqdBiIx9Tc1cY57
GXlfdGCWAoX1nsnXM2lw+OODD4rBdFBaddrJg/vK1WmHTwe+0yCfNHSqBHXO
kd73Km+aAqXs5z+OoB8bL+cyXT9Oh2NnDteZSVOA4S2xtdqKDgxjLpczcQ8L
eeSQzShGAc+mtuUknP+LOaobPnhR4XGc8Y7f/kS4Z0xj4sZ5+PnA9uu2e6iQ
ltD8uoOXCKLNYkejEf8z29L8n6MedD/QyywuRT7zlsqO4PmNixO8vySpUE07
pZu1mQhPy2rPWSD+ly3+FTm6UKHrsOzZGhcizBgMb1WxoUMAt6XjBVkisIY3
X3qsPA6NV9r/hp6kw0VW6bGDDbgX84Ty6/aPgfg20YUKxkkImZiq1oijgJ2a
C3WDMQGiVv/apuP5pdLNh1Pw/MxvJ4EsPG/+7ZdaAMb/+lzYMUuOCAxMRc5v
Do8Df3rZTUPMR2Ugr/415vPEbzqO/zIRhLJTYusw/8v3OTTKd1Kh8WG2dN4W
Ili/3JR9C+9bL5CTbbOXDr23QwMqyshwwyru3TAN9Va9o+TNXtxfjI8LBW8j
wgiz+/R5xNOc79uuYG8qzASfkDgfRAQ1a/WUSMRfYHnDtRLEP5/LVuUU4s9t
wvxjEfeFgokG0Y9YL5Z4kceFuymQoS3Vp9NBgw7uyYubkA/fwlOvcyAfHjtc
Op57FvV0o45kN+oA4VLWUcVDFNjuaHYsH/epqw6u/2pwn9pwpac94S0R/L7W
Mp4fosNbUvfO2TAqnLDIcuSNxTpGm7DLOCBvWoobNugQsfMfmRbrj4PTltvZ
Cus/Z169fCK+kwAxKbcZw8hj0PDv5t6s9Z9LHyeb1iP+DsIxkh8Q/wzzKy5O
mId8jrsQ5ycC6Dy+3vRyaAy8gu7xFyL+Xc1mroEHiBDFzFx26cg4MIdKNat1
47z/LqSHPj4EJ3szvNP/9oF/HQeT4isKLF/m4BuYHYSeK77Ln837oMzwJlfu
IcQ5XTlPAPU33jx5Mi9mDBh+J+36m0lBX/4wUjczCNK5h1g24flptadZNzB+
rmU/B9vPIXCCaY8Lq31gYBVS+MJm/f0Gt/n5MZ+yLPYydsxn0t+mxQfzvxlg
6O6F+UeSXJuYhsfgopMX23u872NrdV0/vO80qfeHLd53LyHwlBDiUysdNiOD
+Nw7fp9RBvHRrDjlqo14zqTHCt5CPKNfPDDlOzsOOxU+Ddsh/t4M+/jzEf9K
KfqOymdEuL1q6JiJ9Uo9I7CZKYkKUalPheaxXt7GW272Y31Jj3OEGzGvo55F
7ydR59//5/tGCPlwMDzURRj5cMMrhsEQ+cB44s2G3djvhpd2by9G/tjm7F11
Q/7ousW62yPf7t7OuLX+d8bGq0afHyPfAlxvtdgjP/fISggcR346G4X2MiA/
235FdnUhn+V2eTfSkM9jDxkchpDPlWqs31yR/+P/TEtTkf+nc060bC0nY1++
8mjGfjnyzObAXewXVeOpQVPsFw/VwriT6/1eb9FOwf4SKM4Zc8P+ks1k6nNB
/Nnr1bjVsB/3vS5zPo392C81XV+O/aseOflocyPOV+fsBDYMjEHd/V2dTYi/
099j71ZiKTDF9ja14D8CeB0fjr+O58XlTjxurCfgvh7BT+0bA+G77bfOYfxj
JLXyb6gn/aSmSzTUEyWJT3IO6/3uYfR6J+Zzmvk6izPqz3LOO8NuzF9t5ImE
MuavI84SvYZ6VaMgLZqE990n99vDFPXN/lykpQ3qm3Dl7Mh2PO/0y+2iCOqh
4CUuG0/Uw17rLyIxiCdh1qVjCfVzWwu3o14AEWYTH/+jI/6pDt8cYhD/iaRr
OypFKfBZ8H3sO6xX0W1d9gCsF/GIjGES6rPNCMcfa9RzA9ejxzJRz+v+EQRc
UM9fvhdvTUH979WlvJNE/Y/i8ohpVqCCgUbfPTr6RZWAtLss8uFf+sMnz5AP
ELa1nwP95Sxbyo0D6C+DcU+vWqK/vK6LGu1FP5oY9gtexnz2yp65ZY1+tJnn
dx43+tfbF5wG2uhfjst7N9PRvywrhcJmZmlgJ7rlCtNlOjw0OGQziH4nNuv+
vB/9cXcg8ccQ+uPW/h+Gh9EfPfiVHPegn4JIfd0r9FM/egC5H/303qOscnXE
n2K4c1gG/ZfrU7hME/LhVUu9yi706+R39nlSElQgdd3WOMGBc/rjiInfiP+J
o+/+MEvToUnEpF6vmAwpBcthJnje3fySy4AYFeyfLzRH4jywtXx801WML58q
GD+G8wOv9lIZN9aXadtSkscUHTJJg8m2glSIsE4Re/uPADLSX6w/juGe7r0h
+LgbFTw4r2cOXiXCE5E4P6sMnEffy/fFI87GcaLe7w9RwXzK38gfzwv5uxK3
ulPB+K9vNlwngtXHb2ymGD/4t/9nqe1U6D74ZvX9GgEOGwYQRRD35wVX3jkh
Ps8MbC8ZrpKhndv5+i7Uh93HmIJoqLYxQpMNQ7wUqEr/uPoN6+v8TS+XB5+b
L+HLGoz1vVV+kpsN+cP8Y9iPgvX69UKLKID1WhRsOeKD+DeQ4OcaxicfPOFe
j/gXnErnWBnFufNTsdexa6gH088GnfoooL155PJ2Cg0eXJX1Pe5GB6ucFxX7
cY7WbcjadPYDDbQHGR4n+2K+dZwD+xCnUytKRLYBGnARfh66eYMOKzJ8p23G
KbBFv1hU5i7277tw3jDch2o2JNQV/SaD05Fbt7LW/763KzZVEfNxHfUv9/1L
hj7vn/OHsV43OXyfpuE8NpV04k0szmPCXAfdm7BfYjzlHuV7UoEzhDIb50eE
zSVuquX5NNg98faOSwAdKnX4DWKwLzPz7X5VYn3ZDav3djhRoTnwnoupExFO
lclPZyD+nKoT5tsEqPDRWCJv8S8B/pZfU+nBeYvu3xXA94EA21Kjj9W3jcHn
/Ym2NraoqyxGZoEK6PfqzitMauPw2Xqt7uVLGjBkpE8PIf40/anSz0pUGDpc
+PA1nj/Pzm/WrIjz6A+jv2Lq4+DVl5Q4hfEbCqp++GP8Y7ke2hLtY/DH+nBL
HuazoVxJr5OfCn+YLzqkYT4dWfce9WP+yxUvGDZh/nOfhR4bOhIhPof3Mhnv
W+zAc+M83jfTSLL2LN73XPtU72vER03KrfgW6omwRXV7Es5j9irpVkKIp8hA
VeUl7Bfll0IPE7FfpGR2ZPYg/hWmyy8kEf/wqXAZVcT/5YXqt8VYL3JWPpMZ
1mu/UiLfz19kGPQzn2MaooFm5b4/pet9nPZMym4E96oSt4Fy1E/ZTY/2U4/i
HC1h+IBFGOeseuW30nN0sAgQNYrHOd42UI0+vf57Enf7iy143w/Hnkpuwfv+
0rEMTlghwIE9dzJoqM8hUfHvSKjnNZxMgU2o51ybJpaXLtJBw0W6T+YUEQQO
98CC3jioClKDs/tpsDIsohWLfOPY/PcSBfkW6vXcQRzz2SHcWD27H/f0Pttj
+1HP/z4Pd5NB/Me5LnzmLyJAQb8gec833L9PK+1oSqCAPZvBZ6fKQRiVjP6e
q9QHihT1Xbk9FJAkHGzUow7Bp8653iTGfiB6F9qfwrrXJQ4sr2HdD+3t6flP
mQoiz98wTuD5155Bi460IWCV02i1ZOqHz56fNSIw/o2PK9H6FYMQYKIzOHWo
D07X+bZrYz6qJC2RIMxnozIvOQTzsf/vFSM75u92YsIlCPNn8nU89k1pHHT2
HDe7j/e1tCw/8Rrvm780vSA3QYF9it3WW1EfimCDXPyp9e/ZaQcTnMem1oKO
diKeDuWlVp6IZ0zhhkAnxPM4u1VwPeJP3qspb4D4+3gLtM8h/iz7NMLksV77
Em4cN8N69Zz1TX+O9ZL6+CnnMeYTHrJbYQXru5XrON9prO+3a2sSB5EPwxAx
+xr5EFCYFrsD+fD+mqBPyPrf3UnpsTsjfzokI1/uxX7n31HXxXIT+dBv/YwH
+UZheJH4a4UM1R0JvtzIT4N6l69vkJ81vT0d88jPX4d/F71DPm/SrHutiHyO
lmIKOYl8Dksoi+cvoIEJ+eaVU8h/Rke5gxuR/3JHPfLasV9kXp7k1Md+8Vrt
6X6N/fKiSeNNKd63+3uoZhTe163tldBp7K/PjJFrbOij2x8my05jP77YcFXb
D/uxhKtO6sn6+4oOKjHZYP8q+5z/W4v9XqafOduBdU/dzUZtwbqfurC8NxD7
fdo4ov42no8ZUMidQX0YjrVfscPz+U99eqqwvrHZ87KvS3AfOR5/7CLqSca5
fVsTMB8tiSeXzFB/DEOH/his4vwr4NzxEfPvdd4q/ATzP2ZQJbaG+Qt//MTx
GPs9xPa0tyfe94Iyx3Af3vfe631PK0bWf77d/3wW9TCuIlNtGvXwPoHafhTx
1N7ZGWSL+unkEmoLqJ+3dNpOeGK/BxkqvjqO+HO33tJtwn5fU7c8a471yjo0
u+Ue1ktI6LWCO9bLdFNkyY/173e281d9gHxL2c7e9xL763wn06AY6n/G+aSo
fNR/jXymy9dQ//8TVlGjkWlAoH4JMkG/YIiPOH0D/SLtsI7q3jEalJ7efvsg
+ksOY7q+BPrLhr3SGw2RNzsdBincanR4LKbybwMDBZyysafQv15aHvP6gf5l
+FbP7DvOn3lPr8j+Rb9jP1fwigHx33To0W0t9LsR8fqjC6gPD6uTQ/+iP6qw
jxnt5KPAHq09/Hp438OH2nNM8L4zdq4/ONBPy2w+7dVD/EsHZXsuof9ecHI8
xcGAOm3y8MAj9GtqfM2P9qtUaPnUcIF8DfegLRoFYejvosoxnQ/XffbNvqkr
6O8Pq+v9KvG8mGNhdDDOA3+PyU4ruhMh8/6apzfG92A4GCWCuDDtneg2wfmB
j0vsO/8CDbaUzFM9nXFu2iUenFhGAVdxzkr1jPXvY536Y7sRfeBk5juPJ2Rg
WPG8V8U0CUSFfSr+kRSo5xxZEz9DgEtmEv9Z4HkjFlprPDsdml9f63KLIIPn
WiPjCYwfoGJGcMH45sr7/5hi/ICiX5ezsV5iQ5/87mO9FFqkq1KQd4OPnmm4
L9Lgxp/VtKRLdEjkztfmK6HAQcuLvysxPn+H9ElWNuxLRdZ5lke4p1uFtCzh
+WX/PVGX8bzuyc5Y7WKcPzNfvPiB8Z0vyHi5YnyZIQU5C4xfNy4H27Beq9XV
9SaI27MfZ48mKlLhx5ld5B1lNDCbnfjvlw8dlNRCTnhso8Le/zplTJdoMOI3
/UAH44/o0O6WFlHgrpihTQrmM/pqn3sz5uO9otLO8ZgMwzG6w1sxnw+Lym9r
8HwRZ5xdCuZvM1Vyv6GEBif+60nsWL/vU2rICtZhgVAS2Yb4bKj071JGfE6f
MTwdXLr+d4G75R0w/qe/mnVmiGeATlEYP+LJsPtqzRvEf1I8wJg1igKv0syi
2xD/gcINIwp4/lH9C9Z0rNfuV3YrX7FecXtktR//psFDxS8rbzF+JddfBbdy
CqRuOJQQk477uTSj7l0+vO818R0iyWSoW7IHDYzfc59jZiCaAm3dqk1PDAiw
+92v6n2KyH8HOaXzVwgg+MeS2BExBpXyt3ss8HzzR7ZP2/B8zGE2cuhZAli4
q95NxvgamiZqyhifoOrQ0ZREBsUjIbw2mA9vgSNjDebD9W+67j3mM3r/16lt
mP/zu8lyzhx0uHg89kd7JBlYZyz2PMb4v3oeeDfjfQfh8bVuPQL0Lat+8sfz
NSfVnkdtoMOZbN+33OFksOqxql1FPO8DoVVq/fONrKwqtBDP5VVu/WeIf1vb
jfRxxD/Qb5j/KPbZnYyXeT//4Nx4q/N9O9aLYzVs5ifWq+aDrv8zjP86ouf+
Foz/TX5huz3Wd7+i3tW7mE9pBPW5wVMKUEu3sQTpE0CphBDOiOfFbjCfpnOs
/7xE/IpvFBmG4rSk7vyigZvLHRE+Fzps3l73mLOSAmPRBlyViA9DyvGt13hx
fn8s+qsmkQycwT6FDhjf97d+WSfGF5o7kqyAeN4LpEloI/6CUrvCmhD/H97O
RPknY9DwwsJeEc9TIxpWRWIoQLjGzkXCeglNiLLcwfgqTTw3NLfRQVLUaVEy
hQzT45mpm/C8W8de9T3PKMBypuHnyXMEuONZyx6O8QPePh3kvkoA7fNeXw0j
x+D+qfCNBwXGIOwTdWVbbzGkrurwbDdtgofGrZk38fzX0XchL93Qj9n8v85i
PrpeKQ2MGL+4tFv3MsbP9vWVS8b4Faelxvwwn+3Djg5/kQ/5lDd5zcg3SUXj
B3vXvxf+tvumC5i/eWbjeU1DApi/GQqyxPiPZllGFDB+RZs98QnGz58MiryK
560503OiEJ/MqvvGA4i/1n5dhfcYXzJ4Ruw94nmxrl9DAPnWGkI0zkT8t0z2
CzAj/s4y31Y/V+AcIUK/vAnr9S/MTH39+zqIIxcl92C9vr0wOrP+PfVxrzUf
bcH4t4PMy/djfFFD7YxHeP7zrYAwA+TDUcf3F8uQD8FFqz4lyJ+Xs+6lY8if
fKqP774PFODgdBW5hHw7oMeVNY982331e2Yw8k3vI9OMDJ4XbtD5wof8/M/d
ef8KnleJPkS9s64nsqTMToxfPaz25xLy+ZWZHWss5tM13eceivx33tQu7YP8
9/+5vEsMz9+JmhOXxvynufoj7mG/HNMZmziA/eWxn2lDO8YvpE0YLmJ/Lfdo
mWSlr/8e543sL8TnBltWyFXER/iL+5Ihxqe/fd9lhv278Ur9wTHk26lHTFZb
EX+55/qjVFcCHMq0I97Afre3cxE+tV7fZzbj8XjeIs3H6wjybS1FtjoM40tt
eWtajvXNzhh0uIn1DRXsvFGO+ez5sH8hEfMRkGTP2I35qOkxMu3F/N++Ocn7
E/UqsV/khCTmb1tzaTwF43Oxy9mfwvvu6OEdksb7+srIbbm63o/bogu3oR5y
8i1q1SA+bAvcdmnY75eOiPafwvhTR473NWO/nx22yp1F/Ak9KnG1iH9ExsJi
MeptW9D0lqOoz2b3X7zOw3pxSbz8bo79vj3EVO0Nxq+t8bELRT3n+OQdXIj+
cvii7N/dqP9aq48emeP5IOWRDf9Q/0mWPqWTpTg/uPmZs2L8/j1eXaXoF++/
d13VRn9JOiZZdRz9ZZZq8d4U/cXgmdZXNjzP/jPilgWeD5nWTOFDP8q9MpbY
jPlY/GuM9cL4U4qfpELRv6LmrQQLMR/l0u//ncJ86v/n6LoDqW6/eIoKmVEq
lF2KUpR9CFEI2YTIyC6pEIUIpSlllIyENMiKkkSvkT0zcy93X0JGJH7H78/u
+7zP93nO+ayDe69HtfppPE/zVTXfZ7ie/6rz03hc/0f8Y3HL6vrak2qh6HfX
bV1v3ln9e/Py7UYk3N/7l5fCRayPeGXFTxusT4mB8jk+9N//fm2/bIr7X2Q8
HhzAesLgPtFv6C9OCYFPi7D+G7b3HKtBfz+ik3o8CP1lU6xA8jFcr9l5lC6C
/Urgo3kIo79I7AzOpGJ/fQ/en7y9+nmB/AKCRNyft3eN0VHMGyJuI9Q8xL38
wLcnzphn9I9oG80NYz44/qloezgdKCm9HNUxZEh/y8men4vzxfXBz0UMzDWX
4i9rnKNC4uVd/kxcH5Ml9PU0rtf6G2opFIt5cnNPsSTun9sawX9+Ox3KRxov
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
6jLtGyLXDMNGLjvPNN5+kD2euU7ejwm6a+9b0APJkL6w8XVJIOa6rv6yUMz9
C9OeGULPSUDcmqDMqCBAYKVQm+NR9M0Pqf4RBSSgdEArZyMBCnZ3nDP2wpxT
4K0Ye5YMi+FaoyluRLhx7VHL1xwa9HPFKQ4uDELQpe8qCk598IN52lYP+Rg7
15lfzk6GkY2jmx5uJUL5YM2zeZZx8I3ShreJNIj1ql+aNyOBtqC40RjytlDn
36nWjyT4yd5sN9xJgIMtlwLPYK7I5KBvsUS/8mxOznh3hA5SagLvlnC9Ku9w
jjritcu+zk6jiwBbLlV+Gcf907zHjSZxf/7nUcdMTpEg65vX3D48z1bJ31ZG
eJ6GQuqmQ3ie3017pm7j+edfaa2p+TMIDcsxOhcd+2DYpPa7G953MNIobhbv
O92rOrqA9415Iu17DOvziFGxXQDr0xGu1/q6gQBLC03bE7Ge6VUn5qKxnlOe
d5RPfCTANvGCdEGsf9CBdyuhWH+hLO7XVlj/F+1VGsrYr5k729RTWYbh5M1n
Tqf5+iFjnPPfbY/Vv8OsTpHDeZ5LtrJ/GPu7TW6pthfx8IqWxjREPDyteHs0
EvHAPinUHYL4OTpV7bioRoZ5M/JZdcSPJ4uqRiniLfnXeGIV4k1S2ungFcTb
NdeDH+cRn7sXAr9aIz6H5MqrTBCfKvdG6SqI55Be+4FGxDNP9q+9O8kkOO7x
nycf4j/lVR8PIR11Rmq4mBfxP5qw+O4o8kXvjmgeDfny2lJ45B/ypdlwnSZ5
9fvBGzYI/0Z++QzYjUciv3K3ubqoIR+DXOvkwpGP9n5SypuQj5fCzlfdR/4C
j+j4SeTvYFNJXxTyN1lgjHkZ+e5oOps2gnwXH60+chX5rjAR4X4T9cEqUP3p
Mfz3yeHg6XLUh3KCP+jh/vFX53dqrvL9hcpEMerJPXPC1njUn4tRvv/cUH++
/XxoKIf649oQc/IN6tUjw5btVd2ID/O6Gg/Uq432K03bUd/kc2MTLVDfogNu
yTxBfRORpR0sRz0s+M7UGuChA92ss90b9ZB9OfTMOOon7+ngMBPUT9nAw9Qo
xKNATmkMN9a/hBhRLI56K1N0wUkH9bbBJWpXC+rzv65Pbx1NyPD4d96soAUR
vNa0mgtjf+/fslE4lEAHWnk43z/Uc479sbpmqP8x4V7dVJ3Vz+sVNNiL+t/z
aVlaBv1CS+8HIxr9grDBQpl+lwzZ85trRNBfRIt7Z4zQXzJ4vtetP0gDlY/K
zs3oR+1l5y5XoB91T4nNdqyngZfyyxpGIOpPGV/wJ/QvSaX+tiT0L981x3+Y
o9955V31fo997rbbEv3xCA3O+NAmw1bxQG3T5Uijw52jSrqm71D/d4wuyqKf
ykSIWJ9HPxXf/UzcG/30y4v47ffRf+9YOIWYoP96PrrwZhf67wT/6dxG5GPx
4BnJXuTxvxubdyzI0GDn3of/1NHfi8orX/Whvz/xEGPdTEUdvcWt1Yt5IKP8
Unsw5oET7paa4zJ0iA1sZ0j8YEBn8du7Ubjexs5epQz7MKbz94XpKwbYJ7Lu
Ood5wzX9Nc/HvXTYu/TwW/5XBsi3X5b1u8oE9jHq600bVj8PpJmLB3HzgrBl
nyjmK4u46kEG5q64599lfuYy4Fc01WgS9/mnaxRDkaNDW1ZW4Alx5HvXYuwB
G8yPJ+/lcVyhgQ77jRV1zOeT5bDhUygDKgj2FsndFOhdp3Yj8yMDStvM2dZj
LvsfR9cdT/X7xUlZkcj8JqEyIqUoUh0JkRkqRISSKCskFEnZZEcoZBQRStkp
KUUyGkbudfdAKCLxO/3+va+P557nnPc6Xtzr+WnrpQfCTBCgz273wTwmeFfv
YY4zC1r2ftxzsYoG58yi9u/HeuK++ysIYj2XflSbFWM91tEBsLwZ85zrGw31
E2ww/CNjPOfHAAVGQEIy5k/D3U/S0/awIFC3sGj3FRootLl+XlHPAtZQ/558
fF87ZusVCVEmyNHpxT7NOA85/q1UOxasGKlMSy6hwWZln0p7zOfOfU6u6nx0
ECYrKC/1kYAjwdxWeSX62slyDRNX3G+K7H+dL2LA699ZK7gfsWHuwRLpSRQN
hH0LzzecJoHwUwmdJuzD123nDU8H49yOfonY+gn3cqmGJ8N430P9O7jaMfdy
KlTMVpTTYL1d1XdSDBuWb7qvU5iiwpT+S79Swhgk2jiJyf5lgbzUSyES8kbA
IbyJC/eAwdPSgf6471Sw1ozKRtKg7/7DqHAnEnTXTR8uwj54OnsGrcU+rKg2
EYwOpgE8/Zh3cgvOZUu0shD2zSRDTsUL+zaxobRKDvcyL+OaO4qdDPhuGPjN
IpMCSvFmYhNy+PrtPWlW/z4HIuFmRzrO98zw+rHsf38Xek+PK3cHC24PdTzh
9KXBJmWjO//yxt/RJul7djQwm7cN99EhwaFXZVw8Syyo+F0xk4D1340qmy6p
YMCqSb5v69HPgpgJxAoy5gkP1ZregTEwIka3LOBc9o25nzQ+zoKzLw9d7iyg
QaKv4un4ejaY5k3yzvqzINRTz4yzkwbGUubltDzEsaTmAUcLGrSHbJqP2kkC
Vz9jWg3OSzihb5Mkzktkm69RdiEDdNKeKr16ifu5/lJDIYsG+q2lByzrSbB1
4/v5/0aZEKMyXPMxmwhkF+mcbekjkFT7kW8P7jspe1Pv6naxQGPhoDOHLh24
3/g9W/GECb2HrmhWbiaCX5vT97Rfw0DgWjzx7CsbDg5MDdyyosOXjjWpdevI
YH7ZxuoF9u38O61O5m8a6OSPNn5rJ8GNzAPRa9DPzpZ2Nq5/TwCNt2Jrk0KH
IUhu18jTf7/POU704/6OuS/1Y9rW43TYUuDgKVjNhIN2YdX2ikTQJIeb7cDc
IbchTa+/lA1/rpqcGwqhQcdVCeHtdrhHX+tPmEAc0i/ozYlfxnM8KSsCP9Jg
o5qR+Q7UwW79L3c70yiQf9iPc+4JEYQlu6vI+Py6YxMr7fD5q/fum3bh80KH
bj5g4/mVJqpNRqE0GOsRFk7E83tIUwmfsQ/iPHaS3QpEsDi4/4Qf5giZGO36
Fqyf31vzzOsRFlg6rTPpO0aH+BNlZwzwvuNLE8dL8b5/fey4zcKGAfIMn37C
/mzPkNpoO08Dt6lvjVpvSDAxwvcrF/t5mVc44j/s58MA0VRb7KcDD++391VM
eP/jWI489t9NRpr++ecw0EzfqW7DeZHk4OF1nBdVbansBM7rx5Dml6M437pg
DnOHHCKc4XC+zcL5Hrn4qv0h4mE6aIP7bsSD7MXHB6ZekMDGZVJ8DPHzZO0e
GR7Ez0UIe2HzDz+gK8SRj3sBWSy1E/E21bVhnox4G+eTu3G9/t/v/3PEtS6x
YCp/KcMW8ckwSrq7soUN6/80mPEgnqfjb6n5I56F30kEciH+SzdUxOsi/ksl
dtb4I/6P9nH1f0W+CwYcmc9Dvhz0z40YR76IWexdNEZ+vSrP8xW0p8FlE+vw
j8ivVfryLUXYt+wXGb/skY/SJavPPfShgVTojL406rOAWE7iQeRvfH6KliXy
1/zZ/T4J5Hv8DqcSD+S7VcjOTSXId/N2Ze9tqA+WBZu3y6I+TEaK1T9BfVCz
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
yUqIhvfyFYo3lkP+wx/LX1bI/7cmBj99l38+subybDj6hanlHemvqQxYO7B5
zhf95cuzzCi3tzQIMgzZLZ1Mgp2dCbLk5X+PGmQ66415vp39+MUnzPNEnI8x
B75ONR455IL+VW5VeLME/cv0/q/uRcz/v2nzSF30u3Oa1rRI9DuDTU7ro9Ef
72x93bcB31eLP/qdDfqj2iZatjH6qahckZWUPA2iGTceTqOfysQGr96I/ntt
XMBgUJoFNmnbkwadsd+jQnxvo19fE93LeIZ6UZ7xKLZCv/ZV+Fl5AP39xWHd
ExyLTHgUU9rbjf7e6O1rzMR54NYfR5EKnAdC4lstiMCAfSqN4x44P9ysfvlW
avnzc0Roru44P8jC6v8kGGyQdNgwaGjAhMUIU531arivu7+qrqezgcQxYH/H
iAmnDnd0y2ugL4wmLBzCeSVSr1GxSx/zzXtGjpuTAUr/hPLtsT/5+T2ujeDe
2aj6SytjPQNcPh63oDFxzrcXssjCvWTrXsGtgZ0M+HH2l6TgFTbQ0vxeh+iy
oa2A5+OxGTpInCa7jlLZINFyWFl7HxPmJqd1R4yxPyYPVWdgnH3r/m4m6TFh
SdfE59E2KpTC12MaB3FfPZ7o//M7BXaGB37s4MQbS5vYlCy/nr9JTuInBYqm
kgcfcRNB1TWFtxPPoX/oGs7QZYJwxbXFaUUqcJR1X/ChYJ2O/tje6IB70GUP
ZvB+KnDznmkrvYo+5/b6JkGHDUHr4zoYX+ngpsUpofSTDRlvbhZfZiF/P0l0
OzVTgNu0zbjBCfcL3/xKggDuvW7+w5ckidAl9rdYADkSs9Vm3zCZAt5GbkrR
c5NgvO7mo/m3DBA9anj0udcYkFkyeeJPh8H00kNySD3Oic2Z9HP+Y+DgIh9u
WzEM/O/SRNVt2fC+y/nLCtxb5HQam3fMTsI9BROvyKNYlxcG6RYSVDggdDNR
V54IozZkkbRfyMP7h86wJxmgl/Oz5dVLClwZrjqxicYC0zXM2qUL6CNmcoRt
vQww0JAu34v3sjOzDH/OZIBF8t1vdk243w0cV3TBulBWeo4l7mcC71WzeUtz
KtQH+Ic1YTynCtbvTSJRwK3xi4znr0kYvhFx7aI9G2QbG41vzFNgTMMRsnmJ
cNpynZAjmw2HdhP5k7bi3BnDd+/iOioUfjBUfIV7qLn0G21GMfa3AktxRT0V
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
1Rg3AZJ63bxn2CfhVfFg/HgqHapCTy1HnCHDfeEaZugNzE9GQdEb31DAc/vy
H6NnE+AZ1aVaj/uIf7L8a0XcRyY0rj8QwH2kulM15xPmB89feimTDCbkt6Y8
VHOhQem4/hfuvyywP3201e4JHToWHI+veJDhlObB6534vCFfWlQJPq/8cMCE
gPtx69a2M1V4furV7i8X8XwbL41xZzx/K+v9bVesJ+h62v7S15gv29lXJqsx
h5cO0uyx/ofvd4dlY/1aRg+rdmH9WiqUymd43z3Mqz47kym4L67+JR0/AZEn
+i5GYH+2ee9NftuKOXD4XcJa7A+Db0mKA/u599d7jVvYz1yZwX5VDir8ELif
bo79125Uutemifhw6zEokiKCjedsdQ3O6/gfDdowzmvnqp/rA3BeQ6rPPPfg
fH9vDaWsoyPfFQPzRV4S4SH1sOdnxAP9Ysrju4iHZLdjv24gHu6+b5gmIX4K
Rex2cSJ+RAqs9gcifp4tczaZIt6KZwS8RxBvq4r96/0Rb6Ny1Pc0cRZY/R0v
K0B8epJKXihF0sFSll2HiHg+6sn17Sri+Z3jmgcXEM/XYO5ZOuJ/T/Pq+tmL
NLjbdsu7QpEExeNHt1/69++qnNurIpEvkypDVy2RL90bXlUXI7/yb47ZfEN+
Gez4cOMS8qtAwUti87+/b/k+ZKCLfHRQcmUkIx8tT8ruVkD+MvVak7KQv7fe
DpZ5I39/cvJ5OiDfx7ZWcQYh38sFztbsRr5zXDO69AX79tFcr8kK+ybG2nD5
I+pDZGjotaeoJ/dqWj1/op6s+6x6pRn1pEnP+Pwb1B/R5+fZHVB/Nl/sFtdE
/eEpuZVbiXq1uUwyXBj1SrFM87wU6lXGDqsDGahvHjvyj/ejvk1+2C8/gfq2
PiS+oRD1MCne/KAv6mHfySx7btTD9M/HHf7DzxuebjJWiKVAVVZ4Ig31c9CZ
dP0s6u3GLW+0MtePw8qBgE8Ro8OQEJiUdgHf2z2ulN6M+hx/QmL5L+ozu3n/
6JoeBhj3rWtjCxsH4yP79f/9HMfRzKCXPaj/uffM9m5E/e+i9tt7of7rN12s
MkC/qOahtf95Roft4m12VugXMt03HAvRX16yZ/xuQ3/hsOw14N9ChMzm8UUV
9CNFxxtXpnH/2ur3nt8W/aiomV6ogP61WcCei47+teVS+mIy+te4/49VJeh3
xt2Lfz9ZUGFWuGDqBvrdA5NXw+LY/08qTT/+oD+mzGuwGOiPm/zqH39FP/36
SjremkoFbgfyuwfop1EaUwo16L8BHWJHHdB/M638yKbov7I5MTsn0a9fJV+X
LEe/Xry5uYQL/dqz3EjQGuf4p2KXhfZlJixyOTU9x3k+4+wJPYZ5wDfxoOFl
zAN7yEsR/JgHHNI6qpMxP1zgdRXYiPkhu19mohLzg+S6O1V2XCwwa2dd58km
Ad94f4nnMAFe7Dzi4DPGhONdrVy1qONepNDpc7cIsNq79PMJ7A9X1Lzj+500
cE2IDKf8JMLnzU692yqZYBXx+78bVUTMa6oel1UJMN3sIJvcx4S010734hDf
xE1VqrWBBAi8yukYiLku6fr8x1XNNEj580ZfMJAEe9ScBT50om5EKlwjqtHg
y/KoTtIyEZafNW9ch3McvxCeFzFDg6jEVYzTj0hQm+TlxuLF/GZyutSlngSh
FX+uTM8QwCqy/5fev39PfoG2pyiWBGm3vhr4txJggDKyt3EQ85aLlusza+xj
O/eJys0kGGjWrBncgLlFk32GNE2CGm7/jx7bx2FVS7DDeWnMeycPHkiTIMMq
B/OhqBPj4H9FrUN9zSTcprvotXhgbttt3ZW5iQy7TzaaAdck6BhMMWtC6LA8
Pkv6oUoGY5P1f0qKWXAu3yRFf5QJr8wXFsKQ9z/+vP9ax4Z76JhtdrwT6p9O
a9I91O/1t+SI8SUssHONFTnbz4RbrrJ/npjQ4FlDzhGuUsSPUsSpfz+XR7Ww
dkw2oIFfspyX8dpJiGhY6Y13ooNZwZ1x/nVkuGouMRfGNwm/hxIGN5jSgaew
0qHyNwlO2nD3PudnQem83CX3JhIkTx11pS4T4JqziX3ALBOUbC0XXlzAvuyq
b1ItJ0B+tmrCPpyLxWhvpcV+Gtxpqko8vUiELVs9XO3KmNC3Oc7brYQI9/10
60qVCdB26ldMfQsToLoxV2OBCPRCXc/DTgTYwcz79uMHCyLzPx3a8ZYGsl0W
Ixt9ScC+epn26Dnm3kMaa3SfU0Fvg+5lwRgiBL79+2Iz7oNzpEUX4bs04DOf
Mmw1JMGKxFFlchYTdBQe3jS9RYTGZueHGWIEkP2vx2PmChMY7SoKUduIYHdd
XcOtcAxWdtRA3Qvkr8xD4ZI3VLi3anPNobuIU1U5zvEcJmikP5lywvf9Gpd+
w7uJAGeCP3LL4pz0zAsNLsiTwKfpXfLmCAIYBVhJXFk9CWV31XbJbKeD9cV6
roHP2CcO6c03kO9/TzdmTf+kQUO+mf4m5FPNDKeLVj0Lzu6s8k93ZcLFo2dP
stVRIfpBom8izqvhsen+2F10zJlpR7k7ScBToJ5+nH8SnJL69Vkn6LCRb8R8
aJIEXyeKZiLLWDAS+0FsD/Y1T33DT73D6OPLdXRt/PyLeEjQSisTau0Iy0VA
g4xdRXMquPey/8lYVYD7zSte3U1whw7BCrmSXA9YsPqx7FGlXZjLDn7i0PpI
A9sB05OPY1ggn19XYr2XBcPZeQY2/TSovZSeWZHJBJfSr0WCd1iw6YedXIMW
A0w/z4T34POfdmwtNMDn1asq6sTw+WiN5cne+yxwlWk8cQjP/yBfn3wTzy85
vOoTF9Zz/qrGmhqs57+F/U8isJ6LTo3NBlj/k71dnvVY/zGl7dXmWP+uoFzx
YPz8r5/Pdl+8r7hn18FMvG89HwSaY3/anuw8WIz94emTWhOB/Ul9Hd5ThP1c
c3lP9AL2k3k45agz9lMsfuWOKvb/2nrb8BHs/1igaOYZ7H/zyO6Xzjiv/Dvj
JyJwXiIWp/Xrskhgk2EQkoDznbcXD0/E+c6/qeFS/0ICg3wbhakRJux5HVY5
sIMEgc3ZD+pvEkBeKGl8wyMmJKh9vT2N+AklH3nljvghGhfldiHeir4Huoi/
pULsKdGadMRb5XX3+DeIzwEFwYRFzJfNLr91SwrGwGKhnE8imwmGn+olhxHP
21qj7i4hnp1T+S05EP8ZGzatL0imwfmVX4aeiH/yzinDWuSL9NpN/1UgXzTd
Dl32wvcfWHd/31rcc9t8niTdQ369lTUeCUR+iQffLo/EPgZLZq0pmydC22Mp
31FHAhQv9ujdR/5OvHzKM4v8zbziVMO7hwBvr+ru3IR8b1o3a01WpUGC78vE
OeRxfDwxHFAfFlr32CmhPnTtTfvcU0YA4bvz6l9RTxqF1jT1oZ7sCgfXY38I
oPRqW3cM6o/db2Jrjwnqofdv8bOoPw2KUklHcF6yRcWkdtSri4N6Ss6oV5by
j6UEUd/KjvYfW+lmgu+W7I0HUd+eTe5seIh6eDiMwL0B9XCdqlu1Beohm8CW
7DjUzwjrpfxs1E/S7gapQdTPUgqfVC7qbXDMYm408lj51vMjA6i3hNpPu06g
Ppc66I76oz7/KNVMT0V9bhLc+3s36rlwx/qT/BcxJzhukJxBPZ9Jif6rj/rv
e+Tc+E7U/7/dp4fkUf8F/+zc+Av9wtRs4oTFTxJoPfT6+AX94g1f+71B9Bcu
1a2vpW1o4LSN/YSgBAnAmJK4C/0oVn/1sCb60YvJLgNR9KPKT/atnHwscHdR
Y+9B//p9ZP6K2SwBfsZ318wjPstTH5lsQL9bObyGMZdDAqN1fiWlOJfUl/qy
AeiPPcUknX3oj1HZsx8S0U/7DQYkvNFP95i90vdCP/Wdmjtujf5rL6+9yIb+
u10iUcMa/Vd+7mv1WfTrH1Ib53mqiZCxfPpCN/r1NoPaC3vR34NrNwieRn/3
OxwTHoX+LmnZH6GJecBKu8hjF+YBTart7FIkPq8fJBqI+SGP3tZ5BfWu9nJX
SSvmB1mvyU2EWiaY3ZqkcnwlgjZfA4nvOAHE2Ge533Pjnj4yd/tIAQlyUoHU
M06A5nONbIqJuLfekpOsUmbB/gJ3w6QOGjRPB+1VfceEw2Y61QdHicCgOcaz
WxCgsGFYIDmOCY5G9o/oZ4nwfDBn7+HpMShpyEma4Z0E//luthPqdOjT1nt9
bogEhamE+b25LFie1+jkw7lZrZL7E/mIBqZSd7PkeCbBcr2mDcGWDhlKfzti
1pIhuzYoTGiCCa7Od6k++0jwUCW5mRRNgHunApj/Yf0F4kuHb+SRQOZSMacR
gQDn7mbI1+Ww4NeL2IlBKRY4Lr1cvFZOAw9y3rzHNtzLlCec9KQxx75Ksr1v
PA5b//tv3lcIceX0vP1pOwnK6rJfJ68eh9+5Hs2bUN8WuD2jPA7TwVDm/q/2
MRJE3W3I7cX9TiR3vnyanQ63rWwXtpWSYG9VeNFYBQu66gUzfeuYIPY7Weyq
PA2S2rjZ88tZEBVmEvIMc19Jl9YdBxUanFFJ8f74DJ/rShiMDWWBh/uF0vnN
DCgorHv4Dp/X+0/IYqqRCWfb/Apt9tHg+47Y8OwZ1BnTg2dku2lwQ3Ah7EwE
CY4ck9FSZ5uEVVFe+o856LCGR/BAdhkJXt8T5d6GeOO+Fa3lJUYC2g+ZTfNX
CCDyaFvsIN43a8PZ3eGoywc7jx+SWzsOKlc+aG3BufQ9n55MxLmM7JFMUs2l
gWjk0wTleiZEXuO6Z9dBhHUvvuWYnyCACb9g3scIJqi5TAQ5HEFcqa/zausc
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
fZyHZ4KY8MXtlf/dbiosDxfNfXrNgl3LpVtO2DJh60PLaJsyKhQf/lCe8pUF
Yr12Pz9OMkBDuyugUpwKViIhGgzE7dnZhoQz5/HPt21kk9UlgnNIqEBiLQNS
DJQmFA6Pg7nB1VuPxUaghaldHo575ecMxyP9iVRIp0OOhwcRLixtFnBHv6kL
aAnksUUd0C3r+RVPh3VFLQ2/b7IgUHPWN6aXApoqlvejP0/AzN+jp1aj/ixW
R7c+yaWDmljz0lZHzI2/Shpm8zDXeVf58l6ggtnr2PUH0ecT2ZPJ08tMyNl4
UfS3M+bc9AqjExV0eDJ/i7oF9+p3HBrc1ZMUkEnLkXsyMgHVQRHTIjEMWCnV
5Ax+TwCtYR8lXd9hoL4Q2cseib55W/+71hAFEqsyzHLaJiCL9/D3ys+YMw/4
OcUJMEGqL5m5coQK5S2WznHIo1vmf+Uu3mDBzS+ktmPrGWDs+V57Ap+f1XCX
PMKPzy9ZXzHQpUJhdO3qlxEs2Bd9Zmp2gALnEkpNbrZOgNZ4gstTnHve8N/B
vtWYJ1e0D0kfRFxNqKwgW2E4Jer7v39vF6zhIBRkQIeAOeraL49xn/W763Ua
671D5Bi/rcwAgrdinIc2C9jOV46K4vM/DUIc/+3xsWqZ0h/w/JXI/Lcn8fxc
xvsiX00qrHN8HGShw4Lc3OjGBiMWbDpv89BEnw7C9P1J29qY8PzNCin53/cB
yKScMJijw3VlFRvXLCZQam2SW27jezUSGU8OM4BzYKjBDJ+31HUYC/v3+9IP
PKrlxOdXnTQuCcXzdeWm6ivw/AA/17Vr8fyd2XkrX7Gekaz5p+uwnt01q+02
Yz3fQyP+O4z1248YkeSw/vvqfj+/Y/2Rq3UH0/G+Jd+V/V3wvrs65i59xfvK
dQ7sEsTngzYy6Wr4fJ+hV9h+7M+Y/v2jdXh++MzJthQ8/8CXiJ+f8fyoylL3
dux/yWn1I06DFNAZLzSZwP6Xcr127Md5iUuLKUXivO4pi797hPN6PVSx3w7n
S2lL33kd57vjZb9NLM5Xx+9Iay0+v9P042lDxENybu+jx4iHuaRtX2l4/qk6
l7QOPP+Sfa6ZDuKntnWjyGg0A3aHi7l/byRAhNfu/RE+w5C95aqBGuLzYftG
a6kpCtiw0uTWjCLe1rGev0c8s91fs5nrAgvGbucNxSOeX7a9+m8U8T+a1yGZ
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
9HrBglt2Lm4JaUz4+l36YuVvKpixt8tIIIdXJ23ebWBPg1zFhggdMRLIGS5T
P2Ocr5x+tzXsKx1C/obc9rxHho0vd+9yzWSB8sl1s9F6VDDmMzT/uZEIph57
/hPCui07YO8zvm7l++omR+KGhyDOa2rXvx2oV33bmeAYMgjav9oU9WgMRs4E
HWwrZIBDWXZooeAYdB3UCFEbHIJmjyKed+k41w/KhhtqUGGuNLonW5wI8mRr
1XqMw31nyYukcjqoZPbPwSUy1HDTxbiLWGB12Mqq+goV2lyOH5g4SgQ1rfh0
eezDXU7aPpUxQp/N2nWuJ4YK3bl/L/nXM+HdnQZbMs4fp5Qe351Zhdxa7ibO
ox6aP3xxlg5kghWPBJcR6np4jc3auwXo74Mh4w0C+PqOM5lwlwZP7peKqy1h
v7eflaLxgQ47A79bSiaRod5Q1IaM/rvnIw1SfjMh71DAR9YlGpBrcwxWf8H5
kXen1891TMi8eHCi2XzlfUKZiU6cf091e3lXilKhdS/pVSLOv9Lx6oMv/6F/
CZoHnSvGOZOynvTqLBkGDracUsP4zw/8ky/WxfnKZVlJC+PvtvPf14YmFvzt
OntoVJkJpp8U6B/9qHBgT835ch3krTL1oL8tC56L+JUfdqbD57OL6SnYV/hQ
eKyXY1nQKyarfxz7Cj01j/xRXG9WYmHiiOvXKJ6XW4vrl3O5nn7F/b8zG+AB
7t+Z4p8TgPsvBb5tM8bz3Hs8GiKBevj0bEEpGc9T91O7uh7Pb6z84Pg2PP+Z
Cud7nnh+303bEl7jfVu4I9ea4H3JDPordbyv8ZFMz+XPLHg2SQrQEmGCcBGv
vpwFFTwLJdV/YDwlR/do2WA81TZUXrmL8TTjrJrRxfhvcjGMnmigQ+Meac4P
t8iw96H59puYrz91Cj+51rJgbeIzYhrma9HvWx0H8uTJ0CarYZxPBzqda+hN
VBh/7mi2C/WwWcDdcQ71ICh2T2Hnaga0Zt6+qI762XXjUdYIzq0Fx68qhqN+
vm/9HrIJ9UaR0SiQD6dC2TPPA5bHiBAZbn7oJeqzdt/H64oVdMhuTTVMR30W
7npZ8Aj13LDGSLl7GxXWOt/sAdSzlCNBmbuIAcFnP4joCo2ByY0LZxmof/84
4gPxnSzo59QyI2G9TD2q2ETEeuG41Fk9iOtDojWaj2B98f9kd28eGgKDYfUH
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
DXL5QUPCgYPYP/wPUMdWOg==
     "], {{0, 0}, {89, 89}}, {0, 1}], Frame -> True, 
    FrameLabel -> {
      FormBox["\"co-number label\"", TraditionalForm], 
      FormBox["\"energy label\"", TraditionalForm]}, FrameTicks -> {{{{88.5, 
         FormBox["1", TraditionalForm]}, {69.5, 
         FormBox["20", TraditionalForm]}, {49.5, 
         FormBox["40", TraditionalForm]}, {29.5, 
         FormBox["60", TraditionalForm]}, {0.5, 
         FormBox["89", TraditionalForm]}}, {{88.5, 
         FormBox["1", TraditionalForm]}, {69.5, 
         FormBox["20", TraditionalForm]}, {49.5, 
         FormBox["40", TraditionalForm]}, {29.5, 
         FormBox["60", TraditionalForm]}, {0.5, 
         FormBox["89", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {19.5, 
         FormBox["20", TraditionalForm]}, {39.5, 
         FormBox["40", TraditionalForm]}, {59.5, 
         FormBox["60", TraditionalForm]}, {88.5, 
         FormBox["89", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {19.5, 
         FormBox["20", TraditionalForm]}, {39.5, 
         FormBox["40", TraditionalForm]}, {59.5, 
         FormBox["60", TraditionalForm]}, {88.5, 
         FormBox["89", TraditionalForm]}}}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    Method -> {
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
    FormBox["\"Amplitude labelled by co-number and energy\"", 
      TraditionalForm]],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJwVlnk0lV8bhhWpJI2GTkkDFSFSxn7dZUypkKIoKYkkQ3PJlCRCpDlCSpSh
Qsg8RIZjPhxTZx5fFKKSfOf7Y6+1115rr3fv/bzXfT2rT3jbnhIXExOrF40Z
ovH/ubdWh8utZ0Lwg5SJ3jsEmpc0U2caC+C86lrsR9H6HYlwTr1ofeO63t0l
OwU4bBheMpUuhPXmocywUAItg+uFeuoC2No95FsUCKFw3O6icSCBi3kXIj/I
CbDnXKps3BchaFFF2/5dJbD8RsVGjRkCmId/2NnXIUTa51USRRcIlJnKNKYJ
+UBKudc6phDe/LCGi94EXKUdz66h8KFfTH7i80MIXfnBOO0zBKQ60qQTyvnY
TOmrKZoW4p/pgSODrgSyn429k3/Lx8bvgh8SMgS++BWuTncmYHdy5964B3wo
S/1W3L+CQFSSEt/1CIHfatGD0kF8rFSevfuJGoGD5Fs5qw4SeDHSE3X7DB8K
22UvMfUJrPgrvNy3n4BJ0XrNmQf5WOSwNkXDggBL1RaPdxPgBV8g+4MPKT9t
8mXR/nf2BZJ2ZgSiLSvOTajyIXEXfypOEjh/ayV5wQ4COotkFvgt5WPq1d51
0n4EjD6GPmgwJNDdfSSb+MfDeJmj7aEgAuJ0gdPtrQQCktL2n+bz8J3qEZAU
TaBexkbZRIvAWvexYXo7D/zRyxmC5wTitn0S/hPdo27TzntOpTzsjnQfoycT
GEi0ylZeRqCyv3Dl7lQepjvFNw2nErAvriZyJQicCKy5susOD7mrXnj8TRPV
lbpNzey7EDNWt7aZn+PB3dMwde5bApYTuac7e4VIruxTNzvAg2J+54BcFoGq
pRqvTtUKscOVF2aiz0OrmO8y5fcEtm1+xfj5QVT/WWO0nYo8hO2RttPOJZC7
X3FVWKIQAWnThjtm8mD0MC16+ycCGl4PjspFCLHSct6D7VwuhmnGX/cUEXgd
Mf/Z64tClArkhrc1cpG6cUD8cAkBpTe3unVdhDh6d42l0XsuDl+6ut2tnMCT
minZWishpjQ0Xxo85GJ+xdKr56sILGZePGCvL8TzZoMpvetcVM7L+Rj0hUCk
2NA97lohtvma2ese5+LSoT1DUV8JSKx0I19eIETfYpv3W8y42JjM2fCskYC/
0cC8OZMCXMt1mqejxgVNGHzyTTOBnw6HLB9zBCAdcj+lvYCLeF3FxLw2At6X
yGEb2gQonDhftmmMA8vggu7KTtF/c9+8uqBExNWTwGWaVA6mGg4saekm4PK+
dIZlugC/DCPPq5dy8EFueG9/L4Eesi6o8QI87nvYpPaSg9MuEeGCAQK2RJa/
R5AAugEp61XDOVj+TqVqgk6gYe76ot+eAlCUsoLXe3HQMl4+JcEmYLr+xcQd
ewEuVRT2qthycGunk/5iHoFSU/mtJBMBZE/WbFXW48Dg7oSfkpCA3okYvwxN
AfIkWmPWrOBgiBKXqT5EICdwdo4hSQC71338VTM4SFmtyTP4QUA1IXCwfpYA
YxY8EyUOG/Znv66xGCOQUjSh5viDj3j+aIJiAxvSn1yP2k0QIHV7uwv7RDxH
Tk8sz2GjfIbYY5c/BOJ/cl9dr+OjTX2eLekBGxetnrWdmyIwf8lx5rxcPnzJ
cu8UrrGh+kh3vr/YIMK0ulc9fyHi02eNpLwzGwP0Vos74oOY3mt9TD2Sj5xF
msdlTdm4r+4V8lByEFc8654VX+LD+qNB0RJVNiwuzyl5OXcQ38N3UK1O8DFk
Z7Z0sQwbfyteTuRID+LM6wK5/r18RI9bn1s4yoLerHTdDqlBOD+ZKNHT4SOz
4MDtUQoLluGrs3aJvpuiSVvjukiUIxL+C2IKWTgy76lKySQBTlXd7XvDPITs
T32k9pwFz+jFCdqi91E9/J4obuJh8Gmj0pcAFm4silz6miBwduiJDf8tD/ac
sTQXFxai48XvkkR1zLkZki8bwUOFtqLWlAkLL+T9xWP6CYwqeC43dudB/YZZ
weN1LOQ8HbsmTiGwNetA0DlzHh7Uee3YMpeFSkWvkctkAldMtrGfKotyYcnD
umYhE+1JbA9CxMXnbuXdtSI+zziXWnuSmWCtPUY/XkZg2mt+9iiNi44MTrfk
eybGX1McOkX8GouPL1lVxsX2cRmXlPtMzFbb32KZQyD08cAVqwQu0nbq8f+7
xIRCZq1F6RsCtRq1/VdEHC6OcvalOjChqrWjbLMor6Sqso1fHebCv/v27wtG
TFE+FuimPSGwz+FxWqseF9y1OcELVzJhpaudtTyOQOxgkPQ/WS5svLvnvhNj
4mhhusq9CAIdIR6+aiLeiovE4iyYDHhvW5MgcZOAgoIt5VAbB+skVUnMGgaC
yp4uvXqdgGOmodHNHA7u2dikBLxhIM54yd3B8wQSjdcmZUdzMPn8qhopkoGU
mkjxE2cJ0Lrmzeo7y4ErL/lDnhcDubskrlNEHlrrNeYxZw8HZJ16QxtrBmoa
/Ed2HyXgNrOfvEVVxFXgSCWxmQHKvp8eZSJfZDyq0XGZzcHLetKecFkGeK1e
dJ19BAbVsx5HsdmQkTNpX/uLjt92HIc35gQ2VT6cKqxi45KLp2NZDx1S3cda
VoCAn33gCU4yG/R395lHSuhY7thlEatHII84Xbs4iI09vz57jr+gQ2Ngf9ks
kT9+B1ur4xgb+Sas0dgQOra71Ole2yDKbXmDWM9tbKyKkfbXOEWHNWtH1tAq
AoHvVo8/IrER0bNF4qsFHS6nC1VO/t8rO6Ucq3+x8FPl6F1XNTr8BNoJXYsI
SHaNlH0X8eDse2up2Hw6Qr0yllpJiTxytldZMY+F+uLM58+GaYj/vuZu+UxR
Ds+ovmN5nwWdORRlvTYaKlKPD+36I8QypOTf9GHhx9TttrZcGtQvqjju5wtR
r5dpK24m4mc4rMf7EQ2PzAS1B7uF8NcqGApZxgKbdoshfY2GmXLZW5xEftJU
rYqYOcSEc1uoIN2JBi/O+eQT+SI/rSavC6lkglp1c8QcNHTl68t4vBIihkSt
nPGICZu8kD/M1TQY35665h0vxM4lrGPBnkw0vA6eGSxBQ6Z9JffiTSFG5w3/
EdvBRKTWDNlt5G9Q2HDbzt9PiFSJPw+DljIRsGRa+dL9b7j5a09FiMhbh6Yk
dMT4DPiN/92S4/ANQ3ULNe9YCzFnfEFzYAkDbtQ/pgLFbyI/dD6NgRBFQyTP
6VgGjhT/slNmDqDa4+nsh5pCeHJVZge6MbDvxbjrsTcD0DR0vvBcUQhFmtbL
f4YMGIeMXXjsNYAnUsr0FGkhmrqNELCAAZ1TI6Ftmwcg3svbmy7yWUCree8U
k471u77HS//qx7m3mUXZAgG06m0u3yigg7RxKNW8pB/U637r86kCMCqdlkzd
pUNGhsgNCumHiZVefHGdALGfT2f7u9Ax/Z1fXWTRj6wVf8WqPglgkuu35+9W
OkbbuR1j0v1YNlju9fW1AD/f3eBel6KDm89mabb1IbTkVk/zAwFevwq/OTlA
Q+8T5pj7oz4MR+22oIQK4JB4X+n6Rxqa/ekSL536cOTYgty+8wJIPUr8/Oc2
DZXO35b2r+5DjWbHKuYJAYpj0u2vieqdb9yvLM/thdb04yi+jQDnwnNHf2vR
kKHSu8XmXS+eNR/9M7xDAKXgspirs2hInEM1jfTthWTSmtPjmwRIGY23H/n4
DXFCil2Nbi98fLjtf1cKIMnOiPnh9A1h5A7X6cke9O54t0NcRgBXSnnt91nf
cPl92wWDih6YL/LNnDvFR10tZXo4awCe8S2h58N6kEPfSlpI8KFeSOgN2w/g
2GVyfOaeHpA+/AmT6+UjImOmz5DYAKyPNKZyF/YgLKRsdEW9yE/PFN4Mpove
/b/63NUUKr7bhh5fW8iHbZQmjbDth96qumrHZ1Q4rrVsUn3DR16AqQIx2YeN
4l86Hhyn4svofEOtRyI/+RyxFqb2QYlTxWpWoWJ2V3rKUCAfe/X1Tnrt7oN6
XcAak8FuqM/y5Tm78ZFP3r/tzVAv9r69ywvL64a1jr5mq5Wojz7lLsuM64V3
9NOs+hvduOAyfd5Y5MXbk0FDinq9iPV9c0HGvBtPYr4UflzGx3Dsk1qH3h58
sMs3tJXpRklJ1LSyGB8OGz4k3Q/sQYdetdhDSpeov7Ize8jhobi0/ip5bQ9G
SG1fqIldmEVaETlb5Evlg0zbuXVULP337a7i6S6o7mK2XPnIQ5RwcqPpWSp0
6YO2Lpu6YHUpQ07whIcfwUtnBS6kwq56UuHVBAW+qb5OjkE8HFHQGCjM7cal
tLnfeGUUPGjTT2l046Eyy+zTmEM3HkfIv1IPp6BITIz3314e1MyO3ds01YVC
LxVPH2sKBjRrNbJ1eLjfe8njTHIXeq11tHMVKJh5NPr8KhIPf31jjF+ZdeGv
zs6JCVon1kceLIwV48F1zpvlND4FK+X3lxild2JP4YrpmaL+tymxfIwUTQH+
ON0M9O2ED5dpeqGJi61bqU0HN1Pg0n/GssqgE/GybyPYH7lIbPjx+h6lEyHl
VxbMntmJQhO/lkNPuZA8IRXUcK0TqS/DOnfXd6DP10CuLoiLM7/WHJZU6kRV
WPyz6LgOiCWJORmc5qI92mjzzqoOsDxSXNqOdECFXJucsZeLbSp28/xPd0By
b856ubUdsPwbzV2+RdSPfz7Lyp/XgQ1apYOHhe04q3ZII4rExRzbWyU/stth
vqTxY8LHdsQ6KJ7/J8aFDy/hobpdO9zHqVfp19uRF8Yq8OZyQA3I9z79qw0R
VC5UTNvRk/v2H62JA2PZ5l0pz9vwtvjnLA/pdvxj+Jna5nKQ8Za7un9HGxpf
iDe+62jDmkWGEVVPOVhsLDYpz27FUMiiuO+ifRaY0bIlmIPr3QodtndasdBN
yWHLqTZ4etXJvj7NAeucdmaURiu0LTVWXtFow71nMY7y+ziwmrU7rK61BQfU
jViff7Yi9+uh5PAtHOQ9O+EsfqkFFxZYZkyXtKJrQpH7m8TBss3X9beTWnB/
5JCPSVgr/qqw1T1FfbF47Pq1I/7NyOt01b29rxUSyn3an1hsFNUmlFR0kPH8
VfZRX1Ir3i5I5sdUsrHw7k+GmgUZ/QZv7mURLbCZPJXsnsTGceu9c+ILm6BI
TqoSlrbgF0ft8M4ANj4tfaUxtbEJzieejG+IbcGLtuGFJCc25lP/2rolNiJp
PFbV7WQLzEtz60YM2HBNsLvSvLARjIgIp5dbWzCYfjWoQV50Hpd3Cfo3G6Cs
dDOGNrsF8Q+266f+ZGHROomq5J/1aHCbCDXKbca2YPHv/u0suAsceVLu9dgf
wxPkOTSDebYu7eB7FkqzPs6/0PMVbZ+o1lpTZEQ4RDlrxrAge36eTr/VVxyi
1ednJJOhbWorP9uLhbN6Jx3My+pAnVO8QsWcDMom+eZvu1n4PFl0I1u7Dg7a
mSEvBE24sbwvrGADC4vLF79USK1F3+FE3rKYJqjMTt4eKyk6T+iZumC5WhwP
idkXr9OExpFT4x4sJsp2VQ4Kwr+AmRGUK9PdCN8BtSxjke9l5pOW2E3W4ES7
L+mOfyMU6odPLU9i4lSrr36JVw04kyeCxFc3oiwvV3HsBhPFD74eXUerhoey
HedGTQPckq92NjoysfjI6psxttUYtDKz+uXRAJmo7VGvDJjwWHn1za/qKvhc
1P3gJ9OAvCviZgHyTJQzWppc9KowlrBeYfBDPZxc6/4e+smAXNqG0fr0Slz+
ohBw2r4e4tZRuZvaGfDyDFLYsqISk0NzWfTJr8gwsj075z0D1Zu6/0uIrkCA
/KSlU9JX2KyXV6ZHM0Aa23RSckYFZu4gsimmX/FrcV9v4VkGfApuh3ufL0eY
e7+sDb8Oif+S7sftZiD4d6nj+4YySMSSrzdE1cFMcGqP5wYGNEPOvb6ZU4rw
wjK62eY6EJ1q4qaSDPRIrfxx8EEJpBk5FuWUWsRWDBetYNFx7X6T0YZrxYiQ
Ssk0vF4L/cxcv58VdGxYcSPsz7HPkNG5vyRPqRa0x1fVyKI+tCNVvbXRpAhx
jqFXN1V/we3Q7YzXN+gI0ehb/mJDIWRDL35Ld/8CTR/xp4GOdGjlR7r5zi/A
43duZsrzv6DTsc7GwYCOvu1G701G8rGi0/5t4vsa+FtEzdWWpyOiVjAp25WH
pKldi5YdqsH/ABiLybw=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.50000000000003`}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -110.12497564560448`}, 
                    Offset[{4., 0}, {7.5, -110.12497564560448`}]}, {{
                    7.5, -67.1188715888133}, 
                    Offset[{4., 0}, {7.5, -67.1188715888133}]}, {{
                    7.5, -21.723539528867068`}, 
                    Offset[{4., 0}, {7.5, -21.723539528867068`}]}, {{7.5, 
                    23.671792531079234`}, 
                    Offset[{4., 0}, {7.5, 23.671792531079234`}]}, {{7.5, 
                    66.6778965878704}, 
                    Offset[{4., 0}, {7.5, 66.6778965878704}]}, {{7.5, 
                    112.07322864781665`}, 
                    Offset[{4., 0}, {7.5, 112.07322864781665`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -110.12497564560448`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.19\"", 0.19, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.1188715888133}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.38\"", 0.38, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -21.723539528867068`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.57\"", 0.5700000000000001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 23.671792531079234`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.75\"", 0.75, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 66.6778965878704}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.94\"", 0.9400000000000001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.07322864781665`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}],
                ",", 
               RowBox[{"{", 
                 RowBox[{"0.5000315616715061`", ",", "1.`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6008721478996211`", ",", "0.19`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"0.7017442957992421`", ",", "0.38`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.8026164436988632`", ",", "0.5700000000000001`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8981795311827148`", ",", "0.75`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"0.5053090604157695`", ",", "0.01`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9990516790823358`", ",", "0.9400000000000001`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.629712140165935*^9, 3.6297121591404657`*^9}, {
   3.629712213899021*^9, 3.629712271754179*^9}, 3.629727870034876*^9, 
   3.6297810236566553`*^9, {3.6306516983196077`*^9, 3.630651703981105*^9}, 
   3.631354354083479*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ts", "=", ".5"}], ",", 
     RowBox[{"tw", "=", "1."}], ",", "vpp", ",", "vpa", ",", 
     RowBox[{"i", "=", "4"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vpp", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"hp", "[", 
        RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"vpa", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"ha", "[", 
        RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vpp", ",", "vpa"}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Thickness", "[", "0.005", "]"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.629714701225523*^9, 3.629714849344342*^9}, {
   3.629716105785215*^9, 3.629716105927026*^9}, 3.630237251838249*^9, {
   3.630237294048691*^9, 3.630237313086751*^9}, {3.630237760644422*^9, 
   3.630237766580049*^9}, {3.6303225412427387`*^9, 3.630322570283801*^9}, {
   3.630651731488184*^9, 3.630651742178548*^9}, {3.630651896816668*^9, 
   3.6306519309298487`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      Thickness[0.005], 
     PointBox[{{1., -1.653588971903085}, {2., -1.3472826172857377`}, {
      3., -1.0908209119139942`}, {4., -0.10287273346865927`}, {5., 
      0.10287273346865926`}, {6., 1.0908209119139947`}, {7., 
      1.3472826172857377`}, {8., 1.6535889719030852`}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      Thickness[0.005], 
     PointBox[{{1., -1.5887048404496422`}, {2., -1.5}, {
      3., -0.9278862533179947}, {4., -0.3391814128683522}, {5., 
      0.33918141286835163`}, {6., 0.9278862533179951}, {7., 
      1.4999999999999998`}, {8., 1.588704840449642}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 8.}, {-1.653588971903085, 1.6535889719030852`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.629714778430171*^9, 3.629714849887615*^9}, 
   3.629716106756033*^9, 3.6297278701078777`*^9, 3.6297810240534363`*^9, {
   3.6302372524070873`*^9, 3.630237262614705*^9}, {3.630237294354787*^9, 
   3.630237313779059*^9}, {3.630237763227715*^9, 3.63023776696189*^9}, {
   3.630322537600935*^9, 3.630322572109023*^9}, {3.630651731993738*^9, 
   3.630651742729219*^9}, {3.630651898217765*^9, 3.630651931210742*^9}, 
   3.631354354669153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mp", ",", "ma", ",", "vpp", ",", "vpa", ",", 
     RowBox[{"i", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mp", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DiscreteDelta", "[", 
         RowBox[{"j", "-", "k", "+", "1"}], "]"}], "+", 
        RowBox[{"DiscreteDelta", "[", 
         RowBox[{"j", "-", "k", "+", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"i", "+", "2"}], "]"}], "-", "1"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"i", "+", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"i", "+", "2"}], "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"mp", "=", 
     RowBox[{"mp", "+", 
      RowBox[{"Transpose", "@", "mp"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ma", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DiscreteDelta", "[", 
         RowBox[{"j", "-", "k", "+", "1"}], "]"}], "-", 
        RowBox[{"DiscreteDelta", "[", 
         RowBox[{"j", "-", "k", "+", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"i", "+", "2"}], "]"}], "-", "1"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"i", "+", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"i", "+", "2"}], "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ma", "=", 
     RowBox[{"ma", "+", 
      RowBox[{"Transpose", "@", "ma"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"vpp", "=", 
     RowBox[{"Sort", "[", 
      RowBox[{
       RowBox[{"Eigenvalues", "[", "mp", "]"}], "//", "N"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"vpa", "=", 
     RowBox[{"Sort", "[", 
      RowBox[{
       RowBox[{"Eigenvalues", "[", "ma", "]"}], "//", "N"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vpp", ",", "vpa"}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Thickness", "[", "th", "]"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.629714701225523*^9, 3.629714849344342*^9}, {
   3.629716105785215*^9, 3.629716105927026*^9}, {3.629716197928388*^9, 
   3.629716258058155*^9}, {3.6297162929062033`*^9, 3.629716341450589*^9}, {
   3.629716672750512*^9, 3.629716683021223*^9}, {3.629716791150813*^9, 
   3.629716940228538*^9}, 3.629717137283866*^9, 3.63023738504351*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      Thickness[$CellContext`th], 
     LineBox[{{1., -1.618033988749895}, {2., -1.618033988749895}, {3., 
      0.6180339887498949}, {4., 0.6180339887498949}, {5., 2.}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      Thickness[$CellContext`th], 
     LineBox[{{1., -2.}, {2., -0.6180339887498949}, {
      3., -0.6180339887498949}, {4., 1.618033988749895}, {5., 
      1.618033988749895}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 5.}, {-2., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6297168219015627`*^9, {3.629716858313561*^9, 3.629716941100848*^9}, 
   3.629727870231476*^9, 3.629781024468895*^9, 3.630237385388156*^9, 
   3.631354354803596*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Partition function", "Subsection",
 CellChangeTimes->{{3.62971257467701*^9, 3.6297125825656147`*^9}}],

Cell[CellGroupData[{

Cell["Spectrum: definitions.", "Subsubsection",
 CellChangeTimes->{{3.6298017359237967`*^9, 3.6298017375079813`*^9}, {
  3.6309344298406067`*^9, 3.63093443473561*^9}}],

Cell["\<\
Note that the effective bands are the largest when tw = ts. In that case and \
for q \[LessEqual] 1 all fractal dimensions should be equal to 1 (and \
therefore \[Tau](q \[LessEqual] 1) = q-1), whereas for we should have \
\[Tau](q \[RightAngleBracket] 1) = q/2. Numerically, the convergence using \
our effective bandwidths is very slow, and the larger q gets, the slower the \
convergence is. This is probably because the bands are so large in that case. \

I do hope that the smaller tw/ts is, the faster the convergence will be!\
\>", "Text",
 CellChangeTimes->{{3.6297819505151176`*^9, 3.629782150655591*^9}, {
  3.6303260562655563`*^9, 3.630326139818005*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Compute", " ", "the", " ", "fractal", " ", "dimension", " ", 
    SubscriptBox["D", "q0"], " ", "for", " ", "a", " ", "system", " ", "of", 
    " ", "size", " ", "fib", 
    RowBox[{"(", 
     RowBox[{"i", "+", "2"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "FractalD", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FractalD", "[", 
     RowBox[{"i_", ",", "tw_", ",", "ts_", ",", "q0_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vpp", ",", "vpa", ",", "vppN", ",", "vpaN", ",", "bandlist", ",", 
        "bandlistN", ",", "gam", ",", "gamN", ",", "\[Tau]0", ",", "\[Tau]", 
        ",", "q"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vpp", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"hp", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vpa", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"ha", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
          "taille", " ", "i"}], "+", 
         RowBox[{"1", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"vppN", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"hp", "[", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", "tw", ",", "ts"}], "]"}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpaN", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"ha", "[", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", "tw", ",", "ts"}], "]"}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
         SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
         " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
         " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
         "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"bandlist", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bandlistN", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpaN", ",", "vppN"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "calcul", " ", "des", " ", "fonctions", " ", "de", " ", "partition", 
         " ", 
         SubscriptBox["\[CapitalGamma]", "i"], " ", "et", " ", 
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{"i", "+", "1"}]]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"gam", "=", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Fibonacci", "[", 
           RowBox[{"i", "+", "2"}], "]"}], 
          RowBox[{"-", "q"}]], 
         RowBox[{"Plus", "@@", 
          SuperscriptBox[
           RowBox[{"(", "bandlist", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"gamN", "=", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Fibonacci", "[", 
           RowBox[{"i", "+", "3"}], "]"}], 
          RowBox[{"-", "q"}]], 
         RowBox[{"Plus", "@@", 
          SuperscriptBox[
           RowBox[{"(", "bandlistN", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        SubscriptBox["D", "q0"], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Tau]0", "=", 
        RowBox[{"\[Tau]", "/.", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["gamN", "gam"], "/.", 
              RowBox[{"q", "\[Rule]", "q0"}]}], ")"}], "-", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Tau]", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[Tau]0"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6211691819490356`*^9, 3.621169295515432*^9}, {
   3.621169329468741*^9, 3.621169363085153*^9}, {3.621169397340905*^9, 
   3.621169439694463*^9}, {3.621169484754628*^9, 3.621169534142599*^9}, {
   3.6211695650579653`*^9, 3.621169565167144*^9}, {3.621169603888824*^9, 
   3.621169719442539*^9}, {3.621169816596427*^9, 3.621169850688087*^9}, {
   3.621169918276724*^9, 3.621169920596176*^9}, {3.6211701269976807`*^9, 
   3.62117013270679*^9}, {3.621239395761104*^9, 3.621239437159552*^9}, {
   3.621239477620801*^9, 3.6212394863384867`*^9}, {3.62123954621198*^9, 
   3.621239555475575*^9}, {3.621239596547036*^9, 3.621239599810574*^9}, {
   3.621243910992449*^9, 3.621243924607359*^9}, {3.6212523773171473`*^9, 
   3.6212524542169657`*^9}, {3.621252615229805*^9, 3.621252621595336*^9}, {
   3.621252684554472*^9, 3.6212527627959633`*^9}, {3.621254763938423*^9, 
   3.621254832689102*^9}, {3.621254898555005*^9, 3.6212549880271807`*^9}, {
   3.6212550569724073`*^9, 3.621255130353402*^9}, {3.621255165503927*^9, 
   3.621255165669924*^9}, {3.621255236170961*^9, 3.621255317108671*^9}, {
   3.6212553506865053`*^9, 3.621255433971394*^9}, {3.621255554506341*^9, 
   3.621255719417079*^9}, {3.6212557528109922`*^9, 3.621255804806408*^9}, {
   3.621256200293274*^9, 3.6212562057751617`*^9}, {3.621256303129624*^9, 
   3.6212563659405737`*^9}, {3.6212564185715218`*^9, 
   3.6212566257600307`*^9}, {3.621256663489665*^9, 3.621256693739643*^9}, {
   3.621256815349419*^9, 3.621256826647785*^9}, {3.621274846476047*^9, 
   3.621275145065218*^9}, {3.621275179862084*^9, 3.621275239908601*^9}, {
   3.6212752837980957`*^9, 3.6212753122612953`*^9}, {3.62127536277396*^9, 
   3.6212753860347633`*^9}, {3.621275442043687*^9, 3.6212755539844847`*^9}, 
   3.621315525059228*^9, {3.621315559557263*^9, 3.62131556011205*^9}, {
   3.621315675637495*^9, 3.621315761430065*^9}, 3.621315880152614*^9, {
   3.621316026405932*^9, 3.621316026559977*^9}, {3.621316058136022*^9, 
   3.621316113404099*^9}, {3.621316542094945*^9, 3.6213166074047194`*^9}, {
   3.621316650464574*^9, 3.621316651774397*^9}, {3.621316694033931*^9, 
   3.621316695104101*^9}, {3.6213167721142597`*^9, 3.621316907228303*^9}, {
   3.621317006334161*^9, 3.621317031454398*^9}, {3.62131711995912*^9, 
   3.621317148921311*^9}, {3.6213171895292883`*^9, 3.6213172019910994`*^9}, {
   3.6213173273216333`*^9, 3.621317356008131*^9}, {3.62131739719526*^9, 
   3.6213174833129873`*^9}, {3.621317541148703*^9, 3.6213175881099997`*^9}, {
   3.621317618544965*^9, 3.621317711316963*^9}, {3.6213240564859943`*^9, 
   3.621324056627421*^9}, {3.621324812826556*^9, 3.621324812988461*^9}, {
   3.6213249815414677`*^9, 3.62132506531719*^9}, {3.621325152055851*^9, 
   3.6213251675578127`*^9}, {3.6213253984101343`*^9, 3.621325408296276*^9}, {
   3.621325461880583*^9, 3.621325474762186*^9}, {3.629782254181913*^9, 
   3.6297822615746937`*^9}, {3.629782553292482*^9, 3.629782694354497*^9}, {
   3.629782864914342*^9, 3.629782911673861*^9}, {3.6297978718412313`*^9, 
   3.629797876479764*^9}, 3.629800296542354*^9, {3.6300628322352657`*^9, 
   3.630062854536314*^9}, 3.6309340779858627`*^9, {3.630999229350051*^9, 
   3.630999232293893*^9}}],

Cell[TextData[{
 "On a ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Tau]", "(", 
     RowBox[{"q", " ", ">", " ", "1"}], ")"}], " ", "=", 
    RowBox[{"q", "/", "2"}]}], TraditionalForm]]],
 " et \[Tau](q \[LessEqual] 1) = q-1 quand ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "w"], "=", 
    SubscriptBox["t", "s"]}], TraditionalForm]]],
 ". \[Rule] singularit\[EAcute]s de van Hove !"
}], "Text",
 CellChangeTimes->{{3.6300589155174713`*^9, 3.630059034916198*^9}, {
  3.6300590780687923`*^9, 3.630059078068841*^9}, {3.6303261864422483`*^9, 
  3.630326196362187*^9}, {3.6303262589872923`*^9, 3.630326309170233*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FractalD", "[", 
  RowBox[{"13", ",", "1.", ",", "1.", ",", 
   RowBox[{"-", "20"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.630058889714172*^9, 3.630058895697246*^9}, 
   3.630059006146201*^9, {3.63005906557206*^9, 3.63005908873829*^9}, {
   3.630236935098055*^9, 3.630236941193219*^9}, {3.6303002545182877`*^9, 
   3.6303002889823427`*^9}, 3.6306520667026987`*^9}],

Cell[BoxData[
 RowBox[{"-", "21.00002980747413`"}]], "Output",
 CellChangeTimes->{
  3.630058897119686*^9, 3.6300590075223846`*^9, {3.630059068466001*^9, 
   3.6300590897139263`*^9}, {3.630062841196278*^9, 3.630062858994668*^9}, {
   3.630236915072135*^9, 3.630236942681747*^9}, 3.630300291529416*^9, 
   3.630326359865963*^9, {3.630652050480825*^9, 3.630652067965557*^9}, 
   3.63099838649848*^9}]
}, Open  ]],

Cell[TextData[{
 "Because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SuperscriptBox["\[CapitalGamma]", 
      RowBox[{"n", "+", "1"}]], 
     SuperscriptBox["\[CapitalGamma]", "n"]], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Omega]", "q"], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"\[CapitalSigma]", "(", 
         SuperscriptBox["\[CapitalDelta]", 
          RowBox[{"n", "+", "1"}]], ")"}], 
        RowBox[{"-", 
         RowBox[{"\[Tau]", "(", "q", ")"}]}]], 
       SuperscriptBox[
        RowBox[{"\[CapitalSigma]", "(", 
         SuperscriptBox["\[CapitalDelta]", "n"], ")"}], 
        RowBox[{"-", 
         RowBox[{"\[Tau]", "(", "q", ")"}]}]]]}], "=", "1"}]}], 
   TraditionalForm]]],
 " it is hard to compute \[Tau](q) but easy to get q(\[Tau]).\nWe have\nq(\
\[Tau]) = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["B", "n"], "(", "\[Tau]", ")"}], "-", 
     RowBox[{
      SuperscriptBox["B", 
       RowBox[{"n", "+", "1"}]], "(", "\[Tau]", ")"}]}], 
    RowBox[{"Log", "(", "q", ")"}]], TraditionalForm]]],
 "\nwhere\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["B", "n"], "(", "\[Tau]", ")"}], "=", 
    RowBox[{"Log", "[", 
     SuperscriptBox[
      RowBox[{"\[CapitalSigma]", "(", 
       SuperscriptBox["\[CapitalDelta]", "n"], ")"}], 
      RowBox[{"-", "\[Tau]"}]], "]"}]}], TraditionalForm]]],
 "\n\nNext, we want to compute f-\[Alpha]. Easy!\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Alpha]", 
     RowBox[{"(", "\[Tau]", ")"}]}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q", "'"}], 
       RowBox[{"(", "\[Tau]", ")"}]}], ")"}], 
     RowBox[{"-", "1"}]]}], TraditionalForm]]],
 "\nand\nf(\[Alpha](\[Tau])) = q(\[Tau])\[Alpha](\[Tau]) - \[Tau]"
}], "Text",
 CellChangeTimes->{{3.630056528491438*^9, 3.630056846829728*^9}},
 Background->GrayLevel[0.5]],

Cell[TextData[{
 "For q<0, it seems to converge way better if we compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[CapitalGamma]", 
     RowBox[{"n", "+", "2"}]], "/", 
    SuperscriptBox["\[CapitalGamma]", "n"]}], TraditionalForm]]],
 " rather than ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[CapitalGamma]", 
     RowBox[{"n", "+", "1"}]], "/", 
    SuperscriptBox["\[CapitalGamma]", "n"]}], TraditionalForm]]],
 ". Why?"
}], "Text",
 CellChangeTimes->{{3.6300627709632883`*^9, 3.6300628117642117`*^9}, {
  3.630146092697604*^9, 3.630146103112335*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Return", " ", "banlists"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BandLists", "[", 
    RowBox[{"i_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "vpp", ",", "vpa", ",", "vppN", ",", "vpaN", ",", "bandlist", ",", 
       "bandlistN"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
        "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vpp", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{"hp", "[", 
          RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vpa", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{"ha", "[", 
          RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i"}], "+", 
        RowBox[{"1", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"vppN", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{"hp", "[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "tw", ",", "ts"}], "]"}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vpaN", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{"ha", "[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "tw", ",", "ts"}], "]"}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
        SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
        " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
        " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
        "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"bandlist", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bandlistN", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"vpaN", ",", "vppN"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"bandlist", ",", "bandlistN"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.630061816369611*^9, 3.6300618590053577`*^9}, {
  3.63006216657314*^9, 3.630062166752334*^9}, {3.630062874548841*^9, 
  3.63006287478664*^9}, {3.630135391192319*^9, 3.6301353950944757`*^9}, {
  3.6301356293623466`*^9, 3.630135630440021*^9}, {3.630148064857503*^9, 
  3.630148065892816*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Plot", " ", "\[Tau]"}], " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", 
       RowBox[{"(", "\[Tau]", ")"}]}], ",", 
      RowBox[{"f", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", 
         RowBox[{"(", "\[Tau]", ")"}]}], ")"}]}]}], "}"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "FractalFa", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FractalFa", "[", 
     RowBox[{
     "\[Tau]min_", ",", "\[Tau]max_", ",", "bandlist_", ",", "bandlistN_"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "alpha", ",", "f", ",", 
        RowBox[{"om", "=", 
         RowBox[{"N", "[", 
          RowBox[{"2", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox["5"]}], ")"}]}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"q", 
        RowBox[{"(", "\[Tau]", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"q", "=", 
        FractionBox[
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"Plus", "@@", 
            SuperscriptBox[
             RowBox[{"(", "bandlist", ")"}], 
             RowBox[{"-", "\[Tau]"}]]}], "/", 
           RowBox[{"Plus", "@@", 
            SuperscriptBox[
             RowBox[{"(", "bandlistN", ")"}], 
             RowBox[{"-", "\[Tau]"}]]}]}], "]"}], 
         RowBox[{"Log", "[", "om", "]"}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q", ",", "\[Tau]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", 
              RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<q\>\"", ",", "\"\<\[Tau](q)\>\""}], "}"}]}]}], 
           "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"alpha", "=", 
        RowBox[{"1.", "/", 
         RowBox[{"D", "[", 
          RowBox[{"q", ",", "\[Tau]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ParametricPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"alpha", ",", 
           RowBox[{
            RowBox[{"alpha", " ", "q"}], "-", "\[Tau]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "\[Tau]min", ",", "\[Tau]max"}], "}"}], ",", 
         
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<f(\[Alpha])\>\""}], 
           "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.63005647255903*^9, 3.630056500606288*^9}, {
   3.630056875825981*^9, 3.6300571001143827`*^9}, {3.630057135587247*^9, 
   3.6300571704664087`*^9}, {3.63005720099615*^9, 3.6300572419572983`*^9}, {
   3.630057319687047*^9, 3.630057392535811*^9}, {3.630057428329883*^9, 
   3.630057466968395*^9}, {3.6300580384387493`*^9, 3.630058076089065*^9}, {
   3.630058275089724*^9, 3.630058363710493*^9}, {3.6300584000202303`*^9, 
   3.630058401704073*^9}, {3.630058818209736*^9, 3.630058819736697*^9}, {
   3.630058853291566*^9, 3.63005885356142*^9}, {3.630059200133615*^9, 
   3.6300592357070007`*^9}, {3.630059381880189*^9, 3.630059471858294*^9}, {
   3.6300595069754047`*^9, 3.630059507045183*^9}, {3.630059542834365*^9, 
   3.630059635808258*^9}, 3.63005967110242*^9, {3.630059891681471*^9, 
   3.630059925040009*^9}, {3.630059963526725*^9, 3.6300599715691557`*^9}, {
   3.630060232197184*^9, 3.630060317813719*^9}, {3.6300604227742243`*^9, 
   3.630060481107356*^9}, 3.6300606140871143`*^9, {3.630060653400074*^9, 
   3.630060675781518*^9}, {3.6300608157986593`*^9, 3.630060818451187*^9}, {
   3.630061204326743*^9, 3.6300613261065493`*^9}, {3.6300615150227127`*^9, 
   3.630061515089656*^9}, {3.6300615586198893`*^9, 3.630061562603088*^9}, {
   3.6300618809385977`*^9, 3.63006196030389*^9}, {3.630062001455097*^9, 
   3.630062017631666*^9}, {3.630062095347003*^9, 3.6300621460477753`*^9}, {
   3.63006218582692*^9, 3.6300622376463957`*^9}, {3.6300625740471354`*^9, 
   3.630062588622151*^9}, {3.630062673394683*^9, 3.630062705169999*^9}, {
   3.6301354017762623`*^9, 3.630135402012823*^9}, {3.6301356958599463`*^9, 
   3.630135697878994*^9}, {3.630147948510893*^9, 3.6301479497780857`*^9}, {
   3.630147980133053*^9, 3.6301480331775913`*^9}, {3.63014809060937*^9, 
   3.630148113918391*^9}}],

Cell[TextData[{
 "In the \[Rho] = 1 case, we find two possible values for \[Alpha]:\n\
\[Alpha](q > 1) = 1/2\n\[Alpha](q \[LessEqual] 1) = 1\nand for f:\nf(1/2) = 0\
\nf(1) = 1\n\nInterpretation:\nIf we call ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["\[CapitalDelta]", "a"], "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " bandwidth of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " approximant, we have\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "/", 
     SubscriptBox["F", "n"]}], "\[Tilde]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox[
       SubscriptBox["\[CapitalDelta]", "a"], "n"], ")"}], 
     RowBox[{"\[Alpha]", "(", "a", ")"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as n\[Rule]\[Infinity].\nThus, in the \[Rho]=1 case, there is only 2 types \
of bandwidths, the ones that behave as ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "/", 
      SubscriptBox["F", "n"]}], ")"}], "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", giving \[Alpha]=1/2, and the ones that behave as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SubscriptBox["F", "n"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", giving \[Alpha]=1. f(1/2)=0 implies that the bands of width ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "/", 
      SubscriptBox["F", "n"]}], ")"}], "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " form a set of 0 Hausdorff dimension (a countable set!).\n\nIn the \[Rho]=1 \
case, we can compute explicitely the bandwidths. We find\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[CapitalDelta]", "a"], "n"], "\[Tilde]", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4", " ", 
       RowBox[{"\[Pi]", "/", 
        SubscriptBox["F", "n"]}]}], ")"}], " ", 
     RowBox[{"sin", "[", 
      RowBox[{
       RowBox[{"2", " ", "a", " ", 
        RowBox[{"\[Pi]", "/", 
         SubscriptBox["F", "n"]}]}], " ", "+", " ", 
       RowBox[{"\[Pi]", "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          SubscriptBox["F", "n"]}], ")"}]}]}], "]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", a \[Element] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", 
     SubscriptBox["F", "n"]}], "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \nAnd indeed, at the edges of the spectrum, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[CapitalDelta]", "a"], "n"], "\[Tilde]", 
    RowBox[{"8", 
     RowBox[{
      SuperscriptBox["\[Pi]", "2"], "/", 
      SuperscriptBox[
       SubscriptBox["F", "n"], "2"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". This quadratic behavior is found only at the edges of the spectrum. It is \
thus the 2 edges that give rise to the \[Alpha]=1/2 exponent. The \
aformentioned countable set of 0 Hausdorff dimension is thus made of just 2 \
points. These 2 points are accumulation points for the energy levels!\n\nIf \
we compute numerically the Legendre transform of \[Tau] for a finite size \
system, we find a continuum of values of \[Alpha] ranging from 1/2 to 1.\nWe \
check that indeed f(1/2) = 0, f(1) = 1."
}], "Text",
 CellChangeTimes->{{3.630326889486549*^9, 3.630327026255906*^9}, {
  3.630835270070361*^9, 3.630835760553514*^9}, {3.63083580053901*^9, 
  3.630835979066787*^9}, {3.630836038293645*^9, 3.630836103531453*^9}, {
  3.630836211340694*^9, 3.630836367053728*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", ",", "bnew"}], "}"}], "=", 
   RowBox[{"BandLists", "[", 
    RowBox[{"10", ",", "1.", ",", "1."}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.630061973469783*^9, 3.630062012933276*^9}, {
   3.6300668683099413`*^9, 3.630066868404833*^9}, {3.630066981813126*^9, 
   3.6300669819562483`*^9}, {3.630067081207734*^9, 3.630067081413764*^9}, {
   3.630135503147581*^9, 3.630135523477737*^9}, 3.630135581011272*^9, 
   3.630135798119166*^9, {3.630135828160215*^9, 3.6301358762867937`*^9}, {
   3.630140019317506*^9, 3.630140019588505*^9}, {3.630326397232727*^9, 
   3.630326398303049*^9}, {3.630934110788055*^9, 3.6309341108825483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"FractalFa", "[", 
   RowBox[{
    RowBox[{"-", "2"}], ",", "50", ",", "b", ",", "bnew"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.630058372477997*^9, 3.63005837798029*^9}, {
   3.630058453280302*^9, 3.630058473102063*^9}, {3.630058552240181*^9, 
   3.630058552429682*^9}, {3.630059328485642*^9, 3.630059358548295*^9}, {
   3.63005968016672*^9, 3.630059709463615*^9}, {3.63006018446012*^9, 
   3.630060218139885*^9}, 3.630060333805633*^9, {3.630060498110076*^9, 
   3.6300604982049847`*^9}, {3.630060655535615*^9, 3.630060661965768*^9}, {
   3.630060739552395*^9, 3.630060768158246*^9}, {3.6300611464041348`*^9, 
   3.630061154258676*^9}, {3.630061569653989*^9, 3.63006158714393*^9}, {
   3.6300616378329563`*^9, 3.630061644728045*^9}, {3.630061723414085*^9, 
   3.630061765975281*^9}, {3.630061965383518*^9, 3.6300619917820797`*^9}, {
   3.630062241303319*^9, 3.630062280982089*^9}, {3.630066708356213*^9, 
   3.6300667085319843`*^9}, {3.630067096070774*^9, 3.630067118631485*^9}, {
   3.630067735322453*^9, 3.630067735481496*^9}, {3.630135419385337*^9, 
   3.630135456435356*^9}, {3.630135490926878*^9, 3.63013549484098*^9}, {
   3.63013556086341*^9, 3.630135601055797*^9}, {3.630135833745173*^9, 
   3.6301358373452053`*^9}, 3.6301400338843393`*^9, {3.630140182652651*^9, 
   3.630140206971506*^9}, {3.6303264440674753`*^9, 3.63032647188953*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
+Rvv9eV0
     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Alpha]\"", TraditionalForm], 
    FormBox["\"f(\[Alpha])\"", TraditionalForm]},
  AxesOrigin->{0.5, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.630058378356152*^9, {3.630058455021328*^9, 3.630058473639366*^9}, 
   3.6300585538901663`*^9, 3.630058823884262*^9, 3.630058856614519*^9, {
   3.6300592181125307`*^9, 3.630059238287283*^9}, {3.630059330686429*^9, 
   3.63005936085931*^9}, {3.6300594548091087`*^9, 3.630059483542383*^9}, 
   3.630059526598765*^9, {3.6300595975100183`*^9, 3.6300596398008137`*^9}, {
   3.630059675036908*^9, 3.6300597120734777`*^9}, {3.630059899596788*^9, 
   3.63005992876022*^9}, {3.630059968125025*^9, 3.630059975309733*^9}, {
   3.63006018550384*^9, 3.630060339255389*^9}, {3.6300604293814774`*^9, 
   3.630060512288378*^9}, {3.630060628697667*^9, 3.630060682082139*^9}, {
   3.630060741467823*^9, 3.630060773185281*^9}, 3.630060832863062*^9, {
   3.630061150666542*^9, 3.6300611663502407`*^9}, 3.63006124114648*^9, {
   3.630061289309884*^9, 3.630061339976408*^9}, 3.630061530208022*^9, {
   3.6300617189220753`*^9, 3.630061723956256*^9}, {3.630061761275394*^9, 
   3.630061766873662*^9}, {3.630061992503858*^9, 3.630062026762755*^9}, {
   3.630062106039592*^9, 3.630062148885303*^9}, 3.630062200776146*^9, {
   3.630062254475292*^9, 3.630062289566695*^9}, 3.630062601340679*^9, 
   3.630066717493219*^9, 3.630066871423935*^9, 3.63006698541324*^9, {
   3.6300671041293077`*^9, 3.630067124064642*^9}, 3.630067744052649*^9, {
   3.630135415621593*^9, 3.630135457115741*^9}, {3.630135491555621*^9, 
   3.630135519994429*^9}, {3.630135556899925*^9, 3.630135601557763*^9}, 
   3.630135644075605*^9, 3.630135701689713*^9, {3.6301358001415167`*^9, 
   3.63013587766516*^9}, {3.6301400257619553`*^9, 3.630140034658801*^9}, {
   3.630140092325766*^9, 3.630140102953929*^9}, {3.630140183641675*^9, 
   3.6301402114218283`*^9}, {3.63014796457407*^9, 3.630148042235547*^9}, {
   3.630148077674634*^9, 3.6301480959065228`*^9}, 3.630326409206265*^9, {
   3.6303264469409513`*^9, 3.630326474343203*^9}, {3.630934099691091*^9, 
   3.630934112861804*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", ",", "bnew"}], "}"}], "=", 
   RowBox[{"BandLists", "[", 
    RowBox[{"14", ",", ".1", ",", "1."}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.630061973469783*^9, 3.630062012933276*^9}, {
   3.6300668683099413`*^9, 3.630066868404833*^9}, {3.630066981813126*^9, 
   3.6300669819562483`*^9}, {3.630067081207734*^9, 3.630067081413764*^9}, {
   3.630135503147581*^9, 3.630135523477737*^9}, 3.630135581011272*^9, 
   3.630135798119166*^9, {3.630135828160215*^9, 3.6301358762867937`*^9}, {
   3.630140019317506*^9, 3.630140019588505*^9}, {3.630326397232727*^9, 
   3.630326398303049*^9}, {3.63032709248384*^9, 3.6303270934753113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"FractalFa", "[", 
   RowBox[{
    RowBox[{"-", "2"}], ",", "12", ",", "b", ",", "bnew"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.630058372477997*^9, 3.63005837798029*^9}, {
   3.630058453280302*^9, 3.630058473102063*^9}, {3.630058552240181*^9, 
   3.630058552429682*^9}, {3.630059328485642*^9, 3.630059358548295*^9}, {
   3.63005968016672*^9, 3.630059709463615*^9}, {3.63006018446012*^9, 
   3.630060218139885*^9}, 3.630060333805633*^9, {3.630060498110076*^9, 
   3.6300604982049847`*^9}, {3.630060655535615*^9, 3.630060661965768*^9}, {
   3.630060739552395*^9, 3.630060768158246*^9}, {3.6300611464041348`*^9, 
   3.630061154258676*^9}, {3.630061569653989*^9, 3.63006158714393*^9}, {
   3.6300616378329563`*^9, 3.630061644728045*^9}, {3.630061723414085*^9, 
   3.630061765975281*^9}, {3.630061965383518*^9, 3.6300619917820797`*^9}, {
   3.630062241303319*^9, 3.630062280982089*^9}, {3.630066708356213*^9, 
   3.6300667085319843`*^9}, {3.630067096070774*^9, 3.630067118631485*^9}, {
   3.630067735322453*^9, 3.630067735481496*^9}, {3.630135419385337*^9, 
   3.630135456435356*^9}, {3.630135490926878*^9, 3.63013549484098*^9}, {
   3.63013556086341*^9, 3.630135601055797*^9}, {3.630135833745173*^9, 
   3.6301358373452053`*^9}, 3.6301400338843393`*^9, {3.630140182652651*^9, 
   3.630140206971506*^9}, {3.6303264440674753`*^9, 3.63032647188953*^9}, {
   3.630327116710569*^9, 3.63032718173501*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwl13c8V98fB3AhI0KZlcw0VPbIyBERsouKb5GKyCpE34giJNlEIaWEpCIj
DUIkJR/3Ek0jDRRJX4rq97p+f70ez89d55z7vuecj6ybn/0+djY2tiVz2NiY
XJXcJylA0yR+y7XPzxZQZJr3v7YrFE0KGx1rvgpTpKkw4Np6eKK12mq+GEXi
xgoHfDpoonGG66HxYop4fxuzbW+nyf7TmVPpchTZJZgmlfOMJnmq3pfa1SjC
t830hGMzTUQeX80usKPI5eQFhmZ3aWIrdM9O+BRF9Mv4rvbX0MSyfO748ziK
DHJfJGHwzRaFjXHxFPn5LGNu+R2azKjmcEwlUiR4QcR7mWqapLVsE6/OoMhU
dsPI3AqaLPtYwGrNp8jTZS8X/ShFe1I/Jm++R5G89ts30+HHnnqqD+9TJJH7
S4gWLNQufVOjliIb+X1yQq7D4VvtRespYjrlpfX3Gk1ir0bb3m+miBS7eYFo
EU1u940GFnVQxNKs/oBHPk3MBvndZz5QRK/OcKEIPLMla5fkJ4pYGR0fqLuE
/oTvvqz7mSJ37xlwLYH199tKHhqmyI4hd0tWHk32ztv+9ukoRWwDtXtMcvG8
0tibalMY/03K/dZZOH+ot7qZmya3vAdfscGK3G3ny3locuQDF1t5Jk2Udlp/
y+GlSVVeeLM47J9TNuXDh/u6frMfyKBJXMD1rGkBmpw9wb/jRBpNnOYFrWoT
pYnoyYx5vYk0Kc5vK9guR5M7GzZWZ8IlOz/5LpDHfQOtE+xgrdKnrx/D6x56
ljck0ETsgEOpugJNeDQc+orOYDzHuDb9XIHrT5Q/DjtNk4L8amOTtWi3TkOR
cQxNooTj53/SwjgZhDrPgd3kTpUEa9PE956QZm00TVJiNEW41tHkqEiNix5c
P/19g7QOTd4LJaRonqTJPKH9msZ6NNkZIe2lGkmTp4/6fe0JTTZb2z4wDcf7
Vzt8L90UdfIkRoUTbn+XF8e7iSal5p/aHx5D/9h1hUPhthvc2eth3yMqO3aa
0aT6xYSTdhhNzq06+FbIAnUjwR6kfhT367r1V98K/V+zpen7v7hPXKREDvwg
d6vJbVgnK3HODBwab/ZUExZSqTevtKYJ653Qb90jNLEaD+iWtKVJblJnv1Uw
TTI87ZaW29NkzdRmvgXwA4+3r9i20MS4dtiVPkwT67taEVbw5czIVGfYZN/l
8AF4h7aYqHcQfu/rPcbugP7X5h1PD6DJJ0frovnbaHLdckeIM9y+/cJeC/jL
lcvnZeEbi+cuiYYvdrd6lB6iSZa047FfcJT9BtEnB2lCur4Yv9hOk91T1Xd5
/VHPux6P7XaiSSbvNYUuP5oEDfHMiYftzr+tuAQrbdMwrIBDbT+Y6cNrTCJt
5jrj/JNH1h30RX35Bj4/D+cEH6EM4BGR44G1cGTRwTR+eCzknW0/bKqgEFvo
Q5N/Pz4oV/iHJp5vz2j2e+O9/VQn+bBJosnfm7Cu+8zdOriisfBrOGz1dH/I
GzjD3sJACu5Vtr0tspMmTSP9F/45gPqwWOfwL9ws3pu+hvG7OSPJMHV03a0Z
L3wvJ689KYSPVrK25cBJKyr30PALlRN7ej1pEp2vKSu/iyaDTZqRt+BQ1URh
TVi8YKz5BMyp8cXBFE5UsqtTgMPdH7a5w7aKfQGT+/Fd/NHjPgw/FLaybIGT
uxtSo+B1N+IP+MDLrv8tuQBX6lmUEVip9bZeCRznVbV0Ifz84BG5angFR8v1
9x6YH1dYuTXAzfcD3Krg3ZzKM8/ga8YlenFwZsXSby/gFCUPnZ2wfYi4UR88
YaN1iQNmTcvNfINbfdTnv3CnSTqPssdPuLc2KrsYlrivq8bmQhO1NCnbY3Cu
nNEuLthj5Y8V9rD8c8MRPrju2oz8cnjze9U3QrDV+lUbf+1DPwSE1ERhyy++
sW0w18nOYQmYdffh2CVYkDuUTxLWPCcaFgz/ej2TLAV/99y11hL277KNkIG/
ziTOkYVvmfu/kIWLRXN//tiLcVy4JVMOVvEIFW2FY1PGGhi3p0k55MGj14kz
4y+qIdVBMN8zLRfmeumGULIZXv+ytV0a3qTr6boU/jb1MnQpHP1k8bXRPTTJ
DnYMX8xcb3dcuh6WcwrqEYMNsuLvp8Fzx33iF8Ij9mtOesA8b4Ky5sN/l9ge
1oUHOern8MCOoR+T5sOyWdFNc2D9wT66140mgeKTn35hvHvKlIxuw82Gpl7f
4azV97tj4PuSBZuH4cDw0Exn2HByU0I/fKXF+bgynOnyj3oP3ClgkcoBFy4X
1n8O7zTQanuxG+955/miRrisuOFBBKyV0111HebdYRToADf++eh0kalH6oi9
Ivw4IswjDd4j8yyWdkU9SX98GMLUx+1HvUVw6V7BhV6w6DmV3eGw3CL3did4
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
     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Alpha]\"", TraditionalForm], 
    FormBox["\"f(\[Alpha])\"", TraditionalForm]},
  AxesOrigin->{0.314, 0.27},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6303271033576727`*^9, 3.630327184862311*^9}}]
}, Open  ]],

Cell["\<\
In the framework of the asymptotic formulas, if \[Rho] < 1/8, \[Alpha] is an \
increasing function of the parameter x, while it is decreasing in the other \
case. 
So it seems that the validity of the asymptotic formulas is \[Rho] < 1/8.\
\>", "Text",
 CellChangeTimes->{{3.630329359615217*^9, 3.630329454511839*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]", "=", 
   RowBox[{"1", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"om", "=", 
   RowBox[{"N", "[", 
    RowBox[{"2", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SqrtBox["5"]}], ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"\[Rho]", "/", "2"}]}], ";", 
  RowBox[{"barz", "=", 
   SuperscriptBox["\[Rho]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Log", "[", "om", "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Log", "[", "z", "]"}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", "x"}]}], ")"}], "/", "3"}], 
       RowBox[{"Log", "[", "barz", "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Alpha]", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.630328921488286*^9, 3.6303290002776937`*^9}, 
   3.630329065001307*^9, {3.630329462906506*^9, 3.630329468121027*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV0ns01HkYBnC6RzmTddmxLmGazWiSS3ZnxaMLkZTbRDfrjEa1sRTZ1HYU
qXUbWs7uJqKEVQ5DWYUy4jCJxvCdmtXwo4tuVqmGs93sd/94z3s+fz3nPO9r
LYoNEs/Q0dHxp/P/3iB+ppQ99/IoFnybacQieFq9RcSwOTj1VhhgSW2ir5Jc
Ybtgl+NR46XUywVGZUXsdXAWPCt2o/6u11n6KzsEZYdX1IuoZWfbVmazd8FI
mT4ipU49nnkog50AMT9itf8igl0Jr9jp7BPQqzlncdKQYF6+7/nXE/ngVD1/
v8yYoKHXaf16y2JsuZx8tMKUICxVM9CWeRHm3OElJmYEsbXx/D/eVaIwlIdG
c4I3uffkuro1+MbAYcDRikDe2tGiWFUHhW3EbMaaYG+S78KtY1chKmFHHuMQ
tM53mq6KaUCiXGuh5RKUl7Z/NlvSCIGEl1tsR+BpcuNCcHUzGrtHN1osI+B3
aq518FpQUac1yVlOQDyDxyvHZRiebLzp6kgQrbevT7XiFnxu22bXOhPcUYfe
MJC0oeP23TCRK0Gwd9jI48ftiHtQ4TFXQOBakhlawulA61eu3GQ3guHPeWRP
cifaWiVOfA+CJ76KUpM2OTTHVPxqTwLpGSZJad2FwiJVjHgtQdkvM9PtDt9B
MWloZHkTaCO3vYhq6sZ8Fk8p8SHQX3cyqNb0LnI3bwtZ60fwM+vJgpEdCtSX
mEm6/AkW3LTXue/fC33ljWqvAAL3xM2f2t73QpwSGDkVRFB4MavUtlCJfyZ6
Ko8ICcKFLj3z/frQFHvwomsYQb1KnHdzsg8hKZy8J9sIBN3SGaO/9SNudNZ4
1E6CxV5R2rx1BGfmJCyxiiBY6bLy9NVRmuvytL5SRMC8yb5dmqZCkdk8o6Vi
gjHnwDS20z0Ml3snDu4m4L7kv9Dtvwfus4wF4h8I2jkH++KO38dkXXynbQxB
DlFFBnHUuB724cLVWIJXwbLTM9rVcLRP8hAcIKgTGq8V7P8bTfEVXG0CQWlP
atFDwwEsLJ+tl/oTwVTnjiOGtwZQnqC73ecw7f90i5b14wPoL45M0j1KMKl0
Y6cYaCAajY3OSiaIy7eRJTVrUOQbPrkphcC0x4b1OHwQ5jai1Y9O0Puqqj6a
fx5Euvt5p32n6D9+fz5ac2kI18X8R7wMgpaImjSDjQymHec4NGcRNCqi/YY2
Mfgi40BFJ/VfHrxF1YEMvKQvrfqpq8zLCv1DGWzfPWvRC+oCdcGVLBGD4hTF
W9NsgoMBJ0f0khiEHOtuiqe299zpPrecgWS5SGgvof3VmM28/yeDqfg9Cldq
G0u1vPwyA37GEd811F9+DArxrmUgtJO7b6Wec81nX1ozgzGXD9xT1CMOLmdm
9jPQz5d/eEitOTcR3q9iEPD6bOI4tXphDadUzaDB8ueJf6nvvrSTrhlisOmN
6Ckrh6C5wqrz+HMGA4ld/R7U10wGswLHGJyNmrV5A/WVtIIg61cMeHZ+XULq
S5HGQ7J3DAy/npZFU5f19ZXmTjHIE0WvOkRdsjp3b8R7Bm77RxtSqQul/g4r
PjGwCI5xzqH+3UpfOz3NIHCebk0B9X+DoWGt
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.31320000000000003`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->NCache[{{0, 
      Rational[1, 2]}, {0.31348146052996556`, 0.32126490679013836`}}, {{
     0, 0.5}, {0.31348146052996556`, 0.32126490679013836`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.630328946669367*^9, 3.630329000701695*^9}, 
   3.630329065256607*^9, {3.6303294634913883`*^9, 3.630329468418524*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Spectrum: tests", "Subsubsection",
 CellChangeTimes->{{3.6297830383534937`*^9, 3.629783040370165*^9}, {
  3.630934439584073*^9, 3.630934443103944*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "asymptotically", " ", "exact", " ", "solution", " ", "in", " ", "the", 
     " ", "\[Rho]"}], "\[Rule]", 
    RowBox[{"0", " ", "limit"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"exactFD", "[", 
    RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]", "=", 
        RowBox[{"1", "/", "GoldenRatio"}]}], ",", "z", ",", "barz"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "=", 
       RowBox[{"\[Rho]", "/", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"barz", "=", 
       SuperscriptBox["\[Rho]", "2"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", 
           SuperscriptBox["\[Omega]", 
            RowBox[{"2", "q"}]], 
           SuperscriptBox["z", 
            RowBox[{"-", "\[Tau]"}]]}], "+", 
          RowBox[{
           SuperscriptBox["\[Omega]", 
            RowBox[{"3", "q"}]], 
           SuperscriptBox["barz", 
            RowBox[{"-", "\[Tau]"}]]}], "-", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "10"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.629798193788785*^9, 3.629798405731872*^9}, {
  3.629798466150777*^9, 3.62979860703059*^9}, {3.6297991022349463`*^9, 
  3.6297991036262293`*^9}, {3.629799140424952*^9, 3.629799178427417*^9}, {
  3.629799608777028*^9, 3.629799612375828*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stop", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"d0", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"FractalD", "[", 
     RowBox[{"i", ",", 
      RowBox[{"1", "/", "10."}], ",", "1.", ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "start", ",", "stop"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.629782946853716*^9, 3.629782987925283*^9}, {
  3.629783021576394*^9, 3.6297830216831093`*^9}, {3.629783121186234*^9, 
  3.629783141012865*^9}, {3.629783441943953*^9, 3.6297834421017637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "4"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 4],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629793531493142*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "6"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 6],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629793531530714*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "8"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 8],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629793531575755*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "10"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 10],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6297935316271553`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 5],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6297935316826057`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "7"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 7],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629793531690667*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "9"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 9],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629793531744977*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "11"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 11],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6297935317527227`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "12"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 12],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6297935318309917`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "13"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 13],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629793531993123*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "14"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 14],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.62979353233255*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "15"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 15],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629793533770681*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "16"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 16],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629793539439876*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "17"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 17],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629793566889359*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "18"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 18],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629793647786108*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.46807684119441445`"}], ",", 
   RowBox[{"-", "0.2620897522370829`"}], ",", 
   RowBox[{"-", "0.36717913959056037`"}], ",", 
   RowBox[{"-", "0.29277805384786626`"}], ",", 
   RowBox[{"-", "0.33653384099560957`"}], ",", 
   RowBox[{"-", "0.30688391009101434`"}], ",", 
   RowBox[{"-", "0.32530916304947327`"}], ",", 
   RowBox[{"-", "0.3131239975608739`"}], ",", 
   RowBox[{"-", "0.32086947694467816`"}], ",", 
   RowBox[{"-", "0.3158087879320311`"}], ",", 
   RowBox[{"-", "0.31905675102306524`"}], ",", 
   RowBox[{"-", "0.31694667329774573`"}], ",", 
   RowBox[{"-", "0.31830659979994086`"}], ",", 
   RowBox[{"-", "0.31742550806748754`"}], ",", 
   RowBox[{"-", "0.3179946592528071`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6297829934256887`*^9, 3.62978304916451*^9, 
  3.629783170712852*^9, 3.6297835595224247`*^9, 3.629793648338698*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fit", ",", "data", ",", "plot"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"start", ",", "stop"}], "]"}], ",", "d0"}], "}"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"ListPlot", "[", "data", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"fit", "=", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"start", "+", "10"}], ";;"}], "]"}], "]"}], ",", "n", ",", 
       "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"Normal", "[", "fit", "]"}], "/.", 
      RowBox[{"n", "\[Rule]", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"plot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Normal", "@", "fit"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "start", ",", "stop"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"start", "-", "0.2"}], ",", 
            RowBox[{"stop", "+", "0.2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Min", "[", "d0", "]"}], "-", "0.02"}], ",", 
            RowBox[{
             RowBox[{"Max", "[", "d0", "]"}], "+", "0.02"}]}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "@", ".02"}], ",", 
          RowBox[{"Point", "@", "data"}]}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<n\>\"", ",", "\"\<\[Tau](0)\>\""}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<\[Tau](0)=-\!\(\*SubscriptBox[\(D\), \(0\)]\) \\n \
\!\(\*SubscriptBox[\(t\), \(s\)]\)/\!\(\*SubscriptBox[\(t\), \(w\)]\) = \
10\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Thickness", "[", "th", "]"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Normal", "@", "fit"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}]}], "]"}]}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\</data/hausdorff.pdf\>\""}], ",", "plot"}], 
     "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ/WHhVXvF368cf7H/cQDRS7beU/4IpB8lc+uD6Ky7
HSYgWmZDpiOIZpCwdAXRH3XqwPSf/56RINr1eHYqiBZSEM36DKRTe5fnguhb
TX0VINpN5Gk9iH7b+7sZRHOxnmsF0Q2XtVaD6BNR+mBaJHPmVhAtMPXUNhBd
++PYbhB9fM+qvSD61J/bR0H0MfN/J0H0uWDhcyB6+tyt10H0u6Wy90D0wc9a
L8DqgiawOXO/dvxztJIDRJdNb+cF0f+cH4Np4cvJIiC6aomADIi2UmBRB9FK
la8MQLS+qK0tiOZ5neEFotcJPtvnAqTPKjjsB9GTJt+/AqInPG29AaI9rZz4
PID0m4sJYLrm3e5+TyBduZ5zAogGAPpJznk=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], 
    PointBox[{{2., -0.46807684119441445`}, {3., -0.2620897522370829}, {
     4., -0.36717913959056037`}, {5., -0.29277805384786626`}, {
     6., -0.33653384099560957`}, {7., -0.30688391009101434`}, {
     8., -0.32530916304947327`}, {9., -0.3131239975608739}, {
     10., -0.32086947694467816`}, {11., -0.3158087879320311}, {
     12., -0.31905675102306524`}, {13., -0.31694667329774573`}, {
     14., -0.31830659979994086`}, {15., -0.31742550806748754`}, {
     16., -0.3179946592528071}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.25614380298131195`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 16.}, {-0.3810087373525024, -0.2620897522370829}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.629783246651806*^9, 3.629783264839786*^9}, 
   3.629783378043579*^9, {3.6297834181611443`*^9, 3.629783431692771*^9}, {
   3.629783562322472*^9, 3.629783603343122*^9}, 3.629783640737117*^9, {
   3.629786611923253*^9, 3.629786618846936*^9}, {3.629786802099679*^9, 
   3.6297868211596527`*^9}, 3.6297934721779327`*^9, 3.6297955597617083`*^9}],

Cell[BoxData[
 RowBox[{"-", "0.31438720421203514`"}]], "Print",
 CellChangeTimes->{{3.629783246651806*^9, 3.629783264839786*^9}, 
   3.629783378043579*^9, {3.6297834181611443`*^9, 3.629783431692771*^9}, {
   3.629783562322472*^9, 3.629783603343122*^9}, 3.629783640737117*^9, {
   3.629786611923253*^9, 3.629786618846936*^9}, {3.629786802099679*^9, 
   3.6297868211596527`*^9}, 3.6297934721779327`*^9, 3.62979555976836*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV03s0FGgUAPDxaCgrkQ3DyHPGGOPDIuUxl/V+5JHBeK0tWuL02DKrtRa7
5RWqrTW2005JlGqToZShj46a1mbp+FJbOYnWpqMtQh5Z+/XHPff8zv3j3nPv
ueZbd0WlqTIYjDAaH/MuXTGHJlD2zraLOARPrFBE/qHJgBgjj34x9Y4Fk7wq
XQaMpRaOJlGnjg4P2FkygPlBa9V26rir6YVifwb42ZrHSqh9xDlP5eUMuFUU
MllFrV8j/SnNSAVuCk9bP6Jucxj8r8dJFa41BVXGcwn+0jCwduK4Ojy9PxKe
bUPwOfYx6ak/maC3cDI6j0ewZH9no/WSJqw5eoBfYEvw6V9HjqkmaIFfqnyq
mk9wxrMh5e4j2lAmVFmS2RFcOd6rdJnRAWZs1fs2AcGm1v0z27m6EDwU133f
nmDfF3WNi0I9kGV6kAeI4GoNSZ/77rXAc91O3jgQ3H7DSepbrg/dmk0G7x0J
tpIOv7125lPgBvME8050/kclV0j/OuhS/uOk60zw+ga2oeKVAWSGKXPXuRAs
H7r0d6iJEYTqvG5xdCW41FPgFxjIghkhdAZsINjB7kToJynGcDmnZXWIG8Er
8lXacg+bgOz1zrDUjQQ3pIj6mi+wQbYjuG/HJoJz62uDpUOm8MAyy7vYneDf
D03yv15hBiREcVDmQec9VMxcOmoGo7l87VpPgu90sI4n2ZoD7+XzAx1eBLtt
OJt95ro55CfeEN4WEhzqzzEz8bWAk8Kb95RA8DfFdXmZTyxgMnll8LA3wavW
GKNT6ZYQU5S9asyH4JaeimPnVaxgapyrUPElmGE83zkmtYKYdg0vQz9al8f7
rLSyhp4qTXUTf4Lzv7shUWm3huzfwttcAghuqli9PBTEAXSvtdkjkOAi58SI
N4QDcnFYvlcQwXu0z0UPZnIhy5LnHhNMcLfg5aWaOS64zFhvSggh2L6Ac93n
qA24qmXwJKG0PyvB4O56HgQY9SZ8H0bwvqAS4Q8XeWAmS04p3Ezw8gU5S+9z
W3D4wlV0IpzgqS0DQUX9thBugypORxD8wX6S35/Bh3rBzqvtkQSfP6XxcDPD
Dm7XPG4ciKL7jNUfbCq3g2l2+uuHWwge8zYteWUlgPhBd+OpaIJz9ppWajQL
oK/KoXxeRPClTQZJYi970L4T1bcYQ/D7z7SfFTywh0JHhap+HMEX9s23lG9F
wKzz3W8kpvdxWS5UTUNQFtWlaUo9MqsenvMVgtUMr2oLatb+NePbshAYJGxo
5VOX5nHZ7hIENrq2M57U6UWig+OlCILydPZspeZWN4n8mxBUiB6nXxR//L9W
i/ZmBLpqsXON1MmsjjeO1xD8fGWguIW66uTdUrYCgUyrt76DmlnzrGO6G0Fj
F37RRz3WoM2pfYSgX1CXMk2tmrn2neETBNFPzN/OUZvaGXVWDiH4q0SWv0Qd
c9kq/tsRBM9HpTJmPMG35e6VkRMIpn4pe2pIPbzXO0H5LwJJgEYWm/qDc4CN
5ySChekfF82pnVujbtnMIlCLyGPxqSNy4g7L5hAUL803IOqsjcmJ+osItC5K
NjpTlyxs45UtITgS9+6uG/VZRcbs8jICfebuOE/q/wHuf0q0
       "]]}}, InsetBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"0.00022628661327312022`", " ", "n"}]}], "-", 
      "0.31438720421203514`"}], Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"n\"", TraditionalForm], 
     FormBox["\"\[Tau](0)\"", TraditionalForm]},
   AxesOrigin->{2., -0.48},
   DisplayFunction->Identity,
   Epilog->{
     PointSize[0.02], 
     PointBox[{{2, -0.46807684119441445`}, {3, -0.2620897522370829}, {
       4, -0.36717913959056037`}, {5, -0.29277805384786626`}, {
       6, -0.33653384099560957`}, {7, -0.30688391009101434`}, {
       8, -0.32530916304947327`}, {9, -0.3131239975608739}, {
       10, -0.32086947694467816`}, {11, -0.3158087879320311}, {
       12, -0.31905675102306524`}, {13, -0.31694667329774573`}, {
       14, -0.31830659979994086`}, {15, -0.31742550806748754`}, {
       16, -0.3179946592528071}}]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox[
    "\"\[Tau](0)=-\\!\\(\\*SubscriptBox[\\(D\\), \\(0\\)]\\) \\n \
\\!\\(\\*SubscriptBox[\\(t\\), \\(s\\)]\\)/\\!\\(\\*SubscriptBox[\\(t\\), \
\\(w\\)]\\) = 10\"", TraditionalForm],
   PlotRange->{{1.8, 16.2}, {-0.48807684119441447`, -0.24208975223708293`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.003]], 
        Line[CompressedData["
1:eJwV03s0FGgUAPDxaCgrkQ3DyHPGGOPDIuUxl/V+5JHBeK0tWuL02DKrtRa7
5RWqrTW2005JlGqToZShj46a1mbp+FJbOYnWpqMtQh5Z+/XHPff8zv3j3nPv
ueZbd0WlqTIYjDAaH/MuXTGHJlD2zraLOARPrFBE/qHJgBgjj34x9Y4Fk7wq
XQaMpRaOJlGnjg4P2FkygPlBa9V26rir6YVifwb42ZrHSqh9xDlP5eUMuFUU
MllFrV8j/SnNSAVuCk9bP6Jucxj8r8dJFa41BVXGcwn+0jCwduK4Ojy9PxKe
bUPwOfYx6ak/maC3cDI6j0ewZH9no/WSJqw5eoBfYEvw6V9HjqkmaIFfqnyq
mk9wxrMh5e4j2lAmVFmS2RFcOd6rdJnRAWZs1fs2AcGm1v0z27m6EDwU133f
nmDfF3WNi0I9kGV6kAeI4GoNSZ/77rXAc91O3jgQ3H7DSepbrg/dmk0G7x0J
tpIOv7125lPgBvME8050/kclV0j/OuhS/uOk60zw+ga2oeKVAWSGKXPXuRAs
H7r0d6iJEYTqvG5xdCW41FPgFxjIghkhdAZsINjB7kToJynGcDmnZXWIG8Er
8lXacg+bgOz1zrDUjQQ3pIj6mi+wQbYjuG/HJoJz62uDpUOm8MAyy7vYneDf
D03yv15hBiREcVDmQec9VMxcOmoGo7l87VpPgu90sI4n2ZoD7+XzAx1eBLtt
OJt95ro55CfeEN4WEhzqzzEz8bWAk8Kb95RA8DfFdXmZTyxgMnll8LA3wavW
GKNT6ZYQU5S9asyH4JaeimPnVaxgapyrUPElmGE83zkmtYKYdg0vQz9al8f7
rLSyhp4qTXUTf4Lzv7shUWm3huzfwttcAghuqli9PBTEAXSvtdkjkOAi58SI
N4QDcnFYvlcQwXu0z0UPZnIhy5LnHhNMcLfg5aWaOS64zFhvSggh2L6Ac93n
qA24qmXwJKG0PyvB4O56HgQY9SZ8H0bwvqAS4Q8XeWAmS04p3Ezw8gU5S+9z
W3D4wlV0IpzgqS0DQUX9thBugypORxD8wX6S35/Bh3rBzqvtkQSfP6XxcDPD
Dm7XPG4ciKL7jNUfbCq3g2l2+uuHWwge8zYteWUlgPhBd+OpaIJz9ppWajQL
oK/KoXxeRPClTQZJYi970L4T1bcYQ/D7z7SfFTywh0JHhap+HMEX9s23lG9F
wKzz3W8kpvdxWS5UTUNQFtWlaUo9MqsenvMVgtUMr2oLatb+NePbshAYJGxo
5VOX5nHZ7hIENrq2M57U6UWig+OlCILydPZspeZWN4n8mxBUiB6nXxR//L9W
i/ZmBLpqsXON1MmsjjeO1xD8fGWguIW66uTdUrYCgUyrt76DmlnzrGO6G0Fj
F37RRz3WoM2pfYSgX1CXMk2tmrn2neETBNFPzN/OUZvaGXVWDiH4q0SWv0Qd
c9kq/tsRBM9HpTJmPMG35e6VkRMIpn4pe2pIPbzXO0H5LwJJgEYWm/qDc4CN
5ySChekfF82pnVujbtnMIlCLyGPxqSNy4g7L5hAUL803IOqsjcmJ+osItC5K
NjpTlyxs45UtITgS9+6uG/VZRcbs8jICfebuOE/q/wHuf0q0
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"n", "\[Tau](0)"}, 
      AxesOrigin -> {2., -0.48}, DisplayFunction :> Identity, Epilog -> {
        PointSize[0.02], 
        Point[{{2, -0.46807684119441445`}, {3, -0.2620897522370829}, {
          4, -0.36717913959056037`}, {5, -0.29277805384786626`}, {
          6, -0.33653384099560957`}, {7, -0.30688391009101434`}, {
          8, -0.32530916304947327`}, {9, -0.3131239975608739}, {
          10, -0.32086947694467816`}, {11, -0.3158087879320311}, {
          12, -0.31905675102306524`}, {13, -0.31694667329774573`}, {
          14, -0.31830659979994086`}, {15, -0.31742550806748754`}, {
          16, -0.3179946592528071}}]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> 
      "\[Tau](0)=-\!\(\*SubscriptBox[\(D\), \(0\)]\) \n \
\!\(\*SubscriptBox[\(t\), \(s\)]\)/\!\(\*SubscriptBox[\(t\), \(w\)]\) = 10", 
      PlotRange -> {{1.8, 
       16.2}, {-0.48807684119441447`, -0.24208975223708293`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[-0.31438720421203514` - 
      0.00022628661327312022` $CellContext`n], {Right, Center}, Identity]]& ],
  
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Print",
 CellChangeTimes->{{3.629783246651806*^9, 3.629783264839786*^9}, 
   3.629783378043579*^9, {3.6297834181611443`*^9, 3.629783431692771*^9}, {
   3.629783562322472*^9, 3.629783603343122*^9}, 3.629783640737117*^9, {
   3.629786611923253*^9, 3.629786618846936*^9}, {3.629786802099679*^9, 
   3.6297868211596527`*^9}, 3.6297934721779327`*^9, 3.6297955599111767`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stop", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"d2", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"FractalD", "[", 
     RowBox[{"i", ",", 
      RowBox[{"1", "/", "2."}], ",", "1.", ",", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "start", ",", "stop"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.629782946853716*^9, 3.629782987925283*^9}, {
   3.629783021576394*^9, 3.6297830216831093`*^9}, {3.629783121186234*^9, 
   3.629783141012865*^9}, {3.629783441943953*^9, 3.6297834421017637`*^9}, 
   3.629786940784526*^9, {3.629790799810854*^9, 3.629790800561791*^9}, 
   3.629796228118538*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "4"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 4],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796230237648*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "6"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 6],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796230276778*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "8"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 8],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796230326501*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "10"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 10],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796230383564*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 5],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796230437058*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "7"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 7],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796230444563*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "9"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 9],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6297962304941874`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "11"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 11],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796230501999*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "12"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 12],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796230578134*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "13"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 13],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796230760914*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "14"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 14],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796231069207*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "15"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 15],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6297962330808*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "16"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 16],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796236782054*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "17"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 17],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796266021022*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "18"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 18],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796347617402*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7246101121317668`", ",", "0.6053975309977206`", ",", 
   "0.6795051031090321`", ",", "0.6315979483087251`", ",", 
   "0.664940545250134`", ",", "0.6408941279264292`", ",", "0.65836443388752`",
    ",", "0.6453039742214013`", ",", "0.6549580727579362`", ",", 
   "0.6476847584113109`", ",", "0.6531009493385475`", ",", 
   "0.6490189052217257`", ",", "0.6520692909910836`", ",", 
   "0.6497726037152602`", ",", "0.6514920246553255`"}], "}"}]], "Output",
 CellChangeTimes->{3.629787058018919*^9, 3.629790920106657*^9, 
  3.629796154211355*^9, 3.629796348219689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fit", ",", "data", ",", "plot"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"start", ",", "stop"}], "]"}], ",", "d2"}], "}"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"ListPlot", "[", "data", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"fit", "=", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"start", "+", "11"}], ";;"}], "]"}], "]"}], ",", "n", ",", 
       "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"Normal", "[", "fit", "]"}], "/.", 
      RowBox[{"n", "\[Rule]", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"plot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Normal", "@", "fit"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "start", ",", "stop"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"start", "-", "0.2"}], ",", 
            RowBox[{"stop", "+", "0.2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Min", "[", "d2", "]"}], "-", "0.02"}], ",", 
            RowBox[{
             RowBox[{"Max", "[", "d2", "]"}], "+", "0.02"}]}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "@", ".02"}], ",", 
          RowBox[{"Point", "@", "data"}]}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<n\>\"", ",", "\"\<\[Tau](2)\>\""}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<\[Tau](2)=\!\(\*SubscriptBox[\(D\), \(2\)]\) \\n \
\!\(\*SubscriptBox[\(t\), \(s\)]\)/\!\(\*SubscriptBox[\(t\), \(w\)]\) = \
2\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Thickness", "[", "th", "]"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Normal", "@", "fit"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}]}], "]"}]}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\</data/renyi_entropy_2.pdf\>\""}], ",", 
      "plot"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyk0sggEAh/GX+ZpEVGZTW3Foa7Y62IytqaWUg0NccKI1lcXmYLKJRcOh
FmbNwcGWtbGZS12IOVQ02ogxHxkWVmNaF1PK+38Pz36Xhz80ptEVEgRRTwa/
N6/b+ZmE7Lc0K4Vub6wxRfqipYmg8XGxGXL2DDJI1LUqYKrJQpnNq/ugIjSi
gzU8tjFNqrN7TPDO6piESlZ8Bn7aM3OwvDhig7NR4Q486RdRsgzrXshYC/vg
9E9wH4YOtv0wnL0PwGBL7hRGepgR6Nrw3sCvLW4MHqeFH9SncZbIaUlZNmAu
gxOuBTrMyV8pmVEtC065GRzYxisSwAZzQgxFbIkEViT1XXC3+u2wg/ScJz2C
K6tPV9AZt91C2rMlqCTt9Q+HYJWPm+8kFQxECRWpeFxPh5WOeUrVqN+gJr38
KzDBbs2ZFT4M8pdg7fuFE1o93GX4D/TE6Q0=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], 
    PointBox[{{2., 0.7246101121317668}, {3., 0.6053975309977206}, {4., 
     0.6795051031090321}, {5., 0.6315979483087251}, {6., 0.664940545250134}, {
     7., 0.6408941279264292}, {8., 0.65836443388752}, {9., 
     0.6453039742214013}, {10., 0.6549580727579362}, {11., 
     0.6476847584113109}, {12., 0.6531009493385475}, {13., 
     0.6490189052217257}, {14., 0.6520692909910836}, {15., 
     0.6497726037152602}, {16., 0.6514920246553255}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5994369019410184},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 16.}, {0.6053975309977206, 0.7246101121317668}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.6297907620987387`*^9, 3.629790792008298*^9}, {
   3.629793273681612*^9, 3.62979329016812*^9}, 3.6297935219041*^9, 
   3.6297961759081783`*^9, 3.629796211063223*^9, {3.629796385206963*^9, 
   3.629796425326035*^9}}],

Cell[BoxData["0.6554408039720762`"], "Print",
 CellChangeTimes->{{3.6297907620987387`*^9, 3.629790792008298*^9}, {
   3.629793273681612*^9, 3.62979329016812*^9}, 3.6297935219041*^9, 
   3.6297961759081783`*^9, 3.629796211063223*^9, {3.629796385206963*^9, 
   3.629796425332498*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV02s0FGgYB/ChEFK5rQzGMGPGZcbbZVqV9D7sLI1j23JpDV2U1Wq1sWWl
yxxdTkXJJUSbWJcK2axxv9R2bNHqWDoutTEZ05uw7qGk2LcPz/mf36f//8tj
tS/cO0SdwWB8Q+9zhutLeTTg7J78oPwpgoc16rY/WcIAB5akKYf6xw/msqv6
DGjvGRFmU3//Stku4DCAE+A0d43avyL0tNSdAQ2+zWmJ1G7S6B55PAMYnuPN
x6mNctKvhJiqgUy0ad126tpVXfPNa9QhSrtDe/4twXtXbskbTl0Md0uFFRLq
2xYp6dn/aMIt/mOfnEmCo449KLH5tAS+5E3gjxME/3ZDlaIeqAu6HLGjhPpA
r6IpIkkPckeeLc8dJzhhsKVp3fRykFWmvR0eI5hl0za9n68P41oqrjO1mNws
mcMGwOGHS9JGCc7Qimp1jjCETDEvom+E4PqaNenieCPoQqyLG6i56crxylxj
KMjLn0gdpvufx/7R0fYF3Df2C1T9R7BlocXKuiETuOrnXu1MLVcUv/YyNwV5
yl6TC0MEx7kIv96yhQn7A3Qfdg4SvErwq9fSIDPoHp0OXkWtEaNWeyLRHNJO
62jKBgguDPJrLSuyAH3Vnuudbwg+cSvPM13BgqfQu4ZN/felCYfDGmywtR0x
OdRP9166oPkpmQ2uCufxptcEN95jpu6yt4LspPJmQ+r1Tvm/5FZbwX39Qxlh
hGAvdx7bXGwNkWaVZY2vCD564aYsrNsawjm2Tw2pdVaYoexQDghmX/QdVBFc
3nw5pUCNC8KWqqmqPoIZZrMP+tO50GjH8dOkLpcHuGlzbYDt21oQpCQ45mRN
lFq9Dfx58uZ8cS/BpZeXLSgkPLA8Uu+hQX1etHPbWAcPTCb3vgx6SfDPerd9
u8L44Bu++uhdBcEPhQPFOe/54F3rumgJteMpXrVbsi2kLjqZ7NND+5mBJo8t
7SCD+c7gTjfBkZJYfOaOHYhqGSoN6oUiOdPgK3sw8heVeb8geNKnXXK+zR4q
/io4eudfgj86Tji0HXCATKHH5pnnBBdkaz3byhCAKTvSW0xd/51RV2m8AKTK
PmnWM4L7XVmxQ1wh9GQdCx7qIjj6CCtBq0wI1g7eQW7UxRtNdkk3O8I8rim6
0Unwu7V6vac6HYHt4/luqIPgosjZ8vh9CBaJzJ3E1I3rFk6rhyC4lRy71ZVa
NbP42+gfEHiOTYVspmYeWzEYfBBBUlFL6nrqOBnfwjkKAcsqZlJAHXre79xg
HIKNy1S/G1PzM0r93EsRHB64zX3T/vn/qqzryxAYuxttItS7mffGVlciqM47
5dNHfTXzcZxFHYKF3dIz3dSaOb33ph4iuNypo2yl7i/U4+U9R1DY8NP1amr1
MMO3K7sReLFfyCuoWQLTBwkKBOMy92Y59Y673IDjKgROGyxni6kfyZ0Ttg8j
eFTStiOHWnnENbBpFEGonsuhLOqPIg9blwkES8MKz12nFlV5N9jOIPDhnSlP
o94W7Z+Y9R7BzNnRJ1eoD27YvdNoDsG1voBXidSxH4LtLn5C4IKbPsRT59cd
mFlYQKDMXGtwkfp/fVBbZQ==
       "]]}}, InsetBox[
     RowBox[{"0.6554408039720762`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.00028863316787909523`", " ", "n"}]}], Scaled[{0.99, 0.5}], 
     ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"n\"", TraditionalForm], 
     FormBox["\"\[Tau](2)\"", TraditionalForm]},
   AxesOrigin->{2., 0.59},
   DisplayFunction->Identity,
   Epilog->{
     PointSize[0.02], 
     PointBox[{{2, 0.7246101121317668}, {3, 0.6053975309977206}, {
       4, 0.6795051031090321}, {5, 0.6315979483087251}, {
       6, 0.664940545250134}, {7, 0.6408941279264292}, {
       8, 0.65836443388752}, {9, 0.6453039742214013}, {
       10, 0.6549580727579362}, {11, 0.6476847584113109}, {
       12, 0.6531009493385475}, {13, 0.6490189052217257}, {
       14, 0.6520692909910836}, {15, 0.6497726037152602}, {
       16, 0.6514920246553255}}]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox[
    "\"\[Tau](2)=\\!\\(\\*SubscriptBox[\\(D\\), \\(2\\)]\\) \\n \
\\!\\(\\*SubscriptBox[\\(t\\), \\(s\\)]\\)/\\!\\(\\*SubscriptBox[\\(t\\), \
\\(w\\)]\\) = 2\"", TraditionalForm],
   PlotRange->{{1.8, 16.2}, {0.5853975309977206, 0.7446101121317669}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.003]], 
        Line[CompressedData["
1:eJwV02s0FGgYB/ChEFK5rQzGMGPGZcbbZVqV9D7sLI1j23JpDV2U1Wq1sWWl
yxxdTkXJJUSbWJcK2axxv9R2bNHqWDoutTEZ05uw7qGk2LcPz/mf36f//8tj
tS/cO0SdwWB8Q+9zhutLeTTg7J78oPwpgoc16rY/WcIAB5akKYf6xw/msqv6
DGjvGRFmU3//Stku4DCAE+A0d43avyL0tNSdAQ2+zWmJ1G7S6B55PAMYnuPN
x6mNctKvhJiqgUy0ad126tpVXfPNa9QhSrtDe/4twXtXbskbTl0Md0uFFRLq
2xYp6dn/aMIt/mOfnEmCo449KLH5tAS+5E3gjxME/3ZDlaIeqAu6HLGjhPpA
r6IpIkkPckeeLc8dJzhhsKVp3fRykFWmvR0eI5hl0za9n68P41oqrjO1mNws
mcMGwOGHS9JGCc7Qimp1jjCETDEvom+E4PqaNenieCPoQqyLG6i56crxylxj
KMjLn0gdpvufx/7R0fYF3Df2C1T9R7BlocXKuiETuOrnXu1MLVcUv/YyNwV5
yl6TC0MEx7kIv96yhQn7A3Qfdg4SvErwq9fSIDPoHp0OXkWtEaNWeyLRHNJO
62jKBgguDPJrLSuyAH3Vnuudbwg+cSvPM13BgqfQu4ZN/felCYfDGmywtR0x
OdRP9166oPkpmQ2uCufxptcEN95jpu6yt4LspPJmQ+r1Tvm/5FZbwX39Qxlh
hGAvdx7bXGwNkWaVZY2vCD564aYsrNsawjm2Tw2pdVaYoexQDghmX/QdVBFc
3nw5pUCNC8KWqqmqPoIZZrMP+tO50GjH8dOkLpcHuGlzbYDt21oQpCQ45mRN
lFq9Dfx58uZ8cS/BpZeXLSgkPLA8Uu+hQX1etHPbWAcPTCb3vgx6SfDPerd9
u8L44Bu++uhdBcEPhQPFOe/54F3rumgJteMpXrVbsi2kLjqZ7NND+5mBJo8t
7SCD+c7gTjfBkZJYfOaOHYhqGSoN6oUiOdPgK3sw8heVeb8geNKnXXK+zR4q
/io4eudfgj86Tji0HXCATKHH5pnnBBdkaz3byhCAKTvSW0xd/51RV2m8AKTK
PmnWM4L7XVmxQ1wh9GQdCx7qIjj6CCtBq0wI1g7eQW7UxRtNdkk3O8I8rim6
0Unwu7V6vac6HYHt4/luqIPgosjZ8vh9CBaJzJ3E1I3rFk6rhyC4lRy71ZVa
NbP42+gfEHiOTYVspmYeWzEYfBBBUlFL6nrqOBnfwjkKAcsqZlJAHXre79xg
HIKNy1S/G1PzM0r93EsRHB64zX3T/vn/qqzryxAYuxttItS7mffGVlciqM47
5dNHfTXzcZxFHYKF3dIz3dSaOb33ph4iuNypo2yl7i/U4+U9R1DY8NP1amr1
MMO3K7sReLFfyCuoWQLTBwkKBOMy92Y59Y673IDjKgROGyxni6kfyZ0Ttg8j
eFTStiOHWnnENbBpFEGonsuhLOqPIg9blwkES8MKz12nFlV5N9jOIPDhnSlP
o94W7Z+Y9R7BzNnRJ1eoD27YvdNoDsG1voBXidSxH4LtLn5C4IKbPsRT59cd
mFlYQKDMXGtwkfp/fVBbZQ==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"n", "\[Tau](2)"}, 
      AxesOrigin -> {2., 0.59}, DisplayFunction :> Identity, Epilog -> {
        PointSize[0.02], 
        Point[{{2, 0.7246101121317668}, {3, 0.6053975309977206}, {
          4, 0.6795051031090321}, {5, 0.6315979483087251}, {
          6, 0.664940545250134}, {7, 0.6408941279264292}, {
          8, 0.65836443388752}, {9, 0.6453039742214013}, {
          10, 0.6549580727579362}, {11, 0.6476847584113109}, {
          12, 0.6531009493385475}, {13, 0.6490189052217257}, {
          14, 0.6520692909910836}, {15, 0.6497726037152602}, {
          16, 0.6514920246553255}}]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> 
      "\[Tau](2)=\!\(\*SubscriptBox[\(D\), \(2\)]\) \n \!\(\*SubscriptBox[\(t\
\), \(s\)]\)/\!\(\*SubscriptBox[\(t\), \(w\)]\) = 2", 
      PlotRange -> {{1.8, 16.2}, {0.5853975309977206, 0.7446101121317669}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
     0.6554408039720762 - 0.00028863316787909523` $CellContext`n], {
     Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Print",
 CellChangeTimes->{{3.6297907620987387`*^9, 3.629790792008298*^9}, {
   3.629793273681612*^9, 3.62979329016812*^9}, 3.6297935219041*^9, 
   3.6297961759081783`*^9, 3.629796211063223*^9, {3.629796385206963*^9, 
   3.6297964254788237`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stop", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"d20", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"FractalD", "[", 
     RowBox[{"i", ",", 
      RowBox[{"1", "/", "2."}], ",", "1.", ",", "20"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "start", ",", "stop"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.629782946853716*^9, 3.629782987925283*^9}, {
   3.629783021576394*^9, 3.6297830216831093`*^9}, {3.629783121186234*^9, 
   3.629783141012865*^9}, {3.629783441943953*^9, 3.6297834421017637`*^9}, 
   3.629786940784526*^9, {3.629790799810854*^9, 3.629790800561791*^9}, {
   3.6297933070297413`*^9, 3.629793332359003*^9}, 3.629795808118442*^9, {
   3.629796609271069*^9, 3.629796619712399*^9}, 3.6297968660409107`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "4"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 4],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796867101686*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "6"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 6],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796867142838*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "8"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 8],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796867193712*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "10"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 10],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796867245658*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "5"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 5],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796867301221*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "7"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 7],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796867317309*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "9"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 9],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6297968673735867`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "11"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 11],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796867381322*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "12"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 12],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796867481002*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "13"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 13],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796867632277*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "14"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 14],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6297968679291983`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "15"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 15],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796869536574*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "16"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 16],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796874267664*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "17"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 17],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.6297969029172783`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille fib(n), n = \"\>", 
   "\[InvisibleSpace]", "18"}],
  SequenceForm["Syst\[EGrave]me de taille fib(n), n = ", 18],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.629796984391687*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11.208044466260453`", ",", "8.641407338853861`", ",", 
   "10.376170861562704`", ",", "8.720527282922216`", ",", 
   "10.262101742968516`", ",", "8.733100445806503`", ",", 
   "10.245774002241516`", ",", "8.735089569765778`", ",", 
   "10.243425307412934`", ",", "8.735401198652823`", ",", 
   "10.243087460003872`", ",", "8.73544987042932`", ",", 
   "10.243038853331369`", ",", "8.735457729223057`", ",", 
   "10.243031847375974`"}], "}"}]], "Output",
 CellChangeTimes->{3.62979345097606*^9, 3.629795713940353*^9, 
  3.629795932438689*^9, 3.629796738116126*^9, 3.6297969849931602`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fit", ",", "data", ",", "plot"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"start", ",", "stop"}], "]"}], ",", "d20"}], "}"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"data", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"fitSup", "=", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"start", "+", "5"}], ";;", ";;", "2"}], "]"}], "]"}], ",", 
       "n", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"fitInf", "=", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"start", "+", "6"}], ";;", ";;", "2"}], "]"}], "]"}], ",", 
       "n", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Normal", "[", "fitSup", "]"}], "/.", 
       RowBox[{"n", "\[Rule]", "0"}]}], ",", 
      RowBox[{
       RowBox[{"Normal", "[", "fitInf", "]"}], "/.", 
       RowBox[{"n", "\[Rule]", "0"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"plot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Normal", "@", "fitSup"}], ",", 
         RowBox[{"Normal", "@", "fitInf"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "start", ",", "stop"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"start", "-", "0.2"}], ",", 
            RowBox[{"stop", "+", "0.2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Min", "[", "d20", "]"}], "-", "0.1"}], ",", 
            RowBox[{
             RowBox[{"Max", "[", "d20", "]"}], "+", "0.1"}]}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "@", ".02"}], ",", 
          RowBox[{"Point", "@", "data"}]}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<n\>\"", ",", "\"\<\[Tau](q)\>\""}], "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<\[Tau](q)=(q-1)\!\(\*SubscriptBox[\(D\), \(q\)]\), q = 20 \\n \!\
\(\*SubscriptBox[\(t\), \(s\)]\)/\!\(\*SubscriptBox[\(t\), \(w\)]\) = \
2\>\""}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Thickness", "[", "th", "]"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Normal", "@", "fitSup"}], ",", 
            RowBox[{"Normal", "@", "fitInf"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}]}], "]"}]}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "plot", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"dir", "<>", "\"\</data/renyi_q20_2.pdf\>\""}], ",", "plot"}], 
     "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdy1soQwEAxvHTmplrB1spl4ailkxRIstmttiLGi88WqttkrzIlEu03JrW
JCkeaC5RSG3lNu1hF2v2sonIVphk0dYKMeN85+Hr9/L9S3r6FSoGQRDF1GB0
7aqp5OdV/J2aEEGzJVgWo3xQZgig9n66FhYeaMSQyK+XwljlKG3ir60LSl29
KpjL42rjlCrDVh+8nZgfgjJOeAy+GX4mYXqKTw/H/fxd6O4W0HI0yxZILnqs
cOTLeQJdpztn0JO4c0BnXfIC+jryfHBp1XIN3zeKgtAe57/QP4WRJcmIiBMO
HRsOLk1lwaTkkTbPr+TAYTNZCBt4zApYqnuthgKuUAgzI2o53Mt5trVQXvJE
59C0EApAY1h/A0n3XForZXNoMxNmC9imNsrDj05aObdqHTaSi9vQzVRboclr
oz1Kzh9DT6/ODknvgZ/uZewAHGCU3cBogfsJrszuf8Igq/wXJttnGHJKTo0v
Df4DEkn/tg==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], 
    PointBox[{{2., 11.208044466260453`}, {3., 8.641407338853861}, {4., 
     10.376170861562704`}, {5., 8.720527282922216}, {6., 
     10.262101742968516`}, {7., 8.733100445806503}, {8., 
     10.245774002241516`}, {9., 8.735089569765778}, {10., 
     10.243425307412934`}, {11., 8.735401198652823}, {12., 
     10.243087460003872`}, {13., 8.73544987042932}, {14., 
     10.243038853331369`}, {15., 8.735457729223057}, {16., 
     10.243031847375974`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.78125, 8.513075482483533},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{2., 16.}, {8.641407338853861, 11.208044466260453`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.6297935176357117`*^9, 3.629795792726698*^9, 3.6297959804681053`*^9, 
   3.6297967455128603`*^9, 3.629796790576288*^9, {3.6297968208914948`*^9, 
   3.6297968457708282`*^9}, 3.62979698861648*^9, 3.6297970251256104`*^9, {
   3.629797137315426*^9, 3.629797153097601*^9}, {3.6297973125523243`*^9, 
   3.629797354012147*^9}, {3.629797415851927*^9, 3.629797456388301*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"10.247193952360728`", "\[InvisibleSpace]", "8.734657701928743`"}],
  SequenceForm[10.247193952360728`, 8.734657701928743],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6297935176357117`*^9, 3.629795792726698*^9, 3.6297959804681053`*^9, 
   3.6297967455128603`*^9, 3.629796790576288*^9, {3.6297968208914948`*^9, 
   3.6297968457708282`*^9}, 3.62979698861648*^9, 3.6297970251256104`*^9, {
   3.629797137315426*^9, 3.629797153097601*^9}, {3.6297973125523243`*^9, 
   3.629797354012147*^9}, {3.629797415851927*^9, 3.6297974563963833`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.003], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV02lQ1HUYB/CFuFKI04AFVsDlWo6fXBPJIA8LKtgWh5AsK2YgoECJgAQB
KlKwwLqEOC4mgVxxuInAJsgxUSqXGZSc4QaCYRjiQdzH9vxfPPOdz3zfPPPM
PCZhpwIi5Gk02oc4VJ7S5JpjQNyTKg/Ps0yYU2zzf6BCgwZPni7l6DXD9Cua
NHhTpfGCjT4+PfnIZhcNEqNTiygH/3gig7ufBikLfi890Gxu8uNGAQ0yFDeK
Aa1TJroUoS8Hl6wCVtzQrbuHt/oc5EFyeuumC/pTPe+KucsKsNR8w8UWXW1U
KCr9TQmipL9+ZYpOSumsN9tUAc6gWEkPff27qUJ53nYgGU8qVdEnJ6Tdcd+o
AVstV1EeLZx92O28qA4BvtkXltKZwDAbWIy00IThME/nf9FeT6vq1921IDco
oW4SXaSc1O8apw2uW8uuQ+j2Ow4iL4EOGGW9yu9DM0WTr26X74D4iWr9TnTr
KP/W4MC7cH++6ScJemetkV7bc104IHW0rEM3SsV/cwz1oTtD5YcSdI6b7T5v
bzq0LV+LKkTvtvmWo3rMACY4FU/5aMVzcq2p+YZAC5alp6NrjwX1N9UZgT+7
fywenfp9xUGRlAGlUwv+UejevNfW8YrGEBY4IuNR++ZlK20WGENglV2cP7qr
g345lGUCXuI/N/ahXd6rPFPeYgLhl9Y+cEVz9psbG3qZwrLP2MBu9BfZVekx
46bAb1aNN0Nv0zAgpSd2gY+CZIiOlvRdLKyRY4Ky8q0gdTTNYLVzRsSEPePR
2xWovjGE/TbTDIqFVzNX05hwLu1Okly7GawvG+rNoxsuviOT+phDHuicmkZn
OR3xezloDsKQvvVR9Gm16sDhGAvIZw1VPkTfs/1HXLZiAZ1jhzTuou3Om7ew
Cyxhfq9FUTOaRufp9uy0Ak7m51NidKIP3/3CDStgXE0MK0fL6hrpWp4seHG8
f+sK+s2hRz5ZAyyYUy8JFaA37F5bD5y0htm4n0fPo2tKlUc+otkAt6Ii5wy6
/bDOcIPABtYkqxvR6BkPBv850xaK0ioFn6CTExhC5SZbiNh1969AtHiPbih3
rx1UX7seeRC97Kg2cX7IDp71/rHNHV2XuCoRhBEIGkk+7YTucpZlyEcQcLEy
Y1OeWlLwTY4iYJD6uxZleorGbHgsgUkGS+KIzkm3MHJNIhAdOb7kgD6RFfT1
bA6Bs4tuafZoi6KGoP0NBKq138q2S6P+r9m0vYlATkT9YcpH6R0v7W8TiG3m
WVK+UtyTY9RGwJ4n6bVFK5VNdPx3j0BbeYQq5ZlaNfOKUQL99j0F1mj5GO0F
vXECjZmJYZQZNvqdQimBy0PGjpQ/vskM+XKKADclZZCFvt/oKvSfIzDdydKl
PJngweueJ9ClNfLMirq/0wFLt9cEao5ntlB2ag74xXKJwGcqj7mU/ZKD80tW
CPiF8FmUY98/ekRnnYCj2GndEs1fC7fK3SSwY2vyAeXKtpNLMhmBFd+LxZT/
B07GByg=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Thickness[0.003], Opacity[1.], 
      LineBox[CompressedData["
1:eJwd03kw3GcYB/C1dbaRRGixjiBuyy+NVWpjPUQciYg4UuKoO66UJrpWRB1J
WUcWETaHVF1xxLiFBFPTJqhWaIlqQmwkTBjjSBN1Vp+3f7zzzGfed973+7zv
vJpBMW6hdBqNdgIHqTFy3rpYwKaKbcTiacKCROepX6VpUMDJMiWO3FBNKpKj
wezTcTZxyCvRCPMADbLEuc7EXm3hqd72NBgJbDxHbOvNm2jOoUGYqk4jsUKp
8Fqoshhk5e82M0M/PDj278AhOowmvuR8hg5UcixfuC4OP3Ktky3QVWoFwpIn
kpAhiLppieYm9DTobEtDnYpMzWH0D3emC+g+H4HBkP8MBx0xNdkXmycLV0rS
NgEtmBvsM3u/B8yL/DlH0Oo6w+/D9OTAnl7HPYq2e13ZsGm9D0yz+/gO6BtS
3CF2rDzwLG/3OaG7HhwS2uUowC1JK9FxtLZQtHy/7GNQdnRdPEHyj/MbR4c/
geUGFQNX9P4aNaXOeUWoZLVZuaGbJ+tmnFWVoXlKMtkDnWllfNTRkQEqtIG2
0+iDzFvOuwJUIMjKp9cLLZEs9jAxVxXESis+8EHXBHgOtdSqwbeaXQw/dOLd
8mPCSXVw78/2/xL9S/aK0XkJDbjy+jdhIMmbnSG5na8BBWoTtcHo3m7GdT9D
Tdi4VD4firYwr/imrEMTrNctxMPRzva6Gqp2WiCat5aPRMdnVCZFPdeCZ/Qd
l2j0h3tVqJLwA9BonhPyFbp14GpBtZg2iK79fjcWTVNZ75kVakNUMP/FeTLf
fMZWRlsHRl1ll+PQyZcecMW6dKAw5JhJPLrp6u6dSSddYBV62ieg01m+rkuj
ukCx/3BPRH8tW+UxFqUHaVJSgiT0I+M3daVretC6LFOWjDZJ0e2wzdcHK9rj
6VRyPsNHsX+/AVQwXbYvo+Oc+NZp9wzg7BNH2XT0Tm0zY98RQ0gr2nTio9+6
jzilDxtCYuKlgCz0lsmK0XCEEQymt5XnoKtLpP50oTHholTAhIDc5xcKY005
TJCoHF/MQ8/aqPPntY1hLlzGpADNu6AukGoxhlonaYdCdJ2lop83xwT6Snie
QvQ/prJTKU9N4LBqad5NdG3cemtOEAV5bcLK2+R9zHZS6aEUBKW8qieeXhU/
yTtLAes41UHMSNg7FxxNwV+i3gHizCQ9NTaXAq1dq0vE4eme381lUtAa5GFZ
jNa70eRp34Tr98gNFf///9q1uloouPfMd5zYn9G99Ol9CpIqq18SFxX3Z6p1
4n5seEcsWTrV/e4RBVFhMcp3SL81srrl4xRsdw0GE9Oj5P9Wek7BUIbyOWJ1
pnKPYJKCMrdQLvHpeu0zF6cpsH+zxSd+3MwWnFqgIFeeWU8sumDj07eI/b6I
byfeYjnoW61gvzU/9xCz2t1+0l/F/ByfEWJXnlfu92uYX6Zqgjj6c39fhU3M
P/p2hpi/EWyQtU3ByRLOEnFFZ8Tqzg72E5m1Rvwfat8BIQ==
       "]]}}, InsetBox[
     TemplateBox[{RowBox[{
         RowBox[{"10.247193952360728`", "\[VeryThinSpace]"}], "-", 
         RowBox[{"0.00029353819063304123`", " ", "n"}]}],RowBox[{
         RowBox[{"0.00005765750741665828`", " ", "n"}], "+", 
         "8.734657701928743`"}]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"n\"", TraditionalForm], 
     FormBox["\"\[Tau](q)\"", TraditionalForm]},
   AxesOrigin->{2., 8.6},
   DisplayFunction->Identity,
   Epilog->{
     PointSize[0.02], 
     PointBox[{{2, 11.208044466260453`}, {3, 8.641407338853861}, {
       4, 10.376170861562704`}, {5, 8.720527282922216}, {
       6, 10.262101742968516`}, {7, 8.733100445806503}, {
       8, 10.245774002241516`}, {9, 8.735089569765778}, {
       10, 10.243425307412934`}, {11, 8.735401198652823}, {
       12, 10.243087460003872`}, {13, 8.73544987042932}, {
       14, 10.243038853331369`}, {15, 8.735457729223057}, {
       16, 10.243031847375974`}}]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox[
    "\"\[Tau](q)=(q-1)\\!\\(\\*SubscriptBox[\\(D\\), \\(q\\)]\\), q = 20 \\n \
\\!\\(\\*SubscriptBox[\\(t\\), \\(s\\)]\\)/\\!\\(\\*SubscriptBox[\\(t\\), \
\\(w\\)]\\) = 2\"", TraditionalForm],
   PlotRange->{{1.8, 16.2}, {8.541407338853862, 11.308044466260453`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.003]], 
        Line[CompressedData["
1:eJwV02lQ1HUYB/CFuFKI04AFVsDlWo6fXBPJIA8LKtgWh5AsK2YgoECJgAQB
KlKwwLqEOC4mgVxxuInAJsgxUSqXGZSc4QaCYRjiQdzH9vxfPPOdz3zfPPPM
PCZhpwIi5Gk02oc4VJ7S5JpjQNyTKg/Ps0yYU2zzf6BCgwZPni7l6DXD9Cua
NHhTpfGCjT4+PfnIZhcNEqNTiygH/3gig7ufBikLfi890Gxu8uNGAQ0yFDeK
Aa1TJroUoS8Hl6wCVtzQrbuHt/oc5EFyeuumC/pTPe+KucsKsNR8w8UWXW1U
KCr9TQmipL9+ZYpOSumsN9tUAc6gWEkPff27qUJ53nYgGU8qVdEnJ6Tdcd+o
AVstV1EeLZx92O28qA4BvtkXltKZwDAbWIy00IThME/nf9FeT6vq1921IDco
oW4SXaSc1O8apw2uW8uuQ+j2Ow4iL4EOGGW9yu9DM0WTr26X74D4iWr9TnTr
KP/W4MC7cH++6ScJemetkV7bc104IHW0rEM3SsV/cwz1oTtD5YcSdI6b7T5v
bzq0LV+LKkTvtvmWo3rMACY4FU/5aMVzcq2p+YZAC5alp6NrjwX1N9UZgT+7
fywenfp9xUGRlAGlUwv+UejevNfW8YrGEBY4IuNR++ZlK20WGENglV2cP7qr
g345lGUCXuI/N/ahXd6rPFPeYgLhl9Y+cEVz9psbG3qZwrLP2MBu9BfZVekx
46bAb1aNN0Nv0zAgpSd2gY+CZIiOlvRdLKyRY4Ky8q0gdTTNYLVzRsSEPePR
2xWovjGE/TbTDIqFVzNX05hwLu1Okly7GawvG+rNoxsuviOT+phDHuicmkZn
OR3xezloDsKQvvVR9Gm16sDhGAvIZw1VPkTfs/1HXLZiAZ1jhzTuou3Om7ew
Cyxhfq9FUTOaRufp9uy0Ak7m51NidKIP3/3CDStgXE0MK0fL6hrpWp4seHG8
f+sK+s2hRz5ZAyyYUy8JFaA37F5bD5y0htm4n0fPo2tKlUc+otkAt6Ii5wy6
/bDOcIPABtYkqxvR6BkPBv850xaK0ioFn6CTExhC5SZbiNh1969AtHiPbih3
rx1UX7seeRC97Kg2cX7IDp71/rHNHV2XuCoRhBEIGkk+7YTucpZlyEcQcLEy
Y1OeWlLwTY4iYJD6uxZleorGbHgsgUkGS+KIzkm3MHJNIhAdOb7kgD6RFfT1
bA6Bs4tuafZoi6KGoP0NBKq138q2S6P+r9m0vYlATkT9YcpH6R0v7W8TiG3m
WVK+UtyTY9RGwJ4n6bVFK5VNdPx3j0BbeYQq5ZlaNfOKUQL99j0F1mj5GO0F
vXECjZmJYZQZNvqdQimBy0PGjpQ/vskM+XKKADclZZCFvt/oKvSfIzDdydKl
PJngweueJ9ClNfLMirq/0wFLt9cEao5ntlB2ag74xXKJwGcqj7mU/ZKD80tW
CPiF8FmUY98/ekRnnYCj2GndEs1fC7fK3SSwY2vyAeXKtpNLMhmBFd+LxZT/
B07GByg=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.003]], 
        Line[CompressedData["
1:eJwd03kw3GcYB/C1dbaRRGixjiBuyy+NVWpjPUQciYg4UuKoO66UJrpWRB1J
WUcWETaHVF1xxLiFBFPTJqhWaIlqQmwkTBjjSBN1Vp+3f7zzzGfed973+7zv
vJpBMW6hdBqNdgIHqTFy3rpYwKaKbcTiacKCROepX6VpUMDJMiWO3FBNKpKj
wezTcTZxyCvRCPMADbLEuc7EXm3hqd72NBgJbDxHbOvNm2jOoUGYqk4jsUKp
8Fqoshhk5e82M0M/PDj278AhOowmvuR8hg5UcixfuC4OP3Ktky3QVWoFwpIn
kpAhiLppieYm9DTobEtDnYpMzWH0D3emC+g+H4HBkP8MBx0xNdkXmycLV0rS
NgEtmBvsM3u/B8yL/DlH0Oo6w+/D9OTAnl7HPYq2e13ZsGm9D0yz+/gO6BtS
3CF2rDzwLG/3OaG7HhwS2uUowC1JK9FxtLZQtHy/7GNQdnRdPEHyj/MbR4c/
geUGFQNX9P4aNaXOeUWoZLVZuaGbJ+tmnFWVoXlKMtkDnWllfNTRkQEqtIG2
0+iDzFvOuwJUIMjKp9cLLZEs9jAxVxXESis+8EHXBHgOtdSqwbeaXQw/dOLd
8mPCSXVw78/2/xL9S/aK0XkJDbjy+jdhIMmbnSG5na8BBWoTtcHo3m7GdT9D
Tdi4VD4firYwr/imrEMTrNctxMPRzva6Gqp2WiCat5aPRMdnVCZFPdeCZ/Qd
l2j0h3tVqJLwA9BonhPyFbp14GpBtZg2iK79fjcWTVNZ75kVakNUMP/FeTLf
fMZWRlsHRl1ll+PQyZcecMW6dKAw5JhJPLrp6u6dSSddYBV62ieg01m+rkuj
ukCx/3BPRH8tW+UxFqUHaVJSgiT0I+M3daVretC6LFOWjDZJ0e2wzdcHK9rj
6VRyPsNHsX+/AVQwXbYvo+Oc+NZp9wzg7BNH2XT0Tm0zY98RQ0gr2nTio9+6
jzilDxtCYuKlgCz0lsmK0XCEEQymt5XnoKtLpP50oTHholTAhIDc5xcKY005
TJCoHF/MQ8/aqPPntY1hLlzGpADNu6AukGoxhlonaYdCdJ2lop83xwT6Snie
QvQ/prJTKU9N4LBqad5NdG3cemtOEAV5bcLK2+R9zHZS6aEUBKW8qieeXhU/
yTtLAes41UHMSNg7FxxNwV+i3gHizCQ9NTaXAq1dq0vE4eme381lUtAa5GFZ
jNa70eRp34Tr98gNFf///9q1uloouPfMd5zYn9G99Ol9CpIqq18SFxX3Z6p1
4n5seEcsWTrV/e4RBVFhMcp3SL81srrl4xRsdw0GE9Oj5P9Wek7BUIbyOWJ1
pnKPYJKCMrdQLvHpeu0zF6cpsH+zxSd+3MwWnFqgIFeeWU8sumDj07eI/b6I
byfeYjnoW61gvzU/9xCz2t1+0l/F/ByfEWJXnlfu92uYX6Zqgjj6c39fhU3M
P/p2hpi/EWyQtU3ByRLOEnFFZ8Tqzg72E5m1Rvwfat8BIQ==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"n", "\[Tau](q)"}, 
      AxesOrigin -> {2., 8.6}, DisplayFunction :> Identity, Epilog -> {
        PointSize[0.02], 
        Point[{{2, 11.208044466260453`}, {3, 8.641407338853861}, {
          4, 10.376170861562704`}, {5, 8.720527282922216}, {
          6, 10.262101742968516`}, {7, 8.733100445806503}, {
          8, 10.245774002241516`}, {9, 8.735089569765778}, {
          10, 10.243425307412934`}, {11, 8.735401198652823}, {
          12, 10.243087460003872`}, {13, 8.73544987042932}, {
          14, 10.243038853331369`}, {15, 8.735457729223057}, {
          16, 10.243031847375974`}}]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> 
      "\[Tau](q)=(q-1)\!\(\*SubscriptBox[\(D\), \(q\)]\), q = 20 \n \
\!\(\*SubscriptBox[\(t\), \(s\)]\)/\!\(\*SubscriptBox[\(t\), \(w\)]\) = 2", 
      PlotRange -> {{1.8, 16.2}, {8.541407338853862, 11.308044466260453`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.003]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[0.003]]}, {
       10.247193952360728` - 0.00029353819063304123` $CellContext`n, 
        8.734657701928743 + 0.00005765750741665828 $CellContext`n}, 
       LabelStyle -> {}, LegendLayout -> "Column"]], {Right, Center}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Print",
 CellChangeTimes->{
  3.6297935176357117`*^9, 3.629795792726698*^9, 3.6297959804681053`*^9, 
   3.6297967455128603`*^9, 3.629796790576288*^9, {3.6297968208914948`*^9, 
   3.6297968457708282`*^9}, 3.62979698861648*^9, 3.6297970251256104`*^9, {
   3.629797137315426*^9, 3.629797153097601*^9}, {3.6297973125523243`*^9, 
   3.629797354012147*^9}, {3.629797415851927*^9, 
   3.629797456671885*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXQu8TcX3384+59xzrrcSLkp59VP0UFzvR7+ofr1++fX79esX/0ryiBLK
I/J+hFJSeUVIEvJIqJRnCnmLGy4uydu9IhS6//nOrNln73332XvOuRe34mPv
e/bMmjUza9astWbNmr3ve6JTqxbtnujUuvkTZRp3eKJ9q9bNO5Zp9FwHlqTn
0TRfKU3LM6yMht+ZmiZvmey/uF2NG5K9EtrxP3rm008/rVGOVovfgyUyMjLe
f/fdd4+1b9/+TJs2bVYMGjTojq1bt9YV2Q9/991337CkdJaN69uBAwf+e/Xq
1cnITgBCXQCWOXLkyMy3337752effRYXfl/D0qoagD7jl6YX+uWXX4yW3GJk
hBzaeYu9pmgtLhq9rzVFWui33377+pVXXmn2zTffaL4rT5w4oemPf/3110ee
f/75BikpKVptDhdq+9VXX+3u2rXrfRs2bEBLC7PrwXXr1u3t3LnzM4sWLarp
UIVonJ7/9OnTO7uxf/PmzdN8KKjpL3366ac7XnrppbxnzpzRbo9edm3fvn0f
WbVqlWl4rHBhh7TbouPz7O6VnhRDb3lxE9onGIrFQ4cONTcT3av3ww8/mOEa
sjFBOn+qEb2ZHb744guMpzkNz88tXLjQq4tX/fzzzxt79+59z6ZNm3KCZJ79
vUKQrCX+hIGBCLXwtdde4xQ2FSzKGvdL27ZtzYT6rXXr1vnAByY4PP/KGNmL
UF+9+uqrjb7//ntzGp6/ZHVH7ZhfpCWlp6eDUBgULSr/8h65kMezl2byCK6A
DDCDO3HZ/k6dOqkQbxebk/VtXIZnTDgv4h3s2LFjsePHj5vTirNn1B2VeAGR
VpIRb32fPn0gZdzq8OyvC2k9aWAl7QPr169fOmTIEP38+fNupAW/Yc6b0T65
fPnyRbYJ/OKCBQvSunTpAjEn5RZ+I63j559/Hp1nRB2Bc+fOmdPwbPC0U7eD
Ig1DsoT1g8uj5Oh1ePbXhbSeNCDSthJZ77z//vs95s6dy5980UkL3QNRCvmg
+TBWAi3Sam/fvp20iZ7n999/hzYUmk/c8Yx0L66Ni7QJIq3IyZMnU3r06FFn
27ZtWvXoosGzvy6k9aTBlRbShplGghRKTk1NdSFtApRvkzVr1oAzTj3zzDMn
2rVrB9lTa8eOHVodUa7nJ598AmuEd88HvavpddnvVQMGDOjONK4bx8YlDMg4
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
U+8O5HLuTRZcvrpGrTp2uOX1G96J3Mp7D/6sFRIzBM+1t6Ud5U/lRNqK2nXq
2ct+3qjxXcZsrS5m69K69eq7Ukj1qyfFoguLlxVR5PRXRXL6ayaqcDlHihz7
vEhOf9ZEFc5Fhbwc22jn8PdILj6ciz3xsiI1RVXxfvEke59T8cg2G4S8cz0V
ycIp0MbT1opWLwdqG714di13DzuYA82MXlz1W4gcekZ0PKomJYee7onH8yN5
/D7NE4/aFzQvHh61L3Ga8XA0tRTnnxd1VT/F5DXaHnPNi+li4fkYD97k7EvO
s3/yJsffgJ6dgzfxvCk9O0cb4nmjenaOc1B9Mb1pPTsHV6i+rG9fv0D1Kb+b
PUcPyWTzLe3ZYaB43q6enXMw8dSXzRMPofirjCfG/fK73//a+Zepepmqf5T8
XEdVmy1qskov+HlvJ80kLN6Lc7bbqX5SXRfkHLdLfRfkpKxLfRfkdLBLfRfk
LHa261MyKXMRFS82l2T7S41R7Migc7KMA8zu9xpdTcksyeKox+XPN/6h8sV7
XawewtKlS1s8hAQq3qGq6A0kOSDefano+Uu3lFHz8h2zlFHzxGW/jJqnzlpG
zT+XbqG1mi8uwzKUFr9bUlKSxe+WS7guvrnGf/Pb1bk8QQyFXnfbtm340h9/
orAquBYNsc/LHLQMOYT27q5du+K7iTKsXaoU/fz58yk9evSA29KpbL9Zs2bh
m4v8yVYW1/+tWLFiU69evSxliT1h/OFjcE0Qq0Yn3s1loTCOM3F+1+bNm3nC
AVGcjpgjlmLayJEj4QDqxCQBKTl8TRCfmeOfrKPXDVVhzAgP4y9t27bFJ+5G
T5o0Cdh5bSblCMURodJ+S3W3I0qXwXdesGABlIupGD5iyJ8o2K7cwYMH4Zpq
99VXX2k+bmVwJydcVOYq8dU+dFBYO1mq1KVybZCSkiKDhaFd35CnTag+fE2v
OzSuYGZ+78nmq0FMgquFgGSWxh1zDvVhsPH1wo7Gq8Y0HY5LAzfhQd+uk29n
oPrKHjp0yF5fBYhzlnbPpk2bLPWVFvnfDBo0yLBRqAxGFWXgRJS4z7ERhnPR
XF8Yp4Vs9ZXIyMhA2n9XrVrlVN+IDz74YAveMWrCAwbsKWVbjP27kcbn71u2
bHGqD19SPN+yZctE01Gz9X369HmLtcM+fj3mzp1rrq83ToPY6sNXFJHG9wrM
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\
\>"]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Wavefunctions: definitions.", "Subsubsection",
 CellChangeTimes->{{3.630934451760487*^9, 3.63093445745586*^9}}],

Cell["\<\
We define general functions computing fractal dimensions from lists, rather \
than functions adapted to our specific case.\
\>", "Text",
 CellChangeTimes->{{3.6309975019888783`*^9, 3.630997549157268*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "We compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Chi]", "q"], "n"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[CapitalSigma]", "a"], "|", 
     RowBox[{
      SuperscriptBox["\[Psi]", "n"], "(", 
      RowBox[{"i", ",", "a"}], ")"}], 
     SuperscriptBox["|", 
      RowBox[{"2", "q"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\nWe define the local dimension of the wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["D", "q"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["lim", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
     RowBox[{
      FractionBox["1", 
       RowBox[{"q", "-", "1"}]], 
      FractionBox[
       RowBox[{"log", "(", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Chi]", "q"], "n"], "(", "i", ")"}], ")"}], 
       RowBox[{"log", "(", 
        RowBox[{"1", "/", 
         SubscriptBox["F", "n"]}], ")"}]]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6297819505151176`*^9, 3.629782150655591*^9}, {
  3.6303260562655563`*^9, 3.630326139818005*^9}, {3.630934477152502*^9, 
  3.630934567217009*^9}, {3.630934630673167*^9, 3.630934631297505*^9}, {
  3.6309354307593203`*^9, 3.630935516815362*^9}, {3.6309356538549843`*^9, 
  3.630935654575048*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "wf", " ", "is", " ", "a", " ", "list", " ", "of", " ", "numbers", " ", 
     "that", " ", "are", " ", "a", " ", "priori", " ", "the", " ", 
     "coefficients", " ", "of", " ", "a", " ", 
     RowBox[{"wavefunction", ".", " ", "They"}], " ", "can", " ", "be", " ", 
     "coefficients", " ", "in", " ", "the", " ", "position", " ", "basis"}], 
    ",", " ", 
    RowBox[{"for", " ", "a", " ", "given", " ", "energy"}], ",", " ", 
    RowBox[{
    "or", " ", "coefficients", " ", "in", " ", "the", " ", "energy", " ", 
     "basis", " ", "for", " ", "a", " ", "particular", " ", 
     RowBox[{"position", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"WfD", "[", 
    RowBox[{"wf_", ",", "q_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"q", "-", "1"}], ")"}], 
      RowBox[{"-", "1"}]]}], 
    FractionBox[
     RowBox[{"Log", "[", 
      RowBox[{"Plus", "@@", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "wf", "]"}], 
        RowBox[{"2", "q"}]]}], "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"Length", "@", "wf"}], "]"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.630997267210726*^9, 3.630997456587614*^9}, {
  3.630997567916525*^9, 3.630997642602827*^9}, {3.6313445925282907`*^9, 
  3.631344626817724*^9}}],

Cell[TextData[{
 "We compute the partition function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"\[Tau]", ",", "q"}]], "n"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[CapitalSigma]", "a"], 
     FractionBox[
      RowBox[{"|", 
       RowBox[{
        SuperscriptBox["\[Psi]", "n"], 
        RowBox[{"(", 
         RowBox[{"i", ",", "a"}], ")"}]}], 
       SuperscriptBox["|", 
        RowBox[{"2", "q"}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox[
         SubscriptBox["\[CapitalDelta]", "a"], "n"], ")"}], "\[Tau]"]]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\nWe define the local dimension of the wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], " ", "such", " ", "that", 
     " ", 
     RowBox[{
      SubscriptBox["lim", 
       RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], ",", "q"}]], 
         RowBox[{"n", "+", "1"}]], "(", "i", ")"}], 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], ",", "q"}]], "n"], 
        "(", "i", ")"}]]}]}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6297819505151176`*^9, 3.629782150655591*^9}, {
  3.6303260562655563`*^9, 3.630326139818005*^9}, {3.630934477152502*^9, 
  3.630934567217009*^9}, {3.630934630673167*^9, 3.630934631297505*^9}, {
  3.6309354307593203`*^9, 3.630935667729848*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"compute", " ", "fractal", " ", "dimension", " ", 
     SubscriptBox["D", "q"], " ", "from", " ", "2", " ", "lists", " ", "of", 
     " ", "weights", " ", "and", " ", "box", " ", "lengths"}], ",", " ", 
    RowBox[{"using", " ", "the", " ", "thermodynamic", " ", "formalism"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PartD", "[", 
    RowBox[{
    "weights_", ",", "weightsN_", ",", "lengths_", ",", "lengthsN_", ",", 
     "q_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gam", ",", "gamN", ",", "\[Tau]", ",", "\[Tau]0", ",", "q0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gam", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", "weights", ")"}], "q0"], 
          SuperscriptBox[
           RowBox[{"(", "lengths", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"gamN", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", "weightsN", ")"}], "q0"], 
          SuperscriptBox[
           RowBox[{"(", "lengthsN", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", " ", 
       SubscriptBox["D", "q"], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Tau]0", "=", 
       RowBox[{"\[Tau]", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["gamN", "gam"], "/.", 
             RowBox[{"q0", "\[Rule]", "q"}]}], ")"}], "-", "1"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      FractionBox["\[Tau]0", 
       RowBox[{"q", "-", "1"}]]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.630997864395117*^9, 3.630997940972649*^9}, {
   3.630998058701036*^9, 3.630998151711904*^9}, {3.6309981817454863`*^9, 
   3.6309983368371696`*^9}, 3.630998958714292*^9, {3.630999209213921*^9, 
   3.630999246524372*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"coincidence", " ", "check"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"n", "=", "13"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "lN"}], "}"}], "=", 
     RowBox[{"BandLists", "[", 
      RowBox[{"n", ",", ".1", ",", "1."}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w", ",", "wN"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "2"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "2"}], "]"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "3"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "3"}], "]"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"q", "-", "1"}], ")"}], 
    RowBox[{"PartD", "[", 
     RowBox[{"w", ",", "wN", ",", "l", ",", "lN", ",", "q"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"FractalD", "[", 
    RowBox[{"n", ",", ".1", ",", "1.", ",", "q"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.630998409145007*^9, 3.630998653461988*^9}, {
  3.630998853862123*^9, 3.6309988835785093`*^9}, {3.630998969146366*^9, 
  3.630999011748171*^9}, {3.630999119737269*^9, 3.630999182362742*^9}, {
  3.630999289446994*^9, 3.630999297572158*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.3169466720799743`"}]], "Output",
 CellChangeTimes->{{3.6309986055273943`*^9, 3.630998655819525*^9}, {
   3.630998862961828*^9, 3.630998883816243*^9}, {3.630998969933091*^9, 
   3.630999012874837*^9}, {3.6309991558349123`*^9, 3.630999183366291*^9}, 
   3.630999255596242*^9}],

Cell[BoxData[
 RowBox[{"-", "0.3169466720799743`"}]], "Output",
 CellChangeTimes->{{3.6309986055273943`*^9, 3.630998655819525*^9}, {
   3.630998862961828*^9, 3.630998883816243*^9}, {3.630998969933091*^9, 
   3.630999012874837*^9}, {3.6309991558349123`*^9, 3.630999183366291*^9}, 
   3.630999256384142*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Precision", "[", "1`", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.631268666297812*^9, 3.631268732760317*^9}, {
  3.631268900735499*^9, 3.631268901247204*^9}}],

Cell[BoxData["15.954589770191003`"], "Output",
 CellChangeTimes->{{3.631268666740806*^9, 3.6312687334012537`*^9}, 
   3.631268901750196*^9, 3.6313342015712557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"\[Rho]", "=", 
    RowBox[{"1", " ", "check"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "increasing", " ", "precisions", " ", "does", " ", "not", " ", "provoke", 
     " ", "noticable", " ", "changes"}], ",", " ", 
    RowBox[{
    "howevever", " ", "increasing", " ", "the", " ", "number", " ", "of", " ",
      "sites", " ", 
     RowBox[{"does", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "=", "14"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"val", ",", "vec"}], "}"}], "=", 
     RowBox[{"Eigensystem", "[", 
      RowBox[{"hp", "[", 
       RowBox[{"n", ",", "1.", ",", "1."}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
     "energy"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vecn", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"vec", "[", 
        RowBox[{"[", 
         RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}], ",", 
       RowBox[{"10", "^", 
        RowBox[{"-", "10"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"WfD", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "vecn", "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", "q"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6309993862659597`*^9, 3.630999391877275*^9}, {
   3.63099943762141*^9, 3.6309994852081947`*^9}, {3.630999515832073*^9, 
   3.630999516199329*^9}, {3.6309995907934093`*^9, 3.630999738572711*^9}, {
   3.630999826091649*^9, 3.630999830061941*^9}, {3.63100381400707*^9, 
   3.63100391310942*^9}, {3.6310041187903957`*^9, 3.631004203701034*^9}, {
   3.631004282681185*^9, 3.631004361706994*^9}, {3.631004432824346*^9, 
   3.631004443848527*^9}, 3.631004974987874*^9, {3.631008075362873*^9, 
   3.631008075745614*^9}, {3.631008125859672*^9, 3.631008127907386*^9}, 
   3.631010078063529*^9, {3.631267979738345*^9, 3.6312679912261343`*^9}, {
   3.6312680631773977`*^9, 3.6312680859953136`*^9}, {3.631268283975091*^9, 
   3.631268284037716*^9}, {3.631268422450121*^9, 3.631268423488306*^9}, {
   3.631268460854578*^9, 3.631268461044599*^9}, {3.631268522398355*^9, 
   3.631268574787068*^9}, {3.631268611044674*^9, 3.6312686154133*^9}, {
   3.631268921671526*^9, 3.6312689269992123`*^9}, {3.631268962982441*^9, 
   3.63126902189806*^9}, {3.631269180653543*^9, 3.631269206476807*^9}, {
   3.631269359712925*^9, 3.6312694417445498`*^9}, 3.6313342193885098`*^9, {
   3.631334661248622*^9, 3.6313346744313717`*^9}, {3.6313348835864563`*^9, 
   3.631334888610547*^9}, {3.631335079365452*^9, 3.631335093328075*^9}, {
   3.6313354861143312`*^9, 3.631335555828281*^9}, {3.631335809014407*^9, 
   3.6313358107905493`*^9}, {3.631336161482304*^9, 3.6313361630970917`*^9}}],

Cell[BoxData["0.9410435357009963`"], "Output",
 CellChangeTimes->{
  3.63100497568815*^9, 3.631008076147579*^9, 3.631008128749795*^9, 
   3.631010078990549*^9, {3.6312679841004667`*^9, 3.631267991459219*^9}, {
   3.631268070067848*^9, 3.6312680862958803`*^9}, {3.631268138058028*^9, 
   3.63126815853393*^9}, 3.6312682490160713`*^9, {3.631268281057021*^9, 
   3.631268284391263*^9}, 3.631268351453782*^9, {3.63126838617161*^9, 
   3.631268486063531*^9}, {3.631268552331347*^9, 3.631268575080381*^9}, {
   3.631268616126342*^9, 3.631268629318906*^9}, 3.631268940033888*^9, {
   3.631268981469614*^9, 3.631269031958222*^9}, {3.6312691831113987`*^9, 
   3.631269216433707*^9}, {3.631269395624784*^9, 3.631269408238204*^9}, 
   3.631269501326371*^9, 3.631334283856456*^9, {3.631334661666134*^9, 
   3.631334675213819*^9}, 3.631334741556196*^9, {3.631334875372336*^9, 
   3.63133488893084*^9}, {3.631335081882786*^9, 3.631335093769115*^9}, 
   3.631335327702079*^9, 3.631335412520687*^9, {3.631335496445202*^9, 
   3.631335554022573*^9}, 3.631335813284874*^9, 3.6313361653696404`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"\[Rho]", " ", 
    RowBox[{"<<", " ", "1"}], " ", "check"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "=", 
     RowBox[{"1", "/", "20"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", 
     RowBox[{"IntegerPart", "[", 
      RowBox[{
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "+", "2"}], "]"}], "/", "2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tol", "=", 
     RowBox[{"10", "^", 
      RowBox[{"-", "14"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"val", ",", "vec"}], "}"}], "=", 
     RowBox[{"Eigensystem", "[", 
      RowBox[{"hp", "[", 
       RowBox[{"n", ",", "\[Rho]", ",", "1."}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
     "energy"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vec", "=", 
     RowBox[{"vec", "[", 
      RowBox[{"[", 
       RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"drop", " ", "small", " ", "components"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vecn", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"vec", ",", "tol"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"WfD", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", "vecn"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6309993862659597`*^9, 3.630999391877275*^9}, {
   3.63099943762141*^9, 3.6309994852081947`*^9}, {3.630999515832073*^9, 
   3.630999516199329*^9}, {3.6309995907934093`*^9, 3.630999738572711*^9}, {
   3.630999826091649*^9, 3.630999830061941*^9}, {3.63100381400707*^9, 
   3.63100391310942*^9}, {3.6310041187903957`*^9, 3.631004203701034*^9}, {
   3.631004282681185*^9, 3.631004361706994*^9}, {3.631004432824346*^9, 
   3.631004443848527*^9}, 3.631004974987874*^9, {3.631008075362873*^9, 
   3.631008075745614*^9}, {3.631008125859672*^9, 3.631008127907386*^9}, 
   3.631010078063529*^9, {3.631267979738345*^9, 3.6312679912261343`*^9}, {
   3.6312680631773977`*^9, 3.6312680859953136`*^9}, {3.631268283975091*^9, 
   3.631268284037716*^9}, {3.631268422450121*^9, 3.631268423488306*^9}, {
   3.631268460854578*^9, 3.631268461044599*^9}, {3.631268522398355*^9, 
   3.631268574787068*^9}, {3.631268611044674*^9, 3.6312686154133*^9}, {
   3.631268921671526*^9, 3.6312689269992123`*^9}, {3.631268962982441*^9, 
   3.63126902189806*^9}, {3.631269180653543*^9, 3.631269206476807*^9}, {
   3.631269359712925*^9, 3.6312694417445498`*^9}, 3.6313342193885098`*^9, {
   3.631334661248622*^9, 3.6313346744313717`*^9}, {3.6313348835864563`*^9, 
   3.631334888610547*^9}, {3.631335079365452*^9, 3.631335093328075*^9}, {
   3.6313353360315723`*^9, 3.631335339312005*^9}, {3.631336177732382*^9, 
   3.631336269047521*^9}, 3.631343284427804*^9, {3.631343331564465*^9, 
   3.631343352779524*^9}, {3.631343421244268*^9, 3.631343512380129*^9}, {
   3.63134404625358*^9, 3.631344137167212*^9}, {3.6313442276971283`*^9, 
   3.631344320014613*^9}, {3.631344412306184*^9, 3.6313444625455303`*^9}, {
   3.631344562912799*^9, 3.6313445713921824`*^9}, {3.6313446386745987`*^9, 
   3.63134468782386*^9}, {3.631344718098433*^9, 3.631344718225339*^9}, {
   3.631344753970358*^9, 3.6313447540548162`*^9}, {3.631351561457494*^9, 
   3.6313517814108152`*^9}, {3.631351818228476*^9, 3.6313518184993267`*^9}, {
   3.631355219788937*^9, 3.631355223802799*^9}, {3.631355376418683*^9, 
   3.6313553971650963`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"WfD", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", "vecn"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.631351990607812*^9, 3.631351995373184*^9}, {
  3.631353870544671*^9, 3.631353876639217*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"Max", "[", "l", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"l", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"PointSize", "[", ".008", "]"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<ThermometerColors\>\"", "]"}], "[", 
        RowBox[{"y", "/", 
         RowBox[{"(", 
          RowBox[{"1.5", "m"}], ")"}]}], "]"}]}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<i\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(D\), \(q = 20\)]\)(i)\>\""}], "}"}]}]}], 
   "]"}], "/.", 
  RowBox[{"Line", "\[Rule]", "Point"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"dir", "<>", "\"\<data/local_dim_wf_rho_20.png\>\""}], ",", "%", 
     ",", 
     RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.631351999133451*^9, 3.63135208089281*^9}, {
   3.631352168029217*^9, 3.6313521706050797`*^9}, {3.631352211309169*^9, 
   3.6313522326525173`*^9}, {3.631352363279351*^9, 3.631352374413712*^9}, 
   3.631352490301984*^9, {3.6313525350056553`*^9, 3.631352638911398*^9}, {
   3.631353452672081*^9, 3.631353466560051*^9}, {3.631353538519121*^9, 
   3.631353600273089*^9}, {3.631353752707183*^9, 3.631353797555695*^9}, 
   3.631353848660982*^9, {3.6313538788814287`*^9, 3.631353886579178*^9}, {
   3.631353919667536*^9, 3.631354080503418*^9}, {3.631354139220539*^9, 
   3.631354170451769*^9}, {3.631354217783395*^9, 3.631354266388891*^9}, {
   3.6313543361102257`*^9, 3.631354338885635*^9}, {3.631354478953772*^9, 
   3.631354492950282*^9}, {3.631354533688389*^9, 3.631354623703113*^9}, {
   3.63135465660299*^9, 3.631354656951796*^9}, {3.63135468896952*^9, 
   3.631354744103674*^9}, {3.6313547802532*^9, 3.6313547824720716`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
h98+1PJ9kBSmP5r9Hkn+SleK+ScOGC/n+2Ep/D+Kglk/9KXwvPPgUAu+L5Ri
fePDpgHEH0Mp2vXOe5HM7w1JMbKDte1tPv9LsTY5eQjf/xhLoZast+T3EUyk
aDyT+mE86YepFHlndMYYEPwYKWboGQ/qT/pppsFn4hjG9XsWUiRdfD2F8ymQ
ouFNfrtnJA9LKSZdNrz0lO8jpAg2ah/fi+DnSBFmsacrx8e2mvlSd24dTfGO
vRSrp2ZM7EPxmIMU9TcVvfTovOcoRZ3lB99lfP6X4vA1r6S/FO+5ShE38VD/
XIqPPaTIKdbvfJ/uQzyl6LW56+/37P+l6Ce8kTyW8l1+UiSs6NCE+4WDpHAy
6GvK9wGhUiw6pDv3AMELpBj6VVBURPm2aClE++YpLxN+oRSv5hqdaUb4kzTy
frjn2QV+r0QKs5mDpowm/ZBI8WZNslYbsp9yKVx8D3blsUqKG5W2nU0JPkuK
yUfw6AbNly3F189TCvUIX44UXSP155sQP3OliM1xm2pI/UN5Usx71LE75weP
SnHntPLhVT7/S9G8t8I3gvhRoKH/pJHuVbovLJQiIrz7SDGtr0gK8QrD+M10
Hi2WIst3weaf9f9+XyKFx8pxKy0If6kUP37M/SOg+skyKVYdumTdl8475VIs
mbtz9EDCX6lZ75Gh6XP5PR4pWto1vzqG7PtLKY5nRQUKuJ9LijbPE/oUk/2r
kcJ1wcmaa9zfI8WeJYnj9pP9qtPsX8eBu69z/k8jj1U1ly7T+hqk2OC/9oGa
/IuWDHoGGxbm0XzaMo29MOoTRf1KOjJU6qqcOD7QlWGixdAQfj9RT4a8XqXv
HtB69WW4aCy2ukP4DWRw903KTyZ6DWU4u3qXdhS/LyPDGt0EdSyN+8uwyGbZ
K+4fNZbBe2mKbDzxx0SGP4/jk7i/xlSG//4rSNCifpUxMhQ83TLwBO0nMxm8
NvsX+NJ+s5AhS2/6Qx2+f5Jh00uf8kiSj6UMhiPeBG6j86aNDNpHTuxw4/yf
DFvvG/2cT+dVWxk6Sz5b76Hzj70MLdfLHu3kfkXN7681s+D8j6MM/o8x2pTw
O8mwc3375tqk364y6Ey5vteF+OUhw6v6CVe5vtRThplnXg0vJXn7yNBe579l
nH/3k0G3UzMnHgfJcGOx2ZUrBB8qw5jp1lGc3xdo4K0PPlvF/l+GKTM9VXbE
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
dbl4sR7xR4gEX25GF3UjfIZK0HKCzZ5hxB/rxHrnhtbIJf7YIMHXPxfOLN9O
+z8JJjRdPruM1hMmQfuaGcrr5M8Jl6Dr6/5jNhE/REiQ43l31AZqb5dgU8OQ
rInUP0qCHZX3yx7TenYK+avqtnsarTdagi6PzzYMJPnfI8abX/LHj+Q3RoKq
h0K8ppH8xgp53zXy5yiS3wMSnJh/7dEf8tcdkmDUuUD7VcTPRySYa13ykvVH
nAQVLrGHeX8cL0Fts8OnPpP+kEjw7NbTu70JvkyCvGmfji+i+SoEfnaMSh9O
+SNVErzcu6NiPM1fI+Zz+1+7zbQf0Ql+VUwwY/1pkOD1myNzLpL+NEnw60UT
pS3p3xNiftd3W3I7UYKdA/btT6H+SRIs3j2310ca74wEitjPPiEE75wErmbV
fjiTPkuWICDVMK8l4StFgjkWJQ0LSH5TJfgzfOeJm+z/FvSKOxYSRetJl+DG
+uRNRWTfMiTIX9xoGdu3TIGfx35jXMi+XZfg4nCHgwPo/ywJVJMUMzjfZbbQ
P+uX3N9H9Lwt7E3NuFkLOb+9BN+v7fdZQf/fk+Cwdk6fFwQ/VwLnhX+7TSb7
nif00xfrauUcXyPBo/rqubz/yZcgPCxxEO9/CiRYl+hyW0n7n0IJ3u2v/FpE
+CySYFzi47a8/3kuwdQfO6S8/ykW9Onnfpz3P68kuGZ3qNSC5K1EAmlZUMkQ
6l8qwdlvFuFHSF7fCX3ot1rSivz9ZYI/9/UNtOf7ewkcX8+dwvufCgncR2w8
yPufzxI8sY5I4v3PV0H/0KqVV4mfv0vQoiIvYjWN91Po1xmhWXyfUSnBtxNV
g/Npv/FHgnODlmce4PyfUgQ8mfBRRfxeVYqHxpnHXxE9zKVIrnOobD7xfw0p
9kyb+p7lyUKKqcv9VLw/tpRi77hDPif4vkAKiWn4J673YS3FjNV9ft9g+y+F
Vf31ITHEHzZS7Dab+2winddspeikXvWtI/GTvRRdlnuNPEXy0UiK1au//5lH
628iRe1XqfdWkj13kCJW825ECslXcyk2N5mpvMDnDymeHZ/bM5LtvxSbwoeP
Y3y2FfPJ9l+RRPAcpbhRXxdZQvt9JynuD3L2aUDzdZbi6q2M/Km0nk5SdEzK
r36b1ttFioupZ7z5/rObFH9s3NoeJHnqIYWjz7TjfH7rJeBP7rd3JvFHHyns
734aPpjw0U+Ksw5z/l4h+XeRwri3Z+wh2l8MlKLPltSTGoLvKkVT+adhZVy/
VIqeG5e0GUX+QjcpWlrvbsH5aNylOCTdU7sK+Sc9pDj1vYE1+99HSHEs3+MD
n4dHSeF/uHrGX34vJYXz4sgnnL9ynOg/e2arbnS+nyCFZvY8M45XmSSFckLF
kU6EzylS7PC81off/3hK8fnUQU93fl8hhfWS3WP4fD9DirhPh5cNpvO9txQ7
re138n2AjxSfJsmnW3F9NinWW7zd25/o4StFX9OFil7U9pNixcb7/buQ/2e+
FPvNO7e9y/ezUjxf+NTjB8UTLZJi6PVn1uz/CZCiVsuXtdj/EyiF+7QzNpak
j4OkaFy+YYc39V8uhVnJ0U9c73qlFDV725RGkjwFS5E69s3I8yRvIVLcDRhY
BSSPoYLfN8w8yv6cdVJMch6xgutHbxD8cGTx6Z/s/5Ei++05+5vUP0yKwcMf
XmT/T7gUJ99ZFqwhekUI/rqctJffl2yXIujDp7sLyP8TJcXE7w2W8H3GTine
fPFYwPcd0VKsenDN6xvxxx4pSsKGJXG+hxjBD8OdVywheLFSpPWqnOFN8A5I
4VW3RwL7Bw9J0e1vWkUQ6a8jUrQdvNOD6yvFSXFbnraP45fihX6LmZU600j+
JymOplTbvpbkQya+N25fNZDorZDC8KRnlWr0XSWFR6evG6uw/ZfCYdZkHb/f
1EmRLh1S8Z7WaxDjD3as0Z340SRF3uaf07j+1Akp2l8cPIbvnxKlkL4/7xtM
/tskKepd2TTIn/jjjODnc4V9+LxzToy3vWj8FfIfJwv5nrl+J+8XUqRI8Zn0
gOP9U6UoN+4wZ//ZZSki1zou9Sd/cLoU15zsW34i/ZEhxfzz6w4fJfxliu8L
Zp5UcHyMFOpP+fu5vnaWFDctFIstSH9mS3Ekbf2Gs6Q/b0vxfXy3Ovm0f8wR
9GmtTXhE7XtS2C1s/eI89c+V4p1d8MO3tJ48gU/zKz6LCd5DIc+nek3g+eSL
+UUsrMPzLZBi0KSFo3k9hVL4Fj27uZDro0qRU2m+vT3h47kUi8/t+hFC+CqW
4rzLyDY1aT2vhP7/GGz9iPNtS2GxZlJHzq9ZKkXF8o23FtF476QIvPv0MMdr
l0lxoWNlnQCid7nQt+4XK7l+WIWQl9m2KZbkL/wsResrjR9kkj7+KsXy0/V+
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
e617sP1XQxX5KVJL441Ro6NxUweGN06Nied7d2zP9ZNF+9N858l03pukhnz9
1cprtJ4panSZorXjepqeapw9P883i/Dhpcblz41aT6bz5gw1nkzKv+pP/Out
RsbRqb5cz8FHDbXz4jJf2h/PUcNrYfy1EhrfVw1f32WHJtF8/dTY+/bf0/tp
fzxfjbteFqWFBN9fjQMTZ7wfRfyySA2bxubx77lemxqHv9YPYf91oBrSBqoG
T9j+q3GyNsIfUXu5GsnNzzXk+pIr1Yg4eu/gFhovWI1nbQZ7RnJ+FzU69c/P
tGT/vxrxcmNhMNt/Ndxs/q39hfw/G9T41OnXRPavb1Jj5bnMnfy+PkyNzb2v
nOP6kuFq9I23qogg+BFqnE8JeeBP+YS3q1HU+PHgdzRelBrj7mwZzfK7U40+
fpjuSvONVmNTrll4BY23R40HOV7Ha9F6Y9R4OTh20FnOJy3kZ2Nd90SSpwNq
vD3p4VmP60upkW5IqXqT6HdE6IfQSxkR9H+cWP+wI81eEn3ixXqfHFRUEn9K
BD3K9rfoR+dRmRrTt5Rn3aH/FWp4jrat1dDyv7ZK4Fv5dWMfzk+lxpnaSzIX
EHydGtkqWVow6QuDmP+x+x9aEXyTGj5/Gv4tpPqrJ9SwOl5Uj+slJqoxuvax
VlakD5KEPr5814LbZ9SoN9vsRR/qf04NC1l0TA6Nlyzk0SP9Tn2Cl6JG/+yq
5edoPamCHs51Hp8mfr4s5DN/vjX7f9LVSKu+YxbX08xQw7w47jfXG89Uw1+5
d6Yl18dV43b2l9b8XiZLjXbT23XXkv7KVmPO+6gKf4J/W6z/5q93yYSvHDUm
3Eu8bEf0vKfGsgO/594k+LlqzOr1eMBj+j9PjXkPmq3rwPW11Xh4p24D1t/5
arSteHyb/dcFauzenPrtLc2vUI2oy11H8vm0SHxXKLZMoP7P1XBO+tnMh/i3
WI3wk60b9yb79kqNb/2t8gaQfilRo3qEpJ4fwS9VI+SG5/VT9H7wnRrjF0ki
OP9AmeDvR9kHfhL/lavxznVBWibBr1Djys7Ybse5npf4/uDXbtYHX9XIqT0t
jPc/39UoOTlxEO9/fqrRNLd8IdfXrlSj5ZmPE7ke8x813G8WvThE8Mw02Dtn
7aHB7P/XIGDTpBftOB+YBnWfPTVwfe0aGmS265EbwPZfA9ubQ+vy/thSg+b+
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
WU/j7dRi+o8Ty3YSvGgt/k4rrHxG89kj5K+vV4OGNN8YLWoOX3l5PNeT1yK0
9uotibTeA1r4hX8Mvsz15bU4XrzgQt1TFP+nxfWTS2TuBD9OiyPuS/6mEb7j
BX/a3ii/SfSQaNFrcM0Fs4heMi2+ekyNZXlXaJHXJuuWE9FbJeB7HH6xlvhB
o0VKu+WeTnQ+0GlxY+/iKpe4XpUWD555Db1N8mES+B1Rpd51rl+jxc+3kzuy
/CVqEeWfmVuF7HuS6H+owWWu13lGi2uaSttetJ84J/Cz5HWtjwQvWeibUd7P
2Z+bosXTuFP9TtL6U7XwsR6tnU3667KAF7PXbiL1Txf8vnJx+F2yrxlaBCY3
WJ1B680U+iGsn1ssnQ+ua+G/6/fvcqJHlhb35BPk7A/KFvq2qe58dZKn20K+
Rnvmsn8wR4tHBzwK77H916LzrOjPPWg+uVpE97KYw/dleVqc2PDBZyLn/xH4
NfpaB3P8vxb9wprd8eZ6m0JfdKk26CXxZ6EWXi0jRzcgfVykRZuB2+dvJ/58
roV83gjlM/b/a+HksTRvIuHrlRbNDgx35PvREmFvWuwf+JL9/6I9wDy7MfV/
p8Xwii+pTYleZYKfjvtt4XrH5VpUa5W3vjbdr1Ro8avL+dX96Ptnoe+t2p3o
Q+2vWpzbYJ/+hPjpuxb6yU/vdubzv+C/9G+nhxG8Si08HrS3l9H3P1oUHwsa
WIfrf+jwtr9viwakj6vqUJh2bkJdwre5DkM/n5b/ofXV0OHJqFOHn9L7Egsd
dufcPm1G41vq8HLlP+s+0/7cSoeRHlYxSuJvax0sfN6P5npI9XTIWNSx5i/q
b6PDNwu7ThfZ/utw/dOjU2XEH/Y6qFs2CrnI9/9iPvNfFvwv/l+HHa1vRPSk
/YeDDnYdvviaaP7NdbgYfS1+Jf3fUoe4kokjl5I9bq3D6T/ddyRw/h+BjwF7
DH+IPxx1eNzl5qYu9D7ESYeNc7Sf1vP7fx0qwsdMr0v47KSDrlmbjxyP3EWH
ztXP1+F6IN10WPjqY1icieL/dYgpKuzcyJfy/+ig3FUv3Jr2E310kD9y8+R8
cP10CB1wQrmU2i46vJ83e7cl9R+oQ/Dxp9qNpA9dBX3yY4uqETzo4Ptr+WcL
mr+bDjX3/JJY0frcdbAN+NrASPrDQ4f2I5e/TWD7L+jfaFp/jpcfpcNYJ8vJ
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
    "], {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008], 
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwl3EMQILqyANA3tm3btm3btq07tm3btm3btu2Zf6b+4lRW2aQq6nQnQcN2
FdsG+N///lcl/P/+968NSCACE4SgBCM4IQhJKEIThrCEQ/f/RSAikYhMFKIS
jejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN
7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWo/G9MqUo1
qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje6
04Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxj
OjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7
O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3
uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4
yS9+84e//Jv8AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJ
LGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1q
U4e61KM+DWhIIxrThKY0ozktaEkrWtOGf4t3O9rTgY50ojNd6Eo3utODnvSi
N334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52
s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5z
h7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH
v/zb+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
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
dKM7PehJL3rTh//oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOY
yjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jK
Nrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1
rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+
84Of/OI3f/jLvwf+AAQkEIEJQlCCEZwQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pw3/0pR/9GcBABjGYIQxlGMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFM
ZjGbOcxlHvNZwEIWsZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52
sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGaM5zlHOe5wEUucZkrXOUa17nBTW5x
mzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGb
P/zlX3JPAAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonIRCEq0YhODGISi9jE
IS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQh
L/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWoTg1qUova1KEu
9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehOD3rSi9704T/6
0o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYy
j/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP
/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7
POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7yL7Ev
AAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCVaEQnBjGJRWziEJd4xCcB
CUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVsZCcHOclFbvKQl3zkpwAF
KURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpUpwY1qUVt6lCXetSnAQ1p
RGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSnBz3pRW/68B996Ud/BjCQ
QQxmCEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBF
LGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc
5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9HvCQRzzm
CU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCTX/zmD3/5l9QbgIAEIjBB
CEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZxiEs84pOAhCQiMUlI
SjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nISz7yU4CCFKIwRShK
MYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahLPerTgIY0ojFNaEoz
mtOClrSiNW1oSzva04GOdKIzXehKN7rTg570ojd9+I++9KM/AxjIIAYzhKEM
YzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxj
OStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4
JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkv
eMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37zh7/8S+gPQEACEZggBCUYwQlB
SEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFK
UpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlK
UZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rR
mja0pR3t6UBHOtGZLnSlG93pQU960Zs+/Edf+tGfAQxkEIMZwlCGMZwRjGQU
oxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWr
WcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5
w1nOcZ4LXOQSl7nCVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nD
W97xng985BOf+cJXvvGdH/zkF7/5w1/+FfMEICCBCEwQghKM4IQgJKEITRjC
Eo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKS
jvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO
8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwTmtKM5rSgJa1oTRva0o72
dKAjnehMF7rSje70oCe96E0f/qMv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSvb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8F
LnKJy1zhKte4zg1ucovb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+
8onPfOEr3/jOD37yi9/84S//CvkCEJBABCYIQQlGcEIQklCEJgxhCUd4IhCR
SEQmClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFM
ZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpU
pgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWlGc1rQkla0pg1taUd7OtCRTnSm
C13pRnd60JNe9KYP/9GXfvRnAAMZxGCGMJRhDGcEIxnFaMYwlnGMZwITmcRk
pjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2
sJVtbGcHO9nFbvawl33s5wAHOcRhjnCUYxznBCc5xWnOcJZznOcCF7nEZa5w
lWtc5wY3ucVt7nCXe9znAQ95xGOe8JRnPOcFL3nFa97wlne85wMf+cRnvvCV
b3znBz/5xW/+8Jd/RbwBCEggAhOEoAQjOCEISShCE4awhCM8EYhIJCIThahE
IzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQj
OznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOGspSjPBWoSCUqU4WqVKM6
NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta04a2tKM9HehIJzrTha50ozs9
6EkvetOH/+hLP/ozgIEMYjBDGMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYz
g5nMYjZzmMs85rOAhSxiMUtYyjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trOD
nexiN3vYyz72c4CDHOIwRzjKMY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob
3OI2d7jLPe7zgIc84jFPeMoznvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/8
4jd/+Mu/Av4ABCQQgQlCUIIRnBCEJBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQW
sYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5
yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpRngpUpBKVw///nwr/B7XRhjg=

       "],
       VertexColors->Automatic]}},
    VertexColors->CompressedData["
1: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
uHSXzXIX5gtqn2/PYr4Qq/P3IOYLpF0nnXG+sx3T9X6c75whN/gb5zsfmBu5
qAJ8iPvgnFUPcnjA1uvhPuADu8/S20N4jq2bsSoH9Cd59km8Bvo3CVOLuuC8
CYllBUHMv5xPnYqBOCps3/24asBPf/PMw39AZ0zk4KQq4OfxFDxRA/D2zfeU
/2Be2dR2kgB4aLfEDuyvW3E7nx37655g2cuP/XXVNwwycb8qSznsKmG/Ts2t
jeM7heBT+Q+xH1rscnjFdfAvx2MCve3Bv9h1hvCV9ZEJVperiV0NJCLorX6T
24F2Im1+ZSUK7N7Ot8//1MyRiAMvDc7vVW4n2js+cCWCnSxMSfh3E+xk7+td
SlfBTjZmkzIywa4GUVfQXAG7+tjzgVE/2NULWYc+DoG+3Ot/LvUY9IUq1iNC
DfSF/tWDH3hOuyslnGOLF5noUsprqvYYJYST1YxwngjNmpFKCfBtQeEmozb4
U+OdN4+VgF/4fOlN3OJNMmGiwlp6+NYooXr57opyP/i96O3j6U0kYro77O8z
kXai+ovGXwL0N+z3p3lrsJPSK7Evd4Od7LjlsIL3X6J3efbg/de/t10xeP91
asfPXY5A/+67bqUPOkhEHVVexlWgv6lo6T2ee3P4Srp4fCcR84vfL+G59yOF
3+w4t5FRooXRHfbxiW34n1HYxy8tdZsxjnp89mOwN8RR1z4uDl+GOOqLUEyT
BfB/ZfuAHwXikMPfLB6Vg5xX+qtWY/3Mq7071XCO5KOV1ACcI5lII1uDcK2y
fCWEl8pLeCJ8TrfXywrw9LFks/wFPGuk/JkWwNNa7CGN9Tz1UbzVwbDu1YuW
jFjPcy9TXgvnsCxoat/3ATp5pxaLfwCdVVn03kJgBw64vJ0NXScRZ7Und43C
vthHKXq6gd3w33NUtmKaROirbA58p9hO3N1yc/87rB/bv5G3C+xkz+FH9nZg
H0bTEjy64XuhG566nGBnzoodzvUEO7Mo07DnO9jh/KRfsX5ghwXS9aJYgG/6
XD958B1fePfxv9fAPyr/4GehA/9INWRYhPXhfh9ZFi1Av0ZWhx63gZwfevHe
Eec1jF3KdTsN/lFBLynVGfwazbddrtjnky2r9Dv2+Ry0FTuKfT7di8XD22Af
X0a6eg+BHH4zKus4CHZb7Kt+NM5fjk36p3EF5Fb8reILLZDbiybn7I1Aziu/
Wkz9A/9e27Sf6jX498seJbSRoBdqIa2WBOhFXn/Cwm7Qi9i+JYIB5PBuvLBp
vSWZkAvJ7LGF/Itwb2DCem+/u06uDBDPXHlYKmuFc9IbBapwDuyb22fz+73B
LxTKmRsA//0UsgOxD7BaQre8G8i5S3vA/kXQ097jY4VY//zzA0O8F8Dv0Vcp
41ybqfL1DOwz3Be2Z+kN4Hl8W/SgOOBxpn+xhHWMFqXuKdhP+0O/hAX20y7s
6CwWBbuUNFE2agx2aXyUPrYK/KOamfYc1vNr+egGSIGcdHhWmyxB3PXQ950F
nitS70yaqgb+p069MTkP8nb6MPu9fAUK8dpTvc59dJKQP/1dnAr7IZxlrMJ7
alXnmuUefO9DPcXhhefSewLi47G/0+rN1WXA4/Ga9lAk4LFVOdaD9YeGDyaM
sP5wiOHNBaw/jE4tLkn8Px9R/ngU8EQyPd2WgPPaOguX8RybVVKyWBniQAW6
pTU8x6aWpebGePtMxUcvzE8r3bVFzMA+vNt++BreB4WFtpu0Yt0IQ3y8Fdbj
jaw0uwMfArUOj9aCn3ovYhyyAvb5AvXqZ+znnO6p8ZoJvh/NKUq0AL5VOZZu
YD1S3olN5weAToVPTVdlQM6trR8M4DmMh2/7dxHw48n7DKzcO7Cuo6uhA+CT
0pHHQsE+n3a8VfkB/EtVes/eT8A3qd2hb/7v491aFoF9DBi+rVgawfdxp2Q2
p0G+35PL4d7cTiaeGyl2Y59wv4Sg396Y1/x6MrkA8n+snrNQ8CSFsD5S6nEG
8iAfnm4FL8iDIpQm1kwCxggl0+u8Z50oxNIFlyFNpRni/k8Tj9tSFMJw2Oai
Fvg1TYtzsti3/KVG0Rvsl350X41WF/g1zpKQTuyX/s44QAPzoDxFejucBxc9
nPoM58E5rqRb5QL9X7qf38Z38fsafn7D/hv9rJFKFMATHVeoUwp4tG3j9o+B
fxTQ0tRCf21SwSKiCnjaFSQvZgOeA8ahs0dA3ztUX1NT4bzCIN3AP+B3RE76
WSD/s/f5/9uK85uyo4tuYP/8x7N/XMCvDQszPEoGvyZaK5vpB36N6ZxeB57b
/+LiGSqD71fluZsvwP4aCK49QfiL77deVABc4O8Jbuw/LzK6JIZ97FWfuXSZ
Qv7Vc3mkyBnyL37Gx1VYz1N3/lC3KMibUXTmchTIm4O1dhs30GkbqTLwDPzj
h+dsoc+Bzi05wz4499PKIbT+KOiLgMBWp3mQ80OHTS6gvlSMH7tRA/s1GZ9I
owNyvts25QH2IX+okZ+O74vv0l/cge+L79h1SwdhHdfD43OdsO6MNxPHXcAT
Uqwci/qSZafK9hfwOD4dP436QqoPv5MIfDjJ585kDnGO9G5GCWGIc/Jotsmg
vndWKKTjvGy9M3q0OC/75b3y61pAv8Tm49E+wOfdDt5m18EvuLQHemG/SnaO
hcH72L9dOE6YHvgzqx+tg3CRJ4c2PQD4DIttJgPCLyoNo3/JNG398g/waI3T
2LZiva7NfAXat2z2yP/njGdc+/j/nPFaR0LoDvCZ9cRNzwTgc2msn0gm8Pn1
SbPlC+A3zyX4b8e6fd5LtsJYt/+U1ujib7DPL7oUKUYQVzs2HyDdBft8K3H8
RDX29TKeTWTwJBPcFxbkxsE+T8h+L/ME+5zjvlB5A+IQ2wKWnd/BPt/nfN2y
Dvi5OgJ3OFNIRF/85XFnuXaijoGRewToj3bSrthhRybINn/KksG/3FqoXsD+
um7mwWqdwOf2isl/14HPXEmSQjuBz76eazab/IGPXGw7uX1HCYHmn9J/wb8U
7BIwnAL/wj9yxsgH/AvNr+T24xBXnHP4kqsFccWXcK2eLRBX/NAUuYD5lxDH
Iy3Mv+jNDN9g/pU6/a1+DuJ2y7qiGHHIv9xkGM8cgPzrwRfBgwFAv7X6cGEJ
8CevrtHBGvIvbo6D5ceAfrPdAryMwH+GEZOINZBD2pNO7uYYF/ESaSSQw8C5
HIY6rJstVfF7AOtuirZccQR7tbe5rXMA7OpOq/enQ7CfT3aHgzvED75L8crK
JDJxZ7uwNsLLxtcuIrzQ/QgPwlWsih4intCkgd1OgIfj7/g84nk3PTR/HdZd
38q4uxLWDedZFM2FdfmOv604iPcvRh3VFNCXw3wXdEeBzhYdDyNWiMeMPxdM
rTWSCFoqbgExiMfsv95teAb7qHpf0KcY9rFv8yMDLognZ0+P/X9f/JWkt4D3
xU5uNat4XzyxwV18AOyKUsCR8cXPJGJ9vO1PCi/kpyK1I+sQVyT46fAOQVxR
lJtfqwFytf/Kn3x6oP/CgG7IUYgnL/Md4PoB8aQJf2cm9mEjXyStdYCc37mi
/tEW5Dz/qpBgLfiXYV+r43zWkH/m8froQTwZV8+7eh32peuf8uXzsC+UrPH4
A7AvbzqHeVcxn3KimoyBOCfD6XlsE8Q560EuQmnY11efc/99iCtSy6S6HUFu
aTs+mGeBnD8UHThqAnHICx9q3m8QT9r66J3fB/jPK4RHXIB4MuvPZ99QoH/2
ONewD+BpId3b1gl69GGLa3cv6JFi3S8r1Ltat7cMOFdo+KktNc4Vqv3FNIP3
Xy4HeF7i/ddby9sieP/lWBu0A/tgh4fJuPWBfbg2JZO+H+c9vZFORPip9K5W
7I+tQ+HvwP7Y3hZ17JeBDx9bElQPg581yNYgpYCfDZVjXcT6z3Ad+zeKsK7t
3Hh3NqxbcvCEeRzw+TJjAWcnyMmvHArHMfCPU3dv7ruE7yvnrIcnwa+FOxc5
HgD/KJ/z8DPOm2Cu+u06Buu6ngx7dBjW7XgaLMIgRyEiV7e9PzcySXgK3i13
Zp8mRrcwP8P3C7SHdhjVYR/CqUqJ5Xasq+1cEwE8sz0riRdhHyX03WqqAM/Z
DyZ6+4EPPdzb6KtADk9THQ6qADmMS+JLx7iC+8ORE8eA/r+5fdUYVwzcaezD
eiTVtjhbrEfy+yKTjfVIMdOCZZivsaxLeWK+tj1mZ3ASvpN9IWMijvZf4aGa
NM6PK05bfonzUkv+tWBcx+Br+BPjusb9ek8wrjOjnz+L70Fa3nzavpEzQdD/
jN93DdY9f1XPejOe23M+4myHuLFJS+2UK8SNR+LdzHaCvhSrsJ/dC/lL8mOt
ZgL0xTHOmrIA+iLqbJLAvgDx85cXvymgLxluV8uwH/WhNwvuIyBvZ7+pcFSB
vA2u7nxHB3Yp5DxnfAzY1e5kHfc4sKtf/Pm8cO4DP2+FUDvE+TvCTwbh3IdS
9YNU+D43eyHjnDLoS6fn/OQCzgMKyPBBfbmuoCnWBf8rxLeqbg/6EiZ4pBrn
wvuH5wXsA31hc7lBpwv6QnonmSwF9GcelTnoC/TbfBFX8gD6x8NHz+E5Vc+i
w4lTYCdVm7OD8f1amI8Jge+//jjUG+H7r9kui634/ms1dFrTAvTF3bVQUA/y
L44l/xBF0Je7M5Yie0Fftvk8cNAGfREJe7wWAvpS0rL9E841Lq+X8Me5xvHW
MT9wrrFRYtRhrG/pOuCuifUtkj8TmrG+ZebzfnkDoP+sy8MpGZDzGMUD0lkg
58Wb9BuwfsZsf5QzznvqF+Hq3tFCJqJqtzQjPEA5wBzhVSLSZQgPHSh7YQh4
ol/oMZ8CPJNbbK98AjyFMSWe2C9lWS727QdY97n1bOcbWDfjTl0o0imvkvap
EOgMz2eXRzpjUj990oH/6h/wfcUAdsZtdPTOKvzXHsOkyynAh1A5lw8E2I3V
ayLXG4EPoTv3cKUD3+5s+5i4FfjWFM8p/wT4Fv72tu8afL9jS/dJT9j3bWqp
qSGw72y5/n+ZYV9s3xCCM2CHve2/hPJj3cu+S5Ep1lNEsrH2PfbroId2YSbz
lhBXDFTr4HmsFvvunjqMi97nOuI5bdPt3rQhWHdo7u5JGjcyUfYxpvG66ygx
NET51YzzEOnWTMTBDk8e+LZ58Hg74XCkd/1tF9gR7xpaqRLw78Xkhch97UTu
bLwCzrmY/dmkgHMuojSK83HOhe/HtOBjICcWZ598lAM5Wbct0dkA+gXqew7d
Ar1/NsUcE5hDIrirRaq9uNuJO5F2zAJAv/XhwpoWMzKRNCtV9dcC6LnlWIHz
VZcmfbUSsyaIeS/dVwo1ZGJUvP1aEPD/ylpu7Abw/0lKYes68D+viL0Q47qC
3mM6R8CvmW7N95uF/43dKUvC/GiNzfuSNMDPc/c4LWN/wkybBcRDNWglR4P1
bCv3uKhB7/r8kpuQb/cGlRKxDqfE6qyEGXwv01/Zg/N/Q57613eBfXaUzBHK
Bfv8nJyahv11GVLlD+F8ujqz+wo4ny6tsLqNBHZv+/KsVSz23wvnlanDeeWs
iVMkRQphGWxZvQTxJDXN3+0WEE+mlkxkFwMe+RSdxGCwM2tMpBNVdeDXIsJ8
EM9wlVtYHOBZm3zN0gB4NNW+s5eDvrN27omzh/jkywF1mSKw29GNI3NIvzn9
QBrO1Z2P+vwT5+ru6/vZGI7v0O8d3nLsJplYZOXKDLQGO+Ot40eDevGDltUQ
9ELh05A0Xwv2q6d9Sw1wl0ixTFOAf+SzfHUA4PTU38n5sO9eX+IMGh0hzw4X
HxqEfT9UF62M76dK43/PpYOdcXjt6S8Jdkaqt2duCN+hK37Z+Ad05nNsdz0K
cZQWm6gm9tc958j5tRn+q4GalrQZ8iP1fTu+4nv2o1XTR8XBv3SosVMpN4I9
eFAeaapMIe7e2Oe8Y3ySUFYtk91gmSbEp3g/4/1gAGOsiB/OhX+X9TAZ+FP0
kJAVBTy7MndwXAB6+AfTPlaAnV8qbODS0KAQEsdNJrh+TBK7/TnHFJinicX4
f/WxQWOEqP/lxZeuFKKMV/dkgOIMYcycNKYmSyG+Bhy8sjI8SVTZVPF8A7+W
w9bQZgrrmvI2CoWDX+P/oK2QDfJ9giFFOBfW1bCwdm2AfaRrC4jjQv/ekjGv
C/SHrWw33Q70z8hEPKHbPk0wy34aRzxFh+bSwgCPtOC7iCzAsxHOzYb1qPl9
cRtYj9rV4tZvD3jCeg06cX7Zlnxx/Y8ghxP8vh04B6368eFEPGf41lOhgO+s
6TgD2PCd9aco0cpUiIet3Fba3CHvMBPP7ZeHvKNgcSwR7eGVP94BOC/v8Fku
RS7YX6VC2dMIHzqp1qUHcBJrudZOgD8kTgyn4Dlh1YvbPjg34b7dsA3oS27c
YGEgfJ9zPymRDHT+/jvHFwby5twpGWMEdDrN8X9owvOx+DCLdJxD+pElAvPK
SQHBc3gOvKr0axjrWOqHbwz/HyccpdfHd47t5Qce4DtHBbKe7z/gP/l13MEz
EFdoDxxK8wT+k3friaoAHl+TF6W5ICd9+2m7p0FOPkjnvUA8AzMdohhvWHUw
zi4BHsk1q7B1R/CPb5jFfYMhD7roddD1wSixbPD5Od7jtBS1umVjH4OhKwyS
kEeI/bK1ycE5PgpHz3wEOS+8MGPXBHJOd3J24hl8z+1KSVWGeJt9m/vIAnzf
O8eShPD3H+ZDVQDuSXfT8g/A9Xn6bjcDnk1rzpqyTpCPjDyyVHQCvtmXRuO5
h5ewmhDeP55U7Cu9BvoSfG4b8zfQlzPJp5xXQF/SrEUGUV+sV5fy8Ny7Wqfb
CM+9nZ5v6OO5t9gPEQ7sG59Y5OauDHyIidYS0Qc+fBfPm6lXohAVkjfCzMcm
CZdL/jaDIG8U1xEq7K/4aeCfyFHgTye3VMFR4I9N3Vr8Z4DXp4kYi2Df/uL7
bf6gjxlpmoOdpynERI5HmhRlkui5b7GK/ULvfLESoH08RvQy3GO47U4hGmuf
GmC/0OLjNwLG5CnEp/tUz/aBfZu6sM7jyDZN7K5fD8Q+M8EX/Td5w7qbBV+r
RcO6TCUSt3AeVkC8SAPO724Ql+/A+d16RlNHbwP9eTqX0+SAfnvhl/e3g53c
bvInY7Zzijj4qplyv2SCUHqt8fw55BVeido5RwAP/UnbL0IYTzYN+j7Ed7i+
WRqb1YGeZlXZx+RJgnwrZe8E6LvCVeEWHqBfq1bvkzfQL73/6fK6wgxxpHmy
+j3W4TC32WqCvi+2M3cWc0wTfTl27Q73xojASz8qAh0pxKuFmUA7pRliLu2R
FsK3yFlfRDjf/u8vEL4YMeaeD3h0/OcOnQU8Z4cukIsAjx+fSwYDrDsbLl5l
B+uGnZvIpAa+ZW0WbV1WoxDF3a83BwKdnos23AtApydTCgf+l6zmcJ8onufQ
2o0+hv861v2PBvmgua9CKxj4YGQ6bBkPfNBmG1y/AXxzGDpCkgG+ZTfGfGUD
viVGX96PfBYNuP52CPh8/93B88ew7q688hv2vYkxd7Lwh32hPRS3NQ72ZepZ
pdQI7CN9CvFkL+xjSejsVSfYR6FGpQe7gf4pidh/vkB/fNTrcOSb2+e8UgrI
iatxxbgiyAl139fcZuy/0b/6AuVqp8nfuyhXd/8uLKJcrbSqfLcD+JbuuVGU
wyvaSRnHYN2k4cKFBqB/sf0ctQXQ76Qr/20A5Haq39QG5XyvwZqAEsg5c3Ip
uy7IuQy12yvUi3wxXgrqBU2e9bZ10IsVCYXlCqyTWQ7hvgt6VHR9e3Q5+Ec+
XncPPKeVi/weiOe0pPi8QDynrRmZG8gGPZ35ZVWZD/p+iW67YgPoO+sJoXOv
AH9X2oNri0D/x7MDrGGg1/J+4oEID1pbnZoHeJZ5t+hjgM+aMFRHoH/sVVWX
BzzdzenvTABPetz3HjwP9x8c4cXz8H0BzS6twIefclXnR8Eu7RZkeEwNdunJ
v/b9m8EuTeU+acZzxUg52SvJwJ+d0vIz9cCfOQOlfuz7x6QxmxgCfIj+13L3
E/ChmJqJURjyL3MdsxfXwE5mn3M2tQA7mRrnxmoMeObyvZ8lAR5FW53IOsCT
fpBeF9+tl8T9rt0FfKAdTv59F/jgceRVsCn2eW6ikHvBbhukhfXngd2uUO4K
xXmyz3o8bGbAzt/NvWkXA3Z+x70z3OngFwRF1IyDwC+8ZlC/74J9AGxf7sK4
IvYLX7ER+BF2kYViAfAjP54w2SJ8JGLHU4w3+h/ajmC8QSW4xSYD/NTRX9In
Q8BPFbOLCJ4BP3V7bN4Cz7VK+EP8A4FOteW91HiuFbXnRq8h0Plz1G+wGs8h
3/NEJAKd3dP3hvD8s8O21YMV62E8DK/exvw01LUZ52f9VCFzx4C+8NP5LuSC
vtwV02pJUaAQq6cNDO+AnE9wrh1jBDm30GziVwI8+/KTi5uAz5p27T6sgOfV
1bosxKM6dZOMeHx4dtDmAR7F1b7nz6QohIvrietG3yaJsDdHfozumCY+Lod8
LQoYI5xKTW9HOlGI/BKbBCWwDy8e1uXEn6QQykbn1H2+TxLJ7/3Oym8D+2Zw
yq0A9mt8156TBiAnWqWVOytBTizCj9CZ4Xk+5WlLKOzjNrKN8zvYx+LG7bKZ
QH/4sqKIK9AfyRGatwnoT5p+vQfrSfZspvoriX1T3Zt7CdAL/qSuJKxPO/7S
h6kf8MSnREmyQV6feZpsTOU0RbTf9Dz/EORwJnJBwRvkcN3OvEQZvr8d9Dvf
pniCuKi0eVMHfM8heGWxE/bdYJvKXz1PMhH4rvagCOSbcyvJy9gH+GaLbrLw
pwni3w2fovpOMmFefe+zIMAfhU178QP8yDflyUqAT9JoheeBvvwVyzSoAX3h
9HyW1gP6Uv/y9yDOm5OuPX8I583dUBM2x3lzRkVV+qgvqnt/5KC+rLBTnUR9
KTsbzYX2kC20qCoI9kXzxN2cONiXBlPLxh7sx8V94roT8OFCiu7lp8CHsy39
Yi+lKYReKl9/G+yX8HnqnAuwX5mH+a0Qz9Nz+ukPAM/pfe9/vAA8fAN7x3Eu
2+ovVQ56oOe+6j7xS7AvEtq56i/xXf+GWUaPC5mweiQmZQ55HJPmlw/JeG/i
rnqsFb73UfmjZoz1IX/bHlaDnN90cj9PdR/iIjunvmyQ8zvL8d0YP7w4oX7g
BMQP/fa2jxbh+7JQ2Q8R2Ff5r5yhPMAvn9YamwI4280xthrAI/bn7icawMM8
or2YC3g6LPlasK77cZn37Fs89+B1dJUBfUkjWNYwHhu41XKnBfTF2vzRzzeg
L84WNq6YX8+cMbPGvnl2DMM6OLeok2J6/Cmsy8JbwXQW1vUwpJulIQH9iodY
9SCODbppaotxbNnMvC/GsZ0xNYN3AQ/b0+AiBcizDjuJ/qBqADvZFTOK8tBJ
9/v4Adj3U3HPPBtg33uLhQ2/gX9pnX5SuQflVpPL6A7IrWi76h9x8C8Ga9NH
wsG/zIptb1sB/2Kp/VlqHvyLV5cwvQr4l9V01qAv4F+2FxsoLwN+4aLVTwlg
T3zmWX97gD1Rlp19GQdwZSejog3gv52zL0c88G1Htsxe1JeeTQ/2oL6Qfh6u
RH1RV2q8jHHg4kbpwVz43opjl7o01rP5SrBgn/Ore8M+2gP9dVTpZ0QhH6YN
WWsPAfrNj73W/gv2lqV0DzkR8Lz0CJEIfTpGRG/7wLXhTSEOi9LUiQP99+yl
JLiB/rKG0tFRyDuOTvIaEUzTxPkhYx0XyDuOLggyekPecYTrQW8QxANuRecI
Z4BPMa0IegH89j1zmmCAe3dWPVQGPKcXKz0XAU9wDtlUBPA0HDM5XwvrFuzk
szzkQyHOC2rfxLkwOVeXW5BOCwPHs0jnfdU+CtLJ/MWFIQj+y5FG5GkQ7G/v
6VbFS7C/SaNTNHj/EuLirY91pDJUl7ZgHWlXl5YOI+z79F173xnwy4HZPKOH
Yd/1FTQ1cJ5m0ifjfzhPkzny1qQkztcWpzW9CvCKyoJxRrCf1GSaD9vAT0WP
fEx4AvSvp54Z5oJ9VInZK74G+0gZT+bPeDRG3P7V/Iwf9j0m4Es8C/yv7iWv
MKw/ZDo17ID1h4u74mSx/tB1UzdnAeipwSddiW2lE8SwWfRGfC+ZsLXPpGLG
Ots7SS67gZ5d1TtEm4F+df1c81TsQ94VHId2XnVb2AgD4PG+9iSVB+t5rNXu
OMH+JvgnUg7B/rrKLobgHIGHEq99GrF+UvHks88gzxzZgTyZkD+O5z1aPwn8
Z6B61UEHcVrtLqZ1fpDbNIrU+UCgn/PKZAzWmac++D6wAH7h6Ne6Gw/BzoSm
a9hmgZ0ZcJOXHn4wRlyQzf4u7kIh6kUrr9fC/1JTxOJ7AO6hb5x4AOBTrS8e
1GF/bDk1RQ3Igwhu6jnMQ+eVrl0bAv/+KWVQ7R3wLeRRmqggrCskwSCMfPOa
1zebAf9yXs9haxL4l75XbAMs4F+SHiS0sASOEc2DS6nZdyjEJjW+10w475he
bGGz1xjhR6S5KtpQiAHaBDoLYoY4/6ba2oWzjeBq6BDUV+8kaIomfh/Jxftg
vekXgGfYOMGZ35lCUG+S+v4H1p2K/ykQ4jlGxC7cJ3XcphBf4oKmXQCPMiOH
zAngw+/Hco5ywId/NZItLJzTxEOPR3vCgf7tKS07twL9dK0UH3bAIxpf+/AR
xO3cCi98ayEezhp2fJYEfBbZ4thw5+EYUTmV7v8G+KMm16KUA9+v5MdttwX4
JZ7Pv18D3OBnAJEL8KfHLC4fBj7QzBVkaQMfXugKrbsCH0il5qtssF+O7hk7
sX/76NW+VezfrlAo1zolA/F91ph7B/CZT9IsjQXi9oV25RsPQE56Ne44R4C+
SJ07kGgG+hLMKdaJ7/SXy+r9N4O8VZd77M0HeVPrf5aCdmY05rk+2pkHl63c
0M7M5+XWHUa7ajV44hv40yNHJlitwR46fZA9hP2o7/iHESTA/1vC+lQ+4P9c
b0m4gL4wtbpMM4G+KJh+3smM+n5f/VIQ8M2WT8CPAeinLE75c8D/Bq2VcqO+
fH25TQn1JTFUzx315d4kz88nWMcVvcalDfgpt+uT6QB/IP/NArT/UhrPq1PB
/rO+9BKIAvsvo1q8C+dPbacWe4n9KvkGFNdx/tQmy4tyaM+3CQzFY5//RPkq
rVag32eWfg71pepRdd8XPGcLbeQoBn1ZMe4j6Z+BPMe8r9kW6Be+avQiHPT9
bJ1zQRvYqyUZokUa7JXJsEKBAPC/3Hll8DvQ/4rvQQwv8G0nFyfJHugPZLrd
iXYyymOvM9pJ413dNWgnVYuFZ9FOxmpMfkQ7qVFOR0H4t8DLuyYBz7GWsVHs
H0hFO/fHBvDcfpjJFwnrctfVf90E6+qe8yk9BOsOaIUnCQKd+3ylXfWBzlFv
Gb9MoNPWUSPwN9bTjvStv4f9/WDdxBkB9q3TV1kE7U+6FmPhVrA/KjdTDdH+
KL161JcM+/6U4d+cE/Yhl+n7iPHkzfvb7dA/ntk2E09gv4jS8eJNwJ+xhyJn
jgB+Ky2Bnn6Qh0vW58KuAz+nrTjHhoB+rriSx+gfG7buSED/6HwqYJkF5FY5
NTvOBfbd78AvOyr434ffSmgHQU7+4+i447HsokJRdkloqqwQqYySh7KpaFgZ
Ufbee2STjFBCCJFR9h4hGYnMzJbxhswGInznfP/e9/2de55zz77nnKt5Vr5Z
DPDvXHrB0gf4V36KNJzF+oTx8NOLgH/DaNLqBOD/9cyVUIxfTAKZBjF+2XdJ
mAHjF/X4vhuYZ5OIeKeJeTaS+VFdzLOVcr0dwjzPnJ/820nw/69y1m8+AP//
tePXedT/e8zZ4o0BfoKSzhFBgC9QuyVaD/7hh4TioD8QFyR8UPPpg7ggi7PA
DedCOEbdYa8HOAb+k6I6AOcql8DxfPBPDrx803HWmkR06rziHrMeI7Rmo5Yw
XnAPvcqhBfCJGL+bBwF+od+ro5in6le7O6gB67abQ2n7YV049H1QDsD5Z6p2
kAPglMz4C3QBnLxDn3Ww3n5D0Zf/B87HvhlAFQ5yKnlCcHIV/CjjUTLGH+BH
CSQZ93n4jxFlh8VZMW4SFpA3xrjJKD1KC+Mm7/fB5xQAjq1V97FQsGu9zOEn
KzDfwtZgzgXxl7hP3U2Mv9o1T5Vj/DUheXgU4zj1j29W0wFOPL+dFcZxZfYL
kzjHNWCL9OoQ4NMh9/q9F8QXopmsX2+DP8xBl5d2zY5E3IweDXlkN0bUj1cw
4TzGLj9Ht3T4f8SHenkBwN8z8OTHFxDnlkp+M6eGOHdhPPGVHsS53wLNjdBv
nDhTZH8B5N3wX9zzBThf26icAlz3ONrojv6k68cMmjlY76Natmixx7x38FpI
KMgtnZ1+atAYcXpwcQ39cCrz8xb3gU+2zr00pIT/2/TyVWAdjp3lXV+sw2Fd
NhLBOpxdLeankv6vi+AcVIfztTRgOtzdCuf1ZbsKxh3Wh8ZVPwEdphW/ndkL
cUQdh+cCzsWV0/gUgnpm0v0WC87F/bFezI/5z71z1pcx/2n1etsi9uPHUhZW
IZxOvkaLYYATM+ttwARwiK5vNXOgt1m7eMdQbytX3eFCvc099vj+CdAP7tHq
vgToBxOnJM44kBeiUnTbL7Avh+aVxX6BffGorakwB/vy0MAhBPspYrYt5z4B
Or+Y979+BOcU9Sbvxny1eW294geII1wLTZvxPbgyJmtP9IuU9S/GoF809P3x
O/SLPEaGHyqjX/STu9Ye+ITj5vXYhHbkR25xnEsgILi6tA/oqbjA884C4Giz
PJQexXcbfzaJO0A8tcghViEN8RRDtOInjLulJQ/engU6MItzVT4CeXl+YC2v
CPj87pULmbLA57Rx5rMLwOd/7uQboB6uCixJeI/vnbnc2Pka9MzSYfUjeO/P
urz0tAXWR1kP21fAei17hB/OIRl5KBAtbEQidty4oUNnMkbw8U/vx/kVXWfj
7LVxXiiti+IpsAuanTavEM/E8kEOJ8DTRkzt9iXAczuRsojvYg9yLtrTwnet
y1I80YHvUvqo7oBzDBz2ntNdKZghhFWu/bwG5+hBbUSoXAA/T6Nyswb020fy
GreXTHNETDPHW4STeVzwEb67nXdhnA3f3XZRZdLH96Hy6cLF7wMdJj7JabAA
HcyD77X4AB+W9dcKfgI+vD/pPUsP8WMgA1U01o8ZiKZv/wDnSF/b1YvzBL49
/PYF5YXVRfcRygvv8N0+lBf+kJpBvO8onlhzuw36JE/u7S5u0CdHyE0LUf8w
OK51asO6m8KVB4dh/eTgx/nXACc6cH3ZBufrkmayKgDOgkUSD+rJFoF8kxnA
ky824lAs4Dn/feUr1r9lFZdexfq3r6etn2H928cixRrsq9V4qt8tC//vOUCX
UtWK8+O0GPH+XeGpnOws8HlK+LZVvH8P6zIQwbxouq1iNuZFpdcE/DEvyuVG
m459ajvqN9aqgd/uSLbrrgO/yTjP0/wAO5XRX/8gF+LZN1kKGu8gnlUx0v2L
cYFgxE89jAueB9Z1Y1zA8KiDswL8isV4puMnwb78plkOpgN5Mf9XcSQZ7Muj
kIYbB8G+fIj9rLsM9mVDK0QR8zMK+znPYd2R49+6X5if2ewitFuwPzo95fQU
yEt71tMifjhHfxveQ/sB/wOz6bL7AP9Q1f3lEoD/zpKKp9gvNkjbNIF9ghc6
aHdjn+wM77sCRVi3VeaoPQX28THV76YAoMNMRCIDpegUcU1sQWgL/MnciU4G
dvCr3S/yuKVgvyTn9RY2fF/GrPosE+A/xX6nMF1mivhytYx/CfzAy64K1C/p
5oj22Yj56/7jREynPYu1PeAVPrfuAP4w6xB/NK7viDFss4L1wbahnY6wvl2P
OzUf4Ci8bDdYxnng48LBmQCHN3FkHf1wPrOBevTDby1O0KAfTjvk0roN8GRJ
dRTeBDw1dudc3g94NsvHd+J3Ub8M/iME3/WtQrDWH76Lx5zOCOmgtSRz2wbo
YLInguoB0CGHemaeHeh2KGL7KaRbgeRoF9ItRUXNGum8/Pbcy+/YZ2dFuQ3p
HJpHoYDnMkOhKoPnovTi5DZqOBd+f5XjIXCOGz/CavbAOT59365FDv5k9knu
TwmAf8ZG6N+9gP9mbfYk0q2SYtcr7EM/oJShh33o9IPfmLAPvWBJOBHr6tNF
SnxfYd3g33mJTuCrtZ7QLqxX77et88S5+qbNrzPIwa6p5mXVGAP+ooWxspiX
Zq8857MH8H/TxxN3HeP0R7LeC8DnT2jFzgkAHTr6QoRQLuRvyLspYr/5716H
1yAXjA9vHvECeV/d6FHqBnmPp6t4RAnyfnvvbymM3485ljRh/L6vVoJRFOzU
Q9+jlt/ArrnZ7AjfALtWMCqYvT14jPjUPX4a+1YS9IWMDoMfGzSQ01sHflfc
x583MU/lL+59mhPWlyJbfZphPWridVobwNFWTvj+EOBcv2Kx9QLsY3LRiN95
+P/93QJFUXCOn0ltUuTw/3+HAupSQE++s92xcAf8n2en9Ddugv+jMLOohvnw
sBbuO3yA5+ftRh6BcF50qoX8KKdm3reKcoCe7a63zrYBPXW0l5nsRaaIz4Xy
Hq+BfxxC1NPNgH+y1Nr9ewHOumd1/SM496M5mYwNwCfp/Zx3Ec7RhnXJbIDz
7G68UgvAuU8zIPQN/BzWT9NtvuDnyKQ+8TwMfk7AOrsG6smdhiGhWGdLO2Xa
h3W2cg+17xWAfWEOFf9xHuxLhNCCy3ewL4bhd0LQfxhQ9AqRAP/h2jUW23l8
/5f2dzXmrx6aRH7D/NU9CYV7f2A9mm5FGOvBprxejKm4kIjdhndPtTqPEUNt
glY4t80/6ANxG+skb3motwMdpKhuXfsCeBq0Vpu6Ap6FD5LPsAKe+8epdTTg
/yM0sqc/Ap94V2Z10ACfHK3T/v99w50x13XwfUO+P1nb8H3DDz6y/+dFbVdv
/J8X1da2+z8vquknJoN5VE5+F54HAEfUK0U+F/yxC+7B/YiP4XuaQF3M5xcx
V7eg/SqTr4+A+PH+uQQ1V5B3nt7Cf5cgftx9UIU9I2CcuK16zc/fYYqIuLc2
Kg364TVTfd3/eeCVd06YB97dE9KDeWC/ACNb7C8efdrWH4vvNO1MUcuDc2nQ
qp/CefsHZfWJTpCXrYTAe3tAXiYYxD5jXloxXPkO5itq/1w9gXGEFivdCuaf
67+Yk8cDnPJD3v4FAOf1guo+zHuv3+0uxP5HXxVRSex/jMhy94oDeaHuLwyU
tAe/4gSb7x2QF7cBe8H/85Okr6W98L2NX5tn7sB5UTJbhqK8MPPfYNgEPpfX
k9+/A+RFKnJVLgz+71TuJnIPztfttKywIsSPjB6My5hHYqJXvuEP61cYZDeV
YX3n+99ijfiOc2rpOXewj0YkoZgGsI/WltdocB5d0quzSSTA0z73+VYg8NvD
yWMP3QDPPEk+7QaQ65jjf2uWwZ8UeTt2BO+LdaYdr8nC/8ksz4wWwHc5rTxL
xnte06/ejHjPy6FzvgPveXPrjvb8FZ8iVA/Hf1EEfRUlenSHF/jhZm9WUvC+
mFFhMOcV0FnsIHnzNNhHoTMz4wjnm1SQFN47r/Sxm+K9c5d5d8M68OGycOLE
CvDhz3y7tSDgQ8V7M1r4HkqXwIufS4DP2fe867GAv16QR3ceyIt2Q9wdPvTH
fmyyD4G8KFAanEH/QW3xEjPeg3j0Nn45hvcgV/p/or8hMSTSrg/rj7R7jnHB
eu20iW4hwDEra3lLABy/vye6ZwDOac3sLKzroPtKise5Md92PnTHuTGxsUrL
DaBnjgtGaGzg/MCnE4ojoGcGdjPzFcJ3bXff2+QJ5xt3KWX7EvCzRA95B84/
iSP34F4BOqhQ8kUpAj3NzCLCBsAf85sQbP2L77MfqA43AP0cu0fp6VW0U16G
TLtAvxk80ddUBbkzTr11CPOrh9Pod1LAubcUFjumYVxga8ZJyE8RBoZx9szf
fxDkQeui0uBXW97t7HwAfrg/Za55NPjhtq3LmkFgX0jnd/DJwXnZcl53w7wW
j/fQT8xrvS927x/Bd9l2Slkz1YJf1Ee7qjpIItgjNrZxAf7fHxVetQb6CyW/
3fEd+9PnXpksAxyZ2X8GCnDutpwtY94AZ0XMt9QA4Gx5k+Qv1c8QC2XHa0NH
SQTLjjbfZ9ifJaKVN4l9DQfCszwA/6B89zP0EBd0X3fTj4S4YPi3mc13wL98
W+XXgxB3fxMs3ecH9tHOikMX7z1vsq4YVIF9v2Cm13AF8HePzn1VBnFHwtrM
PmfwH+q1nOXDwH+oEqCbsAb9kPJkxdEJ1hdObtSHol+Rq/kP122uLhwvBThm
AVyueF/8qSQtFO+LOSci7WlhX7lHt0odYN9d06bLGO9XrvnYUQCeLy6LvgwD
PN1k9l2eAzxfvVEOeAnf9T34hFgcfNffFH51JqxDOFNwCd8jo39kNvnn9QxR
vJfW/RjQwfR0TOZRiFvV5NcLbgHd1l7XNRkD3e7IKL/Ge9LY6Zp6Z6Dzhdiw
kz+BzoSF0KNhgBNe4NHKBufi3Jm3TQfO5YrJccZHoPfa5+tc9UHvfaHcF/kN
9J5403xmO+jJCv1ozgzQk1rbnVfOw/daJEdS5oFefa93al8gvj+l1kN9BvRq
6N3f9fUAv0tIpLUZ4Aee/pIsNUQi5hhedtnD+qa5cmUX4B+rU6H9c4REKFtS
86aCfexwuhHfC/ueNpj3V4V9Xz+ufqUKdKjfdnKGHPhW4bH7hBzwbQo3xal3
AMemQS42GOBTXXZhmwP8bS8fjsL4MdXgWSfGj92+bZIYP540ombkBfrfy0i5
dh/on998rugfnLvZ+lsPKcCf6UMLrzrgv6B6PNMa8E96tc3cBvj8QOLzm67A
56FjVN8wbz/yboYe81QVIjSbnrDukJKwE9dL3mzy5sE5xisIXumDcwzU/3gz
Gs4xtzHyaTX4Y48jX5Gdwrzo0QQK9MO1m5+8vQh0vhtdcvg8fO9wVNAfepY5
goNDbM3be5wYK5u+bGc9RVzOnzfhJ+aJYFK+jl3IOHElQeVVpvMUseCY14D5
0umP9+3VWboJWg/Nf9z4vuR8xVn+QtCPntGfjQHOE/peU12A82tiL5kQwFnd
WCpwCh4n1Kq2Nj46TRHPS6zlPwKcVsrs8M9Ah2NRNscTgQ5bRs+9WIEOEtoc
vx7iO4mkODsGwP/AaNUezOvuvPfwsSLIqbvD4Mo/oHM6N+PeT8Bv9bpL724C
fXIzhoTuAH1eDSwVRcD/a81XanRgveUI56wprOtpDGc/gHVjjbfJf4EO1cmr
M2FAhxv+35Vy4dy5++PLl2BfaTm5TF3Mh7/P/InzUq5E/WYJA71UWEPLfRb0
UoPybT1WoPONGMkZfCeL7PBP5mHgc4e8a3ZOoM/D806btwOf9P6dNPQBPin1
6JMdAz6xVm7z5QB5kWJpFkJ5CVv9dtcE8D/Ncswd5wRe/3aL+hTI3S4f4aVw
0LdJpTNBJgDnTX6w2gHQPx3MhJQ6yN3l1UPNyG/yv0+RkN/ehWhzIL/JNM0E
noHv/XtSpkYevpfpZMuLGMC/xk+t5B/wian3lMMK8ImJmrSNEeCv5fNCdAfW
U1m8PnMJ7EhmcboOGb4Tl9OdhnMVap1Du54BPu9H2Nc5QA907lB8pQp6/vzM
+lwd6PmoOA6GXNDzNaWMHm8Q/2lzDnL4vyvvleUrgL9YRhjzGcx76+Q5NYIc
7XGsoZAB//aZ4EADFeirscBPHWSAv23lTlpWoP+wWcCdZKD/wYdnxliB/n9u
HdHHOOLJd0EBnDOztMZ3EefMzNBVvsQ5MyliuZSyoA/zqppbDEAfrgdxnXUG
/SAXuMtaBtb3z7kq43rQy0RlXO+T4zApADiFxakVGH/JtNWyY/wV58ozgPdH
qWFveY7BvqO5n/0x/hq4T/ymADwPlm4exzjxXErFIYwTf/UFSWvAueyjdlQI
hXN5s6dGkgTnUjJN7vUd1q3CqA3fgH/FLZvdNw3+VXL0aRoX0DPXuGYyGwCO
zdq1OWOAM2878hj1odTm1VrUhx9bp3/eAj450eRecRbodveEhVs50M1N2dTn
LNDN9AfrZT+QF+rq6jF7fJe26vdbJXqsY/xV8BD05CLfz2NOoCf/nAhzkoHv
FXbqk0O9OuyeFIV6dfS7vB3q1X4q4QYd2HehJdjpLuDvPyAXVwr4U+qm38N5
5ml1lJ0OcI50gUwnJ+Ec1UTtj/4BuVM2oe+TB76leEUf6wN8G6oWfAT1YYpy
DnkI4M+SopGL+vBszepP9NNsN8bDv2J+0vfphhfIxfrcZDir7BTB4fCS7zjw
IWUwhboV0N9e8fNKMvCtastmTArw7frzf23+QH/e7htc0qenCMmbBuvan38Q
Cewys1z75oihappztvfGCU/JyzOfbaeI0u+/2Wrge/le03mZwHqNL1EyYIt1
Ge4mtbBe+vvSlgnA8Q5VXrAAOF8+3HvNBHAa/piZjAPdfIwtXpcD3XwfkizF
4P86YQOPNoDPyQ3bDXdhvGwd+EEF+HyXeEj+FdBjd2YzOspAj5XonmIdBTzH
62oNxEHvsRjTfxEFvfd5RapVBPSedv3BVRXQk5p8SyVsoCdfCXN1nAA9SeN9
gnIT4Lj6nvGWB72656rg7waAs3WPauqv1zgxTc/jRQFw9lCsS0oBnM1u7fEa
4SmCj8HvEgfgT3GPitIG8JdbVb/BCXRjumAjfB7oFqZeMIv5yYqt4fxPwCcd
M3uaEoBPXBzJllGvLll8bDfwGycKWWJkMu2Az2le742H7x06xfdOC9bP+OzP
ToH1/Hx1+Se43rbz6TDEEVZkwyb3Qd4bqM6b/wA6HKoWYfUHutnxrMuYAt2y
2vta5bBubdsIbQjguXQ8+cwuwNO0lrL7PuAZufTF8ozHOOHrfnmr0gL8lmCz
HTnwXSTVFR1uOK8ZM9q2NDgvnwfkK80AJ73D/pE+0C1G0qjhLNBt4ZdNtADQ
7SCN1uwrgGPbqMdy2BLOk+JH42OA87yk+TThM068+hG9wGAzRdCJ7X/NAOsU
EjQTu7m7icYOkpuefj+xYa47/qJ4lmgOzXdm/t5EzHfvnz9WXkeMpL3f8eTu
NJHl0fSylrybCNpzRSqNp58wyOkqufhqlmC/ycpe5TxOSOUkbKM2nSI6f4gs
3JCaJ0JlF99SB44Tsir7Hn0EOjDsiB8WBvwDkkh/lAH/RK4lQVbAf/FgSyae
++3Y7WkVAEdsWap9B8CZGFXgvglwkjv9FxKRDynmmjwBzoZuMfMlgPNzoF+C
TRq+055IMJr4QTAfHz+UyDBHhMjOVXjA/99EBwgawv93ZYmMySP9V8/1VQlO
EUMW3SLdo8C3NfMNu9nAH1vPnwgGOp814bD/CXSupsp6WIH1h7QT9IGw/qCU
f/8irIuf+rSJ66amjD6RoK9UxfOvvQe9cWlc5IkW6A0DCubr3MBvCe4zAxLA
b02+YanIb/TTZ24aAp6N1uK+gYAnxSVheQfAc/ubvd1KwOex/YpJxSAvZoWj
uSgveeEaTSIgLxpKGWVngc+rI+j5ReG8Xja37jUCurXtDNspiXRje2h4EujW
JntykhX8ENcLBXm6IC95x2V/1uI9dQn533WQl99Khae2AxzO8QOLBMDxEW3Y
dwro8PKr+v44oIM0Q0q/LtChxMT27SjQLfyIoFwR0M2umd5cHL5Xd2B/8JDU
FOFR9fa9IuC/bPJrsBbw92nUM/QDubg7ycPbAHJh0DAnHgP/D5s+a+cL6ze0
xiJew/rMVboAXG89yKLoD3BsrtKcOA5wMpJOjswCHArC1SQN6Mbo8tUsDej2
Y/egHOq3QEuXWT2gc7Wi8pFyoDODLvUeR6DztapmGzHQw3YTHIrPQf/LLpx3
Pgj63214Qv41rJMOZUsfAv3stfMihyPo58gxhtAt0M+9o9v0VEA/x9VVTrlh
/xS3hPgA6GdrRa4rQqCfT8t+bnID/WxQXpWL97AshGUWbzX4+SH8hu8Bvlkm
3bQ/6A1rUb9HDqA3VFxMJxVBbxB5fuVoXz6E3eJF+xLwNdIR7Yvm3m1tmK/g
8ZNxx3wFy7+l95ivELYI+WEJ+5YoNJ9eBX870FQ4iAvsi2wwOQnr0wqHFe+q
Yx3jx5KrdYD/TJVvhyXQwWio+2QtwPmrpu1nCXDE+J6L/uqbJRo5IsW538wQ
KX/LI259JREmTVHMpzHuJvvO3Qb0Gaim/aQC+N9/celrJdiXq5XeD83BvvgE
ZRvvBfuiyh19CO27xxPbKKwPoTp6NwXtu+HkjQhDsO+D19KseMAPaSnYeEAC
P4p5t9rO3eA/cA0oloqC/3CkafsHL/jeWLYcByZY7zv8ThzXN1/dnMT1XYYU
6wZYr6utKYBwfNyUPiMcNTqRIvRn3oZxHsN8snnz3evozwwn3n9QDHj2qrB2
mQCeurIbg6yA57retyUGrG/k5WQkB3+MRYoklwN2Uzxix4sPQM/sm2rrhnCO
l88n1tTAOR5gmfwsB3ZKbWZHZhXoZ70watMC0M/nzmS7BQOcAwYBj77hPCWz
Ny4hEO8/ZE11v4D2nSwkwB/o9jA2/uMixDWsL1+HL4A/6ZrwOK8f8Ocevc9L
D/hTvpK6h/5kQbN5BfqT38+6ZaM/Wcq9f/sa+JPtpygUlgH/qfcfJ43Bn9Re
jXXG+gQKHQaDbwB/iLLmiyWcC/PU43h8Z7xT/MXADPhFdh4Vfw9iPC60YMkH
/rBrh3ygPvAt98kr/wyAb88y59LjPVfLA196NqxjbOG9aAV84mvRoS8O61cy
yrelAHz51N0n9gL8Qm2GgCXA32uHRMhHwL+IdHofHeDvpT8buwH0H0pqtzUB
+vNe6RSgAPx38bdrHQM+f1zA46AIfF5tpxbsDXyey8kUgPHXIV5uC4y/HEQ4
P2GctfgvTQjjr/0Dn9mwTkAtOYYS18mn6eUigA4bgz8utgAddknXpD4DOjQt
3V2NgH0/uI7x0CK/zTzNxfhl9va8IMZfiot3PmMdi4TlfnmsY1m5ZqDoA/rw
kNaFSIy/wuU4dDD+8ozcdxTjr67qJS+Mv3ZMm77D+Gt+5ietGuhJPfq14cOg
J7fPm5nygZ40Gsq/jfFXs/ASGcZf7MHDuzH+SgzcvOgAepg8pvZfH+jhDWXe
jI//xwXt7NvAHx44NSCWA3R4r9+dtR3ooN9nU9cI+P9aSx8TAfwrjYN+0cD/
x1g3jTD++vTg7BjGX299WIQw/jootvIQ469/A1nkGH+N6ytVY/zFW3/LGeMv
aoOvhRh/3bxiUILx14yTgfIfoIOuahlVKNAhOiQg8yXI++a0XtMRiJe7eVjd
A2Bf7bjheayDYnzLz4V1UxxtTJQyEH8d2qzswLopKibDHOy7d6PqY3sDfOJQ
/W7lMsQpItsOnUf/dpPeesUE/Fsr5z7RKtA/y3VHg+JBz/iIiF/qgn0H9X1f
3oB957KPf7r8fz/R/Xd7MQ9Pq/5RH+QicU9SwyroH4W1fA5y0D99HpxhJ0D/
lNQ0b48F/CNa22JR782NdOei3uPPXUvEfEXgteADmK/Y2Mf6F/MVXYafZl8B
v2k1kOkEAZ11rhxyEAY6B7PdvY196LEifkeGAP8qFoE9FoB/ftzIGwXMT072
LIgCPlp61X/CAZ+9EXU2J0BeygTesaC8XLqkGmQI9JfZOjx9G+vwzackHlXO
EDJlavLlvUCH7vSybqBDt3HumZugN5L5xUNyQO6EM36cvwX6qqM68zwnnOOe
VwX3Z0BeDp6oG6YD+l/qefzZEehv+6C0HvNFU9MvxVeAT4rli1P3Ap+3XxDy
9QF9VbJ3Qq8E9OHn3HN5tagnK+kTjeB737X51BfD+tXUAF5cPyiSV4TrzA2f
yHeA3tMkC2U+AHC6fq/YugCcjbonD/DcrTUmVfDcXWi3r+C5b98uzKwDeDqr
UScgni3lHXsRz12rftVvcX6Fcbntc/iuzmPmkcxDJCKWIbXjJtZHbWmlfAU6
xPo4x7AB3WIN2Rw3gW8vGh+fVAa6ubAW+rgD3ZLPaHjgPVpVK9Ox00BnTbHl
p0Hw/3aTkELMb7d8q7yC9bd5r6MtsP62K4f2zgXgw06C9tUe4EN1cheBi8CH
nbIcfZifvF7BYIP5SbZHfP/nJy9TGg4qwL5nNc0yUF7sC+S8UF5oZE5x9gP+
Qje4xCUBf7qjSrzhcC4yR32P8oHevqpFvaaM9epNtlmV70kEqa8i7QPoeUvh
rRvLoOfbYr+OGIGev/nWYOgi4JnOTBmhD/ibNxurNgD+TtWNyfhOSht1tU0F
6P/LB5RYroH+t+VmUrmCc8Wv3ftOZUoiFj7tT/Y3GyP+OB7ej/lh9neMcjh/
L2NYWR3n73HN9iwX284S9bePXznnSyJUnzZShXmPEWRCezcwL13pK9inCXaq
RfnxwoFOEtHym58Z15N2zv3AfHXJrfp/WLfvZF4eVIJ1JmVSvRIA53fiFbFw
gCP4vq0J8+GMkb+48H1wnp23FfHdeUK3bGe41SzxOvQ0J7M9iTg2lPtS0n6M
GMxkMcB8PlmEb8Yl+P9GNlXGK5y/XRGvqA10eCEe+7gR56hoSU0sAf8bqWno
YP9XO/nUfuz/GmbsqML+L4sm1UVprAtq4LlUXDxDbM64Dy60kwj674X/95Gd
cWZRx3y+3YsnAZjPv6MxtThtN0vM9b6hfBFIgnh946G0/xhhaXrJEuuC+o4Z
v50BfKb2yvrcx3rpQ7F9VZazhAfd/bPmmM+fGy1gsBkjTh74swfvQfbmsYf7
VQD8wMo/Sj1Aj9pKabwHcdq2SRMC6+4SoueuwfrhUd9L2G97nhR/j8yVRGgH
FMrcxbn3S07kz+H/EVtvhDqBP5PjDVJ0gD+/eu5roraHOMOAR1Q4iETUrvVn
VQKecfY/NPH+q1SXQwHvv3b0i03j/ZfylvL/919+18r+v/8ycThBjvdfNE+n
3V9B3CepYsbpCvxmYhnnSrEb5M5OrBPvvxxJl8NDAc7jR7p+mUAf6gP376Bf
53SKrBP7DgJ/K/dg34FZev72GNB7Ry81nnQHvXeYp+SFNOg9bx4yvWzQk3Tv
fIaDQU+esqdhxvuv/EpRZtSr/47sS0S9+rnsZzrq1UavfBLeWw3/orDFe6vg
iWvM2H8hJNagjvdfJkosTD1wjueSwx+wAj9oyv64kQ74nylZksc6uiie8+E7
Af/svwn/EE5Oi9inxwDnwqT6Nbz/El59sxfvv5a7Ttfg/ddljUVlvP8Kez35
3AL48N2x3Hk/OxKxn/Wob73dGOFXKUXCfpy5bNuWO/C9tsaJZNiPwz11lKMS
6D8ivElSCCURHuxcRaZBY0RaUEoZ3nvaVHy6hnVTDPpzH7EOP/VusjauPz+8
rRrrrBqqjm1fhHVW0xDxCpCXU+msppdxvtZieWoCyEtMDEs53rcu+9fvwHcu
hp03/Izw/osxmM0O8OwMztVPBDyTmhdr+gHPdNsvdXhfbKf/IpQH8GwyNSi/
B3gmhDJewHtek8hyGbwvrtJ2zWgFOnxP9tG0A/uoJaF5Au+Ldx+ypjYH+ltS
HXmE98VMp/7K4n1xbLiVdT3wye0F+q94j6/tE1WM8/E674aPtAMcK7OZHgbH
WUIv/ayKYiSJoDueX5hyf4zw3sbQew7rUjbclONAX3lfjrpBDf7bcasbko3A
5zRaxJifC5zr5bkDK85jBFvgK1O8T2fQ3FV2HOIUOwGy4bfwf5pD54/jOkum
nS8XrEuefCvaCutBkuF+KC81ipJJ20Be7mwqnsP+9O0lpUdy0D5uSc7k4rvb
+xluCAKdL8nEyy2CXIsaSVo04T3dDispbZAXilzaLKwjuiyQoU8P/9d4v/+4
PtCtLSiAC+v3Co4MZGP9Hnt41hes31Oo3RNrKzlF6PzdFS0xDn4F5S8OetDP
GxZnxrBvsbGk8JkHyAtrntOhWJAXmaTWIMyzaehE5mKezUImhAzzbF6KTkVh
ilMEfxrFMPPUDyIy5NwfMpo5wnAtmArrUs7fijDDOGK3Yp4cxhGNF+z5sL6i
eDCTE+srHr9m1ML6CunpWVfUY/dbKOhaYV8Wlnn2v7Bv+VX36zhnWDzl2h5u
0PMcScub0a0kYkWSSp0J8A9MGyLbA/ifyKKjvQj4e4a4huMcRUNNBf0uON+n
LqTNNZx/mHj/Ic45Zxnbfs4O5zFep/o2g/fFfwu9G8C+t1NkTVqBfReqDyKY
wL7/UdYXKAX8HXeGFPAB/nuOqP/F+wibwz6KemDfd+6uiuIC+/i8MPfbFNj3
RMGjKkMQXxNxoWPU4D9YsaXJBIF+kLfcPTYI61Rj5PdxXVXK/gauf8ij2nEb
4KiQV1zjBjiGcboL3wFOOUvZvSewbzh59zAz7vvNmW037PtJPelQDuBJRnu+
6A7gafpBdeMg4Jl/T+EefpfPl5SX+F1M+9rdfsB3iSzHOiAdZIr+bO/GvC4l
78g60OHfurMT0q0kJZoe6XaO4seaNNBtndouGuksl6jjyAl0NuRIGI4EOhck
vjfEc6HPE3qG58IVUPsZz6Uv+L4d1lPxC7w8hvVUsu+a96fBOSZ/MV0oBvyv
fzqacwLwV2Kv46EH/Kv7o90SgE8K6LJr9gOfJGQ+ubW6C+JlyVN0+B66pqc9
ty3wVSWJ7tZX4Cub6DfqRrCu9uNgnCvsGze3xBIF+0426HbhHHJK+sUhnEPu
pnZHHueQT/iPbyKf10x/JAsAPq+w779bCHz+9Y7KYexjOl6pfY4G4N/oX1zX
BvgZMdStnTbgzzQEdYl4kohvTeLn6DzGiPnsPU+xnk3JrfrWd5xbbvB5XxT4
Ff9Evgnh+5h0ru3vHME+3nD5O8YK9rHt/fkCvNdejxQLxbkB48Fn7XBuQGmj
8Q9cj51Y/4f33X6aj43wvlvAV8bzGcBJ/pgSu2oF8v5l1588a7B3A3nnUU9a
ep6T7oZzZOvgaTEDPfkzvZh5AeR9Y+gjw2uQ92HXd/E3sY5lYcYS5V3+xeIE
A3yX87sILgP4Ls4XFx5i/WFyhkLEcsEMYT809FUNznFdpKtLGfwxrWCXTqw/
FPAjL8P6Q/pbs40I53nO3wysP6SgsRHA+kM9wqkb6w/jbbzPhwAd8uJ/G+7G
9/7+vMq1BH+M2bt5TxT4Y4XGrxf/gj8ms4vhKdZP2hsVM2nkg1/He7+Hvxn8
oOGXdcWg31gufv0mDXpyyXPwWR3oySuyL/5h3ebgyLdwrJ//sOvLy8p3JCJQ
co8K1m0KV1C7NcP6wDDNQhmsq4+n7SwD+/JAevbJJbAv74Yf7X8I9oWyaE0Q
60UPtVZNLWKdJOvXsiTA86BYWbIp4PniYe2MF+ApWn+EdwbwnOX71YL1unxV
dFPX4P/3gydn2oE+VypffMA6W7YwjS9DwG8ZSotZjOBvpD8rid8iIC6V4yya
AX7TZ9qVfoZxjsjpMBfBet3UAwa0WK979vCuBKzX1ffIykc4Lqp5pViv+3sf
/xus1xV7IUQ1D/H+QfnH5JivONE5toH5iuD3l9oxHx56LyYW8+FsIn+GMT8Z
79pTtwBx+skmvvdLIO+Gx8J9LMFvv/0sPRrrddMMrayxXve2yGlyrNet2inD
gPW69tOit7Fe91416wTW67qYZzDvkJoiGs1DguYAf40PkuynAP+Sq5a0WK/r
aGkp7QzyUklFfi4F5CXKXjwH83XPHXny9wM/KP1gqLYFOB8jAzPmgQ/rnn9n
rQU+XAloHb8OfFhktPdOPsZ9xzoLQ+D/7w7QtJGBnTJr6jdtgnO/s00qPhzO
/VMz3YMtOPcwCatKrJui2HL/iXVTV29mPMa6KZ8sbj/0Kx5VShRhnVV3gHQW
1lmJRk1qo7xQOlJsrYC8KDHSOKC8pET6vMf5GyLKOxWf4/w3Y908QaDDkGxr
TBfgqSt86YoI4Gnabd702W+MyPh3fQ/Wt38VZwjG+nba0LEArG/3lLd4hv3F
SesCnA+ADm+GQt1qgQ4edq/YsL/YrI85DevbvWkHNbC+fVND3A3hzC2+HE0B
OEXVR7feYP1MrcAx7C/+w9zEfBDwyfzV+MoD+6zD+UVCwc/xvHDbjQrigiVz
htzTEBcc/m77E/3wMZX+i9+xrmP3x5EgwP/A0sKrQpxPxWbOLAR8Pj/Oz3kP
+Fz46ksarP/XUnOwx/jlX4mNNcYvWZvsJFw/9z23+hqsT3mbfmOG9SWXm2eK
8N1zcldzYXxHOKKf3x/gDBXkV2Hc5LDmzYZ1NZMTZ3pw3gvF8eRiFZx/vnm1
ngzkhYX029gL5EW2dfIf9sv4KUTMZoBc19UWl8SAXH8uvfYS+yW/rs7+UYDz
MvsqP7oJ51XUOtmqAfz2tFT2JNPED+KRjkw0JfDbg4IudpxLcyKq7sh5kOu7
sr/ebcK+TKS74ugX5eeW/8T6QxkjD88W8IuOyT1vwn78s3cSPmA/Pq86PT32
45/+nbC0E+LumxfNM+zAvkhOr97EeQL/vHwPDYB9mfyedVoE7Mu87dXLOLdh
VqA7Dvslg14+80kG+szwlZO5AX02yi9tYD2Px6zimQ3g272HaOoTAP95I8ZK
jCNuvwyRwjjCrKtEHeOIhlnDdqy3vGOXwYnzz32vc8rj/HOV2XZD7JeM3V0T
bA34kweNGnPje2zXL50JB/zlPDJd0T4yjqUXYr1xfM6rjtiH4wR1vFsY9uNc
Ydvejv04BreuGB4E/EcOj3FOQpzevdUQJgF+VGvqT0/sA3qsvJ8f+4DW/1H1
Yr/PiSxle8zvRZPTq2J+TyiibQ3Xb/YWf1YEOOvx5ZGrACda6rTycYAjkErV
2wP7KjfvrRSFfUtsPtzH/qMTs1H8iGdDopIT4vn6e38p4tmqat0bAt/V/PPp
fBj6/8FKu9Sxf+pJ3jec47HYzSfaDHxLSTwWugV8W5w7JY16pttFMQH1jKHq
w22oZ+pmvhzEfpmVO/UMlkD/sNEVLRGgv21iNh/2S7oTG4q7QO60bI4/YAS5
U7zkb+gF+IcId+5igHP8lNQjQg34f+7QasP85A4yRnLMT066PCvC/ORW+lHb
QMD/k35jwDLg/zC71eA54P8gcXCoFOvA+963M9RB3KSjt//ZEIn4kO2fToN9
mlX3SIcAn3D3AMMuwD/k/RADxl9nEzt4Mf6am/taiPFXndjAPeyXLCE7Z+4I
5ytVmyUgCOf7YknJHu1Xd4wnH/YdlDrecq4DO0UZKEdKlJ8iOi6XzUoA/d/G
n8qmB73tzxFYinVNpLNPZ7GuSeSS1SzmqXqNApkxr/g+8u0C9kuGpFk0YV7x
07Hp43XB48S+v/dadzsDH9HTubfD//P3r0eUwTqvy69AWrxXCohNfI/1Brcc
4jBvE/DldDDmbZ6ZND7DvM3LQDNhrEvx3BneQw/78vs7CyHd7DLrD49gHQtT
4/Mn+L7GQuotdohzRQ/c6FEJGie4rf+QjTlOEW8sb4aRg78qvvdiuZDXOFFP
beykazVFeDCTS+oR80TRhWdBkSzdRE+S3l8vuX7ieumBwjOFs8SWuGBVHsCZ
pz3IdcppilhO+3DhN+yb4MS275nnOPGP9cs8yXKKeLdBynIAOLVBrIelgA4L
O5NWxIEOJyh0TRhZ5ojmlbDUNMB/zCrJ4ADg73PiVi2+y1My+C4/HuxjZM75
znasIzpd8isR6BxauBioEjJOiCi8lA8B+vx4XkOUwf/Tjr/ploX1biOL136w
rpSaSJTD+rNGOadLWJeVweqsAXQ4e42RygrosJjavyUI5xVVvpc2Gus6mF2z
sS9bWSWPEfslFeOUubGOJWixnYER7Pje4Cdt2C85d2hwLBrkJXqk+5w+yMuu
lkP78H4k+RRnGxXwW8WX0Y+FOKd080Ek6pnH+hYnUc9k7rhphXrG5DfzWeyP
C1BRNRqFeFMk5pOiMejDbbfKM7Ffsm3lN9MHgF9TJL23AODTyx0WiwF5ufaY
+SEr9heH0qn+A73nuXS3Kh/o9veixiluwP95pFob+uFGCvLVGH9taFrcxfjr
pHXOLoy/TpqclUB9fvi8zQ9lgO+fcPUt9r97x0Qf+AT4W9Q6saL+P8dhmfQQ
9L9ezFYJ+kX76b3r0C+SYk+OQb9I571ROt7Tbe0S+4L3dFMSU7l4T/dYbvEK
+nVtVSNG6NfdrC3pR79O0lh89zXsQzzhNWIB+Id8T1CIBfyzqY6Gt4G+Ig6c
YxICfbVLZ2KOE+j//RLVfeyXzHl73Qn7JfucLm9hv2RguJ2EI+jD0yraqlhv
FrOyzoP3HcM0FjoOsJ5v5v7YA9b5IwyVcD24sSV6BuDofhzJxH7Jghuz0tao
N1b5rwbDvrfOvTL56z1FrPkydgrCvkwKr16yA54/jQTyrwOeXRps7kWAp2GC
jDH2S64bnOsvxncljFiE40C//b6/Yzf2S+40jLmO/drJd4VPpID+2VVrkot6
putVvhXqmaZxFl3UM/zuuXrYL+n7p4JWCuhjcmtdeTvQx+6SORvyQz7p8aFP
wA8910slTYCeNoPvGD8B/gwBROOBMXwvj0h2Ajj98lc7eYBvRyYND2D9Xq4S
VQ3W750dZUxfAD458b6MhO9/iYywLrYB/urylmrYL5nadz0T+yVvVStGTaJ9
bNIzxX7JLftnJb/A3kVtzxGOAHt3rZE0ogd6njUlToYZ7HuiGEcZGZw7L6Nn
JMZNji0NZRg33e/jjsK4aY+qYR3q/9jRwVETgP/j470OIYAfs+0Hey/4JzsH
5H68Bf/EuaVdg8JnjPCjWz6Lfp1FJI94Ns5pORjzFeeq8X9Rk2wEP6qGZY6X
yoFEtLMrDTA5jBGBYQeeoT95sU41DudQRezutcY5VHe8JPpxXfK+pBj6mdaU
oc9wvsT9s40jNQCHZ6/D9gXwx852/x39B/7YSRsNG8yfnwre2tmD8VSHRqkB
/P8DV3YVjcMskfn5qlh1GNi5136uOcFjRPXBUTacm1E/G1yC8zd4Thsl4fyN
jIWh09jPIvSmMdsW/HCvO6tVER9IhI7EpXmcv1F7IkSwB/SbbH2cHM7f2PWp
8PsCwPHTcqe8D3Dk72popgCcLz0DF7A+7dtTs2oKwCc4jZ1ZDd/h5WO1sge/
2mFabddBZ4hvnbQF6p3GiLofumboh5cfrgpGP7yR0zYa/fDbZxgfV2Fdd+PR
6t4AEnH9lejBUPCH84pbMtDvitd8eOwYyGlWB2fzG+CrBX75WVxfpX4jw4H9
IEZmlxuQ3+RZ+YaADsymvy7eiAA+6LnQ8i5sjEjuKduJ81LsOv0M7PH+VFPq
1DDEO5YGz1fDAc+KC/m0sc74vij9I27w/z+f/6qEectCUrAmzuvO051zwnnd
DZeOX8A8Z+Rhyy9JQIfRdzWLZUAHJpv4Iygvp2UPnEJ5yTOof4Hy4io5uh/n
1TAls0/jvJq8ZbFanFfz93R8zv/9AjI25AkAh87vAA/Oq5njWZnFe3/jjT+h
mKcd+aNRiXnaEw/39BQHjBOjkyT3KIcpQvo4QyAB9k6gTPxRAtYjpQ57eIFd
uPnhWOgFsAsFOp2+mDfmCqLehXnjqQc3PjTAubD4PqDGPDOZDl0Fzquh/JSj
gfNqVodVhPMBf+luWyfU80NhKcyo53f+Si/HeTVVi/lLQvhu0Z2fQeeAT0T7
4oUx721q91ZhAODI/dSVoAN6Rrf3vugCeRE+of67CuRlN19H11/w5/8tsbzH
vqfe6N4P/kDPL2+0bSlAXszc2O9nAZ/b51c7RQKfjzMx9WUDnx8z3GWNeQmG
U/dk7oA8DgRtVZ0AecxRTBXEexBnPtYzeA/SHdizE+9B1Ffj2lMhLlD8cr7J
zYxE1H3l3WoyHyPCbzxXxrg7KsJBEOPu3wPUjYkg73OxXhTdgKc3V2dYDeB5
lX7j1DrguTpgcAXjphGnuPVU+C6paVn3t0Afx/lpCszb3MqOiQ6Dc/wQPM5U
BX4g2fuUYOwvjmnQMMT4y3nQMQvjr12MxrwIRzNJ+tczzE9SRDc0A5waWSIH
+4tN21Ikj2D/1+3VUR/gB7E7HWYoL4zukesHgA8j1IKPoLwI3wmxw/6X7LSS
o9iPI3ByuxD24xwMOLovCeTlgwXZphLIy4h0icpukBd3BSUn1Icbsfv1UB/G
eF2vx/7xBbcFxVTs42um75zDOOKMu3EQzj8/4HO0GOeff/S+UgRwNqtFd1sC
nD/a5jU4t1D6gUkQvo9gFRTGge8j2M1YX7gCce5cAb+eP77zpVScY4rvYpCz
HcZ5vHu9mi6RAZ0bGHRK9VpJxKPCTUfss3acv5ObCXTw12HZfA90+Pfara5R
EvyoUXXL22CXz5Aean4D/SyiWy6M8X48xbqUE9D52JfD358CnR9dnQz4A/LS
r99qYQTy8psnJNsK5KX/YW80xl/+O6wqMf66/ayBF+OvfVJv8/ahX2Qj89cT
7Mug0pji/3MkPnu6TYJ90VMxdpEA+xLxiMf9A9gX7ZzQV3j/la718ak0fG+p
fupyLnzvvfcuzfiezlU6cpM04P/0mBdOXcD/jL6LHJiXfjZyXh/z0kebeG9j
XrrlreHOCfh/e9/ofh74/6+kraGT8P8FR9eT2Dd6tfWhB85tdtvmPMcN8nJj
IPGapugUEV1nvHwM/DR1jSWOWfDTLn3X34Xx442T8ZO2eF/sZ++K8WM03Yz0
gswUoTUYwbUb/MkjBZSD/nRzhKZ0J22l/zjhntoe0mA/RfS2Ok7dxb4GDefS
Clh31CqXwvUcX/c/uM4b0GpEJjtFxJkYP2MDOORSSr7uAEeyZqTmEOy7pKbf
gf0UnpevSmA/hb3SFw11wJMy+xIb4ml4iVtkDvB8wRMwiN+Vdr6T+jt8V9nR
RNqj8F0tZ2M0kA4qLJKMXECHS2s0XPxAh4PrYYmOQLdSCb7rmBctcq1YwLxo
rGGGKc5TzTL6zZMM/x+dcB7GeapJ+8qkcV70xYQLTRfgXDzXT37NxL4YEaXm
IThH6ZarOqJwjiW/3g73wzkyPbOewzl+q1/t13COn47AfNr/c/zqvT/j/MPs
a2pVOP/QZXpsyg74pC35Swby1f0daXF3ga+8S0MjLIGvKjrFppRg302tkdMu
wIcva24DaUnEk1WKDw2A/xH2AQrkW7GDbCPIt5kPrgcjn7OlpQohn++ZHbmF
fM5ec5wL5UJRKo4Z5aLx2TYXlIvVF2QXLECOnpgcur3dikSMHpt6NgRyFCj0
igbjVkNPqS58d0M9Qf8RvruxTEbDj/kiMj8+rzOBJGK7r5LQJ5DTT05kxZiP
enb4kMX/cwOe/V3G+y+u9Zou9Cv8t+mpo1+RF6LRhn7Fd/VawwqAs0324FAb
yHta6ECQL8Cpfpi0gXkDzxml/jzQD5zjOWFCOH9geDQ5AvTSjfIndomgl/jr
BshPgn0kf/KjF+/T/739dlMe8FRsuB5YDOdy/IfpBubhdyy0xTUBHUyuegT9
Bjrc2nxagP1fIcErXdj/tf2uCSv2f3md91DH/i/qnNVHBUBnlmAN1VnM72mG
8+G98+7mzttvAA5dCt/8T4Az/9VupBP09uLNvi9FOLf2rl37T9Dbjwo7mNCv
CzhhSfYD6Hw92WgK+7uF015nJuO9vFsGty3YhT+zB5/XgF2Q4bqoi/molzsO
quI8VY5l5yQ2sCP3ZDdi0L7Uh63F3IL1nP3p0Udwvu5xr+x07G8NZGbwBjvF
JaxVmgB2Sn6z0xH7cVyWHxTj3EJeyfIGnFvo+Xhp7j3geUL1+vkcwDMvcVnh
B+Bp/zLqCuY/M46rVuB83UajmWKcrxspKlKF83VzrhTV4nzdKcvmCpyvK5t4
swX9WNrFxPPox1Id02hAP/aR+NuzOF83PG9PSQDA0WWLEskGeeku2XyC89tz
ymIk1QGfk+xk4i2AT+XhYF8ViPdLG3Pk2CHeP1OqsigOcahctIM31k8OJg14
Yv3kiynzS1g/uV2E8wr2f5k3ZoZg/9enspIv2P/1pn6/GfoP3zRsToXDuXwP
EdiWA+ey04OiGOfrMr7e29NcAHHfzPH3u4HPdRJcbDQB/yLdZWfMs/2WcRPB
PFuOve0iztdlvxSqhfN1e2IYBXC+bufb+D2Yr44ej/qD+eqmQqFOnK9brvlK
FeXlapNGBcrL1EzUPMoLlUT/G5yrZlHheBbfyy60ienBuWoHIpSLyoHPWx0Y
G5uBz29Zew54AZ+nS5cX4/m+WPZ7jXMDFqc+ueLcAAbiix6uNxBFKzj/0COn
1OQorP9bNNaPx/kPKlFjF/E9U98lWXH3MWJawUAe56Uo8ihbNODc/oL9f3SB
3+z2+EuoAp7uUx5q4WAf6+uz7GwBz9VT7Ks4j/qukevuA/D/HTsjHf2xb1qh
9zrqvRF/nRLUexxT+Q/b4RyvlsxH9V6YInjJ2WlXQV/t4DUvvwN6MlUpir4a
8zm3PLlDgM4FD8T/vW6B811/E4VwHESlD+A86nRJQ5c2gDMWcEoY/ZzPq4I6
tcCHykGz39HPWXEWpMX8qpEVWw7WpQwxeQ1jXYpCtYK1H8iLhJZG2pIpiViq
Cyu9AvISJqTyHvOiefH8njivm1tT4QXO6444UfwA193uGRwWg/XlI9I9a7Be
VKF+OgjgpJb8CiEHuVN/QmakC3Aex9mCxQL/X4CcLvHVDHFbSE3nzFsS4VD9
T+Mx6JmrFNcfNIKe0SQX2rwKekaqqXM4e5hE7L2RcD7sXQ/ht/ucsRJPL1E8
+qZX/CPg91GOKbGqhxigO7GWdKiXKP346x72oavcdiPrtQO+/Lu1ewfIaZeD
7rdenHsfYtlF6u8hLj7SHBMS7CX2yWoxEyPwHRfm6dPe9xDCR6V6I3l7iZdV
1RsJ5mDHXznvmLhLIvyrFA+2GY8RuT9+WUTC905wn9HPA7q5J385fhG+90D/
T68vgH/ppAbFDlfwC79m0Jm5gH4omTiR8Y1EvH8ibxQ/3kP0rb/7eU+0lzi9
S2L1A+BPHOYTKqvpIUpz/E0mDvcSs4LjXTnW+G4X1TCbC9iPphtDiUCHQtWY
xaRJEnGOckNzZKmH4Is7fplPqpd4fmRI7wDgf6UuwIoT8B/M+MMhA/hbHbEJ
2gH0L3bW5mg2Bv/y6dR2S9MxYqJp7yDmyclv7B1/nj9DJPl5rMU2A33lQ8d1
gM91s5tOi7mTiMnz+uFqbqBXUzNs/78fdNlzGv1wNeeVdPTD+yJazf+fQ35S
TRvXfdJ7BnB9OsTBTA/ghM58oiIATm/kNQ8NgKOp4eQzhHMwFpuUa2DfyN+3
HxfBvoefP5SnBzz7ohQnpwDPmfTT58MAz8ffe57NwLl/1C7qs2/vIWakmHMG
4NzPNPXU3gI6+BI0F5YWewinAo1DT4le4qmj6BrO7S978i2RCegWt9GWHwt0
u8h5U4kK7HnXc5M+z9oe4kzqGI3ukV6i347y9ns4l+WgvW95JnqI383tz4bg
XD63bxntBHm5eMIj6YIXiVC8oBuz5DFGOBSmN2A91dj3nRJYTyXYe8EI66k+
pTsMfwD8ORvLalXMgR+1h1U9LcaI3RT6PHljIE90f66qfO8hMu9PZDaI9xLJ
FZ7vBAD/sPL9kiqAv1Tm0WkxwH/1twJVJdBNKeuSUj/omdqg554VoGeWaac8
VoFvz6h6EuYfewj1fSalvsC3SXLv0jQBvpVQkOkRUg/BYGznRwPwJ//okfsC
nF8Lp1/g+yY6b7bpDgP9BZuoZfA93DdBK3vZcf6JVlyfL+ifu5zbeFGvjgs6
70C9GhdPdgP1atlVmiw1/N6Cp1RKYI/o9txrvQv2aMX1FNc1tLMFh0rkYD0h
XfbObVjn2+qUxPq3AR3GPKx/u5nkZI71byud1i14X1/t/W7Xcdj3hkv7vwew
L/lp6YpEoPPHd1pJHT4kIqvMK44P3zfZPcuC/aF0/n1jOyBOf27855gK+JMj
ott3ncd4UKzO5RvsW6Pw8js/2LWlnVnjOyD+IheLjMH3TVbNo0n4vomxldsq
3m/6qJJ3DoJ9mblaI8kAcJ4LCt5BP/+Um8sjrHOr9fKIxjq3YEMHlwNAh5nn
SmIZFiSCJuzQ20zLMeK9+yNn1NvZhZ1OhwH/Mw6V88GAv+ROXmojfD+aqrJU
B+hMfkJM1g7ovD23fVkF7/d3e1iZAZ6UVdpyEUAfPa4rwZdhPUS48rkRrFtq
ecqHwvrsoeDv+L5JxgkLjVFviAcerCzi+yaJ5K9T8bw+Su3L3gf7rp49kOoF
+35nHYrZDXQOk+A48Q/kxZHL6m8CyMt09GkfEshL0EfX9TsgL1d6nJ53grxc
rmD8nQf8dr352BDzzx7CrVtE/AroDbZYr/FswJ/Fb8MsGvgtvP6Inxfw26vL
qUf7gd+0zv5T+wF68v6npeTTqCdJNqP4DuCQ1CO1rxs9BPtHTnpX+V5izUFA
mgrfL879s3Ua5KVh4Lb4NMjLyFrYbbw3vHdvfA/O9Urc2iBh/V7kOVaHDsDf
4sLksjTISw9d3i97kJdfElyUlqDHtJaXzC519BB61K49S6DHGJybd2p/JhGN
LoOhrQM9RLFqn8NNoV5iU7Z7Ae/rDW8K1F0Eef/dLmPwGuS9Mnjf1yTAX8zM
9AoH4J/oJjFfcbKXiF64lSkP8sIu6G0+PtlDLMZ7upDEegnK/dLVaYB/o8tH
mjngwzJtZpIc3mM+4anCd6DiRRP+dRXhvP2J3qZ3JGKtc9+KH/BJuM3qaxuQ
lxNZ+xhFrMeIyLoucXzv6fdrwVF878l74kQHvvdkR80uiut1B3Xmcb1p7OQk
rhvyiMR5AZyPD8OSNQBOuaQVKwfAYWRNbsL88ypnq9ob2PcUtUJTEex7eaOM
Ht+Jltiq3vjpg/XW7owqgOfVfC6WqmkSkZHAN51K1ksYjGSuHVPsJWKu6FJt
TAA/2D7lerrQQ1Bul3jYKdlLBBmcfdSPc5ZuO9N0gz/gyvWMnM5njKA2E2g3
Az5JTuAtOgb2pe2E3ptq0EsrpiEjd1GP5f5TUgE9I7ovhJcL9Mxj82dDg4D/
SGRb+6I1nPuu4rQAmzEiuc7eLwu+V4/4al8LcUTpi5c+ctjnPsFjxQb+WPXL
20Lb/MBvpz+ruNd3jNC7kpobAfjT6y1SbAf832jeUnmr0At8Y/xOA869tavP
pR7OnaeB8YEqnDv/4R3/moFvA1aGR/Z4wu8P4obngW9byBYe/wb8LS2TWFh+
Af/L6znOAJ8rG/whZwW+CniZ3bwX7OPrI46p54CvVn6VO6+DfU82WQuNBTl6
ZFA0LwVyNFIbm5mH9UXqSs+mwL+6nN/uRoDcecUUN6OctpQTTfgOUUojix3K
qSkNzwf0//mi/NSxH59yjDdtCfRJYKvPPOZP+B+RiXrCukSqqvFfWC/z9q7G
9yVjW/ZK5wAcMhNbC3xf0vp8d8FZ+P/v60yK2+H/AxGVEjrw/8NV5U/P4vuS
h44URtmCvKs+opi3HSMqNOJHveH/rlVusvuBT/J2/S7sAz9EpGijB+fC/fjR
5Izzmcn8xZpwPnPIk+jP+F4ez7b0Tnwvr/3z0uQmzvkxEbwdjfHX8fOKKaBn
8gOWh4QATtb2WXLsUyYRGlv4/rtVLqcfN8DRSNX0igD83zSMKz8EPlTldqNZ
Bfw7dflTcS7Qi5+ZD+QAjqrJyONqoJusUwdhCPKuUD6jbQB2QW+0SaMb7EIh
h88MzrPdx1msiO8MbplsUOM7g9uKJo/g+uZ8c2QTrHt83rtNC9YdZt3BjwY5
PSFjHQ9+HWOn8sleuzGiaN2CHd/pozqUbz0PejXDInanJNDtRnZLBb6fpSfA
+egj4OlTwWx4GuTlyNW7odewTyrRxWcZ7IKmx5iHCNiF4L9ZzF9h/WXT0pOL
4D8rGOiMqoH/fN599kwV0I113fUSvi9ZeUOaeQPo1tXO2YzxC+/9Bkd8Z2RG
8WY6vjPifOHGbAWsS68L9StgnUlM9d08iO9MK5/etb40RRgdeyFsPvmDSGub
T7lJP0c4iJ0PCQgYJ/jJ8h3NHKaI6WvL0djvaaD3KfEx9kF8suG8/eUH8WD1
TvnXvXMEC0f22jTOEbLqKC6qmSHmMzPbejGfv8L4Dt8dYz8i/bof8xU/n5gf
BDqEXtYowPclH/R8vY/vS1bbDVTg+5J0BzKuYP5ZXeu8Oeax01y/3MQ8dj59
6iDyIe9uD0lKfBe40mZUG+AUTGhkc4O8b7OeMP0I9vFgiqtBD9jHn8bkZGLw
f4nlX91/YN/q+cH38vD/KrIrCq4g7ytFwY45/iA/Ns6dQffGCJXtb93xfK+X
zZxtBPiBr2sn8R1Jy65AblynvGp6B89dqcyhWRPWt/Y2B5iAvHctfhwxATvL
/vXMH3ews5cPp+kjv1llf7qgAPx2256ytxb4zaj61098p+xo2Pamt4CnAc/R
H28Qz9q9cygviRU0A+wgL17j24+gvJia/72I8jLzXPx8FNYR0VTV7QI+b63b
3YfvsRL6KTP4HuvU+zpyfI81JzFBB+XFrkXEAOVl/1TWX5QX72e5wVgHK6Rd
I5aN7x5yjDfx4Vxxzd138H3JXHLaWkOIQ2/OfJvngjh0K7njBNI572XoO2r4
3mfTpZ9vA912as79Vsd3ZOwf2edA/GiqWZgSBv5Yv8KTY6hn1vlNet3h/+Hs
xlErmJ9s3fMd9cxqdIkp6pkHu7ey/tcza151OFdc2k9FpwPgqKZ8+IPvvMSF
mtG+hP8b/NFYmQT9dtcu+fd5oNuLa8dP4fuSuZFSL/F9ydG5pev4vmTOQtZi
F/jJZKOavOLgJy8u3nw0Dn7yuBBFsiHY2XND5IdU+3qI2YvL38TBztqkfx1J
wPmiZQzUV8CvqPO+++ci6GepXu/Xa2CPqrLYlmPBHnle/hnfBvaIqDwqbAr2
JWLrmbwm2JeTxefsBMC+MOsxPMa5ozoL3V2iaF8Sxb6Pg32skBzcKgc6N5wf
p7wKdK77Fh5dAvLFdy5JfAnkPfOS22+Ve+D3ygW8dAW7VrPtjqY7+C0T1k86
j//rIZTMxwrN5XqJchul9SzAv8QtUlAR/AQVlmSubsC/ZPHD53yAczw16Rc3
2MfxPUf3umO83GXmje/aK1l0zOG79swGrffwXXvnXTsLfgJ9pIhtGkVAn8e8
EycFwK/4kd28vBvwf5c999QN38vzNa2/B3wY9eizFL5bHXmjnc0L+LBBzObv
TbDvPStNaVaw742NabItsAv+/ooMrqBXYwwrzTG/Rxzluop17KMOSc44LzTg
5ENjXK88t2yO61Teuom43hVypwPhVB7aeI1w7DJUSxGOagHrihXmqW4nW4bD
vpJT2uLmsO8ZZykGfI/V5vZF5yjAM977YEIc4FkV7Mq1Cv6k+68FvXTwJyXo
147/AX/yR0LMZ3Owsz9baCK5wU9oKPq1vw78hF1B78ry8P5iv5vOUfDHSrpE
JNPBH6MO6bBjwH6CY0v7EyD+Et4U6rOG+OvIp7JdH4Fu2cs0HspAt8+PI8rm
ga+ydyzq4XvlpeyCBVTgT/aVP65oBH+S/Y3I/+8Or5Cn/v/ucPa01v/vDn/I
0TVuAvviVaJ1lw38ya9p6UVXwZ98fPu5Hb6L+oqxhH8X8NUW7ZNtm3AuH9af
jPcDH5KO3E5iBD60+qon6gZ8eHm9TzcZ9nUdHWjQBb69Ju6Uogp8G5qzR+EJ
8Am//pgxM/DJrqjxfYXAJ5E7MqnXAf/HF8iudgH+B7bpGRIA/8L1YdpooP9g
RWnzU7A7xh4M28mBf3wmqz1QP7sI97cPgJ4Uaek+fATkNJwl8b012DWWa3oM
0WDXXj+vbX4Pdk3h1OjZcez7kDDPEAB7dNxpkVcE7NEa4/MXuP45rSL9BKxb
TBwRFob1Yl3nESucO2q8dpAJ/Mm23rr+cZB3nePdJwVh35NBm5+EMJ/8RKMv
DvZ9wLxD+ZUd1p8/fpIEeknQqOasFuilmVu0EuNgFz5cSP/8BexCRFuOG8Mg
iagMzKPvhH2D4ykuV8O+HUcadZZg3/G88BBvkf84uu54LN8uHoWk+BkhhOyQ
PZJxi8gISSQNW3b2zipKZEsZkayUmRClpMhIRkUKZTxki2R7z3n/vT73c67v
c/a5xrkmiP2ROVPvIE7xJB/ts4I4dbj64Sy+X7zf4XXVC6DziPbhvgHQgwRt
v931uK57sTVDAPusXqEXDQH7pVWeSDgGfJg2ayLlQ56TRTlvQAZ8sNr68Arf
2eloEHHF94NyWVKp8f0g7al7bD7A5wMHxv7xAZ9vnFXfex/03D18NXkI6Msn
kS1oAM7l//Q1TQBnSZr6YYzvfQ1zdBjfB+9t8GN89+wZCcE4JbJZ5/IE4lQn
9Y6CmxCngkod57DezIy97vsd5BVGcXeVD+Yly9Z4xQJ8bgypoYwDe6k63WCW
DPZySemGhjjo25tGo1/RUF8kx6XplYM+bHPmZPwFv6F0Ueys0t4eYsfloGyJ
0z3EhdGMX59gXrbkAHHpCIhTrudof+D+ndSwHhvY1xvCRoNyvpuwpGd3pAX7
OmJwnFJxnkQ0ifQQ6yw9RKy3yNcz58APadknc3pME248cjuTI0F/vtLm0N7A
93TOXsX+hy/Ml2USoI4OL3wwg/0PhUzrzowAn7/5S/qle4KdijZXJnoOE/Ua
wWF6gN853999BfDPWjYqLQL+/PwQH0XA80+4wvga4Olo//nCBPC0dcsY1QH/
q7wu6F8AP7kqFVOZD3pO4eCqHYDv2tdJlzfPdBPXVVs9y5V7CJ5O+ik+yPOZ
VBq1o7a6CZpjh4sHoX5kfMLhnA58GORQ2z4Jepi74VtBB3ygPyxwfhPwj+1Y
uR/8fJLwqVz/po/9cwIbf2Nf2Z9bRi3YV5aHftGdzmOYiOHPHMO+kaUXd7xm
q5skPjX+KKmB//v5wuERHH98x/kTjl8Mi3+H470hc3rY1+68lbXQG6DjGqX5
7C/oW8O+0cFt+P6dXPRzF5g39vyFm0dh3l2LCo6Is/bPx2XEmRLO9QRxelW0
DNfB/xrdJWleAPXLYKrUuCDUX5c5Nt9uAR86g2LMH4Gf2U1Rcr4b/Az/X58U
rL9cC7h3Y/2VaVK3vRfilNg5CkZ74POQcEnEQfCrkweDdtYAn1P662esQC6r
VrOXNMCPnTxQvnQI4uPeumiuVtBD8mS39yUQH10z19V1of4SvJkahH3GVk68
dcI+Yw/PmaVhn7HrH40T9gJ+JVOZ280QH8123ZccgXl7C+cNlQG/XEnixE+Q
y4UIiVFGqL/09oipU0L99bxouSb9K8R98vsND8R7CGuZjMAS8JPJxgPk+eAn
2Zo/XYkDPxmwM+pUNuC3zxy0Hwf8wj8jsqWg/qraN1zQCHGkhP7hT1JrN1F0
y6koHOJIfe/Ko2WHaeJ35IbkTivIIw5TDWnZDBMjnOkszH3gr+ZDwwRKJgkm
Xdvzae/AH5sw8FyCeT3eHTqlgO+Q7toIOQP5SSTn3kS8jxmdM/gO72OmBbVH
4n3MNNs3j3F9/iDtjb56GPe7FhNrBuNjhf9ZIJ3LP/+zOgZ0hkyC3I2AzqDY
3h9peH/nvXKTOXy/Vsg8/QPyovA9WrWKwOef3MfMJSCPEvMZjeEGv/pMQPZw
Nc7bn6GSA3mUAOmWz3Az5B0Pj4uP4/nwLSYqRvAzJf4ntxjAz5zjGODzV5kg
Wq8v66mOTBHbq899qKGOuM7GfqcV6Lx6LWfDDXR8owMH5IBOFzkFOe6fEj6S
eriPnLhPgl0c6IT66c3h+9Gcg68nvMDv5YWEhA+C30sjHl7B99aT6xtUjgB+
oZ0CAmmAvzfYRBnfY611t17G91hJITUq+B5rpNSYAubbXFGXJxrxfD7fD17M
t/cr3rDH/UdtjWirFhhXo/9oYY59FP8FzXiDvfj969lVjv1dfV9FT4C9hBUY
98vB989Hc0M3wU/KPPywaAh+UlTzlXY+4BSXat/cAJyavn/fnAX/0PhkLAPf
AVH3dLVgxb7NRncam4H+gVfCWffxXkasyX/2gF+x1frnOOCv2g44UaI2QSzQ
r5gxQ91kysx6vh7qppZeCQrc98lPFZQqB5zHGSodCKBjspaf4wHjpupiAi6Q
56SO7B5ThTyHUs/mbaX2BFE+xCQriOcP9wxRTe6ZIT7InKzojRkhst6xHNEK
mCDOZX3q2a08S7A3XxK5qzhB2LHMd23+miL22LCoZ0D+/y2Objeev+peyH/1
Geu7ZdOT+L55YySfxTLMe2lZcmIN9FZW/OTuZ+/BX5lmNOQB/qKTXLkMgF9S
9PXGW8C/VKztiuskcntGVnGdJC6ZReok0Fk35jg3h+vqy1cohEsniZovwzoL
QGd64O13VpDjHrrvZ1ivkAjdamn3Z/bDxPsFSidcJ7SM/vrfAeBb3npYYAjw
zU/ePdkZ+B8tuHxiDdcZvkn/8QQ9ObvMUh8O33cGi2mRAX+S/zWfrwC7sMw7
Yo3jb55TPt4J42y/zIKfw/hEtJ60E+R1byLE8za8SYSsqyFVrjf25V56QAF2
qjT6/FMy/N9hr8iDooCzPIpnnA9wKsoHndEHnK0p7y8OA84JkpQZ1h10AU6z
I6DnbKvHTigAzlE2jxs/8L5t0oCPGej5eSUhW3fQc/O/Z1V4wV4uazp2seH9
qfeq2kfBXvbzpxANQMes/WfZZaDT/vuEZBTYS7CzOEU/0NEgDYs7AR2NvS7B
N4FOlXwR23OM78PdPHXgt3mKVes9wW//Csm9jOvAj1t/VeI68LOZpy9wHTjn
m8oPZ7B3icV3eXtxXU4xcnEI7L1GZ/X/9qL3r3cc7eW1gfD/7UWMUWsZ7eVB
r3Axvssj9PloAL7Lc6vAeA7XCTkXxTNxnTD+yuCCLNQvY9Wmmli3zv2TGce6
lVu8vaIe+EDTPngoBfzSsvjtCzLgVz+/dc4XBb/KveUSUgv/qyu7XFsF9KRs
yd77AeRLTwVPKajjOYE4isIisLuC0f3+o20kQv764P0Q4NsrIyMudfQzo+UL
FMC31DDpKHxP0EeAu/DGi0ligiKXJruHRLCkHq/Fe218j32znYD+gOk1836g
30e07R8Be2F/5u2sCPYSrJjc3An2cq9YhHr/nRHi/cWXbQFgL3djMkrwXI0f
5eZ8KtgLk/VY6hbYC9++L7rpYC+HtV434/mQ1d9s/ng+RKOP7CGeD7EJ41/K
BvwhAzeW5YAP+uRPNvOBD3+XRz9xAv6hM2bDrIBfdCX92THAL/TFlGEU8kmN
9uvq/ZBPpqSK0++GvNQ4YPsI9h01TFkXcsHzIUGGYWPYd5RB6TmF5gThd1O2
KJo0RdBLsNBP750h2LQVNf8D/IotXQP4TofCgqkNnm/XuaiR7yQ/QQjW3LIV
/TlFtPnsv/+LaYaIWfh6Cvuh5eV+WsV+aK9SBFmwH9rFS9/scfzl0vR/QzB+
M2KNAcfJU20rkI6pdY8j0pFy8k9EOikC9fvwXsDRCuUrNDBvFFNaB55vD9uT
b5qtMUFMm1q7mgNOWn4mQ959MwSHkdEG1vVag/b9gfC/blQvTa3A/xqY8t5P
Aj6whw63tAMfXNOT1ZYhr77UIaqFfKs+zF2AfKtSuLuJfMsdnfmA+rZ9oToI
+9jvfHlEHPvY5z8KXcL9EZ6k9AncH+FKHbbE/ZGBIoFZlGOcfeFdlOP6ioUe
ynG39GUnf8D/IGuXxZr/BHHSU2SYGfCfPdZqcxX0JHLo7dxu0JMbsby9dDQz
RIbiHWHscxsbmNGMfW6r4rX2YJ9b61NyO+1gvCNbjcEL5m1Q+sx9G/Tw667e
qP/rbcpZVtTbN5mua6i3AX8f8WI/gSL3L5k1oOckm7apZdDzDdfSMuzraLVG
my4O9OUP+NBGA/0g8YsKaEccY9/eoR0t+c+SHQE7Yj1GaZWO9dc1Co2LwIfN
FVedPuDDAeaIzCiw0/Rwl/g7YKdljLQrBmCnJ9Wn/m/XdDtIhWjXPx8ne6Fd
OziqS6EfSCkNYMd1KrPbdlfQD3wqoJ63AzoXpMVZ/0CeUNW/9fMD+A3u1PIF
fNc+OsHIVwr7WA6qL6SCHHV5AujQL8XYFM3Xgl+iM3+SiH7pwb4gaXwXb54v
/bIv+DGj6lepqVjfuXk/fgt0hCW8FIzB7z0weF8SBH4vWSaohgf49vcMWSr6
ye9VsonoJ3Mc7zxBf7jc9eaLHdDppOKuDwM62rYBmaVYT2ntb/4MdLZYmpX5
gQ+Db/OOcYLfFjP5bicBfptDUPrSB/Db24yH9XaDnz81q/8jHPy8OM0nGybw
83RpVkuOEBdGEtij1yEuGBvJMzyCuMB1q8gZ4wj1YJADxpHJP9bCGEcivtq9
xHFr2utGGHeiNt/YY9zJuu/8CuOU8Ur5BsapO+T9CV4Qp743qQVjPnPdU7pA
FOTVtjp46T7g/GwYd4QbcCZPPeBVAJxBNm+XPgHOSPXvPDPw/TMDrg9HIW6q
kJm372oiEStnz/zBc01SliTuYtCTjeLkWTzX9NbO1acA4vKhuNdWjBCXm07n
0WJcPv7gjskS0Mmwk7yzG+hEW0v+9x7+b8e8UQP2w7n6VCT0LdDJL3wpiv1w
3skKqN0De+m+eroO7SX5ZyoX2svdTcfhQbCXxo08dn2w93ua3g1UYC/v7xw1
rwV7ieBgLzwM9kIvUrZCAr9aGcF1CteFBiVdO4KAP45tvSm4LrT4+987fF9m
7S1DywPQnzLKgP2CoG/yjwsbygD/mxdU7iyAP8X4w+ZLwM9z8P54Knx/s4w2
3hP4ViHkwfAP+FaRdoIN73e0Vf5Xifc7nt8mq8P7HUXFagx5wP/0ivNR/yBP
6zkbv/M05GmL8vQ3ZOB7HjI+wX0w77CLZo4d6G2GRa9YIOSB7AHOyR8gD5Qw
Kdu1CXngJ8bw/9tLl33+E7QXjkh5P7SXxCPmr///bt1QiOMbGO9sehhphO/W
BS2tGYIcddNeOrLivdcE+X8JkJc672iLwnyGdvyjGivg1xVVdgoG/EVRxwIj
AWeo7CMbV8D5OH3vtz7QEzUL6mA8n+yp5ekphf321V/cUAI9jz62VdQOdD5w
aMszgJ5vGM8f4gN7+XV0kOka2Iv+y28UamAvvEoahlRgL4HnX+aNAZ34O85n
DgKdZ1e773EDHauz1+Xx/fdjA7nNd4DOO7mLTs1A5xkzmb8U2LvkG5ZflGDv
x3cIhmw4DxMq5qnx6G/Xk3Ys4z6IQu+bQy/xHOw+r/cXwC9Z5RyRlIa6Y2f7
hKQe1B2HjU+rYv2SVa8wUQvfF40dNDMGu7D+XM8Wi+v5Y86Sz2F8OJTuox6M
KyYGziOdbR2WP0jHqunWN6TTdbb1MCPYafDbUc5jYKfh4TQalVA31RRo7NmC
Omv0eNFlPqizvht4VthCnfV2/o1bCp771mg35SzvJsLXm2e+sfYQLD/Uf1+G
uq92VJm6v7ebsHc1YrLAfbc0/zHsG/MlyHuLxYNEpC41UahB3X35cuL4l69Q
D3wsD2l72U3IO3wzXeDqIWbuNG+t/iIRBh4mye2j3QTrv3hO5aNQF4upz02C
37gXdvK0gh/Ux+J0D1N8hwnf+NE7eH6Pqc6xAe9leDOqPMB7Gbvu51wsd5wm
JgLeG2rZkogf3f/UuK8ME9nW5y7IfCcRQtYXYgPboa5s2OHud7iHKGF9NSwA
+AtGeAb+A/ytAoGkMahbj2wZzeB+8aDCrme4X7wtm3gO94t38ib4tQ+QCL7R
KNn2L91E9dX+F9zw/e/jS+EBUHfncIzTpEHdTUoPtjKGurt4x85TAcD/Mg3q
vS+B/yJ0qhzvgP9i9v0y/YD/S/52TDX4jXQf5jNPwf8sb7MJXQI9/1rBGKkD
er7twBr2CvScXNrKHc8fZqWbtBiDPdZ3X5xk7SAR73uoXHHcfb11CMeNhKl3
47nE+P0evaZA58nzpCPyQMdIpbX8KdD5GBVhied52IX2b+I7oYLjdYz38d7T
Oi2BOKcfLHfVAc5/Eq2/GwFna+aWzTLIpfa2d/5rkMvU9oUTsiCX8uGfjCrA
h2XRgd/tPd3E0cJSqckjPcS//RTVaXgeqfh2UZcPiagTleO+BHyb04y9SQt8
DibTtX/xFfjcPv+hDPjW7tdZQwdyyd+ZRb7S1k1k7r0VIwRyiV6m+FQL+J8a
XrSZdYD8LyrLWNgJ9PDV6jQb4JdKfx5ZA/6BoiPygDb4h6OnyBZwHVg8h4bY
cw38UnnGwrvAYeJN52cZ2t8kYrLS8aX8VjdhYZTOX3yyh9hpeNX6B+5HBJ28
RAF4xF4fc1MHPMmx5+VKgY4zH4PWY8gHjmxoEImQD4R6LNR/GCMRgZdqc/3+
dBNL0qJfbqv2EH9Ut0QW+knE6Wax07cBP2sg/cyYUA8hPPAqbgPsaK95+quD
YEcfY7/NmYMdOat9Xt4PdkfiIbskCHbX9887MB3sbpegISWeD3F29y7G8yFP
xqhV8HyIzz2xfTXwfzm2xk9mgD9h5qFK6Qd/Qjuv7ITrCSKGNjeyYTzRV0Ds
J4zfDvt62hr47y/Xq/sN4mzAf9KnIyDOfuHh4t4J86qeH4rIg3k3uHZJq0Gc
ip9JuCUFfCaxprlGQ3y8Ty/pwwJ68q1HtzQR6P+13BtxF+9Tbxmd4Me+hSdn
vbDvhGzQyMZuiGtLoZyUptgvJXl51VR5gujrrY95Owz52GJcVD74SeHT8uZ4
HsZ1+QwDN9CpqY19dQv8W/TJmmbsh9PH6aCP/XBClZkdsB/OxcjT1unAB5dw
9Sungf9v6HZQaAD/j4hk1iD+q4KFtx4Cfu2p0BklwP84YcewuSPeRyii/G4N
fnVFvn/YFurWNZPX6Icl53Yfuw38oTth/OIt8Oev3eJRHE9Z2FmP/pnxV85l
9M91V9f8jYAPbf/muLjAXugHDdtSgQ9K0rlfcH1JR3jw1iGYd4brUXMSyMt9
xK//GvD5O2WGxmnQcx3Pq+XTwGe60kxZUdBnpY79epfBz0yHhD61A32uVOF9
9xL83qV3HxXdwe/50qdH1oLfExLWIksDP5l8L7DxDPjJvrc5zN7gJ8cZp0t3
g71wGP1yyQX9VNQ5RZML+rl0+a+JF9BPLDqgZ/mxm9CI117dKdxDfLym1FMD
+pYdcpxu1oJEEBd0/zO1HiaMjhTxT8H/JaRY2TTB3t07E+yYwd7vGBhtrsC8
j5a50zc8SYTL8l6Occ9h4tjO4KdUQN+kK57jO+jz0SmXbWbAP99VsEu6E9cV
n6n9y+0mbCsyvPzoe4j9GrqnCyGuSXnekGRxJRG+frmxzZAPb0bcvZAxiO8Z
Rz+t6usmHPblMZEgLoj4+juzQ93AEfPGfbuim4hJ7Di4daCHoBrOSaAFOQb1
0Pq7gr1QvOdizgd7CTzp0K8K/LeZSeTbXTxJiOpdnOFqJBGndrVOOgD/G+ou
jS6Dnv8bjKPKAv4bHtB0w/MwabwPIt9DXpQxWlHyHN+v1Bl0wnGBQc5cHK/I
K/2C4y62C1tIp6u4RuUf0JmqYjBBOjesDXRUYF6eZ+b6B2DeadqidDmY90wP
T8F+wMkTGKQYCzg7mT6UNABOLm/+0sPAN+b5FkVjkDunfIWwJfDtTLHk73vg
N+b5kn+1L3QTjgqz13nAb9C5qVXg/tfNg0JauP9VnRonivtfPRnMFwbwnCof
/XES6Mlbr+p7ZNw9BNtU9/ls8MNvn46U3R7pJia6KLL95XuIRhMzilmgU7/l
L3AS4uOZI7P5DyE+/ifxWAXvMS19sI/Ee0wHov7IYP+QXobrjJWAX8v1wLWz
EB9b/k1/EYb4aPhMozob8V8bzd3RAfJqSX1tA3p1q9EvixvkeKxb2WIN9JBR
6aBKH+ih57Bcdiroj/PrH6xaoLdnfy51OYHeFv77ZZ0K+Ne8Oyin6rqJCDXL
XQ6g58sMVPnL4Cc/PA1bywS9okhOHVwAP+kreHj4KuAXdt+RSw92NPIwWaMK
+M8SfJ4S85PTe5X2KoLdfQoqDX4OdherRiuH50Nm9xwVx/MhQSntkng+JJhm
VBbzopxuSrE6+L/KvheqMC8iV/7mjuNhX0IyXsD4heTXj4xg3EWZIkQX6LC3
fjBdB793MLKl0g/oDLwUD36I61qZzGbSeI5uad/RHPBXDuUfWPF8CNPDrx96
IJ8MUv74RwLfiWtemMdznu+KVLZnIB4JM6W/jYN4xNBOFrkJ4zoHSNRtgN+c
+3qTJ/ir6xRhOf+pThBTehmH/kA+KXkj4rzIfzOE5ir7BL5foJqlwovvF+TO
y9/A9wu2Q5U/TMI4g0h9tBbY76Tt+YcHwH5bB4g7LID/3Rl+XwbAr3CXyawE
6pq8BamhPcC3t+W38txh3oa9F/M2gW8eEmQcGBcknFcv94GeR8xaht8APnNH
d/linXX17EdOrL/cZsqbK4E/VzVuNuF45HI5HdZf6lU8dFh/sc4fZfMCPvxR
bNpiBz4UHVNTTYC8eu5lyWom5vPDGRM6wLcj1qrnG4BvUbeuPBMBnOs0ae3O
gDPXUbBvA3AWaP2gx3414d/9n5yD7xvLjeW64fsvDntZ8T5IU9KHlFao9++o
qXttQN6p4B7zZg/wLS3IKX4O+HbzuFWsGPZhOGDJjvHlaWpm3yGgU5I3uj8a
6NgtRXbiesW07s1v2PdmT+bxbOx7c0+wZPbP0Qli62eAQO9PqONmog33Ms0Q
Wd3ihgN4v36c4v22zwTxUlj1cTbUX49+TlSVaU4Q7tQxOl9JMK/jYH/s3hmC
ovTlOtZZjGSnzDJR7nqtEvwgLwte546PMO+tEt31l1AXyNy6lLIIdcEukr4t
E+D/THr/fhHwa29VnzoM+O/Z5C5hn5YrEt/+4T1Brw7q+3hPMEwu7//9pcMM
jNSxv3Sxkjcv9pc+tcn7DM9LJAq6GOpBfAysqTDB8xIywZdIWEfwVt6tPgF8
8BgqFn4BfBjojrPyAv/cf3nDUswFfq/7RH3TBeJL1/6JMPg+XvDiL0pcvzUr
f/0C5Ov/W64c5e6v4/oA5e5NamhDuaeppWeYgt+wow53qbXGd13XIpsgzgbe
/y2N+sbqnsHtA/pmvCyZsBP0vLF6JiAa6xfLzP3UgPMFa+5eKsA5ZjY2jvaS
btWrOAt863lfwhAPfBNsjKNAezFOY7TrADp7YuTl/YCOW1WsCy3wLV2UQWQB
+Da+1+eOKPAtdDBzEe0ly1Ps6zegM5BlyYn2csfWXhrthXzWw+0U2IsVs38T
J9hLp9BhIWHgw9lfI/d+OUF81qFh+wH1V0Ef20e0d8t3KdqSwLfjJvnXsoBv
wgl298/huRSb9iBuyMe8x2UXlCAfs/P1eIH7RKVVV67iPtGB13k7cZ/o3RhH
CvqZPeznynBfKcTliRPuKxkMXxi1Ajq6N5sOGgEdYXXZOXugs+tFbRQ98K1F
WZxMA/5viMR/BW/BTiWP7VYgBz4LtYtxyUN8eS5esekN8UVmcpCuBfyn66KA
zlprN+F2665XLPhPQSO6pEQ8h9k6x10F8UX6oFMFE8SXVQ5wtTCvaT+Z9QPg
v+zgp+ZbwP+1A+GFuE939mIHXyb484mgxAdZ4M+3DXKeCkOePG89u5QJefL2
juJjU5AnT51vE9kGe1c+mxEQHUYifjqHkpWGDBNhCTwNeA7q2o7zs3husK9Q
2Yqyi0SUkXMPNQGfjV75SGZDPnCgRfa+ytVhIsPHNmo/1EdMD8X8xce6iXut
VmL+UEd8zq9cpQL8l+npvN/NdRM2RdfdSSo9BKMjlz7uF9cMxcvjfvEZt/ps
3C9+mbN35fEo6Fdx77jHbDehJVNx9QB8vzIyt9sU8NOZxXxR3e4mjgdeF9DX
6iH2cH44fxvoUKbEvwoBf/VQt3dqHPzVcdH2fDzfcmvuUmQs6PlhprVtZzzf
4venwgHwT4h4+29BnX60vienB+yln1aiIgX74bCK1cvUTBKFbgV8o/B/D33R
LsXxrYJ7XTiuPWWgguMrTLf4bYBOhVF/8hjQkV1NIKsHOnoNQsa4bqP9YzIB
121+XPipges2v6hXf98CnNw7k075A06uHjKjYcAZ/KDAYQXivj5v3lgT1F++
DkxPFIBvirozswTUL2syOUk9UH9p8j1WmYX6y+QjWRXWX+FKO/Kx/rLiOMGB
9Zd8Krv7XpC7lrnS73KQu3K3i+JTkHtCv9fNfRD3r7HN88xDXM76ZvyOF/KW
6qe6Fk/Bb9Pv/1FaDPXXTLQvxx+813P113turFuTxC8ngN0luJuZ7cf3WFva
d8yCvs0anGt9GwT1/u/W/kiovxi/6RkXTkB+rD0/17LRTVz12ljv0OwhtJYV
PXwA/ymFc4apn7uJdSl6bluxHuLHnvbUeKAT/vgRGTfo7YcW739soLeT9pNO
5qAnWdq9nlvz3UTK4Be+PKKHsH/cUHYT7KL1/GQsHdjFXRmasW3BHmLmqeiN
TbCjxMz6V5l2oNedhTNaEHekTlRzleD5losljYOQ/9uzqLtJgb3/kf6sYIp9
cUmGu7KCwb/Vvy/gA/6/1Bb2P4v7hofLeeXxfH7OQpcunsOXWek2wvOrosVB
ivjeH01tvCGMGzQolqHfoN0pPIJ+g8lSSEcZ7L1q32MGXKdST8q0YAf/sMF5
Myoc5iWojfvYQE9OfpdazAC/9CRowzMb/NJ0hVI2nsPpUHYjHQE+r1mlTyS0
kwgn5fE7eE/8133JM9inK1f3kBb26WKfe5gnfWyCqDR/y279a4pwWWUKu8Q4
Q4jb91/G92QVw0sbXwFOiT36LzYBp/7oY0q8L3njdNc5vHdpdPeuDN67nPM4
fh3P654StrLD87rvgoN58Lyu6p5bXohfNVyiC9fZutpsBXHf8G/DRUVt0JPg
gp1SCxDfB94/Hb4KeVS0ZdjKOTy3Gfi6mgv7+pa5D4rCvD73T3jhuMKk4RFe
GN8zX+kmCePnXm6T8B7c+uEevTiwF8l7H6k9wV44BebFy+D7jUH1P50gL12D
/CPcuA+YeN/UA/n8psruHvC5kfUgbx7w+UOPU6cJ+Bm5jKmBA6RugvK6bRSV
Qg+RqfZvdgz0rdPa+JEg6P8tHcrjpqD/PeE/Tavw/svd8RMtoG9C/CV7SkDf
2LPlNMVA304wWazpgb4JXVhaVgB9e2PHuese0P/rrLa5c7ybMJFVq00B+jKn
OBLxXFmtvp8QmyPkbQt7L512GiYs2Uz//y5nBv3cTTyH9pPsVDeeQ2uuPvGE
0g3fDR8yl7xGIkzLbRZIYC9/Ix8ItoG9O6+aWvOBvQtGRa58hTyfxfrgryXI
q8loImuOveom3rE6jMlAXcC/87V8Pti7mVOSEgXUEaf7i+aiwN7NSmrizAA/
i+rJHTOA/3N6ZHQa4Lco4mPsA3s59UdXSgLs/Q7VhGQpxJHZPnntXYCfWcSX
5SXYS33Q6ClrsBfVeKdA7JPzw/B45kOIp9JZO43jIJ6eX13awHXFKrldwjLA
/8Or3Hv0gf99Bhy0uB7lIypohf3cFk6TTLGfWyaxtBvH6ZxKb+A4ffCtSBxX
/HbzhRn6DV+yUDGg898+SU5toPMnRXUF18cUfdzdKmBe4t2P+DyYt9g0TosG
cHYU3fH5DjiFTyjGBQNOD+/Pc1zgxy7FtShKQf0lsv1vQhf8mCe9p+Ed4MMN
a/njjyA+dlkuKFJDfPx5snIZ73+RneeJwftfIyLsOXj/6zuf8+ku4POz0n27
6qD+uubPYTIO9YsXO2VsIsiF2UBI8DzUX1/fLUVdALk8oR9OGQA62z6yvptA
5zDJJNsS6q+EHa4KmCdsu1V/wPuelSHxbpchH/io5P0pB/zSp9cNTFRQf8Vd
kUwatxsmGlSeeJ8A/B1C1y2eA/7ytp+x6YDfIvmKzlvQ2xiKiIKCL90Ek7Zt
5B7Q2wD3hju4ri4cuajc6g5+svqqz5b7MDFxKV3qGOC3m+mxzajtJs4e2/qQ
ydlDXEmoeZIKcl8+7zWvBX5SixRRzwNyd1qbWeoAOmLaxw+rekKdNzZ9Sd0T
9Na9KdIY8hOT1uCKa08nCbG8wFX7tyTCb98ieT3gP7K1Z3cY4E+O5bptCPXj
QQ2xoTY819EhFsMCdnr1woMjIs0kYlX3Eguuq59inGVkhvGIRnulw7iuvm75
E9dpBztds3WAjukOmRM8QOexxq/sIfie5XSmchLIvfi6l0kQyJ1OJMtrN9hL
lL+hlQLYi68u7fgM2MvFNJlv2FenX25+MRfsa2xmQhH7JQrYvI+gBvy1jztK
AiC/KujQvUsN+WTiUt8LR8gn63uNPA6MThEfmuVU1uhmCGM9XsZDuC4a1mEa
B3RaWPJLGIDO5K2OJ3hOY0slaGYF6OxUe+pYBnREf3D24X3VHdTVThQQH/f3
TZPMIT7m09Q1o73oe8k/yAL8F/TKymMA/3WDRc1PaKeUxw1fgZ6sytCMHAY9
uWpCHodxJOhjm7oy+MO7B4UmjcAfPhRa6MPxF9QlZzG+3DgxdAHjS3/f6Pos
8IG/8NyEGuRjoZx3/lzF/kKRz087wvffGGgHcyGvWBF0iLwNecWqufyzJ4Dz
/e2xgiLAueZ6NGAOcG7JTSiswvdOj/d3jcP/YnZk7LgP/0tk6u9h7AMTeS3L
4ALkdUelRj69g7rjmW8OPZn6BHEtSufasbEpQoeeTD6BdoZQvrHrFznwWYXP
T7QA6DC2+1qeADpv3DgisA/JkzepWeZAR2C1IbwV+5A8k929gOdk6nr9+Ien
iEMxh146MswQVt+uLs3EjBCcP69GmwVMEPE5quEUUH8xTos9eK89QYQJ+MWL
TUwRbVquvT/3zBDqG1+mAgF/An3yshj23TpYUD0L9jUi7BArDOON7xq/GYAc
Gxs339dD3Oy26j2/G/CLcnYXKQP+8R2DKncAf00UzaN8XCc01B//D+z0gZNy
hRfeQ3dZp8P67ncFe8QjoMNEKXjuCJ4XEtm/uQL+ym0tdc8S5DmcFnr55aCH
On5xcr7w/UUn9mB9wDMmu2nJCvyXVjmW/hXi2mx30ksS5MNy9HRjgZAP85Se
8zXF/SbNc3YcIN/dayuBQiDfPe+cFM/D+HSQkgYLjKvpvKw8BOPvvNePtIK9
HPibnlIN9lIvRrkQCvYSrbCXE9fzeQoX3hSBvg2UfbdPB33j8FJ8ugY41QZi
U9cB53zZsGwN4DzIXr2I9w7eeR+xzcd99t6a3UKQr3LqzrWlAB2/FpaSMOBD
s7hBLTXw88ydi5+qlSaIvvxq+SCQV3BZuRXeAzpf/qASzw2GBsUsJQGd3Tci
iuiATqxB6HWsH+cL4zvJgQ9a4foWuJ4wrmlaWQ5+horm885XHqCXf90dujyg
nvIwNMa4oFehHYF9FVxb6oZx/yL/0fnEEdDzgmnlejrQc1LZlWvqoOfLnxqb
f+P6c+laLhnU11/iEyk24PuBJ5lZk7i/v8tnex3oHM42i1uC8UjqlZZ1oFOi
O3Q6COjc+u/+54dAx3pHWS3m/787hMkw/1f6tWSA+f9248lTqbguZEYuYQD2
4mjQsp0F9iIhVqktCno+vNd9IKEY8i6PoOkvjSQiPWuvEZ67e/8nRgz7liQe
OqCPfUtqpjIbNtUmiNCoozQKoG/3DJQpkkDfQhQZmtBPZuqZyLCCP4zO/Ewj
Cv4wUeD4QX+gY3zUR2AJ3+GVsdz/q5tEkPN+Z2HHdQPqrfJlqH919YXy+aH+
Lbej0shKHCEiy5OO7AuZIG4sRSuKKs0Sz2stZnbpTxD3/e3pqCeniF6fQNH4
3TNEkCJbHeZRJ2f19D/CvN++77/MDnqe60Ctg3po868+5SDoG+upyb3CoG/q
CdRW5YBf6OWuatwvvsh3KR/3i19nmTrjOupGzlQ2rqN67PPuwnXUVVsbGjyH
cOjQASc/4EMRfczaPeDDtw+18elg77TfG0R3gP7QyvKduQ/2rhtJ5vkT8Gv9
DfmnBvjNEpqu8wD+3coWT43A3o+2Tn/dGJ8ijIYUFzlpZoh9F1t5paNGiIK/
lPc0fScIH5+kAXz/KIpG7Ai+i8ThRe2J7yLFspJX4Xgj6W5hBNAJNOcqYAC/
oZGkX7kT6JiMz0zxJI0QfGa3uv1hXp7cx2msMK8Uze7E+4BTTHxUbxvyZ7qF
cPs0wBmYYn3tC/wvR8lvkVHwvza+a90thf9lv5fV6grwwa2gPbQG+GDfzuOf
i/qzd/q/UuCb2VPxSjx/WHau8Pcr4JtRT+917Ndx1qvtsATw+fOh6ftqwOeu
hsp/Fbhv6/TUqB7kIv39eSIVyMVX5G8RB8hx0/uhEyPI0WB/neJ1kOOX55ZD
9cC3upJ9aoKAn/GbUYQg4L/2h2KRDfSEXnLqIepJ8YJiLeqJh4XafR/A//aF
xPYuyPMvl8aY/gO9sn5yur8D6yDb+yk7Yd66/Wzt/4EevirbM7cD/OTDaUlX
9PPdAj+00c+rq6cy4L45Fe+2mizwQdz0rqIq8EH1sZGKONgFV7UPQzDYRd1U
6rs6sAvxKsOjQeCvSjQ66M1sSMRvWWYVQ8hz2IVWJX/CvI6//7jHgb+6/M/p
jC/4q/mBftPf4K+UbW5MFoO/Wi/1rvYCf6U4Tm2K/lAo4W4EM/CNniOgmhv4
duqOtz/qrUWAsCn6z5dpyg7oP6nYzcq7gY5xd/V5LaATeX3JhwPo3CS0j7vC
9/fMPwTeBnnp6LYXXgF5RavKWzwG/1wa8mCJHfyzqNt8eZvrMEH1vXv/b8wr
jP9OGAHOWNlPeUKAM9GvdBPPLQyWpQTiuQVD7mdH8dxCIX9TE65TPTtCdgbX
qWxbP1/EdaqXUxWvNuD7V2JnT3ZCfBw/JvYsAOKjaqhXNTOMl4mVVn3G+55v
Tpx3BTpLg+2blIDf5GHGgWo/EiHLqz9D7jdMHG1K4VUCPid9C6oSBD7rPnLK
0wY+a24WmP5wmCYO/0g3uGNJIniU4tyGrYcJV36GVOz7QddumHID5NsyI3qi
DuT7lm5nF+5/uZJKG6NgvMJ9ngP3xZrOxXb+AL8nOFT5LRLql//cv3aUQP0y
x/HKFeNL3VRCLu4XN6m+e3AP+JDW/8MWcRoMubpVAs4sRqfMHYDTomX9Ij18
b7YQGr8C/yu16faLTPhf6d1C53B90vNApg+eY7x3kJwTzzEeuvREGc+lfFNz
lUc/M3+wVgPtRU9HUhvzulrvyzWF2KdlzFIO+yXmUu5r8oRxzqS6SFuQo8yk
crccyPFIqdXpR2DvYnv57nGBvb+ql7i9CHnCni9Cz19DXuF8RdpSBt//CnC4
shf7YlVP5eB5XY4LHJR4DmfgwzQZntft+yCxgOdspxpU79RCXLNkyH2iBnEt
8+K41hquKw6p1/4EOSamfrkaD3Jc01GTwvO6Jp7xtnhe95XnsE4j4E/vvZVc
CHTSUy+drML7sIKslMpA5+aPFqN5oNP5Qd2BF/h5vu1t7ATQMfzHSV8Jesjb
NjusC3r4ca7j3F/Qw0O8lSZ4vyBub4KGO8Q1275EJWWIa6dtMhp3eEwT6roq
52gjSUReYUtg2vVhYm8s83eMR3LBEVk8YKeTrZJpgmCn8VW8t3E8deLBKz4Y
P0uKtxOG8XwexdvDKEejPts4sBfz3nEpM7CXpJhCZyfEaR/slgl8zm29/TwU
+Hy3NOsh9i2fOMmmtOpCIlYEEiKLAWe//on9obgu9CiehRG+j9UmDbdA3Kdo
Wy/F/o2j2V0lkcCHf0Qo9xbkgRXSIzTPIa9427RGjveLNYLOjG5DXhGV8epa
EtDRkozkTMD+D11mhziBTlANFSvmGxTHZfbdAzqdN3WZ9gM/SSZFnNLuENfM
xCy9wkkEl1OwhX/oMNF4qdEe7+OXlpYf7AE8D0Pkc5sBv9LkOetRvP+V/uVj
Iei5RUK8QTvoed8Imzzm2zGP/OMJ7Jf+3/4lE/AnhSVCm9i/oqn/JtNxzM8D
RpZMYfxo5/3rv4BOu6ruVDrQsRF3ONgAdIrdkwexfhEoccpOAPnyf3ORCQB7
kZ+5JbIG+X/iLd0H18BeHh6ZW+uE/H96x0TQBvyvifGxizdAvtZm9L4mIN88
STkp3L9jvdP8DffvHEI5H+H+3fQ9cyMX8DNJV94ms0H9YuHg2bMC9ct516Qv
D/B85s6y6H/AnwLZNxpJwJ8kVeXoORgnk1il+Q70xf7u29UC9E/91Aqk0pkg
GD7F6euCvVw62TP/EuzlT2LojZN3Rog3/kleuWAvrKk9gisQXzZHcrymwV4o
6JL8eUFeBypqj7mAvXCnaPMeAfpp3/MW52sniczGSc8wfBfGJuMx9n1929rP
rAL81/RtqiQH/ps/GdOvALlHKDF04f1iuzuOVni/+AZlwib2tfaRuPsD+8p+
mFEdwr6yR5XOCGCf81879RwfAv7McafvQYB/z/PBvcOAvyXArqwI8C/JtX7U
APx28/010RDfn2Z06ndCfExszl3bDfgfUeov/gP8EYKvrglhPzeN18t2MO/y
07+O+C6q03NyLXwX9Xw6cx2+ixpbvPpaG8Zfm0zUVsC4RW3yZxzvog5h+gt0
LGIYlAWBju4ZzZv2QOe3ZfzuFYjLGWszLiYwb7595jYnzJs1f/uUJ+DUjrl/
IQBwDr/fIRoOOKk+tQxhn+25GDn9FuDPuL9ZcS3wZ4XHi1MQ/i/zJzO1A3WT
hOjrvuoq4OfkCbb3NCD3lHYu8nmIL633Lu7A/a+f06tPcJ3ksKrq1UrQt6Rd
w9KFoG8mYXejse9xk1RfrzbkkzpNPZQ7ujEvbUpGv5epNr+N9xQO2uVQo9+T
mftj5w1+siTaiO6f/wRBxxwayIJ5VPKytj341WQy6q8UgH9O/3YVI+RRE+5J
gti3uW7MxrYb6F+WdwioBPo3+Ts7pDAP76RYbwV9SHtgomkA+L8Oa/7Be/F3
/7DdxXvx6ZQ0xRtg70+Dkk2wb3nEnhe/uUG+ozSXaHrAz+tyKlFi32n9FJHt
u9j/9s+rdVug/5NfOZ9cAfz8exPywZ9ThKye7ZudTDOEZnjLIBPgLwr9ZVsA
+LOdpof4AX+AA4ODF/hn6T/n2TfBXg6c9R4eAP/Mrt25EAF5o0qF78xtyBt/
xjNH3ITveeXL/sbgO5vOwdXxMF72wtgf348LNXEVtdcEuf+8llNFmiIqM+Vt
q/Ddwx1kxaYwr9m/OLMhmHeJcqaRHb5f+FhRqSc7QQSYy48RQ1OE/Wr79m7m
GSJWZRe3/LURgr/S8bWVywRh89xS+xIxS3SoHdhjC/qW5XlItQX0LebD1ts+
oKP2ZNI3nrmLmJkcsAnR/ELwtv77jH3I/Qu2Dc8HjxCz1c7HzrhOEBdpj1FI
AZ2/+mbLOUBH6/Jusw2gc3U48uYnoOPxQuj42IkJ4sxf2pZ9gL99u0c3ah/g
ecXFMAv27hvQSToSOEEsXPhyZgj0VlU9sc8E38vjvvWGHPTkZWnm9y+MM4R9
F4njDPCnqc9N0AL4k5ppS8QBfdNEx8fn8d3wU8es7GD8TrgGF747eS0+9yKV
3ATxpEZgMh74oKtn8/HR/hkigZNHNRjmvcEYmdUFfqYp8MPWHMybqGM4OH9y
gqgVEyezgvz/+4M805+gb7L3d19Ce2mi/f4C+9K7ZwdLvQZ72fFcX5UD9OTM
rWlqK3xn4SbVGPNXyBOOfuvAPgbSVJL30c/wX5UrRD/jY6cduhvXZyLv/pYG
ffNe7BOYxvOx0dq02Nc6RiPDGf3P1N2Tuuh/sgW/ZCSDvWSxUfChvWg9P8OR
CXSucUh+SwO51/NqLO8H/NuzqiR8B6r5IQ35TbCXkuKfyoxgL/uqyFbIAb+2
o8S0Ge63WtAt0kAc+UYzUM+AfX50hjawj5yo+70vuC7aecJrAddFm2z3C+wH
e4+QIB1YAnsvEsgdEQJ7Z+pxSsC8sYbJ5vkXyIsyQ74/vgr4/zMq/I3vGuhP
vDuP7xokp6dqGIO9+Pk/M8pAvx3YG4b1l8vMwPg9wB/+cpKVDvyV1L5Y6bvB
E4T1Pf3a48D/FrtdRrVaE4Sr17GpF8B/g6hbUR6A/9zDy1W+IF9ZyQaxEJDv
hqFeLr7LEFkdUofjNz9uSOG4SEzUIxznbZ0wZwU+BKWrLg8DHTn7Rg0C6ERP
h1yMgXmn/dYTN2HenZtK+7APuWbVh8t4Ljrc5VMz5mNPxTfo8Fy04ueO38zw
v+4/52uJAPkyfBPg0QT5Wvt2qeM5bSeOiPJyPF99fXhZDuKdTXuFdB3InS2v
oAL9zPpBqyj0M9QqhdfwXYzO+P7bO4A//G/PHs7Cc91ij8TX8X6WSz3THeB/
/Dm7DUvgf9UZ1p/c4LeXvgRYm4AczWwsD5SC3xbgf0npDHp77ahXyluQ+4dD
l6r+AP7Voetsc4CfyLd9yIf999IVW5wA/4kaJp5DQN9Zwc70OOAf3EEqmwJ/
mFIuqofxkT97OAz7orNqfyJhX/T7Bxg7bUDug8UvBpjBX3VdNvHdhPgu6W+2
lYB9Qg4+idID/HwHqyZ2gXzjXzD0Yb5x9sVWG+YbcmvkrphvWFectI2A+kvk
+HeZ61B/xXaVbHhB/cUbYGyO+fyutjqax/D9yklWQTz/yXFjxGwK8kChw4xT
VZAHinPNRAVBHvjR3kwU97/IfzELKIDelig899cHvZ2hyTqJ+RKn5eAhzJf6
OKYsMV+K5LyggHRKSS/PIp2qj7pUSEdJxGXVAr6nCGB0HsH1ycx4iQH4vwqf
t7vwXup92ZCxcsh7U04Kr+tdHSZYaq6YYj657LBoTA/f/35eH98M+Y/fScs7
ZcAH/6XDo6EgdzJKWf9lyCfDpq/E4TrVnxcd7LhOtWdPbASuUzV8XNPBfPKD
qo9HIuRRTYxJw1xA51e2hhXmk9+/7+K4C3Q+tmheZwB94JruDqSGfHIxK63q
RRiJKClYP9IbMkyY+/VyYf0oIdpwIRrwGN5632kP+OWNHAP7IQ8sK4i1CYI8
ULDnQU0e5IE+42/Y8Hy4q7DwX27Ity0Em+z4Id++rDR7CvPwXS2R53C9KFyG
uIHrRYJtU9zLLtPgj+40z3mSCP9y0vJ3z2FCUKuVHNfHpNqXi9E/hFDvf4X+
4eL74BOC2CeEll+FgLxXs/e+jC7mvZoN/2H9te/SVuwa+Af1UL6L2eAf8qIe
iWH9ZaO2GqENfOh4nHbjNdRfBl0H+LH+ehD1XBTrr//sOY2w/uJ7onUH6y8e
F/P5fKBzVKvtuyTQsZKJX8T663figrENng+x9CNkgQ/1931M34G9a5QZkf9/
nVZy9dYvsJdukqH1NPhJ7itOqufBXl6709bjuq7UhU0ZXG/5+VWbH9dbLqwo
pON6i08CpyrWTTZbxUE1IJfDzXwLBMjl49aj61h/HaGZlBiC+mv7HZV9LNRN
gtEkgSLA36wlGccE+I9dtUh9A/jDqe45oH94uHy7sgzXJ/uTC2WBjvMblzML
eP7EbP01B55/Xj3RMAR0BtqeZN4Gexmt0chIA3t5tV59Jgrs5baO7uIgfP+A
juVDKnyvVvbIJBzsJfNXiOMQ6DnPE2ebMNDzEYEAKn3Q8/o3l5ew7s5LCOcL
h/r6OVfYnhqorz1T1DJwfMAvwQPr8YZcVWasx2Pn/3gNgNzVb58UCQO5K15x
7w8Eubs+NmAgoN6XJN/ByAT1/kpCVbk41Pt1J6I67wLOS0uLp7oAZ0zkob4a
wCnc/2AC1ys+e2jb6uM6cKLhxUOA8+ndLTm8T1H1uG0d7yF67LyljPeP3gjy
/8NzaJ+EYjTxHNr7SisRPIfW9HX/Nq5XOLh5JOA5HPfSm254DkfwgEEgxh1T
Cn/tr0Dnlma0ixvQ+ffokSAr6KH/2bWgdbAX6XQO4/9AD6dPhodj/fiGU3gw
A/TEdExkKQT0hEmr9lkn2EtTUXf0abCX1NsaWSFgL3svvdvA9Zz2sq4JVvAn
w2dkhnjBnzw+m/oSx1fE7t1lg3Fpfz4WARgn22uXMgZ0MhX/HS4BOtOfPv/r
BDpyIrZTuP8Sdtui9AHwIdyc3ica949qd6b/g/qLWnCW0wPqr6B5280mqL+U
+S3Fsc8eExHz5wrQf+ifZhjThvezDC9+hfFDUWr6XUCnI2vGrAPo/Lb6mEat
PkHI/R6WUwF9UxSdiosBfXNJnbRYBH3749F3qQHs9GtyCFMB2KlcoVgn3rvc
Y5j4PB/oV2W0Hx8C+obXdm/L6U8QZ/2WJzgnpwhh8cFfXrshH765j3IE4qMr
pTmLBtQRnWw3DuG6qN1bn3Jc33t6wCAC1/dymVYGcH3Pym4rCf3MFUXlFryH
UnLpi+wh7Acr0k4rBfoTb52q4AT6Qyvz6EcO6I+T+m3bfLAX9rXCKVyveBpi
8wjvMalPsFR64jp2ZoEV64tJgrwr/99/PcBXPqeDVXheJX2ReAx6yzNkXTMF
ettb+MlZGuKjvlBb4GWw92P2yxu5YO/2tw5q5gD+e/3HC+kAv1r4rw8i+L5J
m0ge1k1D4rJBWDd9dnI8inVTzsVvLJiHyyvdU8A8fLw7JQ/z8Nt6umE43lSe
EY/jDdIDKTg+dJ3nC9Zx9IWJbljHvRaTpLoCdJ4d47I3gnmbX5UkdkBewbDB
GC0P8zqeftq0BH6p/dpXPnXAyam+ydMMOIXbnjBUwv8S16icroL/JRN2p3UT
/hfvvnkNXC99ekHsCBXwwbdvSmEN4qzJWCp/Ia7r8kmU4v2vr8dEShuAb+de
vWnC9c8h7d7QAODzDyH1fdXA56P3ik0msL8fd/kpGpDL1J7h5t0glwqS3TWU
47mxu64ox9ttpmsoR8sze580AH67E/nxh4Fv6sbZbLiuyxpxRIYT9OTwl2Ms
TKAnukdtbcNxHXj5ZiWe6xDimYyoA73i8WJqXAO92v3y1xS+26Jyxs2kDPTw
+1JuUjzoYRbLhDgV6C1D/Uch3P861aj+C/e/qMxJqT1AhyHH+esI6Hk/uWIf
CfT80nsNOwMYN/ksxHke6H/ob6zxA/qTQWvCNG7TxKrH6WiNayQionrDdwX8
nlflFSq09/3rCczZYO8BlWmyN8Deo9StmcnAvxEjKxJ5V8H+PdWsDrkNE89a
K0JwH6ev4t7NncCf8l3nrm8BTr6Z0Pr/j3PsGMH9HTn5W+dwf2eKN6bqB+QJ
bsyWB8mBTiM1Z2kS5Anm904Z4vrYMbu3Drg+9qfFzhnXx7a79vkIe0wTWbrv
TrZEkghVX8YppRvDRAYHrTDuf81dffwE359d2TAjw/dnn9Jth+D+V0vzo6Lr
EB9bEs+Z7YU84YdO3Rtcp2LmJRniOpX6rddhuE71gOe4G+YPJSGW9dg3w0Eq
igrzh43phj7c/1oQfJCyA/ggJtbpUg50/gye+HEd/JVfiCDNij2JGJLVOHnW
cZgwEfORwvxtXp/+0F3g/2mqbMFQ4L+2qtexbvBXTYnWMa2+JKLs3RErWfBX
fBkCDegPF9jp/NAfXrdpneUHufA8DmDEdfIug5rT6D/5rskyo/+st1oIw/do
/FKEXzSHkgiNHN7fuyCfOcbxZB/mnw6LoiJq2PdAqJt1N8jL2lPxLu5rf640
PLHLAfh2UpV0GXDa/ynZh/vFvPoqqxMQFx4auxunQ1woS2sYxn3eQT9f0UvA
h8c+lJrNkI91zbS82AB7Oe7FfO8o6NvzLzQpuP9VlnNmmwzsZXF1grEY6Uh9
FDsFdGqeGpfjO86J292HbYFOZu/k5y6gM756JmdWEd9J+eOMeXUk9es9zrju
ZP+1mw3y8L1CvokhmFeYV3bhuwNHdv1WHgd7/5z0RUkZ7F059871DrD3q7LR
QkG478BMZXEE/m9P15UH0yCXI8aGn3G/2IUng0If4lr1lPGFl+0kYrmhOBj3
i7cDxmrRXhJrWoTRXrxC20Jwv9jyw+UeetATp3DJSW/Io/LSrD9hvnTyfLEs
vtuYovQhEc8hPN336Csz8J/WoGfAH+xF1Ktslj9omEge7ubHfHLydrk05pMH
/35Ox3wy717Ek2nQ87vHfQu0Qc9nD93o6wI9lwlKe4HrkHay831qIN97TC91
LuA5tLh9kZiHS/A2heD5gYBwR4WzMC6zK+dZA+QJz6bPJCXYQvxuVZg0vzJM
KEhYT6O+HWdeUsd6QdlGqdYf9O3ltN7zf5DPsBgx6M1CPmN3yuHxU7DrMkPy
2/i/XKv0KAvgf7G5Nq1gHij8ifIF3vPtsvhDHQpy5E9SKPoP5Mjjlhtlj+tU
V75fY4X6RaUy4eo61C9ZNhlWeL7iXvfdE3fwXe8V4zm6j9gnv84Sz1cIzsUO
YB8M6XdH1yqQTp2e7H3QwwUWtzfnQA9VgrvdCkAPm8d1k7B+4c9/XVoA+K2f
KF9IBfwTg57fGsBeAh5sHAwDezEzWUz66zNMFOpOpeN+q6t9lv4B8PPZagOh
R8DPF/y764/nUi5XHQpnhHH+33y9/DA+f/1yJdI5qVLnGwp0OJiv7fw/nbE3
N0/3Yb0wIpj1dJK4U+ApkfKWRDQ7sBnaOUwTp707BILMoQ4Xpc1jthom6iZf
S+zuJRH2jO/pQl91E8Gp5uTm2MesdeXhp18kYsnyrq/MaDfxfNDn5U/5HiJp
TKs1HvtmpFWJ5PmQiOwbt33kYN7LyTN12v0kwl1lB4tkSzcxxM71wU+wh7j1
PK3UCft7J6dfE17oJhi820ZeEz0EpTcT+LZp4sTNk5c+gBwXY0sqokGONFv+
Oey4D6V+rPkZ8H+1VrdHDfg/bTpb+wL4zPE+LvY38HkklIlHAPKoHVabbo8H
SUT/unHBWF838ZRqIYNcsocI05Kavg/405+MpHuOdBMc45rpToBfnPJ8Vg3M
q9Cj5dcTSCJIva/HqwKGiSlW81I1+P62dfvFY8PdhLGbxcViuR5ibfUa7xzg
d31+OZR8sZsISdsTN6jaQzCcs3sXBfayuNzLdS2ERPwdnsgbuzZMMA8UH8P9
+r1/Hc0SwF7iaNpeuoG9dJolPHUEewl8mdRH7kIiKGyIq70u4K8ccs/huVzL
MzEc8lAvU95Z0hgH//xyiDiL42pNJ6Rx3PL7mjWOP01O+GmJ/SrLFe2/O0O8
p7AQfg50/q0KGbjDvGN7K6l8YN50OveHp2DeU2QutYizPI97MQhwvjlEG4I4
LbTlfGvgf/30uy2u8qeb8DPWOnsF/pdsDdfDrZ8koumT6pbGr25CSfj8H1bg
w8+Q04vPsY5QSbzWDHyjLd4d8hT4JnG5rwj1xG+HZyrqycunnZ9QT3xrvfd/
ArnQOmh2OX/rJphHZp6dBblEbs6GfQH8GqLen35BHV10QzXTF/xG9oP9aVhP
bf2S4sF9KOGytc9K8H+XLiXXYX/dW0VLceRQPyosVAQwQ95u5CPS0TMNeiF2
cf4tTQ9x++/ucZJBDxGzSCaH9488HLQk8P4Ru9mkId4/8ps549oGfDih5Xn9
EcSXQzZRHmPBwwRl45eUO78hH3Hw5STb0UMwO8XOvtXqIQw0D3JWAn6RYeVN
GsBvEq45dgDwrxxgrd4GPXT1eG3I60Qivq4efifnPEzMdQykaGB83D7Tmwb+
LeVuT+InXGcwMuZ2BPwDA8Sm43USEf98odAgbJj4FB6kiPkwncnfA1h35zEe
0OCDvCtGnPou1t2/hxddcP9r2kx78zDe+/YpdrYH/HIXOh6NB5MIFk3Zt9Yg
x1RH2914/pbjlc6QJNiL9LiZEPZhkJB5c5CAfMbgTYZWnRuJWI9op2B0hzri
M4kH72u46NoocAGfWzaz7b07cf+W0MR30BTPPlGOezlJfFLnmMkFv+C3s6a/
SA7q3+t71PuGpogQiZJSnf0zREW94rVPeN5gRaGqHHDWXO4sGwWcDpo6JtjH
lTwkfkc10NmvouX3DehsnUlown6hs7EHA21ukIgn1wI8hMJBb0v7e7FfjU47
f5Qq4D/buXGrCPBz0E++8wA9kf4TxCsI9uKic2JlGfR8p4c1DearTqOjJ/bB
vE25olY0MK/FDHU09qfSlHPN/g/GZQ/s7qbDfcPJXYGWwAdHIaXzxu6QV3y1
GL0HfIgP9dvE/hvF9+imKkBeDB50NnMgr32fRYRvYH+nK21kNmAvVsyvuj8B
n6Pulalif8glbk5TfvBjkkM5jS/BjxUnGXmvgr2Q3L47S4O9HON1f7IP7CVr
IsE4C9/hCmjvHAA6mWl8RQqgb4E+KV81JiD/4n19wn69myj9d1piRaOHoL2b
96wU6JdZhFdzgj06eibInwV7NN5JulkHfIjaF3TeBeyFPtPJiQHs5VvcuAf2
t/kocyrYBeTIYT779QfIsfbL0PgWzEuSY9e5DXXuVN3vlWLIo8i12jm1gT6n
2ZJ5yXw3oRMXGe4F+E/RqK14gN+m3B4XfA9+e68M5/Nu8NvSfp6fsB/aGdHX
AQVg7w4zTiXxYO9qOWOXBgA/K2vLpVub3cS6XugjtZM9REnXENkFsJfknGe7
2nuBDw0/489J9BBs8U+O8AP/66NObGuCHkaR6teKIa/ucv/LhO8s6P7HcN8W
8uHuFNNPRyAfvsyzvRkMesLe7Bz1AfvrnhhdyAZ7ubMjOhXfxeMalw/C9/Jq
O3QU330BXG9WE3DcLSH0IY5vfY9zxvErrGaHQ4DO51vtui1AR0C/Je0h0Al3
fE6D+5iFT5fP3IR5T1z5YmEG83pvlAdJAU6R9snH4YDzjdihnl+As3+T8Wkr
8I1jyS0uBORSs3Z3dxzIxctlRO7oPInosGwSWmDpIS5r2jw/da6HoA754of9
D/vfvTgvGUEiztoI+/SDnje4XfwdDH6pwPH+AwbwS6o7E55JgF9adrAwVAU/
JiO1w6ycuoewkp5Qz9PvIXRpiozpoS6IoIh7aAp1wRYHG/X368OEUI7bKgH4
PzOFdOB7f0YTGg343p/jdqJ+H+A/9iSHydGTRFCfTW294jlMyCWt8GuQSETs
t1oT+aVuotzEmTvteA9Bv8Em1Ahy3OX0RlUY5Mi+thBADXK8f/W2Fd5n2cPE
noT3WcZbtObxPsvBr5ocyoA/xeaaqQDER/Jn0jIPQc9rDtRWpwF/fkTZX+4B
u8i7leElAPwhvRO7jX13i709lHICIO/p+lRS7D9MtKsHtxSC3HNGaMLIIS/t
EZ0rsoS81C2u6aM96DmD/y6fNYhr5a70Ap1g71y9riPYL+iUMUcY9gE2MSU+
YB9gR5M2LuwbLB/1axr7Bu9Tpa/AvsGKWbTTekBH+em5hTCgc0ig3OUK0IlJ
4t+B/bTJ63M558Defwqx/8F+2rkWEuXolwI/nmBHvzR6UIoL/VLcf5ruGI9u
OoZKV4N9dYXyqahAPJKmylbEdVrvHTrfcJ02QdfbkRvycxUK0XqsvxjEPpzG
+qu1ku861l/FKTwHsd84R12bAfYbr+QXSRMAOvZGiyK4bnyfvDCEAeJ16JAg
G55DyFKqHD0A+EOp/pTcg/iSuPN3fQbEl+vZppbYN2bD4as99sHr7m24hH3w
DpzKsLMDPlPVjPRZAZ+Vzrqm+QCfbz09lobraeqvlKwbgD/96safzkIeZWqf
+BvHpT1GDbA/ubKpKD32JxeUyzbyBT40jseL5IO9HGfS3X8d7GVXV+tj7JcS
XBIqvBe+nw51OmsLfOuymOOQAJx+ib9ObTjh+80LeouA04I+/BS+w+5ht7nN
Dt+P8JMfD4DvxRNZ8jG+jE931MVAXIhfH894CHFhbE7nDu6z0w2fmsb9rzvD
V1Rx/0t2cerMMaCzWTx9nATy0tmzV0ka35/qmVXD/t4MhY9qsL/3mdigV9jf
++ulxjzsKy5V1nAY+4ov1m+VY1/xWadzdEM3Rojj98sPV3pOEKLMlQwKKrOE
n8OAbhnUTeuuR/5G4vvLnW3PJKFuipGSssc6cdpE0RLfJTQqygvHdwldCjsC
bWDc/rerQfCLSYL0Na8wtYdEzLzmZ34J+Pu/+e8PBvxUPov7cB+ngCF6fQD9
lSUp/zTEo4UTBS42EI+MuGLTjGE8cP3C319A5+0ep3N4zzwuR3QT7+3e6mr6
0AvxQjfuhrMM2J18WPIp7Kf9Zt5kggr46XW97Zk5vkd2rd0Z+3zmvGyowD6f
/5LCRJYhrq1K5h9E+c6dv5mHfZy4rnw+iH3m9cJ5x3F8YlTcAuXe3VkpgHK/
l8Ln8L+Orjwc6y0IK7QgJEvdNkuiVPalhR9ClOwqUUJKKoQKLbZSkSiUkCQV
KUqLsiSFhMj3hUokW/a95Fq679x/z/M985tvzryznHNmZifimewkfzUt5Psh
Sbcrsw4g399l84vqDZefnbdBAfr2eU7AgkTom0P1jiyquzEoClwbBT6FTAe/
UN3Nggvbxgkvfk4dV59Abq2aZj5roefu/Vw6hJc/W1Y+I7zsSn+xjvCy56Wj
1gvILblvpQvdg5TvX72c7kFUrvjmEl6SMg/K3QKdxds6xCVA59nbu+qEl1B+
Y0XCi/ri+KxS6r+klp6yEnKYy2nvbw+7PbP5gd5b2G3Z2Ep+0h/pV/N4Omg+
aXjdVVXI7cFQVogN9SkNTv+cgjjqZ47/ixXgX7LZbR/Zkxu87Hm+1G98Wb/2
L/ye9/tLXWmsi6lHmHlh/dDg/tu9WP/59FLJXuqnLd28qQ50Tp7XCbMGHUb0
aCrZt3nKhrs58X+/5W6ucoTcPrqFXOGGnFXM6uoL97UzpXPzTV2obuVydNvf
2nbmMj+foSPyrx559R5j5F+zDeu138Pe6vcHRyxGXF2sM43Ngr+wcjPwpLl1
BXefpMUh/3Iok7Zejfzrb8Pinxvgx+fbSHFxwo/7XMuosIMf3+sU8H0P7HPk
23/uc8I+J+5eY5oKv/9m9XTLH7AbfAsvDl1A/vXHJeiYNfKv6hprY5pn2rxh
j8w5wrvX4NeZ0JP27GjVNPDvWaJ06ibyr8Z47ZI25Lmxe9WdTOH3U4eCtyTD
76ts+7hWC37fasa5Yh3wH1clLqIOf7HbwHV3OvyFd7jR6A18N2fbwt+2iCsu
WU8ImCKuuLIxP6MFcdSZgFkb2ppYTMDu4DWNqmzGKcoq4TL4T478ez8L/Esa
2MYKwb9scxgIoz4wgl9vr8ynvu6dhiLFsHt1pyTdaB5TtWNpAc1jqhF+pPCE
3jUl53Hag//zese/WkDP16j9zi+iOvp/3dzp3qqh3LmW+tLkFyWOU78a+XKh
w7Ru2afcTuszUgIF6b33jtIHadto/pdKv8tq0LmgMqiSAjqDxXEGDf/ffw1P
JeO7Bx+4yl7Gd8/8+KXsCz4VWk8uywafKdWGXwrA5+TS5OuXIbe4fZ95I5G3
HrzcnFgJuWkIf1345Qv0LqQxI+Edi1kaWikXvJzNTBip3LhO/j2wcrq5J/JU
6ZJIL89mxnelutBd7LvW0N07J8tYTF/soLSuLJthz/PkuQe7WPpTxSungMVc
FZI7/FIC+W/RvH1prj3Mx0U7Epc5I7/ZHqU5bX8zM75f//wF8J8R2lbFht4e
z3XdeAz4atTiCu2Fvj31DZnU84F/2Xms5OZx5H1/TcP0sS/8fFnnbyGe3OvG
//wQ9Co8c9rFeeCn4uGzM26lyJdjIxKmQw99JB9l0rmBO6fv0xTobaZNHz+d
G5RY9q+fhJ4k1MSrfoaeS1YXrdHTYDOtjzn9pcH/ojbbzZ3ABVeTZHcicDGR
7yQxBf4FgmJOJwFHFlwLLbYAR7LftDuoD+fOF/+oNz3qYiS+iNqqUF35UJvh
dqoLHpetiANOO3aqTIoDp4LySuL0ztlCf3GxEr1z5i7mNUD8v3xW20m6R563
P5uH6ihfHB54RHWUtmWtD7dhH2+7jNgtwj6uP1psuxb7GF4xHEJ1/TvOqs+i
OUqTij930RwlCXbWJpq7xA5WcbwN/7ggaT4vzV0S5E9iU9+80YePtJWBL7GP
duOx1Fd28lgZzdmU0uJ0T4FfqBJ/OruM5mxWp8qrrutgxJqevaN6yabzJvft
5vUyfPX1ynSuvuxiQssrqr+oKlP9S+80IiLfU1+CsKcTA8WgI/pxi/lv0BFV
zs8lu11ueMOJ7LbBh3NTZLeTFs9UpX6Vgvkuv9eD/7LNnNcfgv/lb6QqrKm+
oDLn3Aro+Tervpok6PncF3d8qS5yRdSW2VQX+frTAh2qizyfKNG/jfzFcGfq
cqw32PfyqGE9Kfpk906K60KWqechHjPlnCYYR31H+Ys4aB5N0vyc0R7sV+gK
NVV9fPe3zuUbVC8ZJtkVfx1yvnm0VP4u5Oz5y3nmIejbHOGvL+RgBzaMaN9+
DX0rqt4kOA670aN+QmEt8q8dwilyc2FnDunds6T8K7FcpZTyr/yND5Mp/3JP
Sv9HD3GvxcYSHkfkX7xnNV1GkH8tYtbXPwT9na8UxeYjzk/+Za1oBjvjaMZd
9RD8307U+ySP/Cvb5+Hvb27NzEHD9ukvIWfPvTxaNA/FImYyIR1xwsslz2QH
aA7RzrFVhsi/WDP2hXgj//rhdj2zpRX5nUX1ct1+FsOybdx6TYvN2L12ODQH
eOmpLT+3A3j5MNyt8wt4H995RpHqizM+i6ovgZ3UL+c6sAB28v39pFde4H+W
l+TCORMsJjunzdjOgM14BAorDjYgjgvQEDSrZTHNF/QrPeTZzI715TpD1C+I
I2C83bWdyep7sG069LD0jIbSKci/anPNoeXwp1fqNd1bgHfJ2UJ55lRfXKjQ
FQi8jBdv2M0LPTlnPPMBzV8+8vp8/yD+b6djR30Y/PJLgzd3af10H0toCOvj
daE8F7HuKBUYaUZzHzqXp58Enc/c2lUzQMevN/eyD+lP3LID+lR34xvnwFeG
+KVu+PwU+BQJXDFzCfAim7RMTon6zxu4OZ2FnfzTGaC0F3ZSmGPb5BPYSW5u
84ohyOHQOLdFDfKXrz0ye44gf9m42/U4zf9anXL0bATkNv3SooYTkNs5h0oL
NchZ6ueGvd2Q81hRlJcJ7FJwmp//KPZlifelzRewL+f1A4PeYF9SBi6HNoJO
oNNJn1Pwj+vjpG5uhn98+1SGi/KRWSG7dgQBv+u4FAOmwT/Ons/Zdxf8/6PZ
phcD//jo48/Wb/CPLeHbah+Qna/o/TwI/p+8KefiUWQzayyvRK+E3avklapq
gd6eKdAs94Hejv9UaT4JO5n2MrJnC+zkDKUtXR1Hmxmtqk0/b8EvGL+4511b
wmKinrPf8UBPJmv8DvzFvh+9+HNpMPZ97ym56gjs+3JpuwumoDNX8ktiwFHE
ed1Duhqgs/NtF0v8M/ydtMbtxoewe5an96wvamcmHqzS1Qb/127PGy3djzhi
/G2vMfDOmZg8TH0Xx+w9Geq7GPK6+95v4PTZkLlMLNYrbS3ajmB9unVI4wjW
57k7ainSfMabRnfPgs5Z6x53IdAZEe+SILyzN+ctILxP6/gqoIffL6r+lEz9
BASCk+b4AKeZro2aP6AnYUvGlvZAr5YsOjk4CP/bcP2n/k+qt3p2hLOO7hO/
8fVXwM/6a3RHlcLPbq8oX/RJq4OZ8nzE4dLSzaxcPtFUJ4h4/ktadR/16d32
qv076PAk7nCrAp2v1ReMi0DnwdUh3c3g53zNbCW3d+3MU/1siX/Bv3vWESMe
6OFBvRZOCejhncCHktRfNLXFe7IOv7/lHHJyBfg/1lK/SQ96MjX/YtN733Zm
scHezEGfZia9WuMgxZNXZAuHaX6u7J9wUYonpSXTH9N6pd3EwuM0jzts6b0h
rA8FzjrphPxrd6Gl2lbkX2wDvfeqyL+UCurbKY7dfEXdqRl2VT/jy5I1+H38
yeu/xelcaErN4QX4/NMSYvQCfHpO3ZShe4py00zHiYwuZr/fkYmnxe2M/Vy3
zXRe5L3fJtyN7q2uLNFshL3qvfDl1ZRuB3NiJMeX6r9uaaqeuII8SHQg8iv1
OcmoTGSXgo6elsJXD9Dp/p39it41hdi9vu4POmLLoopGQGfNyIQvvSvTjRMo
p/sva0vFGHpXlvDq4r7XF1uYM/OvDVNdQ83X38ZU16Dk8kCT6iBKYsciqA5C
ttopmuogHp1r3EL3fXnHkkLpvZn5Bbshem+2fKG3gSzWfb4fFreH3BYW1/1i
0bzsR0+20P3X6YC7KXT/9ZoryoDuvyymLJ0pf/lzMYJDBfopqMkrfBv7VZJ3
4RPVxYjbLIsoAZ3a2LoUW8qDWMPePthH7tXSFU/gd259VxzMg99JdL785T7F
CaqJj0ao7sk36YAp6CgKzG+neUY6MqIKNM9oW3qHM80zahi6F0711Icz7kcX
UL/3CPlztrCrFc6yJtR3xSc3OIz6YYaNXP9uRf0wb8p+24R4JtZL0dLdqZ0R
n9and9a5mZkZPfRZEDiVnS94ywjy3/793NtS4HQeOzOM4klHmbKHL8AnV81M
+ULwGR27JJrqns4kRH5XRL7Z2rmlcD315xcfek33Rzax+ilzwf++H2n2UtDz
j0L7aqlvf7iiRzz17Z9dMiBCffsXW8xMp/NnfeXdP6RA5y07cCOdP7e0ZBq9
BJ3ZCy05okHnajtfShXoBNj+7ZWgd0Fmd9w0kH+5SrZY3EL+ZR/0xU8Tv9+T
sGtpNfTWo2CJiRidG1S9dbIC3h+FelWHwy9EdvE9FwHeNwv7NZBdtdv/N5XO
edbM/jXx/7ynnHf/40Xx24b/8fLJT/Iu4cXSrHwB9dfND5u/9A/o3HdyFfYE
HW7+Mhmas5wwd7sbzVkW5z+9kOYsi4xO7plN+Zfl3R4W4kaesw1SxxE3Hghy
8KN+EUUqXPepX8Rk0q1h6ssqffGo7y46t5nfzDxEHLW4759HNYijurMG66og
txaTEql9kNvjoAcqX2Fn5tkn9dH7mXOLHnfewf81D96j0oj45078142DNcDL
9K6OwDzqD7zeNApxbdTBA7lUX6x7h/cd1Rf75HjtpPriXRpz/7YCL36v65db
Ai+CNas/zwBeXqUJxr4GXvSa1exXAS83x49FtwAvNY01RXQvXP5u82G6F57u
YtNK98Jb04a8aG6ybadmA81Nvrr3wDGaO6+tLbcyEPz73+CspH7UKVIBYtSP
+q2rvRGdV1jPEjazxu8Llh646orfXznv/9K0lvTH12p2ThfjVZW72/RTO5Nj
cyHHVb2DubA6bUquqZsR+RC1oFm4l5GeL5b6Dvw/cA4cWAf+A+y4NHjBf8W+
zN9v9DqYdIU1rCngVP1OyUT8nF4mU9Pea0lQCxPaKvjY7Qj+3xIF8WStPmb3
rpFcWv/29ncPrc8q3yVC66Gx8e0r9DsYrx7OV3Lt3Yz+6oEmJ9Dp5PnRbhne
wrisa3uQge/G1ywz/b2hj3nwb+XkPvDJ57x810rwyeU9V6oVfA4I3QzbSvdN
8Sd6xPC/cmre3XPE/1pdG+VEc3YyLlSt3wQ5RMd4j2+HHC4PtQ0HQG7m96ye
k9zSBUVUSW6Zp9z+0D2IAaNwKgO/r04Lc2vC70VSPjisJn0+Ytm7AfsSUby6
6A725dqYSpXI5g5GU3hthDn2MXVeiMQz7OPIbF3P7eA/Q+PJ9cfg/yfft3e/
wP8ZA457pCdvD0q9Ij1Rr41yJj1pv7ImvA96dceASyQaeiXL88MiHXrFGRgW
ZvD/PTK/azT08PCLFOF30MPOiEGDj+C/qUbNivTW6r7cny+ktxb+Q9RfJeSc
36pX0POoHefm9EDPZ753lKFzjJrxu69mABf8Phf09wMXh9p4ymi+pNT0sL8x
wJGSwBZlXeBI+cLgVfLvFlKcPJ2wDyYta7i08fstatvdXWmejoP8vQHgNNtI
/NpB4PT25VQjOlfxsJOUpHOVfkf+fXSu8mqp7X7Cu/R4yhw6h9l2okiD/KZC
VoOeJeis+atcfh509r102TGX+iRzBCfRuW7ch6c9Xfi/jhY9+9bi93WWimFy
1K/y8/fzTrBLOxqflJTALi1OitejfqQfRZecuwU+Kz/znfkBO/Zwxjlzuj+6
OyNKQgj7OP/EZOVc6pNs1ytF/dsPKtd3U1/lBv9xxRnY92KDy8/pvt4wf0UC
1Uf/zJ4VQ/XRLb99FeheT+7BIye617Pbe/4u3es1O42bkn9R8nFeTv5l95ZV
DuRfioevFs2Bna/0jdTeDTvvna3H1Qo7/+S9br8J5Ny1+ztPBPmFzcynJPgF
CeGN9eRHtqyI/PqczuXeNE6Zkn+5nziX1vs9e8XzqK+yzY7RbVjnexhjaww/
dSSws9cPfipe64a1A/xUoFDyDopn9nuIR9eC/2Pqs2/KYL/UPLSFjlP8LN4T
8xB8lrEOhWWDTyHvjCv0rlLz1PADes+fZ/k0kd7zn2meHKI5yDGxIj8l8V2+
x6YnLoLOhATvIL0/rDhz1o7eH14Q69xD7w9P9Cs+pn3fur3okAfotCe+r+6s
oL5RXdfo3cuq5UrHVsLv17pUFnWA/73GK3bNBl6sbn4RNwZerhqv7MoFXtbn
fv1sCLzIPfEMvwO8OPGJ/BoFXvRlY5QIL6wA6zDCS1PdrDuEl4gXC1WoD5je
63eJNA9xtbWRLi/ylEjdyiIO6i+dvdrkGeTfmSLPv536H16K1aU+EuY7Uq9Q
ffF7LvNFVF9sdaz/N8U/Ge0GEqdBZ0mMEHsI8Q9HjZghvTvKtBTxpD4Vqmnn
zahPxc36/Y3CkP/a9oWyQYjT1L9wrrqAOM0iZfdzhvSnYFLuDfT2foz1RU7I
wcJ8aj3FgUc5NMSMEQfuWlNepYI4cNjNNI9w8Wf1i080j7XfcMiQ/GDEwuj/
8TK2W4aP8HJQsUKN8FI59ucExaWH+uXLyhCXrny5328IcWlJ0/3XFM+4G9tv
/0X7vnBS3wz79aTHeAE3+CxRTPZeDz4/OM3P3wI+/5ZPHqW5JBsGgvR24fcB
+4tMzxFeBsyUBql/YFrWv1WIq0f9h5xyKK6WM5+kODxdN92R4vCZ5+P2URy+
MnSBTg3FsUF9zz8jbr/WYS39GXF7j1PocYrP/fgNdZtB57hJRxgLdDxS77Ap
L/CwPdFBeUHFjNkT/+cFW2+lkn8PKwwW4IG+SfYa3TsI/sd631xdD/8utfPp
zKfIO/6R6clbh7zjSIL3CspTIjy56yhPmRuSVE55ir/trG7Kax6G8vtSXvN3
4ZwRymv8Hi1oVAEdvtP+bTGgM6bVGy4OOrMa2l5JQ09iD297mI+8yTx/JksA
OPX9e+og5VnbTQfnU561OCW2Uh151mXjbh436l/n5bdbEHnfMqv2eYHIWy01
oocnkcflVN8aE0ce+jNnyxk28rhVJbri1A8t6+KdGVXI++zcuz7tPNbMPFG4
NBSLPLF3sf9CjxYWszO5we8A3Rtmu8hyfW9nQv+Y7JX7ymLKD870LEVe+ck7
sek5+H+xZHfRN+ShXz8Kcy882MyYh3XG01whRcMK7YfQE+nsb8rrgF/+IHbO
OPTke/dTK45T0E+P6VZ5yHMlXq/c49zWzlyS5qyZN8hivPlbxLMYNhPVaLDh
MvWRduv7pFiG9dKPz4Rl2Yzzlu2RNL9YXVpkbC7yZTeX+eq9yLs1Bd2mdncC
3477WTZ/WUydbLjlLkM245qdvqMR8skwmnbz9hcW8/tLxsRR8C+4bbsDP/Tw
jILYXGfo4abONW3u0MNYjReiNP/o5WajKg96t1nnnKuPvEA2lU+A5kIK1ae4
TsAvyF78VHUUesLX3uYdRfMmPuzP3/iiixF5s+D3KPDem8frTuuBebGttD7G
07riD9bT1Hsvu5G++S1V5IS+LTcayjoBOmqHbtUfwncf6wzWRlEdwZwhbm98
1+wK/yfqh3ZFcFYT9UPrbbNyon5oldpsaZrrbZMX2UdzvcO4OB7TXG/ZvT83
lnfAnrXs2b1pksXcX1exYiHNieNI30P9DwsfJl9JONHO5DaZqpyD3A6ErR0+
CjkLLwmur3rPYjQc/1X5IsNmLlaWja/DvpxXFrtxYoDFqLkYZlhjX+K2/dGn
OWieVhYaJYHtzEjINL5m/2amz6c5je5lHqx2evGM7h+7lxvRu5q+670y1O9l
xD01u9WtnXm/oV3Kz72ZcZJ3VJzf3s50/QnpihlmMRFzi0Q1dMC/8Krc6+D/
ImMZGDPBYr5kjUhlGrAZp4uju+i+WCHt+mm6L846ebyR7osXDWz1cYLe9rHO
izxqZjFvW0/Wj6ixmR3/9ma8Bf/59+cf3zfEYmIt68v8tdnMperx5QGQw4So
jXEt5TXxyd1f4XdCE0xH6d7z4t6LJ1cAp7zshDUxwOkPrU8PPcB/1LTwosWH
gduaMnYf/Fpf+U4Rc3qnt96gbivs6q+dH6sPIP7ZktN3gdbT9l0p24x1Mz3J
MmesbyvLCjChfmKux9mzXBDfPJA6eAZ4f9abFU9+LdY9XV4a35XLZ/tHUL8L
FYY3Af+3LfawYBX0xC+o/PMq/N+z4dt6KU6+X2Y6NhPx5H3Z0aitiCdFlXo6
KH+3ur3XmvJ3CcEYPsrfB9f5rZ+1roOZNI1bYfajmxGVlpU7Oq+X0dW+0Uz3
g1tulwk1IR7jtc7+Mh90wlKsVOUon1LpO7EF+BVPr+B4CTqRmdyzaX5xWJZ4
HBt6KNLUM1AFPZy5XUGeznXvcwQv3gD+lW5mVtC5bv+Bd2VOkPPYqo/Lt0PO
BpmfPA5BzuwFs2qovuBvv/INJzq/Nbx1LYTixihvFxO6T9HpK7TH+tm5Y6cD
6Tz88LqHdP81fatlbS1w969rjCzdf21bOyhB303N1zhG3/WY3qWTQX1KX8od
oPkmvte+r1kHu1qc/e+3j4gbX5uM2csgbt3htnP2QD6LGTfn4LotDjsjceBh
L/Rnz7inTVIrixGdWaIjqcFmDD//60b3X+sTe+Po/uvBWVNDuv+6a3Vtugjw
MpCcX+wFu+ql4vmBG3gpjX2aqwp9u2hT98YFeIndJLF+M/BywcZpbTfoJE3F
JazzaWf+JLIKrx5vZgrtGR6a1+A1zq3cDf5DSzfKxSAOefot9Rf1AeN4wvpL
fcDeskSvUR+wfy5P6aaC/7hfJ2peFbAYxq1INE+CzTjqK6y7Cn7WeUcWboSd
FCi/F7sUdrJhYnIt9aOO17xiYuAJP+qfv9HVs5mR+pAb+Rl+4cpO69y4dyzG
/M3BiUD4hUO7Zq4Phj3ZffpfTzv4kcOZ6YaZsCf7jhTqHMM+RvCu7k+jeRnh
qvZPsY8rpwVrUp31jeOcljSvIULjGDfNa+hTNkyneQ2e91azjKHn85cuDCiA
nr9MPRfARe8Vtc48NqE608HyUAHq25AQdJrWXT/xFND69/T0BFqPTnsxl/rP
f9cIMV4MOmt3rVa9CjrHfSO9qP7oeIzv0nh8NzFjemEIvvt57tvzFE/Ofrkh
LRN8HioTs3kJPjlybSsvYV/+lI/EpsK/1D5N9OODHWhrD8qvboL9fMJRldLE
YkZuPJuTrcpm+Aby3Kmf8OkuTSlj6rfPL26mAzup3HxjQAt6IvFFrmsV7EwR
x0XFO7AzPSoydWvpXvJVTY8V7DC3ZvAGAcjN5PvuTHqvO/9tVosN/GOl+w7j
NNdmxt59ayKdL6leXfLJjvLoov09VfQ+ZIFIQQPNa7ii2OELv+Yh6h6yCf5x
4sfJcurzuSqHs/wv9OroO51f1Odzh+XJ97LY93xt9fc50MMNrJN9CtDD2oy6
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
Wtm6
     "]], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"i\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(q = 20\\)]\\)(i)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4181.}, {0, 0.7512954594079917}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.631351984397275*^9, 3.631352004353283*^9}, {
   3.6313520434850388`*^9, 3.6313520816748447`*^9}, 3.631352172051662*^9, {
   3.631352213048891*^9, 3.631352234297309*^9}, {3.631352368368655*^9, 
   3.631352378032864*^9}, 3.631352495318509*^9, {3.631352574072061*^9, 
   3.631352640326291*^9}, 3.631353467882312*^9, {3.631353539680138*^9, 
   3.6313536007809*^9}, {3.631353754215231*^9, 3.6313537982159986`*^9}, 
   3.6313538494399014`*^9, 3.631353887173585*^9, {3.631353921946563*^9, 
   3.631353985034124*^9}, {3.631354056660611*^9, 3.63135408099137*^9}, 
   3.631354174368683*^9, {3.6313542186497107`*^9, 3.631354266865486*^9}, {
   3.6313544641119347`*^9, 3.631354493442655*^9}, {3.631354540853017*^9, 
   3.631354595822604*^9}, 3.631354626286428*^9, 3.631354657417677*^9, {
   3.6313546905669937`*^9, 3.631354744570713*^9}, 
   3.631354960529114*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
8X92CusT\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"Max", "[", "l", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"l", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", ".008", "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<i\>\"", ",", "\"\<\!\(\*SubscriptBox[\(D\), \(q = 20\)]\)(i)\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"dir", "<>", "\"\<data/local_dim_wf_rho_20_joined.png\>\""}], 
     ",", "%", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.631351999133451*^9, 3.63135208089281*^9}, {
   3.631352168029217*^9, 3.6313521706050797`*^9}, {3.631352211309169*^9, 
   3.6313522326525173`*^9}, {3.631352363279351*^9, 3.631352374413712*^9}, 
   3.631352490301984*^9, {3.6313525350056553`*^9, 3.631352638911398*^9}, {
   3.631353452672081*^9, 3.631353466560051*^9}, {3.631353538519121*^9, 
   3.631353600273089*^9}, {3.631353752707183*^9, 3.631353797555695*^9}, 
   3.631353848660982*^9, {3.6313538788814287`*^9, 3.631353886579178*^9}, {
   3.631353919667536*^9, 3.631354080503418*^9}, {3.631354139220539*^9, 
   3.631354170451769*^9}, {3.631354217783395*^9, 3.631354266388891*^9}, {
   3.6313543361102257`*^9, 3.631354338885635*^9}, {3.631354478953772*^9, 
   3.631354492950282*^9}, {3.631354533688389*^9, 3.631354623703113*^9}, {
   3.63135465660299*^9, 3.631354656951796*^9}, {3.63135468896952*^9, 
   3.631354744103674*^9}, {3.6313547802532*^9, 3.6313547824720716`*^9}, {
   3.6313549724443617`*^9, 3.631355008862361*^9}, {3.63135504066963*^9, 
   3.631355108942649*^9}, {3.6313551432802*^9, 3.631355208972138*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxFlAlQzGEYxv+iFMbUJBnnWmWWUaNCq6Kna9u1K3vmahzJMVMkYYjJX46K
qWGMo6YG5ZhxRGQRsm5KjSOtaXZFJFo5a0VYGft+7czOzrPP+76/73u/9/tG
xierFztwHDe76/vv9//nc+g8Saf+2+13ofY/4B4ivJNSSdoZacGm3fM/me3a
Fca5pWN/GMgfgMeBgj9Clj8I7Z17Btzq/cKuh+JEddkhq3etXQsQ0Bx3/MVr
qieEOXHiw6SrlO+FevMW96YHpEfDf4W+/FETxYsgV4+oXHWR/LF4Z3m/I4Px
xyF83lXxfmfi+2KMh23oqfHEHw/TlZyNXxnfD2c1pxOcRpDvj7nHhq/o1gGo
2yhO/8DiJ6D+Qqp7d72JcBuZfqmA8Sbh+2r/wX3Z+gPh6m0tt14hLUbx4aTA
hR+p3mSIDjad+1BNfhCetRXuT2b9DUZnq0ucrZHiQ7A49+0BN9bPKfDzuSd9
7kT8qVireVleeJ3yQ+Gj/yNNZv0FfI7r495QP3kgJfNE8dY75IfBL6NjSk/i
82FokKvkvibih2N9Y96Z58Tnw+Fevzotw0p+BCrqnuwyDic/AtkpRW2vSHOR
yJZlCcbYiB8J7S7kWrzIj8K3lT2S7z4hPwoxwQdSC/qQL8FSteJIwTCqL4G4
kZdEzdxg96NRK0TzQYrnoyEv8/R9OoTypUg43OuyooPqS3FN8CW1nfFlOFrT
wg00ky/D+fo8pZmtfxrSHfpxLWx/07BJPHn03lravxzZNQGZVaw/clR0pPWv
7UHno0Bh9puiXjQfvAJy/RfjNjYf0+Hi6CmpZuczHYX7/BPj2fnEQHeTN7H5
52OgWmpc85PNxwwUtLnlsPngZ6CxYtnKBjYfSriIFpmK7tvzoURuTVDWJ7o/
vBLKzNSodTSfBiUstipBK+OrcNTL46QrzQdUkOQHWR3pfvAqJPbbriih+2FQ
QSRb0m5xJL4asaqnvI36BzVKbR+3Mc2rUdf6oO9XijeocfF3fDSrx2kw22nD
Do540ODh5VELsqh/vAazPm9pWHbDrg0aVAqXP25m74cWghBuZzNbvxZhJbKF
h9j+tRj4y+FWBb1fBi0Misji7vdLB7N3i7SJ8XWoUkYkdDC+Dsak/F8WOl9D
l+8Wt1nK3s9YzBF5XljF+LEILzmta++6/38BDvi+3A==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"i\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(q = 20\\)]\\)(i)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 89.}, {0, 0.7751413987547908}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.631355009745696*^9, {3.631355041305464*^9, 3.6313550747128973`*^9}, {
   3.631355116829918*^9, 3.6313552098054523`*^9}, {3.631355380944625*^9, 
   3.631355401147006*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"tree", "[", 
    RowBox[{"n", "+", "2"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6313673233613787`*^9, 3.63136734238474*^9}, {
  3.63136738654501*^9, 3.631367391152446*^9}, {3.6313674395391817`*^9, 
  3.631367490882412*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdkbtqAkEUhg+pUloIprBIQggiIrnfjO7RuOstXnZdAynSCNY2eYB5q7Tb
WfsAeQcfQY0D4XwLi3z7/Wf+mfFsvkwWRyLyuXv3v4dnExS+vtdh4TfwH9Ty
se5p98lzDj4PPkG+qNFfYOX5FP4c8xfgS+RL8GVwBfkq+q/gr73/8XwDvkX+
Duvdwz9gP4/gJ+Sf4V/ANeRf0V+Hb2A+AKvNO4VvWnZNrN+y/a4F/2bvz4Gl
jf42zhPCh/AR+iMV83TgwdLF+l34HnwP++/jfH2cf4D+Afw77hcsQ/QP4UeY
H2H9MfrH8BM7r2A3sfkMXmLMx9hvbPszeEns/SnYJehP8P9Mrdcp9g/OkJcU
+we7FP0p+mfon2EenCEvH+j/5y1rrmW9
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 89.}, {0, 0.45454545454545453`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.631367486697061*^9, 3.6313674911921797`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Fibonacci", "[", "15", "]"}], "/", "2"}]], "Input",
 CellChangeTimes->{{3.631359098360523*^9, 3.6313591101515837`*^9}, {
   3.631359341801738*^9, 3.631359349255706*^9}, {3.631359583980084*^9, 
   3.631359584058693*^9}, 3.631359636524413*^9, {3.631359786748489*^9, 
   3.6313597992937813`*^9}, {3.63136335214354*^9, 3.631363352229725*^9}, {
   3.631363557280794*^9, 3.6313635596476707`*^9}}],

Cell[BoxData["305"], "Output",
 CellChangeTimes->{{3.6313591017139378`*^9, 3.6313591105378428`*^9}, {
   3.631359345318543*^9, 3.631359349424676*^9}, 3.631359584246236*^9, 
   3.631359636807761*^9, {3.631359787228859*^9, 3.631359799869854*^9}, 
   3.631363352461684*^9, {3.631363557698759*^9, 3.631363559920703*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"72", "-", 
  RowBox[{"Fibonacci", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.631363428174656*^9, 3.63136343043099*^9}, {
  3.631363519857856*^9, 3.631363532818325*^9}}],

Cell[BoxData["71"], "Output",
 CellChangeTimes->{
  3.6313634307029*^9, {3.631363520850429*^9, 3.63136353305448*^9}}]
}, Open  ]],

Cell[TextData[{
 "After a renormalization step, a given site i of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " approximant becomes either molecular (in which case n becomes n-2) or \
atomic (n becomes n-3). \nWe can thus associate to each site a unique \
\[OpenCurlyDoubleQuote]renormalization path\[CloseCurlyDoubleQuote]: the \
sequence of molecular/atomic sites that has led to it, starting from the \
trivial ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["F", "n"], "=", "1"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " chain and inflating it."
}], "Text",
 CellChangeTimes->{{3.631365638464468*^9, 3.6313658553137217`*^9}, {
  3.631365896018684*^9, 3.6313659003057003`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"take", " ", "a", " ", "renormalization", " ", "path", " ", 
     RowBox[{"(", "seq", ")"}]}], ",", " ", 
    RowBox[{"a", " ", "site", " ", "label", " ", 
     RowBox[{"(", "i", ")"}], " ", "and", " ", "an", " ", "approximant", " ", 
     "size", " ", 
     RowBox[{"(", "n", ")"}], " ", "and", " ", "return", " ", "the", " ", 
     "new", " ", "renormalization", " ", "path"}], ",", " ", 
    RowBox[{
    "the", " ", "new", " ", "site", " ", "label", " ", "and", " ", "the", " ",
      "new", " ", "size", " ", "after", " ", "one", " ", "renormalization", 
     " ", "group", " ", "operation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"i", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterSeq", "[", 
     RowBox[{"{", 
      RowBox[{"seq_", ",", "i_", ",", "n_"}], "}"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"inew", "=", "i"}], ",", 
        RowBox[{"seqn", "=", "seq"}], ",", 
        RowBox[{"nnew", "=", "n"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", ">", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "-", "1"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"seqn", "=", 
           RowBox[{"\"\<m\>\"", "<>", "seq"}]}], ";", 
          RowBox[{"inew", "=", 
           RowBox[{"i", "-", 
            RowBox[{"Fibonacci", "[", 
             RowBox[{"n", "-", "1"}], "]"}]}]}], ";", 
          RowBox[{"nnew", "=", 
           RowBox[{"n", "-", "2"}]}], ";"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", ">", 
            RowBox[{"Fibonacci", "[", 
             RowBox[{"n", "-", "2"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"seqn", "=", 
             RowBox[{"\"\<a\>\"", "<>", "seq"}]}], ";", 
            RowBox[{"inew", "=", 
             RowBox[{"i", "-", 
              RowBox[{"Fibonacci", "[", 
               RowBox[{"n", "-", "2"}], "]"}]}]}], ";", 
            RowBox[{"nnew", "=", 
             RowBox[{"n", "-", "3"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"seqn", "=", 
             RowBox[{"\"\<m\>\"", "<>", "seq"}]}], ";", 
            RowBox[{"nnew", "=", 
             RowBox[{"n", "-", "2"}]}], ";"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"seqn", ",", "inew", ",", "nnew"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6313589574343977`*^9, 3.6313590302798233`*^9}, {
   3.631359076279845*^9, 3.6313593102066603`*^9}, {3.631359391471822*^9, 
   3.6313594047194157`*^9}, {3.6313594593282537`*^9, 3.631359462513579*^9}, {
   3.6313595010407*^9, 3.631359521955605*^9}, {3.631359596818037*^9, 
   3.631359606915451*^9}, {3.631359651491734*^9, 3.6313596831724777`*^9}, {
   3.6313634417688093`*^9, 3.631363482904171*^9}, {3.631364258193778*^9, 
   3.631364318864571*^9}, {3.6313647703411922`*^9, 3.63136477755731*^9}, {
   3.6313648216112947`*^9, 3.631364823625928*^9}, {3.631364880726359*^9, 
   3.631364887510838*^9}, {3.631364979383456*^9, 3.631365063114964*^9}, 
   3.631365189625307*^9, {3.631365920448059*^9, 3.6313659926244802`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "we", " ", "are", " ", "in", " ", "a", " ", "molecular", " ", 
     "state"}], ",", " ", 
    RowBox[{
     RowBox[{"stop", " ", "when", " ", "n"}], "\[LessEqual]", "2"}], ",", " ", 
    RowBox[{
    "else", " ", "if", " ", "we", " ", "are", " ", "in", " ", "an", " ", 
     "atomic", " ", "state"}], ",", " ", 
    RowBox[{
     RowBox[{"stop", " ", "when", " ", "n"}], "\[LessEqual]", "3"}]}], " ", 
   "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"test", "=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "@", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "\[NotEqual]", "0"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], "\[Equal]", "\"\<m\>\""}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ">", "2"}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ">", "3"}]}], "]"}], ",", 
        "True"}], "]"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"iterate", " ", "until", " ", "test", " ", "is", " ", "false"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"NestWhile", "[", 
    RowBox[{"iterSeq", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", 
       RowBox[{
        RowBox[{"Fibonacci", "[", "18", "]"}], "/", "2"}], ",", "18"}], "}"}],
      ",", "test"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6313593548175507`*^9, 3.631359377913786*^9}, {
  3.6313594117545557`*^9, 3.631359454506324*^9}, {3.631359690461698*^9, 
  3.63135973514811*^9}, {3.631359802909075*^9, 3.6313598462067823`*^9}, {
  3.631363179392503*^9, 3.631363279471691*^9}, {3.6313633407225533`*^9, 
  3.631363374416654*^9}, {3.631363538755974*^9, 3.631363651635748*^9}, {
  3.6313638891904573`*^9, 3.631363903831791*^9}, {3.631363958727713*^9, 
  3.631363995191568*^9}, {3.6313640422321243`*^9, 3.63136407523914*^9}, {
  3.631364130664954*^9, 3.631364134184546*^9}, {3.6313642025548487`*^9, 
  3.631364238857004*^9}, {3.6313643282317047`*^9, 3.6313643556553087`*^9}, {
  3.6313646714374332`*^9, 3.6313646746510363`*^9}, {3.631365080271715*^9, 
  3.631365329826228*^9}, {3.631365484360712*^9, 3.631365488904374*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"aaaaa\"\>", ",", "1", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.631359412527648*^9, 3.6313594641044807`*^9}, {
   3.6313596912336063`*^9, 3.6313597353891697`*^9}, {3.63135980321035*^9, 
   3.631359846617881*^9}, 3.631363179759562*^9, {3.631363237253406*^9, 
   3.631363279751719*^9}, {3.631363341624303*^9, 3.631363374682603*^9}, 
   3.631363487974081*^9, 3.6313635390656557`*^9, {3.6313635728064623`*^9, 
   3.6313635882768106`*^9}, 3.631363653565649*^9, 3.6313639068415422`*^9, {
   3.6313639741651697`*^9, 3.6313639962953978`*^9}, 3.631364076085783*^9, 
   3.631364134811575*^9, {3.631364211045033*^9, 3.631364239766428*^9}, {
   3.631364321833871*^9, 3.631364357550976*^9}, 3.631364674984973*^9, {
   3.631364803768412*^9, 3.631364827534045*^9}, {3.6313650157930403`*^9, 
   3.631365025088328*^9}, 3.631365066207822*^9, {3.6313651794943533`*^9, 
   3.631365212300941*^9}, {3.631365309945283*^9, 3.6313653301054583`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "we", " ", "are", " ", "in", " ", "a", " ", "molecular", " ", 
     "state"}], ",", " ", 
    RowBox[{
     RowBox[{"stop", " ", "when", " ", "n"}], "\[LessEqual]", "2"}], ",", " ", 
    RowBox[{
    "else", " ", "if", " ", "we", " ", "are", " ", "in", " ", "an", " ", 
     "atomic", " ", "state"}], ",", " ", 
    RowBox[{
     RowBox[{"stop", " ", "when", " ", "n"}], "\[LessEqual]", "3"}]}], " ", 
   "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"test", "=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "@", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "\[NotEqual]", "0"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], "\[Equal]", "\"\<m\>\""}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ">", "2"}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ">", "3"}]}], "]"}], ",", 
        "True"}], "]"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"take", " ", "a", " ", "site", " ", 
      RowBox[{"(", "i", ")"}]}], ",", " ", 
     RowBox[{"a", " ", "size", " ", 
      RowBox[{"(", "n", ")"}], " ", "and", " ", "return", " ", "the", " ", 
      "renormalization", " ", "path", " ", "for", " ", "this", " ", 
      "site"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"path", "[", 
     RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"NestWhile", "[", 
       RowBox[{"iterSeq", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "i", ",", "n"}], "}"}], ",", "test"}], 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", "i"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "compute", " ", "the", " ", "relative", " ", "time", " ", "spent", " ", 
     "on", " ", "molecular", " ", "sites", " ", 
     RowBox[{"(", "x", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xPath", "[", 
     RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"StringCount", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NestWhile", "[", 
           RowBox[{"iterSeq", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", "i", ",", "n"}], "}"}], ",", "test"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<m\>\""}], "]"}], "/", 
       "n"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.631365497717483*^9, 3.6313655525347147`*^9}, {
  3.631366021053014*^9, 3.631366062827179*^9}, {3.6313663107352333`*^9, 
  3.631366359772159*^9}, {3.631366414716467*^9, 3.631366483644734*^9}, {
  3.63136659766249*^9, 3.63136663788874*^9}, {3.631366738769408*^9, 
  3.631366739728606*^9}, {3.631366973508018*^9, 3.631366976417078*^9}, {
  3.631367403046177*^9, 3.631367407829793*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"generate", " ", "the", " ", "whole", " ", 
    RowBox[{"(", "x", ")"}], " ", 
    RowBox[{"tree", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"tree", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"xPath", "[", 
      RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", " ", 
    RowBox[{"Range", "[", 
     RowBox[{"Fibonacci", "[", "n", "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.631366065705011*^9, 3.631366113753034*^9}, {
  3.6313667331815453`*^9, 3.631366774911353*^9}, {3.6313669288807592`*^9, 
  3.63136694505515*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"wow", ",", " ", 
    RowBox[{"such", " ", "tree"}], ",", " ", 
    RowBox[{"much", " ", 
     RowBox[{"xs", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"tree", "[", "12", "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6313673233613787`*^9, 3.63136734238474*^9}, {
  3.63136738654501*^9, 3.631367391152446*^9}, {3.6313674395391817`*^9, 
  3.631367458722416*^9}, {3.631368100231732*^9, 3.631368137207642*^9}, {
  3.631368215433345*^9, 3.6313682186488333`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdkjlOgzEQRkdUlBQUFBQBIYQQQuw7/E5IQhay/dn3P5GouYKPwBFSQ03v
hp6GhipH4AgQYpDmWYqilzeez+N4bfwYPiyIyNPPZ/Y9X1/By/NsfQb+B1P/
XR+eF432S2b+/e55GbyC+lX0i8Gvw2+ANz2/ed6C3wbvoP8u/B78Ps5/AD5E
/RH6HcOfwJ+CzzDPOfwF+BL1V55fPV/D32B/ADa63hr4uGYbx3wJ+AT8rb4/
C5akrrdJ5KfgU/Bp5Kcx/x08WDLon4HPwmdx/hzmy2H+PPLz8PfwYCng/ynA
F7G/iPlL+n3YEnxZ7zdgW9b1Dl4q2F/BeSs638FL6O/PLwO2IfJD3U+q2psq
zg92qJcazg+2NeTXkF9Hfh37wQ710kA+2Db0e3Hw0tTeNP39/b1HsEO9tJDf
wnuHd2BpY/42zg92beR3kN9BfgfnB0sX83eRD+/gpYf8Ht4vvANLH/P39fuw
8K6P/QPkD5AP78AyxPxDzA/vhri/SHMsQr9I94vgLfwE7CI9zxReRppjI+TD
R/B2pM8/ATvUT9FPxv/+G9vXSqE=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 144.}, {0, 0.4166666666666667}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.631367391371855*^9, 3.6313674594228888`*^9}, 
   3.631368105137619*^9, 3.6313682195529213`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6313682520401907`*^9, 3.631368274039323*^9}, {
   3.631368371367813*^9, 3.631368381532317*^9}, 3.6313685122646227`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "9"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "permutation", " ", "rule", " ", "reordering", " ", "sites", " ", "by", 
    " ", "increasing", " ", "x", " ", "label"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"perm", "=", 
    RowBox[{"Ordering", "@", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"tree", "[", 
        RowBox[{"n", "+", "2"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"wavefunctions", " ", "in", " ", "the", " ", "co"}], "-", 
     "basis"}], ",", " ", 
    RowBox[{
    "ordered", " ", "by", " ", "increasing", " ", "x", " ", "label"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wf", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"val", ",", "vec", ",", 
       RowBox[{"i", "=", "n"}], ",", 
       RowBox[{"ts", "=", "10."}], ",", 
       RowBox[{"tw", "=", "1."}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"val", ",", "vec"}], "}"}], "=", 
       RowBox[{"Eigensystem", "[", 
        RowBox[{"hp", "[", 
         RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
        "energy"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"vec", "=", 
       RowBox[{"vec", "[", 
        RowBox[{"[", 
         RowBox[{"Ordering", "@", "val"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vec", "=", 
       RowBox[{"vec", "[", 
        RowBox[{"[", "perm", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "vec", "]"}], "[", 
        RowBox[{"[", "perm", "]"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6261835580584307`*^9, 3.626183644508493*^9}, {
   3.626183676171571*^9, 3.626183722191566*^9}, 3.626183781822111*^9, {
   3.626183816030047*^9, 3.626183827677142*^9}, {3.626502475078207*^9, 
   3.626502499271872*^9}, {3.6265025384425087`*^9, 3.626502589859262*^9}, {
   3.626502627438632*^9, 3.626502679484573*^9}, {3.626598691082008*^9, 
   3.6265986912104263`*^9}, {3.62659905583876*^9, 3.626599055965111*^9}, {
   3.626604541376775*^9, 3.626604560702219*^9}, {3.626759456423348*^9, 
   3.626759463557775*^9}, 3.626759502409028*^9, 3.6267597483770742`*^9, 
   3.626759779130186*^9, {3.626759843498399*^9, 3.62675985900183*^9}, {
   3.626760751698635*^9, 3.626760751818429*^9}, 3.626766173062235*^9, {
   3.626766253686771*^9, 3.626766253796822*^9}, 3.6267715298587723`*^9, {
   3.626772752281295*^9, 3.6267727667613487`*^9}, {3.626772823898781*^9, 
   3.626772833321363*^9}, 3.626773006859661*^9, 3.626776746353821*^9, {
   3.6267767996656427`*^9, 3.626776815960644*^9}, {3.626777473399418*^9, 
   3.6267774933994617`*^9}, {3.626777736599781*^9, 3.6267777367036657`*^9}, {
   3.62677783840864*^9, 3.626777838551655*^9}, {3.62971055504248*^9, 
   3.629710587311894*^9}, {3.6297107232516212`*^9, 3.62971072329027*^9}, {
   3.629711802823543*^9, 3.6297118405675583`*^9}, 3.629712157017377*^9, {
   3.629712209691208*^9, 3.6297122113700237`*^9}, {3.629712268794414*^9, 
   3.629712269290574*^9}, {3.629712376716538*^9, 3.629712376858807*^9}, {
   3.63136845579088*^9, 3.631368472349658*^9}, {3.631368513806848*^9, 
   3.631368528141931*^9}, {3.6313686468020287`*^9, 3.631368646900277*^9}, {
   3.631368680158717*^9, 3.631368708448318*^9}, {3.6313688036327333`*^9, 
   3.631368859041093*^9}, 3.6313693579914503`*^9, {3.631369489255526*^9, 
   3.6313695169956083`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", " ", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", "wf", "]"}], "2"], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(x\), \(\[Psi]\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(x\), \(E\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Amplitude labelled by \!\(\*SubscriptBox[\(x\), \(E\)]\) and \
\!\(\*SubscriptBox[\(x\), \(\[Psi]\)]\)\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.62618368918817*^9, 3.626183694490307*^9}, {
   3.626502744190041*^9, 3.626502814889082*^9}, {3.6265028549743223`*^9, 
   3.62650287197738*^9}, {3.626503091284193*^9, 3.6265030914950733`*^9}, {
   3.6265986984568977`*^9, 3.626598729528029*^9}, {3.6265988098331203`*^9, 
   3.626598883816874*^9}, {3.626598926684988*^9, 3.6265989630503283`*^9}, 
   3.626599000668439*^9, {3.6265990405104437`*^9, 3.626599069433609*^9}, {
   3.626603992683824*^9, 3.626604212924157*^9}, 3.626604760848592*^9, {
   3.626759469653737*^9, 3.626759477078129*^9}, {3.626759588791606*^9, 
   3.626759603637807*^9}, {3.6267596394145403`*^9, 3.626759735656221*^9}, {
   3.6267604993753147`*^9, 3.626760533036696*^9}, {3.626760581966168*^9, 
   3.626760587904387*^9}, {3.626760632127334*^9, 3.626760648639998*^9}, 
   3.626760685711729*^9, {3.626760730528881*^9, 3.626760743407308*^9}, {
   3.6267611333901653`*^9, 3.6267612614961348`*^9}, {3.626761301014719*^9, 
   3.6267614221833553`*^9}, {3.626761452632259*^9, 3.6267614851430387`*^9}, {
   3.6267615156896544`*^9, 3.626761546275902*^9}, {3.626761582423127*^9, 
   3.626761623268655*^9}, {3.6267616661052017`*^9, 3.626761706900961*^9}, 
   3.626762099911704*^9, 3.626762162477565*^9, {3.626762195768537*^9, 
   3.6267622291914587`*^9}, 3.626762262040223*^9, 3.626762300120229*^9, {
   3.6267659916342287`*^9, 3.626766041574085*^9}, {3.626766122645426*^9, 
   3.6267661361316633`*^9}, {3.626772538056816*^9, 3.6267725844699793`*^9}, {
   3.62677676156988*^9, 3.626776774689362*^9}, {3.626776807953587*^9, 
   3.626776832538534*^9}, {3.626777740306184*^9, 3.6267777434638557`*^9}, {
   3.626777775768298*^9, 3.626777781175796*^9}, {3.6297105357119617`*^9, 
   3.6297105381282787`*^9}, {3.6297106116346188`*^9, 3.629710617585248*^9}, {
   3.629710771473804*^9, 3.629710913280717*^9}, {3.629710947284174*^9, 
   3.629710954051413*^9}, {3.629712134649639*^9, 3.629712147275887*^9}, {
   3.629712235114546*^9, 3.629712250586071*^9}, {3.630651701102632*^9, 
   3.6306517031504707`*^9}, 3.6313685342383204`*^9, {3.631368630509982*^9, 
   3.631368640860835*^9}, {3.631368893728421*^9, 3.631368902574747*^9}, {
   3.631369340340086*^9, 3.63136934652986*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    RasterBox[CompressedData["
1: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
XIiW0RSKp4Dq4j/xoQUG9HGeElRvo0LCokdzXwIFoKG/7yvqagGDdL8CAwIu
MwrfuKCujjrDWmeB/Fx0WBauu0yA+t7r+uHGqMMHo85Jt+I9Xrix2FueDpvd
YLrpCgG8PqHhImivj2t4Vo32W7mLR7b5IP+vz+/0RD/35b77inkScMIvQJ+E
fszSKJ5NGNc7uGb3IYx7NrP0DQfGHT7/HxuBeZbvfcSz3EqF7W8q/YMxTyHu
b/f+w7r43g8NKKI9vZ4R64d1bVDcwfMOcbjKoTSXhTiweaq4JiIOgeJ1f6oR
N7d7lsoKiNs/z2uCgxPI/8VRVV/EueIGqwor4pz7n0v/f4iz/MYp/z81eKdF
rF2rHkmHvQ58e75hX0qfhOTvwz76T96c+4p9DPrFEpSEffQcjas8gn13uXfP
9Cz2vfHD3sxt2PcXD01rqMiT7RkjOy8jT9x+/OQURZ4QNekXatF+X+O3ax3y
6mrGu9hvyCuln1XigshDEV/xt2frx0HwRLJOB/IwNWfzIzfkbdzJpcyyj+PQ
YHJc8g7yln/N4/mdWK+LS7+uG/I8n//1mZ3Ic42p9u3C9+jg8I52NSoadVpY
4+M7KjQY9P1TvA7rVfxbYD2UToeY5xLP2xYI+Ld7lvIF7awRJ2953qGD1cKt
5qxfeEdetk95tPr7r+/c4s4zdCBHJi1t95yAVqk1LLW410z2Llrdwr22k6Uy
YBWPPW1LIo/R7slZ5NyJ9vhDHi0yAQQM9Tt7Va3+/mvefocY+rl04nNFy+UJ
sH4xyf6xevX3NUyZlRi3S1qf8xfGDR7+d4MP7fy880ZZmCd/5CWPS5inHXFl
Pukw6lu2w3ypERToc8rVJRWMwicyK/fbeeRDoauKXC8VMoU2p2oWUMD9Vsgc
F/KnyOBldUk74nxtwH05jQLBtz/FXVfB934sj9ifSgEfz+vPJStHoSftpoMw
7vfj4pHbsnC//zfGxiR6YQIeZvtUVqOfZgETB73XVKD9JpZlkyhwISbL3gbn
vBpb0OsqMzrsMn17ww7n63WZa0SoOAPngczDKLxfjotxmUq5UeGykMiWp2hf
jLmT74v2YqVtLeOuOFdm8tSd0I+AUFetF/p5JMCpuh796P8XlPAK4+Yeun+a
FeP6NElWf0ukgKxMePQWzNOdR1ZsCPP029qqH4x52lS9+ZmGdU1sDVPJwros
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
wR5x4FV3CvzMMnlSkA8/XX02I5Xws5RfsncV4jqXDvFMENf533+9vog799u9
077IM2n+RSW13RzSszBQ0XZhkYM/PX2Lc812XhgZhnN9/LqlezLO9dqkKesd
cKguzd59Bjj8fZpmWg0cUmI+jNwDbhfv7PpP/gmHlg8v3HARuPWFtTnEAefU
6NA7+cBZrUaXFQ6cZz/aYBeOuhyf07zZAnV5lRAl0I661HIFj+WijrINDZ8H
tnMoJiufKY463jDc80AIda+86bPsay+TVK+mXrNC3ZsqpaqtYC/9OK4l+51J
kgl/rh8ET06aWKilg1dtk31vpAROfN985dFg8Er9+mCgEXgofL2q9bchj3y/
bHq6EjyUFv9VLAA+V53OH3ijD512Y96nNxosOp+hV7ER9kvi7td+guddrIXv
ncDzi3RJbXUil0xXjd5sicAerxR67Dv47lyeuPfvCzZpTV6addm1lYyX6Teu
xRwXc/AZu4f5/ipGZ2u7Wys9q4hcGHy/kZYp6Mr6YO6o/nC4WLeIRUevB2y7
r8qgrs2nD/3dhfvQMCnHaz70ukv5gOgSBu06eLBurh2PDtzvnNoAu1bux4ED
sL8YX1+4E37mywWv8pz4nJ/R8W0b4Cf5ckN9E+L2XD19dtS9lY5Pq5RYDZ1T
Eacd+RF5jk1pOxbo0kqHhocYp1MayWy0cs4o+tWnM8m1jTYcqhnf6X4ZumJ7
24LDM+E/UNX72SLMx/3yu76pTOiK43yMbtizhjwHx+Wx99qvjA5TZ9CNBpNX
4+BDSMp5k8os9PPHqllB71nEvnLUXQpzvPzzSuWAF9gfFxYoL6vDHvRp9uUZ
mONhWjm96aNsyjnRKC5ZxyTfqMJt2uCnU8qjkwV7OPRedw937W4WpdVudHUG
n1/OSX225hGHFg2OvhcpZpGAj0moFewdw5ZvT8Aep5wn7An7nKH/NAzgR/cl
34FA+NkscP9utyuLHu6envMP+vahlNNvLuKq5Vx38kPcCyMnjRWQZ3pX5Hxt
5LmE+7ut4SuLfvkbdAzgXGkXdLaJPubQvc7u4SqcK/TuwDo+B+iQ95s2eimw
6NrjZdFdwKEtX03kJ+rl7XDB5SnmwYYKp2+flzKox6W+dxJ4nho/9OEmcLYr
iZXWBc4rDPuv/MZ+u2b3e/909Nu2aaIel9Bv33UtyuzGvasvOXayG/flyejt
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
     "], {{0, 0}, {89, 
     89}}, {0, 1}], Frame -> True, FrameLabel -> {
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(E\\)]\\)\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(\[Psi]\\)]\\)\"", 
       TraditionalForm]}, FrameTicks -> {{{{88.5, 
         FormBox["1", TraditionalForm]}, {69.5, 
         FormBox["20", TraditionalForm]}, {49.5, 
         FormBox["40", TraditionalForm]}, {29.5, 
         FormBox["60", TraditionalForm]}, {0.5, 
         FormBox["89", TraditionalForm]}}, {{88.5, 
         FormBox["1", TraditionalForm]}, {69.5, 
         FormBox["20", TraditionalForm]}, {49.5, 
         FormBox["40", TraditionalForm]}, {29.5, 
         FormBox["60", TraditionalForm]}, {0.5, 
         FormBox["89", TraditionalForm]}}}, {{{0.5, 
         FormBox["1", TraditionalForm]}, {19.5, 
         FormBox["20", TraditionalForm]}, {39.5, 
         FormBox["40", TraditionalForm]}, {59.5, 
         FormBox["60", TraditionalForm]}, {88.5, 
         FormBox["89", TraditionalForm]}}, {{0.5, 
         FormBox["1", TraditionalForm]}, {19.5, 
         FormBox["20", TraditionalForm]}, {39.5, 
         FormBox["40", TraditionalForm]}, {59.5, 
         FormBox["60", TraditionalForm]}, {88.5, 
         FormBox["89", TraditionalForm]}}}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    Method -> {
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
    FormBox["\"Amplitude labelled by \\!\\(\\*SubscriptBox[\\(x\\), \
\\(E\\)]\\) and \\!\\(\\*SubscriptBox[\\(x\\), \\(\[Psi]\\)]\\)\"", 
      TraditionalForm]],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
pKldi5YdqsH/ABiLybw=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.50000000000003`}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -110.12497564560448`}, 
                    Offset[{4., 0}, {7.5, -110.12497564560448`}]}, {{
                    7.5, -67.1188715888133}, 
                    Offset[{4., 0}, {7.5, -67.1188715888133}]}, {{
                    7.5, -21.723539528867068`}, 
                    Offset[{4., 0}, {7.5, -21.723539528867068`}]}, {{7.5, 
                    23.671792531079234`}, 
                    Offset[{4., 0}, {7.5, 23.671792531079234`}]}, {{7.5, 
                    66.6778965878704}, 
                    Offset[{4., 0}, {7.5, 66.6778965878704}]}, {{7.5, 
                    112.07322864781665`}, 
                    Offset[{4., 0}, {7.5, 112.07322864781665`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -110.12497564560448`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.19\"", 0.19, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.1188715888133}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.38\"", 0.38, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -21.723539528867068`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.57\"", 0.5700000000000001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 23.671792531079234`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.75\"", 0.75, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 66.6778965878704}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.94\"", 0.9400000000000001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.07322864781665`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"ThermometerColors\"", ",", "#1"}], "]"}], "&"}],
                ",", 
               RowBox[{"{", 
                 RowBox[{"0.5000315616715061`", ",", "1.`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0.6008721478996211`", ",", "0.19`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"0.7017442957992421`", ",", "0.38`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{
                    "0.8026164436988632`", ",", "0.5700000000000001`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.8981795311827148`", ",", "0.75`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"0.5053090604157695`", ",", "0.01`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.9990516790823358`", ",", "0.9400000000000001`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"\"PinningPoint\"", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"\"SmoothRange\"", "\[Rule]", "False"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.631368536485675*^9, {3.63136864358683*^9, 3.6313686490157948`*^9}, 
   3.631368711308013*^9, 3.631368865263467*^9, 3.6313689041008453`*^9, {
   3.631369347612135*^9, 3.631369359939938*^9}, {3.631369491299206*^9, 
   3.6313695186484613`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "symptotic", " ", "analytical", " ", "expression", " ", "for", " ", 
    "tilde", " ", "D"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Omega]", "=", 
     RowBox[{"N", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["5"], "-", "1"}], "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WfDTh", "[", 
     RowBox[{"x_", ",", "y_", ",", "q_", ",", "\[Rho]_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Log", "[", "0.5", "]"}]}], "-", 
      RowBox[{
       RowBox[{"q", "/", 
        RowBox[{"(", 
         RowBox[{"q", "-", "1"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"5", "x"}]}], ")"}], "/", "6"}], 
       SuperscriptBox["\[Rho]", "2"]}], "-", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"q", "-", "1"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "x"}], "+", 
         RowBox[{"2", "y"}]}], ")"}], 
       SuperscriptBox["\[Rho]", 
        RowBox[{"2", "q"}]]}]}], 
     RowBox[{"Log", "[", "\[Omega]", "]"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.631342634098796*^9, 3.631342657583192*^9}, {
  3.631343157139844*^9, 3.631343245102594*^9}, {3.631343987423184*^9, 
  3.631344019676441*^9}, {3.631347994678032*^9, 3.631348010759364*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox["\[Rho]", "2"]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]b", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["\[Rho]", "2"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cq", "[", 
    RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[Rho]", 
     RowBox[{"2", "q"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sq", "[", 
    RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[Rho]", 
     RowBox[{"2", "q"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WfDTh2", "[", 
   RowBox[{"x_", ",", "y_", ",", "q_", ",", "\[Rho]_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"q", "/", 
      RowBox[{"(", 
       RowBox[{"q", "-", "1"}], ")"}]}], "x", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"\[Lambda]", "[", "\[Rho]", "]"}], "]"}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "-", 
       RowBox[{"2", "x"}]}], "3"], 
     RowBox[{"Log", "[", 
      RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"q", "-", "1"}], ")"}]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "y"}], ")"}], 
        RowBox[{"Log", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"cq", "[", 
             RowBox[{"\[Rho]", ",", "q"}], "]"}]}], ")"}]}], "]"}]}], "+", 
       RowBox[{"y", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"sq", "[", 
             RowBox[{"\[Rho]", ",", "q"}], "]"}]}], ")"}]}], "]"}]}]}], 
      ")"}]}]}], 
   RowBox[{"Log", "[", "\[Omega]", "]"}]]}]}], "Input",
 CellChangeTimes->{{3.631347922800171*^9, 3.631348134872423*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"edge", " ", "of", " ", "the", " ", 
    RowBox[{"chain", ":", " ", 
     RowBox[{"always", " ", "molecular", " ", "site"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"WfDTh", "[", 
    RowBox[{"0.5", ",", "0.5", ",", "q", ",", "\[Rho]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"WfDTh2", "[", 
    RowBox[{"0.5", ",", "0.5", ",", "q", ",", "\[Rho]"}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.631343292743981*^9, 3.6313433197320433`*^9}, {
  3.631343359957075*^9, 3.631343397813733*^9}, {3.631348153172391*^9, 
  3.631348155139583*^9}}],

Cell[BoxData["0.7215772076544592`"], "Output",
 CellChangeTimes->{
  3.631343321162609*^9, 3.631343380151741*^9, 3.631343991374242*^9, 
   3.631344022517115*^9, 3.631344120428762*^9, {3.631344271092937*^9, 
   3.6313442945239687`*^9}, {3.631348146810494*^9, 3.6313481554360123`*^9}}],

Cell[BoxData["0.7215763538893258`"], "Output",
 CellChangeTimes->{
  3.631343321162609*^9, 3.631343380151741*^9, 3.631343991374242*^9, 
   3.631344022517115*^9, 3.631344120428762*^9, {3.631344271092937*^9, 
   3.6313442945239687`*^9}, {3.631348146810494*^9, 3.631348155437392*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"center", " ", "of", " ", "the", " ", 
    RowBox[{"chain", ":", " ", 
     RowBox[{"always", " ", "atomic", " ", "site"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"WfDTh", "[", 
    RowBox[{"0", ",", "0", ",", "q", ",", "\[Rho]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"WfDTh2", "[", 
    RowBox[{"0", ",", "0", ",", "q", ",", "\[Rho]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.631343292743981*^9, 3.6313433197320433`*^9}, {
  3.631343359957075*^9, 3.631343410342697*^9}, {3.6313481593161783`*^9, 
  3.6313481616052647`*^9}}],

Cell[BoxData["0.0036457665284825047`"], "Output",
 CellChangeTimes->{
  3.631343410928886*^9, 3.6313439934850073`*^9, 3.631344024569153*^9, {
   3.63134408791606*^9, 3.631344105630888*^9}, {3.631344308313065*^9, 
   3.631344325466527*^9}, {3.631344420409348*^9, 3.6313444716161346`*^9}, {
   3.63134464909933*^9, 3.631344692004568*^9}, 3.6313447590243692`*^9, {
   3.631348148594904*^9, 3.631348161834505*^9}}],

Cell[BoxData["0.0034548482610689555`"], "Output",
 CellChangeTimes->{
  3.631343410928886*^9, 3.6313439934850073`*^9, 3.631344024569153*^9, {
   3.63134408791606*^9, 3.631344105630888*^9}, {3.631344308313065*^9, 
   3.631344325466527*^9}, {3.631344420409348*^9, 3.6313444716161346`*^9}, {
   3.63134464909933*^9, 3.631344692004568*^9}, 3.6313447590243692`*^9, {
   3.631348148594904*^9, 3.6313481618358603`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison partition function/box counting", "Subsection",
 CellChangeTimes->{{3.630299678829653*^9, 3.630299689549671*^9}}],

Cell["Return the spectrum rescaled to fit into the [0,1] interval", "Text",
 CellChangeTimes->{{3.630299851503104*^9, 3.63029987537504*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"spect", "[", 
   RowBox[{"i_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"spec", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"hp", "[", 
         RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"spec", "-", 
       RowBox[{"spec", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"spec", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "-", 
       RowBox[{"spec", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.630299879348051*^9, 3.630299957766973*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "@", 
  RowBox[{"spect", "[", 
   RowBox[{"10", ",", ".9", ",", "1."}], "]"}]}]], "Input",
 CellChangeTimes->{{3.630299965803708*^9, 3.63030003267802*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxVzXlUjXkcx/EfoQ4RkzHNiIqYNtLmSuiTq5UWbbft1r3RpbFUcw4nNXhI
WcaZijFZKhpJSYq2scTjimq0KCWlRiYtskXZc2bM6fv8Mc859zzn9Xzu+3z1
QiM8w0YyxpK+/P57Dz/9tuz/DwpMa03q/RbTdzU4HkLVXBOQJ0Jt8KZTnF8w
eTJ+0xtMNQgJIWuh1vFN5aJZUWRtiDuzYxUZgnVRNfB61JywreQZMLIMM3ok
4sj60Blr1Khev5s8G4cLM5t61+whG2Dx68wkg5nJZCMc7w4fE+8l2ASJUbKN
3ckp5LlI0d3bxdcJnofwtJFJTb7pZDN87p351nXycbI5RlTUKrRmnyRbwN72
sa44TrAlImbEWXruOk22QoRmlo00V/B82Oy6zI8el0cWISPz+dWbFoIXYPme
OIc01fNka3QVZJZI5wteiCeDCda21wrJNuCDAv+8Z1FEXoQF/SpZ996WkBcj
XyHKWfVNKXkJ5k17sNna5hLZFmvtgvM5iWAgymGK0nBf2bA5YLy4yjqphMzs
wIz1iiw1eNrtcGT/3o7BLddpX4qQSGxzKVfSvhTin+2erW0lMzFiDiXHF5aU
0y7G+t/H1/MVZLYMxgrXzkXKW7QvQ6pSfWxMC5nZo9Lg9cCbvEra7RHSfV5P
dUkV7Q6YkqleMFX3Nu0OUJFMNJbakZkjOkc9dRy3toZ2R6QWOJdcjCUzJ6Sr
tL9pv1VHuxNWD6jE7m4nM2ecTYo5EapST7szbPLctXl9MnNBaOw5i39MG2h3
QWm0fV62A5ktx+NQJz7A9C7ty3FmIKb2uhWZrUCGYnVg36Em2ldAP/+OcmUq
mbniXfSSiylJ92h3RaVII8cni8zcYDj682nV8mba3fBo3l6r9Bdk5g6fqYHm
PTottLsjJb4jYPYcMvNAzzGLo2diWocND6S4FCw3TCBzHpBry3fo1D4YNv/l
/x09r951kNlKFGa0rDJ730b9StxxKV+dvL2d+pUQP9i7cdTRv6j/4kc6pbk5
ZOaJG5qdeXM+PqTeE3qbJxg+GdlBvSfkGpH6Rrlk3hOrvrpc+fkCmXnhSGua
qwiPqPeCkammW08cmfNCooa66i6Nv6n3QmOUu22/Fpl5o7j1+4CnV8jwxgTz
7gtnlGTOG9ZliQ3rwzup94bvjw0K9Ugy80HiGpuuArXH1PsgcusIk6FpZM4H
uqujjZvOknkfxN+QzSwqJTNfRGSnTG8266LeFxeqXRvGWpE5XxgnKLV0wrqp
90Vi7YPjnmvJTIJssTQnt40MCTyUBgrWS+YkCDO8/+r4hh7qJThTqsx320Zm
fjBUsdVLV+ul3g/a1/bsdJpA5vzQdnDDgUkZZN4PVUtGz/18isz8gT6b4mzT
J9T749O9Ic0PIjLnjx8SDoq2FZB5fzRuUonb2UhmAZDU/bQ1w7mP+gBEZ5lU
RLqTuQCEpVy5rVFL5gNw4uix6V4NZBYI87SX5WHOT6kPxJPOCNlzNzIXiIep
7RU7M8h8IOyK3zWYD5FZEDKab72f4/yM+iCYicoqLrmRuSDUiyb3aRST+SBI
UvXrD/9BZlIYabbs05z2nHopPu6wNZ6lR+akWPNr0ez4LWReCoVenZbWHjIL
Rme4sbNli9AH490vphL1h0IfjNJZkzJvmLygPhhljoMn3U3JLAS30+1NXOLJ
CEFbTWnbpd1kLgQaV17V3K4Q+hAc0Dy4Jb1G6GW41OGWJFV9OWxdGbSebvdy
Hk+GDB9K7r7fYUeWybBpaH91pJjMyVBXUN28ahP5hAwR92Mud28m8zJYbsgJ
kqWTO2RoleRXXz5BZnKYrvON1b0m3Jfj2+/enrK6KdyXY+E5NYuyNuG+HJFf
b0wobhfuy/Ey/vw6j37hvhxj0gKv3hXMy9Ga7zo4+Em4L4e1orXLe0i4H4rh
d7/tv1AIuDo=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 144.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.630299979465611*^9, 3.630299983474948*^9}, {
   3.630300014571355*^9, 3.630300033272108*^9}, 3.630652907288431*^9}]
}, Open  ]],

Cell["Compute Hausdorff dimension by box-counting ", "Text",
 CellChangeTimes->{{3.630299750431608*^9, 3.6302997747181664`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"take", " ", "a", " ", "fractal", " ", "set", " ", 
     RowBox[{"(", 
      RowBox[{
      "represented", " ", "as", " ", "an", " ", "ordered", " ", "list", " ", 
       "of", " ", "points", " ", "between", " ", "0", " ", "and", " ", "1"}], 
      ")"}]}], ",", " ", 
    RowBox[{
    "return", " ", "the", " ", "number", " ", "of", " ", "filled", " ", 
     "boxes"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "bc", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"bc", "[", 
     RowBox[{"list_", ",", "n_", ",", "\[Delta]_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"curLbl", "=", "1"}], ",", "curBS", ",", "\[CapitalDelta]", 
        ",", 
        RowBox[{"b", "=", 
         RowBox[{"\[Delta]", "^", 
          RowBox[{"-", "n"}]}]}], ",", 
        RowBox[{"nboxes", "=", "0"}], ",", 
        RowBox[{"len", "=", 
         RowBox[{"Length", "[", "list", "]"}]}], ",", "loop"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"\[CapitalDelta]", ":", 
        RowBox[{
        "distance", " ", "btw", " ", "the", " ", "left", " ", "side", " ", 
         "of", " ", "the", " ", "current", " ", "box", " ", "and", " ", "the",
          " ", "current", " ", "pt"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"\[CapitalDelta]", "=", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", "curLbl", "]"}], "]"}], "-", "curBS"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalDelta]", "=", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", "curLbl", "]"}], "]"}], ",", "b"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"curBS", "=", 
        RowBox[{
         RowBox[{"list", "[", 
          RowBox[{"[", "curLbl", "]"}], "]"}], "-", "\[CapitalDelta]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"curLbl", "<", "len"}], ",", 
         RowBox[{
          RowBox[{"loop", "=", "False"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "while", " ", "the", " ", "current", " ", "pt", " ", "is", " ", 
             "in", " ", "the", " ", "current", " ", "box"}], ",", 
            RowBox[{
            "pass", " ", "to", " ", "the", " ", "pt", " ", "on", " ", "its", 
             " ", "right"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[CapitalDelta]", "\[LessEqual]", "b"}], "&&", 
             RowBox[{"curLbl", "<", "len"}]}], ",", 
            RowBox[{
             RowBox[{"curLbl", "++"}], ";", 
             RowBox[{"\[CapitalDelta]", "=", 
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", "curLbl", "]"}], "]"}], "-", "curBS"}]}], 
             ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "after", " ", "the", " ", "loop", " ", "the", " ", "current", " ",
              "box", " ", "has", " ", "jumped", " ", "of", " ", 
             RowBox[{"Floor", "[", 
              RowBox[{"\[CapitalDelta]", "/", "b"}], "]"}], " ", "units"}], 
            ",", 
            RowBox[{
            "and", " ", "one", " ", "more", " ", "box", " ", "has", " ", 
             "points", " ", "in", " ", "it"}]}], "*)"}], 
          RowBox[{"curBS", "+=", 
           RowBox[{"b", " ", 
            RowBox[{"Floor", "[", 
             RowBox[{"\[CapitalDelta]", "/", "b"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"nboxes", "++"}], ";", 
          RowBox[{"\[CapitalDelta]", "=", 
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", "curLbl", "]"}], "]"}], "-", "curBS"}]}], ";"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "nboxes", "]"}], ";"}]}], "]"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.624687887362605*^9, 3.624687918431993*^9}, {
  3.624688181898755*^9, 3.624688218481759*^9}, {3.624689244512453*^9, 
  3.624689282018882*^9}, {3.630299722653495*^9, 3.6302997279480762`*^9}, {
  3.63030240808165*^9, 3.630302421999689*^9}, {3.630302894163321*^9, 
  3.630302894387648*^9}, {3.630302930229293*^9, 3.630302930375506*^9}, {
  3.63031602991247*^9, 3.630316088949559*^9}, {3.630316125722804*^9, 
  3.630316168567422*^9}, {3.630316206249094*^9, 3.630316206374387*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sp", "=", 
   RowBox[{"spect", "[", 
    RowBox[{"11", ",", ".1", ",", "1."}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "50", ",", "2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delta", "=", "2"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "compute", " ", "the", " ", "number", " ", "of", " ", "filled", " ", 
    "boxes", " ", "for", " ", "a", " ", "whole", " ", "range", " ", "of", " ",
     "values", " ", "of", " ", "n"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nb", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"bc", "[", 
        RowBox[{"sp", ",", "#", ",", "delta"}], "]"}], "&"}], ",", "r"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "filled", " ", "boxes", " ", "as", " ", "a", " ",
     "function", " ", "of", " ", "their", " ", "length"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dat", "=", 
    RowBox[{"Parallelize", "@", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"delta", "^", "r"}], ",", "nb"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"the", " ", "slope", " ", "is", " ", "the", " ", "box"}], "-", 
    RowBox[{
    "counting", " ", "dimension", " ", "of", " ", "the", " ", "spectrum"}]}], 
   " ", "*)"}]}], "\n", 
 RowBox[{"ListLogLogPlot", "[", "dat", "]"}]}], "Input",
 CellChangeTimes->{{3.624688079789184*^9, 3.624688174290934*^9}, {
  3.624688236194497*^9, 3.624688267536057*^9}, {3.630300101211976*^9, 
  3.630300105065716*^9}, {3.6303003897730427`*^9, 3.630300389933137*^9}, {
  3.630300723599918*^9, 3.630300748479764*^9}, {3.63030119226014*^9, 
  3.6303012118571863`*^9}, {3.630302439515131*^9, 3.630302462444113*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQnX1ix77LO7kdmBS0fnGv/mO/8ZPU/KoMYQex0K27
N2YzOeg23ozj/iLh8N7y1z8nPTaHlfwz5ObUyzn81JlUszyH00HIXzt/GquS
wzfenY1/THkcAqZxnY87reLQbZR6Z3aCgEPf3Zd66hPVHUoylu/zFxNyOKNy
su99mJZDTNKjxzovhB24cla82y6j65DP+LttlbWog8fmdr+GR/oOJ6+0tJae
FHVwrjUOVwkxhPMfKSi3c2w3gvMbjwhtfyNpAucrZDA9v1BjCufv5/4ktvW+
GZwft/6h20wnCzj/b9DFstqllnD+nG8HliVyWMP5VrM2XHPNtoHzb9ouYNM6
ZwvnVzzsN+MztIfzew7ZG//0dIDzo6eYe2f/RvABZEipaQ==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-1.2493346154819067`, 1.526478815018827},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-0.7075877468216109, 33.96421184743732}, {1.5887051413148185`, 
   5.44673737166631}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {16.11809565095832, 
       FormBox[
        TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", "11"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {34.538776394910684`, 
       FormBox[
        TemplateBox[{"10", "15"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {18.420680743952367`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.72326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {27.631021115928547`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {29.933606208922594`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {32.23619130191664, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{
  3.6303001089576283`*^9, {3.6303007193123283`*^9, 3.63030075274321*^9}, {
   3.630301197509914*^9, 3.6303012161769876`*^9}, {3.630302431143745*^9, 
   3.630302466655305*^9}, 3.630302903978683*^9, 3.630312766658658*^9, 
   3.630315390548211*^9, 3.6303154452133408`*^9, 3.63031667265735*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "now", " ", "we", " ", "can", " ", "fit", " ", "the", " ", "slope", " ", 
     "to", " ", "get", " ", "the", " ", "box"}], "-", 
    RowBox[{"counting", " ", "dimension"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xi", "=", "4"}], ";", 
    RowBox[{"xf", "=", 
     RowBox[{"xi", "+", "12"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fit", "=", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{
       RowBox[{"Log10", "@", 
        RowBox[{"dat", "[", 
         RowBox[{"[", 
          RowBox[{"xi", ";;", "xf"}], "]"}], "]"}]}], ",", "logl", ",", 
       "logl"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Normal", "@", "fit"}], ",", 
     RowBox[{"{", 
      RowBox[{"logl", ",", "0", ",", "15"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "@", ".02"}], ",", 
        RowBox[{"Point", "@", 
         RowBox[{"Log10", "@", "dat"}]}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"Normal", "@", "fit"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.624688348375898*^9, 3.624688398570468*^9}, {
  3.630300146330718*^9, 3.6303001527446136`*^9}, {3.630300218058888*^9, 
  3.630300218231752*^9}, {3.630300764175255*^9, 3.630300791612294*^9}, {
  3.630301224130743*^9, 3.630301252785954*^9}, {3.6303024725553923`*^9, 
  3.630302485496512*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVkms41HkcxcegUdvMX0OhsDO5TJP5o5pUT/H7Eo/LGmtlasZGa9SWJckl
KrZtLCpTLmNKhZVLbcJSUsu67Ehu1S6yM5WiC+1EGpch19nZF+c5r85zns95
Dl1wxO8AkUAgcDT636detT+wTMt2ahyO5T7Il6GZnRvCneVR6LunSRHNlTJ0
oPY911guRMT6zFSpVIauqqQd2vIs5Hah/PemIRlyENsnz8gKUaf9oFm9rRzp
CA4KJmW3kSzWf+hugxyFtRO7xmRSpFRvjLvx6hkyT/Q9o5R1I5qhMueceR9q
nWVf6ip8ixS5+uzLpwZQaVFjt4D1EdHOhUjOP3yDLOps80g7J5Dlpq6zVOIg
4h/LLfXhfkZdAatd9SLeo0GGZ9mY/gLq6zOLz69UoDJuRzPRRAsyXs4fLbEY
QT2vYxLEedqgf2VqcUfaKLJSONl1T+lCHK9XWLtficL4cp92oR5stzBTUHLH
UJ9r5qGIt8sAX+MiutMwjupmfTirt5KBdHQyvuDFBLpg0pf/YyMG7JTsthZ9
FXrId41tI6+AzLYV3O0bphD6VtiFc6ng0pHgqgidRp/+dBFfvGgAz5ixif25
nxF7iOq3W2oIv9R4TVjVzaCJBi/3KNIqqCVSHhWPzSIPbta2QQcj0EmoeB1t
MI+MCpwF1aeMoah6R8BJzgIy841WpkhNYN1XPNPO04vofn31ycpPq+EF5Zs1
YdfU6HF/oKODgymMt11tuBZOgLjGVfPUg2ZAvrZAdlgkAE/HjzaRaQ6m66yF
oyItuLMwecLuny+h90ILo5lBBL/nu0KDhTSwFvUMo/tE0NMPtudb04Eeynst
99cGfrxdqV8rHTBV0ZxkVBtiG5ML4wLXgsQoiD2XqANPBrAaL4IFtJik5yeY
6ML4AN3DM8cCzt+2ZVwv1YUqA5XIE7cEj9nspxNbl0A5bX5k+okllNGj7gT2
LIGY5WmdXQes4GZ/feWREBLEd3Na+EutwTfxp/48NQnc43IcyYXWkF5VxYrJ
1IMqn+JD0i0MaMq+mR9BWwo8wrsKq+cMyN1j7JJctxQ6Mm5FVx9dB1iVStvV
exkcn7u+a2wlE/APntPmimXQnBMyZHePCY7d+zHzpC9Abvjr9GXOehj0HXVr
oS6H9WE0y9vK9bDlt9HyMxXLwb2A9pfqjA2sLQ5kTyIyqElvWNvNWaB2F/cn
PSHDpKesxLaJBSmd6A+7UApU/+Cfx9mDQ8lgwL2kGQo0EWu+V/JxWGA+ttGb
p0DnFSN78V4cuBGoQLRIgTcdz6XyYBx0py3OSrQxWGET/G9IOA4H9T4G3CBj
EDF8eNOJ0zgwbU4tdtAxYIantl+/hUNFZJEb1UvzSx1FlmeFJn93Ze1Fbwwg
12vvSCUOQTOptmu+xoD3iPxpQw0OmDDcyNIfgxRWtmF9Ew6R4s2KzUEYvBsp
2NfTi8PGmlYRPwoD5c9E5jE5Dmmz27RexWAwZ7p/3PgFDm+dymIFcRhQOYzk
oAEcxK0ZQWEJGDiXl5cqPuAwKefbJ6Zg4O2GxYg+4uBt9qhY66ym/2Wko51S
s0ewk0lKGgaRZPbfMSocdn9YS0zPwCChRHLZ6LOGx1ZyzECMQarjtKB2Focl
0aThSxIMsnp5rMAFDc+94/tMczDIP1yrUqtxqJkb7im4gsF/9G0u8w==
       "]]}}, 
    InsetBox[
     RowBox[{
      RowBox[{"0.23876245660549678`", " ", "logl"}], "+", 
      "0.3690652912298685`"}], Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     PointSize[0.02], 
     PointBox[
      NCache[{{Log[10]^(-1) Log[32], Log[6]/Log[10]}, {
        Log[10]^(-1) Log[128], Log[8]/Log[10]}, {
        Log[10]^(-1) Log[512], Log[8]/Log[10]}, {
        Log[10]^(-1) Log[2048], Log[10]^(-1) Log[14]}, {
        Log[10]^(-1) Log[8192], Log[10]^(-1) Log[20]}, {
        Log[10]^(-1) Log[32768], Log[10]^(-1) Log[26]}, {
        Log[10]^(-1) Log[131072], Log[10]^(-1) Log[40]}, {
        Log[10]^(-1) Log[524288], Log[10]^(-1) Log[56]}, {
        Log[10]^(-1) Log[2097152], Log[10]^(-1) Log[82]}, {
        Log[10]^(-1) Log[8388608], Log[10]^(-1) Log[110]}, {
        Log[10]^(-1) Log[33554432], Log[10]^(-1) Log[144]}, {
        Log[10]^(-1) Log[134217728], Log[10]^(-1) Log[206]}, {
        Log[10]^(-1) Log[536870912], Log[10]^(-1) Log[280]}, {
        Log[10]^(-1) Log[2147483648], Log[10]^(-1) Log[382]}, {
        Log[10]^(-1) Log[8589934592], Log[10]^(-1) Log[564]}, {
        Log[10]^(-1) Log[34359738368], Log[10]^(-1) Log[738]}, {
        Log[10]^(-1) Log[137438953472], Log[10]^(-1) Log[1042]}, {
        Log[10]^(-1) Log[549755813888], Log[10]^(-1) Log[1346]}, {
        Log[10]^(-1) Log[2199023255552], Log[10]^(-1) Log[1926]}, {
        Log[10]^(-1) Log[8796093022208], Log[10]^(-1) Log[2047]}, {
        Log[10]^(-1) Log[35184372088832], Log[10]^(-1) Log[2047]}, {
        Log[10]^(-1) Log[140737488355328], Log[10]^(-1) Log[2047]}, {
        Log[10]^(-1) Log[562949953421312], Log[10]^(-1) 
         Log[2047]}}, CompressedData["
1:eJxTTMoPSmViYGAQB2IQXRdxXEVC9If93+XlxXOfvbDf19X9bMJtBoc/Zu9/
yDx7Y2+XuXnX1DWscP5e99t9s2q5HOa5PInsCvtkb6PGnDzfj9+h/p76FZaL
X+zjmqZKX+IXcjj34bH47sXf7OcVrmwNqRBx+LfHfwXnop/29xL2vr/2QMxh
HqMJ05Qfv+3lAi5GRnpKOlx/pen2e94/+1j7p4dvb5R22J6kseFoCIPDXL2f
unFScg51mx73BrswOrzvY/MpcFRweKdjdvFME5NDX5tA48ZSRYc+Qbbpxycz
O+jVSW37tFLJYZad/DWBFSwO50pVXhvfU3boM8ubN4+JzSEvV0+hVEjV4dWr
FR3HP7I58KVahG5zU3NYeXHJlekqHA7rYpy6vlepOzzM23/Mg4PTwTfEZ7/F
eg2HXdmd93+6cTm89Q77UvlY00Gw4XekNjAcep0TNHeLa8P5etZZcX+8deD8
s0Ylk20bdOF8APCapiY=
       "]]]},
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{0, 15}, {0., 3.9505020672217723`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwVkms41HkcxcegUdvMX0OhsDO5TJP5o5pUT/H7Eo/LGmtlasZGa9SWJckl
KrZtLCpTLmNKhZVLbcJSUsu67Ehu1S6yM5WiC+1EGpch19nZF+c5r85zns95
Dl1wxO8AkUAgcDT636detT+wTMt2ahyO5T7Il6GZnRvCneVR6LunSRHNlTJ0
oPY911guRMT6zFSpVIauqqQd2vIs5Hah/PemIRlyENsnz8gKUaf9oFm9rRzp
CA4KJmW3kSzWf+hugxyFtRO7xmRSpFRvjLvx6hkyT/Q9o5R1I5qhMueceR9q
nWVf6ip8ixS5+uzLpwZQaVFjt4D1EdHOhUjOP3yDLOps80g7J5Dlpq6zVOIg
4h/LLfXhfkZdAatd9SLeo0GGZ9mY/gLq6zOLz69UoDJuRzPRRAsyXs4fLbEY
QT2vYxLEedqgf2VqcUfaKLJSONl1T+lCHK9XWLtficL4cp92oR5stzBTUHLH
UJ9r5qGIt8sAX+MiutMwjupmfTirt5KBdHQyvuDFBLpg0pf/YyMG7JTsthZ9
FXrId41tI6+AzLYV3O0bphD6VtiFc6ng0pHgqgidRp/+dBFfvGgAz5ixif25
nxF7iOq3W2oIv9R4TVjVzaCJBi/3KNIqqCVSHhWPzSIPbta2QQcj0EmoeB1t
MI+MCpwF1aeMoah6R8BJzgIy841WpkhNYN1XPNPO04vofn31ycpPq+EF5Zs1
YdfU6HF/oKODgymMt11tuBZOgLjGVfPUg2ZAvrZAdlgkAE/HjzaRaQ6m66yF
oyItuLMwecLuny+h90ILo5lBBL/nu0KDhTSwFvUMo/tE0NMPtudb04Eeynst
99cGfrxdqV8rHTBV0ZxkVBtiG5ML4wLXgsQoiD2XqANPBrAaL4IFtJik5yeY
6ML4AN3DM8cCzt+2ZVwv1YUqA5XIE7cEj9nspxNbl0A5bX5k+okllNGj7gT2
LIGY5WmdXQes4GZ/feWREBLEd3Na+EutwTfxp/48NQnc43IcyYXWkF5VxYrJ
1IMqn+JD0i0MaMq+mR9BWwo8wrsKq+cMyN1j7JJctxQ6Mm5FVx9dB1iVStvV
exkcn7u+a2wlE/APntPmimXQnBMyZHePCY7d+zHzpC9Abvjr9GXOehj0HXVr
oS6H9WE0y9vK9bDlt9HyMxXLwb2A9pfqjA2sLQ5kTyIyqElvWNvNWaB2F/cn
PSHDpKesxLaJBSmd6A+7UApU/+Cfx9mDQ8lgwL2kGQo0EWu+V/JxWGA+ttGb
p0DnFSN78V4cuBGoQLRIgTcdz6XyYBx0py3OSrQxWGET/G9IOA4H9T4G3CBj
EDF8eNOJ0zgwbU4tdtAxYIantl+/hUNFZJEb1UvzSx1FlmeFJn93Ze1Fbwwg
12vvSCUOQTOptmu+xoD3iPxpQw0OmDDcyNIfgxRWtmF9Ew6R4s2KzUEYvBsp
2NfTi8PGmlYRPwoD5c9E5jE5Dmmz27RexWAwZ7p/3PgFDm+dymIFcRhQOYzk
oAEcxK0ZQWEJGDiXl5cqPuAwKefbJ6Zg4O2GxYg+4uBt9qhY66ym/2Wko51S
s0ewk0lKGgaRZPbfMSocdn9YS0zPwCChRHLZ6LOGx1ZyzECMQarjtKB2Focl
0aThSxIMsnp5rMAFDc+94/tMczDIP1yrUqtxqJkb7im4gsF/9G0u8w==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {
        PointSize[0.02], 
        Point[{{Log[10]^(-1) Log[32], Log[6]/Log[10]}, {
          Log[10]^(-1) Log[128], Log[8]/Log[10]}, {
          Log[10]^(-1) Log[512], Log[8]/Log[10]}, {
          Log[10]^(-1) Log[2048], Log[10]^(-1) Log[14]}, {
          Log[10]^(-1) Log[8192], Log[10]^(-1) Log[20]}, {
          Log[10]^(-1) Log[32768], Log[10]^(-1) Log[26]}, {
          Log[10]^(-1) Log[131072], Log[10]^(-1) Log[40]}, {
          Log[10]^(-1) Log[524288], Log[10]^(-1) Log[56]}, {
          Log[10]^(-1) Log[2097152], Log[10]^(-1) Log[82]}, {
          Log[10]^(-1) Log[8388608], Log[10]^(-1) Log[110]}, {
          Log[10]^(-1) Log[33554432], Log[10]^(-1) Log[144]}, {
          Log[10]^(-1) Log[134217728], Log[10]^(-1) Log[206]}, {
          Log[10]^(-1) Log[536870912], Log[10]^(-1) Log[280]}, {
          Log[10]^(-1) Log[2147483648], Log[10]^(-1) Log[382]}, {
          Log[10]^(-1) Log[8589934592], Log[10]^(-1) Log[564]}, {
          Log[10]^(-1) Log[34359738368], Log[10]^(-1) Log[738]}, {
          Log[10]^(-1) Log[137438953472], Log[10]^(-1) Log[1042]}, {
          Log[10]^(-1) Log[549755813888], Log[10]^(-1) Log[1346]}, {
          Log[10]^(-1) Log[2199023255552], Log[10]^(-1) Log[1926]}, {
          Log[10]^(-1) Log[8796093022208], Log[10]^(-1) Log[2047]}, {
          Log[10]^(-1) Log[35184372088832], Log[10]^(-1) Log[2047]}, {
          Log[10]^(-1) Log[140737488355328], Log[10]^(-1) Log[2047]}, {
          Log[10]^(-1) Log[562949953421312], Log[10]^(-1) Log[2047]}}]}, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 15}, {0., 3.9505020672217723`}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
     0.3690652912298685 + 0.23876245660549678` $CellContext`logl], {
     Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6303001531828833`*^9, 3.6303002213229647`*^9, {3.630300770752288*^9, 
   3.630300793915696*^9}, {3.630301229705309*^9, 3.630301253205914*^9}, 
   3.630302434386732*^9, {3.630302477061569*^9, 3.6303024859188757`*^9}, 
   3.630302907970886*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FractalD", "[", 
  RowBox[{"13", ",", ".1", ",", "1.", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.630300362951009*^9, 3.6303003802001266`*^9}, {
  3.63030086511539*^9, 3.630300871928526*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.3169466720799743`"}]], "Output",
 CellChangeTimes->{{3.6303003651881323`*^9, 3.630300381124259*^9}, {
  3.630300865946001*^9, 3.630300872859363*^9}}]
}, Open  ]],

Cell["Compute generalized dimensions by box-counting ", "Text",
 CellChangeTimes->{{3.630299750431608*^9, 3.6302997955022097`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"take", " ", "a", " ", "fractal", " ", "set", " ", 
     RowBox[{"(", 
      RowBox[{
      "represented", " ", "as", " ", "an", " ", "ordered", " ", "list", " ", 
       "of", " ", "points", " ", "between", " ", "0", " ", "and", " ", "1"}], 
      ")"}]}], ",", " ", 
    RowBox[{
    "return", " ", "the", " ", "number", " ", "of", " ", "filled", " ", 
     "boxes"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "RenyiBc", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"RenyiBc", "[", 
     RowBox[{"list_", ",", "n_", ",", "\[Delta]_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"curLbl", "=", "1"}], ",", 
        RowBox[{"curBS", "=", "0"}], ",", "\[CapitalDelta]", ",", 
        RowBox[{"b", "=", 
         RowBox[{"\[Delta]", "^", 
          RowBox[{"-", "n"}]}]}], ",", 
        RowBox[{"qnorm", "=", "0"}], ",", 
        RowBox[{"ntot", "=", 
         RowBox[{"Length", "[", "list", "]"}]}], ",", 
        RowBox[{"npts", "=", "0"}], ",", 
        RowBox[{"len", "=", 
         RowBox[{"Length", "[", "list", "]"}]}], ",", "loop"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"\[CapitalDelta]", ":", 
        RowBox[{
        "distance", " ", "btw", " ", "the", " ", "left", " ", "side", " ", 
         "of", " ", "the", " ", "current", " ", "box", " ", "and", " ", "the",
          " ", "current", " ", "pt"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalDelta]", "=", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", "curLbl", "]"}], "]"}], ",", "b"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"curBS", "=", 
        RowBox[{
         RowBox[{"list", "[", 
          RowBox[{"[", "curLbl", "]"}], "]"}], "-", "\[CapitalDelta]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"curLbl", "\[LessEqual]", "len"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "there", " ", "is", " ", "for", " ", "now", " ", "0", " ", "pt", 
           " ", "in", " ", "the", " ", "current", " ", "box"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"npts", "=", "0"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "while", " ", "the", " ", "current", " ", "pt", " ", "is", " ", 
             "in", " ", "the", " ", "current", " ", "box"}], ",", 
            RowBox[{
            "pass", " ", "to", " ", "the", " ", "pt", " ", "on", " ", "its", 
             " ", "right"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"\[CapitalDelta]", "\[LessEqual]", "b"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"curLbl", "++"}], ";", "\[IndentingNewLine]", 
             RowBox[{"npts", "++"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"curLbl", "\[LessEqual]", " ", "len"}], ",", 
               RowBox[{"\[CapitalDelta]", "=", 
                RowBox[{
                 RowBox[{"list", "[", 
                  RowBox[{"[", "curLbl", "]"}], "]"}], "-", "curBS"}]}], ",", 
               
               RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"qnorm", "+=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"npts", "/", "ntot"}], ")"}], "^", "q"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"curLbl", ">", "len"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"(*", 
           RowBox[{
           "after", " ", "the", " ", "loop", " ", "the", " ", "current", " ", 
            "box", " ", "has", " ", "jumped", " ", "of", " ", 
            RowBox[{"Floor", "[", 
             RowBox[{"\[CapitalDelta]", "/", "b"}], "]"}], " ", "units"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"curBS", "+=", 
           RowBox[{"b", " ", 
            RowBox[{"Floor", "[", 
             RowBox[{"\[CapitalDelta]", "/", "b"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[CapitalDelta]", "=", 
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", "curLbl", "]"}], "]"}], "-", "curBS"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "qnorm", "]"}], ";"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.624687887362605*^9, 3.624687918431993*^9}, {
   3.624688181898755*^9, 3.624688218481759*^9}, {3.624689244512453*^9, 
   3.624689282018882*^9}, {3.630299722653495*^9, 3.6302997279480762`*^9}, {
   3.630301822556785*^9, 3.630301852250808*^9}, {3.630301918828692*^9, 
   3.630301964525725*^9}, {3.630302040717277*^9, 3.630302147742681*^9}, {
   3.630302391955164*^9, 3.630302397280201*^9}, {3.630302717764955*^9, 
   3.6303027215393333`*^9}, {3.630302788981062*^9, 3.630302793333062*^9}, {
   3.63030284864357*^9, 3.630302884724155*^9}, {3.630311153162992*^9, 
   3.6303111785695333`*^9}, 3.6303129672404213`*^9, {3.6303130235125923`*^9, 
   3.6303130283902693`*^9}, {3.630313078356968*^9, 3.630313088195451*^9}, {
   3.630313229930078*^9, 3.630313230280658*^9}, {3.630313276298355*^9, 
   3.6303132806487017`*^9}, {3.630313341403338*^9, 3.630313379640298*^9}, {
   3.630313455787509*^9, 3.630313496251236*^9}, {3.6303135311303453`*^9, 
   3.6303135991054697`*^9}, 3.6303136960287447`*^9, {3.6303139947648067`*^9, 
   3.63031399938818*^9}, {3.630314054222786*^9, 3.630314115741189*^9}, {
   3.630314385632131*^9, 3.630314385761509*^9}, {3.630314473008214*^9, 
   3.630314494285692*^9}, {3.630314545327498*^9, 3.6303145503023853`*^9}, {
   3.630314648800384*^9, 3.630314715056374*^9}, {3.630314821601634*^9, 
   3.6303148760309553`*^9}, {3.63031490950109*^9, 3.630314909644518*^9}, {
   3.630314941983721*^9, 3.630314971471575*^9}, {3.63031500803118*^9, 
   3.6303150537255163`*^9}, {3.63031508771179*^9, 3.630315137615438*^9}, {
   3.630315206127907*^9, 3.630315358500268*^9}, {3.630315506226269*^9, 
   3.630315514497766*^9}, {3.630315572517269*^9, 3.630315574608985*^9}, {
   3.630315972969692*^9, 3.6303160208207693`*^9}, {3.630316289468781*^9, 
   3.63031629601329*^9}, {3.630316363437717*^9, 3.630316545982093*^9}, {
   3.6303165912322493`*^9, 3.630316604873108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "spect"}]], "Input",
 CellChangeTimes->{{3.630653419915703*^9, 3.6306534228508587`*^9}}],

Cell[CellGroupData[{

Cell["Global`spect", "Print", "PrintUsage",
 CellChangeTimes->{3.630653424217255*^9},
 CellTags->"Info3630657024-6365008"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"spect", "[", 
          RowBox[{"i_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"spec", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Eigenvalues", "[", 
               RowBox[{"hp", "[", 
                RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], 
            "}"}], ",", 
           FractionBox[
            RowBox[{"spec", "-", 
             RowBox[{
             "spec", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            RowBox[{
             RowBox[{"spec", "\[LeftDoubleBracket]", 
              RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
             RowBox[{
             "spec", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}]]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`spect],
  Editable->False]], "Print",
 CellChangeTimes->{3.630653424309471*^9},
 CellTags->"Info3630657024-6365008"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sp", "=", 
   RowBox[{"spect", "[", 
    RowBox[{"12", ",", "1.", ",", "1."}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "20", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"delta", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "compute", " ", "the", " ", "number", " ", "of", " ", "filled", " ", 
    "boxes", " ", "for", " ", "a", " ", "whole", " ", "range", " ", "of", " ",
     "values", " ", "of", " ", "n"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nb", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RenyiBc", "[", 
        RowBox[{"sp", ",", "#", ",", "delta", ",", "20"}], "]"}], "&"}], ",", 
      "r"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "filled", " ", "boxes", " ", "as", " ", "a", " ",
     "function", " ", "of", " ", "their", " ", "length"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dat2", "=", 
    RowBox[{"Parallelize", "@", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"delta", "^", "r"}], ",", "nb"}], "}"}]}], "]"}]}]}], ";"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"the", " ", "slope", " ", "is", " ", "the", " ", "box"}], "-", 
    RowBox[{
    "counting", " ", "dimension", " ", "of", " ", "the", " ", "spectrum"}]}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{"{", "dat2", "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.624688079789184*^9, 3.624688174290934*^9}, {
   3.624688236194497*^9, 3.624688267536057*^9}, {3.630300101211976*^9, 
   3.630300105065716*^9}, {3.6303003897730427`*^9, 3.630300389933137*^9}, {
   3.630300723599918*^9, 3.630300748479764*^9}, {3.63030119226014*^9, 
   3.6303012118571863`*^9}, {3.630302439515131*^9, 3.630302462444113*^9}, {
   3.630311208162669*^9, 3.630311210497817*^9}, {3.630312751179677*^9, 
   3.630312757002933*^9}, {3.6303128081837397`*^9, 3.630312843085779*^9}, 
   3.630313093857273*^9, {3.630315371902767*^9, 3.630315406174967*^9}, {
   3.6303154573449383`*^9, 3.6303154758219757`*^9}, {3.630315695040414*^9, 
   3.6303157147507267`*^9}, {3.6303157491206703`*^9, 3.630315757917981*^9}, {
   3.630316619160652*^9, 3.630316749127039*^9}, {3.630316816455145*^9, 
   3.630316829906796*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/d7y1z8nvWf2re1rcxzCtA5A+N/sI1RNWCp9TQ8U
r7a237SIwaFfP2Gv2D4bqDybQ4+8zcT0j44Hsk/s2Hd5J7dDusqPuYfKXaHq
BRy4GtwZ2I95HNj4SWp+VYawQ260SscbOx+ofjEH7juvxeZV+h/QbbwZx/1F
wsEuaLmu5OJAqHnSDnKqOq5+9sEHVvLPkJtTL+dwtZu3SmdTCNR8BQf5k7KZ
s3aFHRDy186fxqrkwOG1J7dHPQJqn7LDyl1cR18+ijgQMI3rfNxpFTgfYr8a
nN9396We+kR1OB/iHg04/4zKyb73YVpwPsR92nA+AHI9nCo=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.5099324961150639, -106.77059610154194`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-0.28881132523331055`, 
    13.862943611198906`}, {-105.07582473485078`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.006367567650246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.294049640102028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.699514748210191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.85366542803745, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.987196820661973, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.104979856318357, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.308952660644293`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.596634733096073`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.002099841204238`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.156250521031495`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.289781913656018`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.407564949312402`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.206072645530174`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.611537753638338`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {12.89921982609012, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.122363377404328`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.304684934198283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.458835614025542`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.592367006650065`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {13.710150042306449`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{-94.40598881275588, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "41"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-71.38013788281542, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "31"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-48.35428695287496, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "21"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-105.9189142777261, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-103.61632918473205`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-101.31374409173802`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-99.01115899874397, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-96.70857390574992, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-92.10340371976183, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-89.80081862676778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-87.49823353377374, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-85.19564844077969, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-82.89306334778564, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-80.5904782547916, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-78.28789316179756, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-75.9853080688035, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-73.68272297580947, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-69.07755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-66.77496769682732, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-64.47238260383328, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-62.16979751083923, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-59.86721241784519, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-57.564627324851145`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-55.262042231857095`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-52.95945713886305, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-50.65687204586901, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-46.051701859880914`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-43.74911676688687, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-41.44653167389282, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-39.14394658089878, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-36.841361487904734`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-34.538776394910684`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-32.23619130191664, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-29.933606208922594`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-27.631021115928547`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-20.72326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.11809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.210340371976182, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{
  3.6303112152353077`*^9, 3.6303127762319593`*^9, {3.6303128178904247`*^9, 
   3.630312847307275*^9}, 3.630312974604971*^9, 3.63031303584369*^9, 
   3.6303130957666283`*^9, 3.6303154068581533`*^9, {3.630315460489502*^9, 
   3.630315476300815*^9}, {3.6303156955233793`*^9, 3.630315705513261*^9}, {
   3.6303157518746243`*^9, 3.630315758419271*^9}, {3.6303166148209133`*^9, 
   3.630316749488089*^9}, {3.630316816994368*^9, 3.630316830491085*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "now", " ", "we", " ", "can", " ", "fit", " ", "the", " ", "slope", " ", 
     "to", " ", "get", " ", "the", " ", "box"}], "-", 
    RowBox[{"counting", " ", "dimension"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xi", "=", "1"}], ";", 
    RowBox[{"xf", "=", 
     RowBox[{"xi", "+", "10"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fit", "=", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{
       RowBox[{"Log10", "@", 
        RowBox[{"dat2", "[", 
         RowBox[{"[", 
          RowBox[{"xi", ";;", "xf"}], "]"}], "]"}]}], ",", "logl", ",", 
       "logl"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Normal", "@", "fit"}], ",", 
     RowBox[{"{", 
      RowBox[{"logl", ",", "0", ",", "7"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "@", ".02"}], ",", 
        RowBox[{"Point", "@", 
         RowBox[{"Log10", "@", "dat2"}]}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"Normal", "@", "fit"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.624688348375898*^9, 3.624688398570468*^9}, {
   3.630300146330718*^9, 3.6303001527446136`*^9}, {3.630300218058888*^9, 
   3.630300218231752*^9}, {3.630300764175255*^9, 3.630300791612294*^9}, {
   3.630301224130743*^9, 3.630301252785954*^9}, {3.6303024725553923`*^9, 
   3.630302485496512*^9}, {3.630316764085947*^9, 3.630316780787269*^9}, 
   3.63031684093427*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVxX040wkcAPBxiby/m/0yimrVdNYhL8fvS2Rjxn5IphM6dR7RSZaQ9EKb
sPN0TVdKXlJUuk1Hebn7kkJdR0R5SqV36U6v01Yed/fH5/ksSNxKJWnTaLTQ
//x/1bqzLRL2Pl9Hrs7Hze76qD9qIK6RJ5C8hzHJmYn62JSsmb9Lnk5uFTeO
7S3VRz1l+ptk+R6yvTb62vHn+rhyrbMoXl5GRmo1lA/JDTCIZSCLlVeRBa0C
L3LaECmz7KUxcgX5gn1kt/UlE7xToFBFyzvJYYlVweMKczyQ4FCijBgktdRB
7k6H6XhSzI/L87pHfvI5uteexcS/3+VvCNGMk/zrb8Sl/QvQz/vqEp3m52S4
99M/1l5zwtu/t8nGHSbJVvnmkZyiJWg3dEyW8mqKvNvilf9Kugy/DT45eVPw
jryRIPEU5TijtDdkw/TuD6T555XxFnYuyDF5fWLHIxVJP8NLZR7lYFZG0gop
XU0Kg1njd2ZWIndF53hq4Gfyo0v3/TKRK2YozBLqq2bIbRrd6je33dCX8nYR
D8+Sjpct/ppxW4XKsXPP+PO14Lyo58qFix4o9XEO5HK1oRo8/BLZXujCPso3
jP8K+oj0RVeKvFFnt1ZrjmwO3BgVDvXO9cH6+Kj+pgYdmC3WvMhN9sWcuprg
8rG5YOwYcm14gsQymyfRT/X14EoeW16uANxhY2KkcZwHv2wqzz2W4IcHc9xY
bZH6cJ8c6Ul38Me0NO5kQLoBXLLYuaZy0B/lxXzwkBhCn1SjF7pnNU4ah3we
aTYC7tswl5u+AWjq4B7ne8sYNkTMO1g7FYCK6yWHzmiZwtM6ebDgQiDOMNT4
vNwUKiu0BVkpa1ChFPnPczKD98WD+9WMIMzNvSzWajeD39LEDqGjQdhYYjw7
xjMHk5C8qekiLu5zXR8+ddscKvu+13b05GGa0enIkRQLOOZpn+2g4mGn88tz
VZ8sgFPrsyizLhiX5y++5F9mCa40F7eKpBCcsY216bW3gltrC7MYdD6m8yTk
3rNWUB3WNkvv4eOXBiXDfLU1jHt2T07sD8WpiCFe4YA1tDI5BubuAlSveLt8
INkGaB/TZYYqAZ6q1L0joNEhO7Us+oAyDC9HW44oiunA/bGons0Jxyd+TMkr
J1uQLGwezfspHDMzmKW6TbZgOXioJnciHOu9bL6L8WVA+2C8rBWE+OEbo4f5
wwxg/Fl+PqFSiKe3qy8WJxJwtSs/6eK0ELvcZvdoJxFQm2HZ46sW4gPVnLCs
zQTsczrD6tMI0Xqn6cTGLQT4F/ZPjs0IsXDXEjtvMQGdPOY23TkUbiqMKpiQ
EtAx0JYnMqVw8RFF1BoFAc0PVOW0pRT6x7QsbG8i4LCsSF20jMI4RscUp5mA
TGDGWrEplFf0Su3aCHCtDmQu+5rCuVUPOz50E6BM+rk2wo3CZ/VGi2vuEtD4
mqOo86OQlmLxnn6PgJLjV805qymcz7bF0jECUgUx29sCKIxsdBJlPyaA/Wv+
qoEgCruV3qXC1wQ0ZPR3qEMpfJThF9vzDwFSp432+8Mo/OIaxPJ5S0DysCrf
WEihawvVxVIRwFrFDHCMpDA8a53sxCcC9F4qTp2PonCLZ9x6y88EvDgSqOsR
TaFEs3Fp0QwBPbzRH7rWUVjblqyanSWgTrPlOl9E4b/aEz1c
       "]]}}, InsetBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"10.019196332370722`", " ", "logl"}]}], "-", 
      "3.2765640386413843`"}], Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     PointSize[0.02], 
     PointBox[
      NCache[{{Log[2]/Log[10], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            6424471008766907086369845762257700068508575377]]}, {
        Log[4]/Log[10], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            1884574430643362399753665453014028786404753]]}, {
        Log[8]/Log[10], -Log[10]^(-1) Log[
           Rational[
           115992258900076618371266692654901307634294344606869, 
            38168481757324782052647339005083580245]]}, {
        Log[10]^(-1) Log[16], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            874473994337018293299930663596831889]]}, {
        Log[10]^(-1) Log[32], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            758789361329092106259807885062001]]}, {
        Log[10]^(-1) Log[64], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            1020468976791265180949125068161]]}, {
        Log[10]^(-1) Log[128], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            983648029308240436467904625]]}, {
        Log[10]^(-1) Log[256], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            1541451503600965340527809]]}, {
        Log[10]^(-1) Log[512], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            772753655489221695473]]}, {
        Log[10]^(-1) Log[1024], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            1232715970113312481]]}, {Log[10]^(-1) Log[2048], -Log[10]^(-1) Log[
           Rational[
           258751962161709379443594929768625993953425845661477, 
            288578927968693]]}, {Log[10]^(-1) Log[4096], -Log[10]^(-1) Log[
           Rational[
           1531076699181712304399969998630923041144531631133, 502135821]]}, {
        Log[10]^(-1) Log[8192], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            3682868113]]}, {Log[10]^(-1) Log[16384], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            197132289]]}, {Log[10]^(-1) Log[32768], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            197132289]]}, {Log[10]^(-1) Log[65536], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            197132289]]}, {Log[10]^(-1) Log[131072], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            197132289]]}, {Log[10]^(-1) Log[262144], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            197132289]]}, {Log[10]^(-1) Log[524288], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            197132289]]}, {Log[10]^(-1) Log[1048576], -Log[10]^(-1) Log[
           Rational[
           3363775508102221932766734086992137921394535993599201, 
            197132289]]}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/a9yfoCwy2V7BbGQi3YPxA5A+I/tY/tkmi83KB34
Y/b+h8yzN/azZ2ycq/5dAyr/2X7toTnz+rX1D9RFHFeREP1hv8I6o6lvqRFU
/R/7w8KGeXNbTA/s6+p+NuE2g4OJ/PPkzR0WUP3MDmXKdd8OhlkfsMvcvGvq
GlaHdtEFle2L7aDmcTj03fy46ux2hwN73W/3zarlcvi+d1X2+5+OUPN5HHwn
NFf83Ot8wEaNOXm+H7/DHrEs92+/XKD2CTh83P+gcMtc1wNxTVOlL/ELwfkQ
+4Xh/HmFK1tDKkTgfIh7ROH8ewl73197IAbnQ9wnAecDAC0sp+g=
       "]]]},
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{0, 7}, {-73.41093693392267, 0.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwVxX040wkcAPBxiby/m/0yimrVdNYhL8fvS2Rjxn5IphM6dR7RSZaQ9EKb
sPN0TVdKXlJUuk1Hebn7kkJdR0R5SqV36U6v01Yed/fH5/ksSNxKJWnTaLTQ
//x/1bqzLRL2Pl9Hrs7Hze76qD9qIK6RJ5C8hzHJmYn62JSsmb9Lnk5uFTeO
7S3VRz1l+ptk+R6yvTb62vHn+rhyrbMoXl5GRmo1lA/JDTCIZSCLlVeRBa0C
L3LaECmz7KUxcgX5gn1kt/UlE7xToFBFyzvJYYlVweMKczyQ4FCijBgktdRB
7k6H6XhSzI/L87pHfvI5uteexcS/3+VvCNGMk/zrb8Sl/QvQz/vqEp3m52S4
99M/1l5zwtu/t8nGHSbJVvnmkZyiJWg3dEyW8mqKvNvilf9Kugy/DT45eVPw
jryRIPEU5TijtDdkw/TuD6T555XxFnYuyDF5fWLHIxVJP8NLZR7lYFZG0gop
XU0Kg1njd2ZWIndF53hq4Gfyo0v3/TKRK2YozBLqq2bIbRrd6je33dCX8nYR
D8+Sjpct/ppxW4XKsXPP+PO14Lyo58qFix4o9XEO5HK1oRo8/BLZXujCPso3
jP8K+oj0RVeKvFFnt1ZrjmwO3BgVDvXO9cH6+Kj+pgYdmC3WvMhN9sWcuprg
8rG5YOwYcm14gsQymyfRT/X14EoeW16uANxhY2KkcZwHv2wqzz2W4IcHc9xY
bZH6cJ8c6Ul38Me0NO5kQLoBXLLYuaZy0B/lxXzwkBhCn1SjF7pnNU4ah3we
aTYC7tswl5u+AWjq4B7ne8sYNkTMO1g7FYCK6yWHzmiZwtM6ebDgQiDOMNT4
vNwUKiu0BVkpa1ChFPnPczKD98WD+9WMIMzNvSzWajeD39LEDqGjQdhYYjw7
xjMHk5C8qekiLu5zXR8+ddscKvu+13b05GGa0enIkRQLOOZpn+2g4mGn88tz
VZ8sgFPrsyizLhiX5y++5F9mCa40F7eKpBCcsY216bW3gltrC7MYdD6m8yTk
3rNWUB3WNkvv4eOXBiXDfLU1jHt2T07sD8WpiCFe4YA1tDI5BubuAlSveLt8
INkGaB/TZYYqAZ6q1L0joNEhO7Us+oAyDC9HW44oiunA/bGons0Jxyd+TMkr
J1uQLGwezfspHDMzmKW6TbZgOXioJnciHOu9bL6L8WVA+2C8rBWE+OEbo4f5
wwxg/Fl+PqFSiKe3qy8WJxJwtSs/6eK0ELvcZvdoJxFQm2HZ46sW4gPVnLCs
zQTsczrD6tMI0Xqn6cTGLQT4F/ZPjs0IsXDXEjtvMQGdPOY23TkUbiqMKpiQ
EtAx0JYnMqVw8RFF1BoFAc0PVOW0pRT6x7QsbG8i4LCsSF20jMI4RscUp5mA
TGDGWrEplFf0Su3aCHCtDmQu+5rCuVUPOz50E6BM+rk2wo3CZ/VGi2vuEtD4
mqOo86OQlmLxnn6PgJLjV805qymcz7bF0jECUgUx29sCKIxsdBJlPyaA/Wv+
qoEgCruV3qXC1wQ0ZPR3qEMpfJThF9vzDwFSp432+8Mo/OIaxPJ5S0DysCrf
WEihawvVxVIRwFrFDHCMpDA8a53sxCcC9F4qTp2PonCLZ9x6y88EvDgSqOsR
TaFEs3Fp0QwBPbzRH7rWUVjblqyanSWgTrPlOl9E4b/aEz1c
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Epilog -> {
        PointSize[0.02], 
        Point[{{Log[2]/Log[10], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              6424471008766907086369845762257700068508575377]]}, {
          Log[4]/Log[10], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              1884574430643362399753665453014028786404753]]}, {
          Log[8]/Log[10], -Log[10]^(-1) Log[
             Rational[
             115992258900076618371266692654901307634294344606869, 
              38168481757324782052647339005083580245]]}, {
          Log[10]^(-1) Log[16], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              874473994337018293299930663596831889]]}, {
          Log[10]^(-1) Log[32], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              758789361329092106259807885062001]]}, {
          Log[10]^(-1) Log[64], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              1020468976791265180949125068161]]}, {
          Log[10]^(-1) Log[128], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              983648029308240436467904625]]}, {
          Log[10]^(-1) Log[256], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              1541451503600965340527809]]}, {
          Log[10]^(-1) Log[512], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              772753655489221695473]]}, {
          Log[10]^(-1) Log[1024], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              1232715970113312481]]}, {
          Log[10]^(-1) Log[2048], -Log[10]^(-1) Log[
             Rational[
             258751962161709379443594929768625993953425845661477, 
              288578927968693]]}, {Log[10]^(-1) Log[4096], -Log[10]^(-1) Log[
             Rational[
             1531076699181712304399969998630923041144531631133, 
              502135821]]}, {Log[10]^(-1) Log[8192], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              3682868113]]}, {Log[10]^(-1) Log[16384], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              197132289]]}, {Log[10]^(-1) Log[32768], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              197132289]]}, {Log[10]^(-1) Log[65536], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              197132289]]}, {Log[10]^(-1) Log[131072], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              197132289]]}, {Log[10]^(-1) Log[262144], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              197132289]]}, {Log[10]^(-1) Log[524288], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              197132289]]}, {Log[10]^(-1) Log[1048576], -Log[10]^(-1) Log[
             Rational[
             3363775508102221932766734086992137921394535993599201, 
              197132289]]}}]}, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 7}, {-73.41093693392267, 0.}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[-3.2765640386413843` - 
      10.019196332370722` $CellContext`logl], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.6303167704218483`*^9, 3.6303167812522697`*^9}, {
  3.630316819413267*^9, 3.630316841342079*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Direct computation of \[Alpha](a)", "Subsection",
 CellChangeTimes->{{3.630836574413486*^9, 3.630836581757721*^9}, {
  3.63083668876614*^9, 3.630836688830266*^9}}],

Cell[TextData[{
 "Using the definition of \[Alpha]:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "/", 
     SubscriptBox["F", "n"]}], "\[Tilde]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox[
       SubscriptBox["\[CapitalDelta]", "a"], "n"], ")"}], 
     RowBox[{"\[Alpha]", "(", "a", ")"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as n\[Rule]\[Infinity],\nwe get\n\[Alpha](a)  = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["lim", 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], " ", 
    FractionBox[
     RowBox[{"log", "(", " ", 
      RowBox[{"1", "/", 
       SubscriptBox["F", "n"]}], " ", ")"}], 
     RowBox[{"log", "(", " ", 
      SuperscriptBox[
       SubscriptBox["\[CapitalDelta]", "a"], "n"], " ", ")"}]]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.630836617101616*^9, 3.630836766703209*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Return", " ", "banlists"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BandList", "[", 
    RowBox[{"i_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vpp", ",", "vpa", ",", "bandlist"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
        "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vpp", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{"hp", "[", 
          RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vpa", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{"ha", "[", 
          RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
        SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
        " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
        " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
        "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"bandlist", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "bandlist"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.630061816369611*^9, 3.6300618590053577`*^9}, {
  3.63006216657314*^9, 3.630062166752334*^9}, {3.630062874548841*^9, 
  3.63006287478664*^9}, {3.630135391192319*^9, 3.6301353950944757`*^9}, {
  3.6301356293623466`*^9, 3.630135630440021*^9}, {3.630148064857503*^9, 
  3.630148065892816*^9}, {3.630933304311784*^9, 3.630933325842434*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "compute", " ", "of", " ", "alphas", " ", "for", " ", "a", " ", "given", 
    " ", "set", " ", "of", " ", "bands"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AllAlphas", "[", "bandlist_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L", "=", 
        RowBox[{"Length", "@", "bandlist"}]}], ",", "alphalist"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"alphalist", "=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Log", "[", "L", "]"}]}], "/", 
        RowBox[{"Log", "[", "bandlist", "]"}]}]}], ";", "\[IndentingNewLine]",
       "alphalist"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.630837376008214*^9, 3.630837397623144*^9}, {
   3.630837465911188*^9, 3.6308374966009817`*^9}, {3.630837572729546*^9, 
   3.6308376658857517`*^9}, {3.630837711678361*^9, 3.6308377129889107`*^9}, {
   3.630933329525689*^9, 3.6309333433433228`*^9}, 3.6309335125603333`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"BandList", "[", 
    RowBox[{"17", ",", "1.", ",", "1."}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6308376685863123`*^9, 3.6308376987285433`*^9}, {
  3.630933347085486*^9, 3.630933348972189*^9}, {3.630933579022884*^9, 
  3.630933586574918*^9}, {3.630933712591587*^9, 3.6309337443198442`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]s", "=", 
   RowBox[{"AllAlphas", "[", "b", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6309333522197638`*^9, 3.630933365147841*^9}}],

Cell["\<\
Not satisfying: there are values \[Alpha] > 1 !!
The Legendre transform of \[Tau](q) is performing much better.\
\>", "Text",
 CellChangeTimes->{{3.6309340032781887`*^9, 3.630934017421451*^9}, {
  3.6309341748305283`*^9, 3.6309341928302603`*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "\[Alpha]s", "]"}]], "Input",
 CellChangeTimes->{{3.6309333753608227`*^9, 3.630933378144792*^9}, {
  3.6309334561873093`*^9, 3.630933482652522*^9}, {3.630933562750675*^9, 
  3.630933574638811*^9}, {3.63093428941243*^9, 3.630934289569931*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.595], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.595], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.55, 0}, {0.6, 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{53.57598039215691, 85.82924836601308}, {
          131.1357756048062, 132.26075870700595`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.6, 0}, {0.65, 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{85.07924836601308, 117.3325163398693}, {
          131.1357756048062, 132.26075870700595`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.65, 0}, {0.7, 8}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{116.5825163398693, 148.83578431372547`}, {
          130.01082629820695`, 132.26075870700595`}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.7, 0}, {0.75, 14}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{148.08578431372547`, 180.3390522875817}, {
          128.88587699160772`, 132.26075870700595`}}],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.75, 0}, {0.8, 26}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{179.5890522875817, 211.84232026143792`}, {
          126.63597837840922`, 132.26075870700595`}}],
        StatusArea[#, 26]& ,
        TagBoxNote->"26"],
       StyleBox["26", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[26, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.8, 0}, {0.85, 46}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{211.09232026143792`, 243.3455882352941}, {
          122.88614735641174`, 132.26075870700595`}}],
        StatusArea[#, 46]& ,
        TagBoxNote->"46"],
       StyleBox["46", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[46, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.85, 0}, {0.9, 70}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{242.5955882352941, 274.84885620915037`}, {
          118.38635013001478`, 132.26075870700595`}}],
        StatusArea[#, 70]& ,
        TagBoxNote->"70"],
       StyleBox["70", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[70, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.9, 0}, {0.95, 106}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{274.09885620915037`, 306.3521241830064}, {
          111.6366542904193, 132.26075870700595`}}],
        StatusArea[#, 106]& ,
        TagBoxNote->"106"],
       StyleBox["106", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[106, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.95, 0}, {1., 152}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{305.6021241830064, 337.8553921568627}, {
          103.01204293982511`, 132.26075870700595`}}],
        StatusArea[#, 152]& ,
        TagBoxNote->"152"],
       StyleBox["152", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[152, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.05, 210}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{337.1053921568627, 369.358660130719}, {
          92.13753297603242, 132.26075870700595`}}],
        StatusArea[#, 210]& ,
        TagBoxNote->"210"],
       StyleBox["210", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[210, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.05, 0}, {1.1, 286}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{368.608660130719, 400.86192810457516`}, {
          77.888175092442, 132.26075870700595`}}],
        StatusArea[#, 286]& ,
        TagBoxNote->"286"],
       StyleBox["286", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[286, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.1, 0}, {1.15, 388}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{400.11192810457516`, 432.3651960784312}, {
          58.76403688025485, 132.26075870700595`}}],
        StatusArea[#, 388]& ,
        TagBoxNote->"388"],
       StyleBox["388", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[388, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.15, 0}, {1.2, 534}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{431.6151960784312, 463.8684640522875}, {
          31.390270419673257`, 132.26075870700595`}}],
        StatusArea[#, 534]& ,
        TagBoxNote->"534"],
       StyleBox["534", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[534, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.2, 0}, {1.25, 828}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{463.1184640522875, 
          495.37173202614366`}, {-23.732245603689677`, 132.26075870700595`}}],
        
        StatusArea[#, 828]& ,
        TagBoxNote->"828"],
       StyleBox["828", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[828, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.25, 0}, {1.3, 1509}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{494.62173202614366`, 
          526.875}, {-151.41399190270386`, 132.26075870700595`}}],
        StatusArea[#, 1509]& ,
        TagBoxNote->"1509"],
       StyleBox["1509", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1509, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.535, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0.55, 1.3}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.630933485184744*^9, 3.630933518905518*^9, {3.630933563727646*^9, 
   3.6309335909825277`*^9}, {3.630933719423197*^9, 3.6309337362887506`*^9}, 
   3.6309338252854223`*^9, 3.630934290277856*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Sort", "@", "\[Alpha]s"}], ")"}], "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.630934341450547*^9, 3.630934368658675*^9}}],

Cell[BoxData["1.2827316675500668`"], "Output",
 CellChangeTimes->{{3.630934346610208*^9, 3.630934369189248*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Comparison asymptotically exact/numerical solution in the \[Rho] \[Rule] 0 \
limit.\
\>", "Subsection",
 CellChangeTimes->{{3.6297992895860033`*^9, 3.629799315634226*^9}, {
  3.629801328190884*^9, 3.6298013327667313`*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["D", "q"], TraditionalForm]]]], "Subsubsection",
 CellChangeTimes->{{3.630146208855851*^9, 3.630146209553343*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Col", "[", 
    RowBox[{"l1_", ",", "l2_"}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"l1", ",", "l2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6297998245578623`*^9, 3.6297998667170267`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "asymptotically", " ", "exact", " ", "solution", " ", "in", " ", "the", 
     " ", "\[Rho]"}], "\[Rule]", 
    RowBox[{"0", " ", "limit"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"exactFD", "[", 
    RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]", "=", 
        RowBox[{"1", "/", "GoldenRatio"}]}], ",", "z", ",", "barz"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "=", 
       RowBox[{"\[Rho]", "/", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"barz", "=", 
       SuperscriptBox["\[Rho]", "2"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", 
           SuperscriptBox["\[Omega]", 
            RowBox[{"2", "q"}]], 
           SuperscriptBox["z", 
            RowBox[{"-", "\[Tau]"}]]}], "+", 
          RowBox[{
           SuperscriptBox["\[Omega]", 
            RowBox[{"3", "q"}]], 
           SuperscriptBox["barz", 
            RowBox[{"-", "\[Tau]"}]]}], "-", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "0"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.629798193788785*^9, 3.629798405731872*^9}, {
   3.629798466150777*^9, 3.62979860703059*^9}, {3.6297991022349463`*^9, 
   3.6297991036262293`*^9}, {3.629799140424952*^9, 3.629799178427417*^9}, {
   3.629799608777028*^9, 3.629799612375828*^9}, 3.6306668322053137`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"q", ",", "a"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"1", "/", "GoldenRatio"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"\[Rho]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barz", "=", 
   SuperscriptBox["\[Rho]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"2", 
    SuperscriptBox["\[Omega]", 
     RowBox[{"2", "q"}]], 
    SuperscriptBox["z", 
     RowBox[{"-", "\[Tau]"}]]}], "+", 
   RowBox[{
    SuperscriptBox["\[Omega]", 
     RowBox[{"3", "q"}]], 
    SuperscriptBox["barz", 
     RowBox[{"-", "\[Tau]"}]]}]}], "/.", 
  RowBox[{"\[Tau]", "\[Rule]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Log", "[", "a", "]"}]}], "/", 
    RowBox[{"Log", "[", "\[Rho]", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", 
    RowBox[{"\[Rho]", "\[Rule]", "0"}]}], "]"}], "/.", 
  RowBox[{"q", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"%", "\[Equal]", "1"}], ",", "a"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6310111328155537`*^9, 3.631011229475292*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"Log", "[", "a", "]"}], 
      RowBox[{"Log", "[", "\[Rho]", "]"}]]}]], " ", "a", " ", 
   SuperscriptBox["GoldenRatio", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "q"}]]}], "+", 
  RowBox[{
   SuperscriptBox["GoldenRatio", 
    RowBox[{
     RowBox[{"-", "3"}], " ", "q"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[Rho]", "2"], ")"}], 
    FractionBox[
     RowBox[{"Log", "[", "a", "]"}], 
     RowBox[{"Log", "[", "\[Rho]", "]"}]]]}]}]], "Output",
 CellChangeTimes->{{3.631011192356423*^9, 3.631011230210682*^9}}],

Cell[BoxData[
 RowBox[{"a", " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "a"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.631011192356423*^9, 3.631011230230928*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SqrtBox["2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox["2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.631011192356423*^9, 3.6310112302349586`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"err", "[", "q_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "11"}], ",", "list\[Rho]", ",", "numd2", ",", 
      "exactd2", ",", "dat"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"\[Rho]", " ", "=", " ", 
      RowBox[{
       SubscriptBox["t", "w"], "/", 
       SubscriptBox["t", "s"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list\[Rho]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox["1.2", 
         RowBox[{"-", "it"}]], ",", 
        RowBox[{"{", 
         RowBox[{"it", ",", "1", ",", "20"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "numerical", " ", "R\[EAcute]nyi", " ", "entropy", " ", "for", " ", 
       "\[Rho]", " ", "in", " ", "list\[Rho]"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"numd2", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FractalD", "[", 
          RowBox[{"i", ",", "#", ",", "1.", ",", "q"}], "]"}], "&"}], ",", 
        "list\[Rho]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "asymptotically", " ", "exact", " ", "R\[EAcute]nyi", " ", "entropy", 
       " ", "for", " ", "\[Rho]", " ", "in", " ", "list\[Rho]"}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"exactd2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"exactFD", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}], "/@", "list\[Rho]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dat", "=", 
      RowBox[{"Col", "[", 
       RowBox[{
        SuperscriptBox["list\[Rho]", 
         RowBox[{"-", "1"}]], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"numd2", "-", "exactd2"}], "]"}], "/", 
         RowBox[{"Abs", "[", 
          RowBox[{"q", "-", "1"}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"ListLogLogPlot", "[", "dat", "]"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "dat"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6297993629337273`*^9, 3.6297995204443617`*^9}, {
   3.629799573836779*^9, 3.62979970014222*^9}, {3.629799730611082*^9, 
   3.6297997372660913`*^9}, {3.62979988333006*^9, 3.629799912624527*^9}, {
   3.62979998387442*^9, 3.629800063908758*^9}, 3.629800111988452*^9, {
   3.629800155524687*^9, 3.629800273320191*^9}, {3.629800311669314*^9, 
   3.6298003309816628`*^9}, {3.629800398581407*^9, 3.629800515660413*^9}, {
   3.629801529614676*^9, 3.629801544700974*^9}, {3.630140249481539*^9, 
   3.6301402548560123`*^9}, {3.630140378563713*^9, 3.630140381863338*^9}, {
   3.630142910140656*^9, 3.6301429104683867`*^9}, {3.630142944448131*^9, 
   3.6301429447085*^9}, {3.6301429946998453`*^9, 3.6301430159165707`*^9}, {
   3.630143082709906*^9, 3.6301430829089537`*^9}, {3.6301459883267927`*^9, 
   3.630145988528962*^9}, {3.6306536352167883`*^9, 3.6306536353429623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"err", "[", "#", "]"}], "&"}], "/@", "#"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<q=\>\"", "<>", 
          RowBox[{"ToString", "@", "#"}]}], "&"}], "/@", "#"}], ")"}]}], ",", 
     
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*SuperscriptBox[\(\[Rho]\), \(-1\)]\)\>\"", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["D", "q"], "num"], "-", 
          SuperscriptBox[
           SubscriptBox["D", "q"], "asym"]}], "]"}]}], "}"}]}]}], "]"}], 
   "&"}], "@", 
  RowBox[{"{", 
   RowBox[{"0", ",", "2", ",", "10", ",", "20"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.630140471057946*^9, 3.630140581874537*^9}, {
   3.630140678342368*^9, 3.630140685293355*^9}, {3.630140888048738*^9, 
   3.6301409292608757`*^9}, 3.6301413066948023`*^9, {3.630143023492538*^9, 
   3.630143045254882*^9}, 3.630145941951681*^9, {3.63014599711994*^9, 
   3.630145999432906*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQXTrtiWBA2HH7nvJd7+x4Lu4vA/Ov29v4slhuvfph
/82CbN49DQ/ts9dVLn2X9Bsq/9x+nmvunvxOpgPCe2LFnmi/tZdzmp/trsR+
4AZY/Uf7I5VKkwL7uA+sYF7B35b9xT74vAzTyfP8ByD6v9sruxyZIvpG8ICL
pqKIlOMv+2tTI3+0HRSGmvfXvufXu/OfvUQPFKr78oRzMzi4umx/sT1TDGo+
o8PSgyaOVYLiB+x3dfIpfmNy6HiqM0E0WPzAcrB9LA46bRJlUwPED/D5HhN4
/YDV4WJQVIeklvgBiH/ZHVzvTrrn91XswN37TMJbT3M4pP2dZ+W2TwzqHi6H
kp5JhU+6xA6sKbIXrd/G7SCspuDvES0GdR+vA++RWX1VlmIHAKw+jXw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQXTrtiWBA2HH7Lv/Y1T9KXuwvA/Ov29cphlr9sPiy
/2ZBNu+ehof2hvViin1mf6Dyz+1fbDdQ4ZBjOiC8J1bsifZb++eTw/T+yrEd
uAFW/9F+V+Ss7QmiXAdWMK/gb8v+Yh96+IvQ6u+8ByD6v9uH693k87sncMBF
U1FEyvGX/bdnx2yk1wlBzftrz3lH9mpYhsiBQnVfnnBuBgfRzTfV27jFoOYz
OvRzXDLZP138gP2uTj7Fb0wO/kdkC5fySR5YDraPxWFxsX2rX7HUAT7fYwKv
H7A6JKhE7hU4JX0A4l92Bz3mdYrzJWQP3L3PJLz1NIfDzY8/re+myUHdw+Xw
+dLCLMaj8gfWFNmL1m/jdnBkuWpeUK8AdR+vwxTNA2za/xUPAABeTosw
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQXTrtiWBA2HH7s3kG3O/sHu4vA/Ov2596+MaPiePt
/psF2bx7Gh7al1nsbpa8+Bkq/9x+0rm1wpklP/YL74kVe6L91j7Rc8ehiPo/
+2+A1X+0d/u0OeebCcOBFcwr+Nuyv9jzpRt4VNYwHYDo/27vnc+q+LuI9YCL
pqKIlOMve9t21dcVpZwHIOb9tX/BIRh5+xPfgUJ1X55wbgYHpg1CV1fICR+A
mM/o4PhaY+KEWPED9rs6+RS/MTlYLdjszlckdWA52D4WBwlFxZClv6UO8Pke
E3j9gNXB4lHttyM80gcg/mV3mGJ5If6CisyBu/eZhLee5nC4E5r3V81IAeoe
LgfeQ5wzBBXlDqwpshet38btoBnTmvLhohTUfbwOTh43hacfFDsAAGGEjEw=

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQXTrtiWBA2HH7nVd6zrxZ+mB/GZh/3Z6bz2mO+p/X
+28WZPPuaXhoL/raW6Ge9TNU/rn9VEeOp3f8vu8X3hMr9kT7rX2bXmzpuwO/
9t8Aq/9oH1y+17Y35e/+Fcwr+Nuyv9jPkbrq+3/Gf6j+7/Yb5DVKZpkzHnDR
VBSRcvxlf/3dEx2ltcwHIOb9tV9fE/5v1232A4Xqvjzh3AwOJdpBl3X4+Q9A
zGd02GfbZcLnKHrAflcnn+I3JgevVWo/Xa5LHFgOto/F4cupJ/UJuXIH+HyP
Cbx+wOqg8p75SUSixAGIf9kdPkdFWkg8FD1w9z6T8NbTHA6Nx96z7z8hCnUP
l8PGzUEPtc6LHVhTZC9av43bIemzRbTIclmo+3gdfr45vFomSewAAMCMlJM=

         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-0.1341297911309692, -9.65148301322479}, 
     PlotRange -> {{-0.07596731533081443, 
       3.646431135879092}, {-9.498284870157729, 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[\\(\[Rho]\\), \\(-1\\)]\\)\"", 
        TraditionalForm], 
       FormBox[
        TemplateBox[{
          RowBox[{
            SubsuperscriptBox["D", "q", "num"], "-", 
            SubsuperscriptBox["D", "q", "asym"]}]}, "Abs"], TraditionalForm]},
      AxesOrigin -> {-0.1341297911309692, -9.65148301322479}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-0.07596731533081443, 
       3.646431135879092}, {-9.498284870157729, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{"\"q=0\"", "\"q=2\"", "\"q=10\"", "\"q=20\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.630140932596326*^9, 3.630141309891025*^9, 3.630142917702372*^9, 
   3.6301429657623463`*^9, {3.630142997951058*^9, 3.6301430475969057`*^9}, 
   3.6301431035773363`*^9, {3.630145971461646*^9, 3.630146001792612*^9}, 
   3.630653609462985*^9, 3.630653642217428*^9}]
}, Open  ]],

Cell[TextData[{
 "Convergence is good with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[CapitalGamma]", 
     RowBox[{"n", "+", "2"}]], "/", 
    SuperscriptBox["\[CapitalGamma]", "n"]}], TraditionalForm]]],
 " for q<0, and is good with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[CapitalGamma]", 
     RowBox[{"n", "+", "1"}]], "/", 
    SuperscriptBox["\[CapitalGamma]", "n"]}], TraditionalForm]]],
 " for q>0."
}], "Text",
 CellChangeTimes->{{3.630142601480822*^9, 3.6301426260633793`*^9}, {
  3.63014586318524*^9, 3.630145902655209*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Compute", " ", "the", " ", "fractal", " ", "dimension", " ", 
    SubscriptBox["D", "q0"], " ", "for", " ", "a", " ", "system", " ", "of", 
    " ", "size", " ", "fib", 
    RowBox[{"(", 
     RowBox[{"i", "+", "2"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "FractalD2", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FractalD2", "[", 
     RowBox[{"i_", ",", "tw_", ",", "ts_", ",", "q0_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vpp", ",", "vpa", ",", "vppN", ",", "vpaN", ",", "bandlist", ",", 
        "bandlistN", ",", "gam", ",", "gamN", ",", "\[Tau]0"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vpp", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"hp", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vpa", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"ha", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
          "taille", " ", "i"}], "+", 
         RowBox[{"1", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"vppN", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"hp", "[", 
           RowBox[{
            RowBox[{"i", "+", "2"}], ",", "tw", ",", "ts"}], "]"}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpaN", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"ha", "[", 
           RowBox[{
            RowBox[{"i", "+", "2"}], ",", "tw", ",", "ts"}], "]"}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
         SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
         " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
         " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
         "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"bandlist", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bandlistN", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpaN", ",", "vppN"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "calcul", " ", "des", " ", "fonctions", " ", "de", " ", "partition", 
         " ", 
         SubscriptBox["\[CapitalGamma]", "i"], " ", "et", " ", 
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{"i", "+", "1"}]]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"gam", "=", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Fibonacci", "[", 
           RowBox[{"i", "+", "2"}], "]"}], 
          RowBox[{"-", "q"}]], 
         RowBox[{"Plus", "@@", 
          SuperscriptBox[
           RowBox[{"(", "bandlist", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"gamN", "=", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Fibonacci", "[", 
           RowBox[{"i", "+", "4"}], "]"}], 
          RowBox[{"-", "q"}]], 
         RowBox[{"Plus", "@@", 
          SuperscriptBox[
           RowBox[{"(", "bandlistN", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        SubscriptBox["D", "q0"], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Tau]0", "=", 
        RowBox[{"\[Tau]", "/.", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["gamN", "gam"], "/.", 
              RowBox[{"q", "\[Rule]", "q0"}]}], ")"}], "-", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Tau]", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[Tau]0"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6211691819490356`*^9, 3.621169295515432*^9}, {
   3.621169329468741*^9, 3.621169363085153*^9}, {3.621169397340905*^9, 
   3.621169439694463*^9}, {3.621169484754628*^9, 3.621169534142599*^9}, {
   3.6211695650579653`*^9, 3.621169565167144*^9}, {3.621169603888824*^9, 
   3.621169719442539*^9}, {3.621169816596427*^9, 3.621169850688087*^9}, {
   3.621169918276724*^9, 3.621169920596176*^9}, {3.6211701269976807`*^9, 
   3.62117013270679*^9}, {3.621239395761104*^9, 3.621239437159552*^9}, {
   3.621239477620801*^9, 3.6212394863384867`*^9}, {3.62123954621198*^9, 
   3.621239555475575*^9}, {3.621239596547036*^9, 3.621239599810574*^9}, {
   3.621243910992449*^9, 3.621243924607359*^9}, {3.6212523773171473`*^9, 
   3.6212524542169657`*^9}, {3.621252615229805*^9, 3.621252621595336*^9}, {
   3.621252684554472*^9, 3.6212527627959633`*^9}, {3.621254763938423*^9, 
   3.621254832689102*^9}, {3.621254898555005*^9, 3.6212549880271807`*^9}, {
   3.6212550569724073`*^9, 3.621255130353402*^9}, {3.621255165503927*^9, 
   3.621255165669924*^9}, {3.621255236170961*^9, 3.621255317108671*^9}, {
   3.6212553506865053`*^9, 3.621255433971394*^9}, {3.621255554506341*^9, 
   3.621255719417079*^9}, {3.6212557528109922`*^9, 3.621255804806408*^9}, {
   3.621256200293274*^9, 3.6212562057751617`*^9}, {3.621256303129624*^9, 
   3.6212563659405737`*^9}, {3.6212564185715218`*^9, 
   3.6212566257600307`*^9}, {3.621256663489665*^9, 3.621256693739643*^9}, {
   3.621256815349419*^9, 3.621256826647785*^9}, {3.621274846476047*^9, 
   3.621275145065218*^9}, {3.621275179862084*^9, 3.621275239908601*^9}, {
   3.6212752837980957`*^9, 3.6212753122612953`*^9}, {3.62127536277396*^9, 
   3.6212753860347633`*^9}, {3.621275442043687*^9, 3.6212755539844847`*^9}, 
   3.621315525059228*^9, {3.621315559557263*^9, 3.62131556011205*^9}, {
   3.621315675637495*^9, 3.621315761430065*^9}, 3.621315880152614*^9, {
   3.621316026405932*^9, 3.621316026559977*^9}, {3.621316058136022*^9, 
   3.621316113404099*^9}, {3.621316542094945*^9, 3.6213166074047194`*^9}, {
   3.621316650464574*^9, 3.621316651774397*^9}, {3.621316694033931*^9, 
   3.621316695104101*^9}, {3.6213167721142597`*^9, 3.621316907228303*^9}, {
   3.621317006334161*^9, 3.621317031454398*^9}, {3.62131711995912*^9, 
   3.621317148921311*^9}, {3.6213171895292883`*^9, 3.6213172019910994`*^9}, {
   3.6213173273216333`*^9, 3.621317356008131*^9}, {3.62131739719526*^9, 
   3.6213174833129873`*^9}, {3.621317541148703*^9, 3.6213175881099997`*^9}, {
   3.621317618544965*^9, 3.621317711316963*^9}, {3.6213240564859943`*^9, 
   3.621324056627421*^9}, {3.621324812826556*^9, 3.621324812988461*^9}, {
   3.6213249815414677`*^9, 3.62132506531719*^9}, {3.621325152055851*^9, 
   3.6213251675578127`*^9}, {3.6213253984101343`*^9, 3.621325408296276*^9}, {
   3.621325461880583*^9, 3.621325474762186*^9}, {3.629782254181913*^9, 
   3.6297822615746937`*^9}, {3.629782553292482*^9, 3.629782694354497*^9}, {
   3.629782864914342*^9, 3.629782911673861*^9}, {3.6297978718412313`*^9, 
   3.629797876479764*^9}, 3.629800296542354*^9, {3.6300628322352657`*^9, 
   3.630062854536314*^9}, {3.630142692530868*^9, 3.6301427029295197`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"err2", "[", "q_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "11"}], ",", "list\[Rho]", ",", "numd2", ",", 
      "exactd2", ",", "dat"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"\[Rho]", " ", "=", " ", 
      RowBox[{
       SubscriptBox["t", "w"], "/", 
       SubscriptBox["t", "s"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list\[Rho]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox["1.2", 
         RowBox[{"-", "it"}]], ",", 
        RowBox[{"{", 
         RowBox[{"it", ",", "1", ",", "15"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "numerical", " ", "R\[EAcute]nyi", " ", "entropy", " ", "for", " ", 
       "\[Rho]", " ", "in", " ", "list\[Rho]"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"numd2", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FractalD2", "[", 
          RowBox[{"i", ",", "#", ",", "1.", ",", "q"}], "]"}], "&"}], ",", 
        "list\[Rho]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "asymptotically", " ", "exact", " ", "R\[EAcute]nyi", " ", "entropy", 
       " ", "for", " ", "\[Rho]", " ", "in", " ", "list\[Rho]"}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"exactd2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"exactFD", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}], "/@", "list\[Rho]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dat", "=", 
      RowBox[{"Col", "[", 
       RowBox[{
        SuperscriptBox["list\[Rho]", 
         RowBox[{"-", "1"}]], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"numd2", "-", "exactd2"}], "]"}], "/", 
         RowBox[{"Abs", "[", 
          RowBox[{"q", "-", "1"}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"ListLogLogPlot", "[", "dat", "]"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "dat"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6297993629337273`*^9, 3.6297995204443617`*^9}, {
   3.629799573836779*^9, 3.62979970014222*^9}, {3.629799730611082*^9, 
   3.6297997372660913`*^9}, {3.62979988333006*^9, 3.629799912624527*^9}, {
   3.62979998387442*^9, 3.629800063908758*^9}, 3.629800111988452*^9, {
   3.629800155524687*^9, 3.629800273320191*^9}, {3.629800311669314*^9, 
   3.6298003309816628`*^9}, {3.629800398581407*^9, 3.629800515660413*^9}, {
   3.629801529614676*^9, 3.629801544700974*^9}, {3.630140249481539*^9, 
   3.6301402548560123`*^9}, {3.630140378563713*^9, 3.630140381863338*^9}, {
   3.63014271274466*^9, 3.63014271887245*^9}, {3.6301428527028513`*^9, 
   3.630142852916484*^9}, {3.630144778443232*^9, 3.630144778639311*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"err2", "[", "#", "]"}], "&"}], "/@", "#"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<q=\>\"", "<>", 
          RowBox[{"ToString", "@", "#"}]}], "&"}], "/@", "#"}], ")"}]}], ",", 
     
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*SuperscriptBox[\(\[Rho]\), \(-1\)]\)\>\"", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["D", "q"], "num"], "-", 
          SuperscriptBox[
           SubscriptBox["D", "q"], "asym"]}], "]"}]}], "}"}]}]}], "]"}], 
   "&"}], "@", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "2"}], ",", 
    RowBox[{"-", "10"}], ",", 
    RowBox[{"-", "20"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.630140471057946*^9, 3.630140581874537*^9}, {
   3.630140678342368*^9, 3.630140685293355*^9}, {3.630140888048738*^9, 
   3.6301409292608757`*^9}, 3.6301413066948023`*^9, 3.630142731727311*^9, {
   3.630143485311075*^9, 3.6301434868278637`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {
       Hue[0.67, 0.6, 0.6], 
       PointBox[{{0.1823215567939546, -0.2663766646850652}, {
        0.36464311358790924`, -1.0522107384202077`}, {
        0.5469646703818639, -1.7118105401208334`}, {
        0.7292862271758185, -2.317738326318769}, {
        0.911607783969773, -2.893922087927029}, {
        1.0939293407637276`, -3.450773438668398}, {
        1.2762508975576825`, -3.992756777379982}, {
        1.458572454351637, -4.520558210880064}, {
        1.6408940111455914`, -5.031482583861694}, {
        1.823215567939546, -5.519034238149196}, {
        2.0055371247335008`, -5.972311889426864}, {
        2.187858681527455, -6.376311409385488}, {
        2.3701802383214097`, -6.714748160383697}, {
        2.5525017951153646`, -6.976004194834}, {
        2.734823351909319, -7.158923485211394}}]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       PointBox[{{0.1823215567939546, 0.5407120056844279}, {
        0.36464311358790924`, -0.599489585177918}, {
        0.5469646703818639, -1.440067254279519}, {
        0.7292862271758185, -2.168491469452529}, {
        0.911607783969773, -2.837390014594079}, {
        1.0939293407637276`, -3.4669036342094706`}, {
        1.2762508975576825`, -4.066451022496768}, {
        1.458572454351637, -4.640258812319407}, {
        1.6408940111455914`, -5.186283451881764}, {
        1.823215567939546, -5.692152552410544}, {
        2.0055371247335008`, -6.1326316734123285`}, {
        2.187858681527455, -6.475522365255754}, {
        2.3701802383214097`, -6.700148640549612}, {
        2.5525017951153646`, -6.814546734022568}, {
        2.734823351909319, -6.84992863533547}}]}, {
       Hue[0.1421359549995791, 0.6, 0.6], 
       PointBox[{{0.1823215567939546, 0.9728539167058475}, {
        0.36464311358790924`, -0.08482398250510106}, {
        0.5469646703818639, -0.8867997391918646}, {
        0.7292862271758185, -1.6048217365630728`}, {
        0.911607783969773, -2.319321376062274}, {
        1.0939293407637276`, -3.074370650352151}, {
        1.2762508975576825`, -3.8792535605211103`}, {
        1.458572454351637, -4.722458059658173}, {
        1.6408940111455914`, -5.598297969949513}, {
        1.823215567939546, -6.470493046919656}, {
        2.0055371247335008`, -7.10807242969126}, {
        2.187858681527455, -7.223878520836867}, {
        2.3701802383214097`, -7.06477843253097}, {
        2.5525017951153646`, -6.922840930898389}, {
        2.734823351909319, -6.860823066656327}}]}, {
       Hue[0.37820393249936934`, 0.6, 0.6], 
       PointBox[{{0.1823215567939546, 1.032618641095131}, {
        0.36464311358790924`, 0.014458294003935772`}, {
        0.5469646703818639, -0.7098293004611176}, {
        0.7292862271758185, -1.3302169596877218`}, {
        0.911607783969773, -1.9328724862608462`}, {
        1.0939293407637276`, -2.592220776882052}, {
        1.2762508975576825`, -3.3885867305676}, {
        1.458572454351637, -4.379448194840671}, {
        1.6408940111455914`, -5.683324269373999}, {
        1.823215567939546, -10.333104872907514`}, {
        2.0055371247335008`, -6.944988825048209}, {
        2.187858681527455, -7.010293248172}, {
        2.3701802383214097`, -7.424782210505573}, {
        2.5525017951153646`, -8.02495015618839}, {
        2.734823351909319, -8.805062425105252}}]}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[\\(\[Rho]\\), \\(-1\\)]\\)\"", 
       TraditionalForm], 
      FormBox[
       TemplateBox[{
         RowBox[{
           SubsuperscriptBox["D", "q", "num"], "-", 
           SubsuperscriptBox["D", "q", "asym"]}]}, "Abs"], TraditionalForm]}, 
    AxesOrigin -> {0., -10.333104872907514`}, 
    CoordinatesToolOptions :> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}, FrameTicks -> {{{{-9.210340371976182, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm]}, {-6.907755278982137, 
         FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
         FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
         FormBox["0.1`", TraditionalForm]}, {0., 
         FormBox["1", TraditionalForm]}, {-8.517193191416238, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-8.111728083308073, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.824046010856292, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.600902459542082, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.418580902748127, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.264430222920869, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.1308988302963465`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.013115794639964, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-6.214608098422191, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.809142990314028, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.521460917862246, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.298317366548036, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.115995809754082, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.961845129926823, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.8283137373023015`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.710530701645918, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.912023005428146, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.506557897319982, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.2188758248682006`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.995732273553991, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.8134107167600364`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.659260036932778, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.5257286443082556`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.407945608651872, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-1.6094379124341003`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-1.203972804325936, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.916290731874155, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.6931471805599453, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.5108256237659905, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.35667494393873245`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.2231435513142097, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.10536051565782616`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}, {{-9.210340371976182, 
         FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
         FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
         FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
         FormBox["\"\"", TraditionalForm]}, {0., 
         FormBox["\"\"", TraditionalForm]}, {-8.517193191416238, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-8.111728083308073, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.824046010856292, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.600902459542082, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.418580902748127, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.264430222920869, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.1308988302963465`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.013115794639964, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-6.214608098422191, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.809142990314028, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.521460917862246, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.298317366548036, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.115995809754082, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.961845129926823, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.8283137373023015`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.710530701645918, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.912023005428146, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.506557897319982, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.2188758248682006`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.995732273553991, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.8134107167600364`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.659260036932778, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.5257286443082556`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.407945608651872, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-1.6094379124341003`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-1.203972804325936, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.916290731874155, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.6931471805599453, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.5108256237659905, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.35667494393873245`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.2231435513142097, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-0.10536051565782616`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}}, {{{0., 
         FormBox[
          TagBox[
           InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {2.302585092994046, 
         FormBox[
          TagBox[
           InterpretationBox["\"10.0\"", 10., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {1.6094379124341003`, 
         FormBox[
          TagBox[
           InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {3.912023005428146, 
         FormBox[
          TagBox[
           InterpretationBox["\"50.0\"", 50., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {0.6931471805599453, 
         FormBox[
          TagBox[
           InterpretationBox["\"2.0\"", 2., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {2.995732273553991, 
         FormBox[
          TagBox[
           InterpretationBox["\"20.0\"", 20., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {1.0986122886681098`, 
         FormBox[
          TagBox[
           InterpretationBox["\"3.0\"", 3., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {3.4011973816621555`, 
         FormBox[
          TagBox[
           InterpretationBox["\"30.0\"", 30., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {0.4054651081081644, 
         FormBox[
          TagBox[
           InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {2.70805020110221, 
         FormBox[
          TagBox[
           InterpretationBox["\"15.0\"", 15., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {1.9459101490553132`, 
         FormBox[
          TagBox[
           InterpretationBox["\"7.0\"", 7., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {4.248495242049359, 
         FormBox[
          TagBox[
           InterpretationBox["\"70.0\"", 70., AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
          TraditionalForm]}, {0.09531017980432493, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.1823215567939548, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.26236426446749106`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.336472236621213, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.47000362924573563`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.5306282510621705, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.5877866649021191, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.6418538861723948, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.3862943611198906`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.791759469228055, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0794415416798357`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.1972245773362196`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.3978952727983707`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.4849066497880004`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.5649493574615367`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.6390573296152584`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.772588722239781, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.833213344056216, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.8903717578961645`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.9444389791664403`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {3.6888794541139363`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.0943445622221, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}, {{0., 
         FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
         FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
         FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
         FormBox["\"\"", TraditionalForm]}, {0.6931471805599453, 
         FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
         FormBox["\"\"", TraditionalForm]}, {1.0986122886681098`, 
         FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
         FormBox["\"\"", TraditionalForm]}, {0.4054651081081644, 
         FormBox["\"\"", TraditionalForm]}, {2.70805020110221, 
         FormBox["\"\"", TraditionalForm]}, {1.9459101490553132`, 
         FormBox["\"\"", TraditionalForm]}, {4.248495242049359, 
         FormBox["\"\"", TraditionalForm]}, {0.09531017980432493, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.1823215567939548, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.26236426446749106`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.336472236621213, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.47000362924573563`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.5306282510621705, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.5877866649021191, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.6418538861723948, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.3862943611198906`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.791759469228055, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0794415416798357`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.1972245773362196`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.3978952727983707`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.4849066497880004`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.5649493574615367`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.6390573296152584`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.772588722239781, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.833213344056216, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.8903717578961645`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.9444389791664403`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {3.6888794541139363`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.0943445622221, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}}}, GridLines -> {None, None}, Method -> {}, 
    PlotRange -> {{0., 2.734823351909319}, {-10.333104872907514`, 
     1.032618641095131}}, PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], {
       Scaled[0.02], 
       Scaled[0.02]}}, Ticks -> {{{0., 
        FormBox[
         TagBox[
          InterpretationBox["\"1.0\"", 1., AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {2.302585092994046, 
        FormBox[
         TagBox[
          InterpretationBox["\"10.0\"", 10., AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {1.6094379124341003`, 
        FormBox[
         TagBox[
          InterpretationBox["\"5.0\"", 5., AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {3.912023005428146, 
        FormBox[
         TagBox[
          InterpretationBox["\"50.0\"", 50., AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {0.6931471805599453, 
        FormBox[
         TagBox[
          InterpretationBox["\"2.0\"", 2., AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {2.995732273553991, 
        FormBox[
         TagBox[
          InterpretationBox["\"20.0\"", 20., AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {1.0986122886681098`, 
        FormBox[
         TagBox[
          InterpretationBox["\"3.0\"", 3., AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {3.4011973816621555`, 
        FormBox[
         TagBox[
          InterpretationBox["\"30.0\"", 30., AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {0.4054651081081644, 
        FormBox[
         TagBox[
          InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {2.70805020110221, 
        FormBox[
         TagBox[
          InterpretationBox["\"15.0\"", 15., AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {1.9459101490553132`, 
        FormBox[
         TagBox[
          InterpretationBox["\"7.0\"", 7., AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {4.248495242049359, 
        FormBox[
         TagBox[
          InterpretationBox["\"70.0\"", 70., AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
         TraditionalForm]}, {0.09531017980432493, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.1823215567939548, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.26236426446749106`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.336472236621213, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.47000362924573563`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.5306282510621705, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.5877866649021191, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.6418538861723948, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.3862943611198906`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.791759469228055, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.0794415416798357`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.1972245773362196`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.3978952727983707`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.4849066497880004`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.5649493574615367`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.6390573296152584`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.772588722239781, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.833213344056216, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.8903717578961645`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.9444389791664403`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {3.6888794541139363`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {4.0943445622221, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}}, {{-9.210340371976182, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm]}, {-6.907755278982137, 
        FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
        FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
        FormBox["0.1`", TraditionalForm]}, {0., 
        FormBox["1", TraditionalForm]}, {-8.517193191416238, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-8.111728083308073, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.824046010856292, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.600902459542082, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.418580902748127, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.264430222920869, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.1308988302963465`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.013115794639964, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.214608098422191, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.809142990314028, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.521460917862246, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.298317366548036, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.115995809754082, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.961845129926823, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.8283137373023015`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.710530701645918, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.912023005428146, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.506557897319982, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.2188758248682006`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.995732273553991, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.8134107167600364`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.659260036932778, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.5257286443082556`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.407945608651872, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-1.6094379124341003`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-1.203972804325936, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-0.916290731874155, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-0.6931471805599453, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-0.5108256237659905, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-0.35667494393873245`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-0.2231435513142097, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-0.10536051565782616`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}}}],
   TemplateBox[{"\"q=0\"", "\"q=-2\"", "\"q=-10\"", "\"q=-20\""}, 
    "PointLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.5470136627990908`", ",", "0.24`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24`", ",", "0.6`", ",", "0.33692049419863584`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.63014272918804*^9, 3.6301427401566133`*^9}, 
   3.630142874642963*^9, 3.63014350467661*^9, 3.630144784834847*^9, {
   3.630145844896366*^9, 3.630145854397212*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"errq0", ",", "errq2", ",", "errq10", ",", "errq20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\"\<q=\>\"", "<>", "#"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<0\>\"", ",", "\"\<2\>\"", ",", "\"\<10\>\"", ",", "\"\<20\>\""}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(\[Rho]\), \(-1\)]\)\>\"", ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["D", "q"], "num"], "-", 
        SuperscriptBox[
         SubscriptBox["D", "q"], "asym"]}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"dir", "<>", "\"\</data/numerical_vs_asymptotic_FD.pdf\>\""}], 
    ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6298006695651712`*^9, 3.6298007444172287`*^9}, {
  3.629800786545308*^9, 3.629800883601749*^9}, {3.62980093667649*^9, 
  3.6298009401781673`*^9}, {3.629800984531847*^9, 3.6298009918529882`*^9}, {
  3.629801021860899*^9, 3.629801225732584*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.1823215567939546, -0.26637242616004}, {
         0.36464311358790924`, -1.0521747805804145`}, {
         0.5469646703818639, -1.7116533721809002`}, {
         0.7292862271758185, -2.3171076508376265`}, {
         0.911607783969773, -2.8917377861000793`}, {
         1.0939293407637276`, -3.4444915215273983`}, {
         1.2762508975576825`, -3.976457611564834}, {
         1.458572454351637, -4.480551075438629}, {
         1.6408940111455914`, -4.93899143263612}, {
         1.823215567939546, -5.323195694886305}, {
         2.0055371247335008`, -5.603240619836531}, {
         2.187858681527455, -5.767067927212712}, {
         2.3701802383214097`, -5.8311369445231165`}, {
         2.5525017951153646`, -5.82869514965709}, {
         2.734823351909319, -5.791113024247083}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQXTrtiWBA2HH7Lv/Y1T9KXuwvA/Ov29cphlr9sPiy
/2ZBNu+ehof2hvViin1mf6Dyz+1fbDdQ4ZBjOiC8J1bsifZb++eTw/T+yrEd
uAFW/9F+V+Ss7QmiXAdWMK/gb8v+Yh96+IvQ6u+8ByD6v9uH693k87sncMBF
U1FEyvGX/bdnx2yk1wlBzftrz3lH9mpYhsiBQnVfnnBuBgfRzTfV27jFoOYz
OvRzXDLZP138gP2uTj7Fb0wO/kdkC5fySR5YDraPxWFxsX2rX7HUAT7fYwKv
H7A6JKhE7hU4JX0A4l92Bz3mdYrzJWQP3L3PJLz1NIfDzY8/re+myUHdw+Xw
+dLCLMaj8gfWFNmL1m/jdnBkuWpeUK8AdR+vwxTNA2za/xUPAABeTosw
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.1823215567939546, -0.5389318674601441}, {
         0.36464311358790924`, -0.9072276631841814}, {
         0.5469646703818639, -1.2385497232203568`}, {
         0.7292862271758185, -1.5284205216129618`}, {
         0.911607783969773, -1.7810905081028852`}, {
         1.0939293407637276`, -2.0258606426635053`}, {
         1.2762508975576825`, -2.310778202035073}, {
         1.458572454351637, -2.6811430530341673`}, {
         1.6408940111455914`, -3.1823595400645943`}, {
         1.823215567939546, -3.8685824354480367`}, {
         2.0055371247335008`, -4.779940919175717}, {
         2.187858681527455, -5.84137179195642}, {
         2.3701802383214097`, -6.611382599199766}, {
         2.5525017951153646`, -6.745747866174746}, {
         2.734823351909319, -6.76247010367711}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.1823215567939546, -0.5202545161361264}, {
         0.36464311358790924`, -0.8745306064524255}, {
         0.5469646703818639, -1.1888419400772297`}, {
         0.7292862271758185, -1.456753630311231}, {
         0.911607783969773, -1.6721024117022423`}, {
         1.0939293407637276`, -1.8370487605784163`}, {
         1.2762508975576825`, -1.974852851899107}, {
         1.458572454351637, -2.152150065874558}, {
         1.6408940111455914`, -2.459537840591888}, {
         1.823215567939546, -2.982290255589383}, {
         2.0055371247335008`, -3.882409716553804}, {
         2.187858681527455, -5.313530751168797}, {
         2.3701802383214097`, -6.21022404955381}, {
         2.5525017951153646`, -7.6068134292024645`}}]}, {}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {-0.1341297911309692, -9.65148301322479}, 
     PlotRange -> {{-0.07596731533081443, 
       3.646431135879092}, {-9.498284870157729, 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[\\(\[Rho]\\), \\(-1\\)]\\)\"", 
        TraditionalForm], 
       FormBox[
        TemplateBox[{
          RowBox[{
            SubsuperscriptBox["D", "q", "num"], "-", 
            SubsuperscriptBox["D", "q", "asym"]}]}, "Abs"], TraditionalForm]},
      AxesOrigin -> {-0.1341297911309692, -9.65148301322479}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-0.07596731533081443, 
       3.646431135879092}, {-9.498284870157729, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{"\"q=0\"", "\"q=2\"", "\"q=10\"", "\"q=20\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.629800685750895*^9, 3.629800745132019*^9}, {
   3.629800846813909*^9, 3.6298008846527653`*^9}, 3.62980094099338*^9, 
   3.62980104480335*^9, {3.629801089616934*^9, 3.629801167146915*^9}, 
   3.629801226997788*^9, 3.629801564428494*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["q\[Rule]\[Tau](q)", "Subsubsection",
 CellChangeTimes->{{3.630146224543158*^9, 3.630146252094417*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"f", ",", "alpha"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exactFA", "[", "\[Rho]_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"z", "=", 
         RowBox[{"\[Rho]", "/", "2"}]}], ",", 
        RowBox[{"barz", "=", 
         SuperscriptBox["\[Rho]", "2"]}], ",", 
        RowBox[{"\[Omega]", "=", 
         RowBox[{"N", "[", 
          RowBox[{"1", "/", "GoldenRatio"}], "]"}]}], ",", "f", ",", 
        "alpha"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"alpha", "=", 
        FractionBox[
         RowBox[{"Log", "[", "\[Omega]", "]"}], 
         RowBox[{
          RowBox[{"x", " ", 
           RowBox[{"Log", "[", "z", "]"}]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"2", "x"}]}], "3"], 
           RowBox[{"Log", "[", "barz", "]"}]}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        FractionBox[
         RowBox[{
          RowBox[{"x", " ", 
           RowBox[{"Log", "[", 
            RowBox[{"3", 
             RowBox[{"x", "/", "2"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "x"}], ")"}], 
           RowBox[{"Log", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "x"}], ")"}], 
             RowBox[{"1", "/", "3"}]], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", "x"}]}], ")"}], 
           RowBox[{"Log", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", "x"}]}], ")"}], 
             RowBox[{"1", "/", "3"}]], "]"}]}]}], 
         RowBox[{
          RowBox[{"x", " ", 
           RowBox[{"Log", "[", "z", "]"}]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"2", "x"}]}], "3"], 
           RowBox[{"Log", "[", "barz", "]"}]}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"alpha", ",", "f"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.630066039549944*^9, 3.630066041724813*^9}, {
  3.630066101597598*^9, 3.630066618955818*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "asymptotically", " ", "exact", " ", "solution", " ", "in", " ", "the", 
     " ", "\[Rho]"}], "\[Rule]", 
    RowBox[{"0", " ", "limit"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"exactFD", "[", 
    RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]", "=", 
        RowBox[{"1", "/", "GoldenRatio"}]}], ",", "z", ",", "barz"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "=", 
       RowBox[{"\[Rho]", "/", "2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"barz", "=", 
       SuperscriptBox["\[Rho]", "2"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"2", 
           SuperscriptBox["\[Omega]", 
            RowBox[{"2", "q"}]], 
           SuperscriptBox["z", 
            RowBox[{"-", "\[Tau]"}]]}], "+", 
          RowBox[{
           SuperscriptBox["\[Omega]", 
            RowBox[{"3", "q"}]], 
           SuperscriptBox["barz", 
            RowBox[{"-", "\[Tau]"}]]}], "-", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "1"}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.629798193788785*^9, 3.629798405731872*^9}, {
   3.629798466150777*^9, 3.62979860703059*^9}, {3.6297991022349463`*^9, 
   3.6297991036262293`*^9}, {3.629799140424952*^9, 3.629799178427417*^9}, {
   3.629799608777028*^9, 3.629799612375828*^9}, 3.630147878710762*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Return", " ", "banlists"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "BandLists", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BandLists", "[", 
     RowBox[{"i_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vpp", ",", "vpa", ",", "vppN", ",", "vpaN", ",", "bandlist", ",", 
        "bandlistN"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vpp", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"hp", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vpa", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"ha", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
          "taille", " ", "i"}], "+", 
         RowBox[{"1", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"vppN", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"hp", "[", 
           RowBox[{
            RowBox[{"i", "+", "2"}], ",", "tw", ",", "ts"}], "]"}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpaN", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"ha", "[", 
           RowBox[{
            RowBox[{"i", "+", "2"}], ",", "tw", ",", "ts"}], "]"}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
         SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
         " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
         " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
         "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"bandlist", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bandlistN", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpaN", ",", "vppN"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"bandlist", ",", "bandlistN"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Return", " ", "\[Tau]"}], " ", "\[Rule]", " ", "q"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "TauQ", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TauQ", "[", 
     RowBox[{
     "\[Tau]min_", ",", "\[Tau]max_", ",", "bandlist_", ",", "bandlistN_"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "alpha", ",", "f", ",", 
        RowBox[{"om", "=", 
         RowBox[{"N", "[", 
          RowBox[{"2", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox["5"]}], ")"}]}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"q", 
        RowBox[{"(", "\[Tau]", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"q", "=", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"Plus", "@@", 
           SuperscriptBox[
            RowBox[{"(", "bandlistN", ")"}], 
            RowBox[{"-", "\[Tau]"}]]}], "/", 
          RowBox[{"Plus", "@@", 
           SuperscriptBox[
            RowBox[{"(", "bandlist", ")"}], 
            RowBox[{"-", "\[Tau]"}]]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"q", "=", 
          RowBox[{"q", "/", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{"Fibonacci", "[", 
              RowBox[{"Length", "@", "bandlistN"}], "]"}], 
             RowBox[{"Fibonacci", "[", 
              RowBox[{"Length", "@", "bandlist"}], "]"}]], "]"}]}]}], ";"}], 
        "*)"}], "\[IndentingNewLine]", "q"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.630061816369611*^9, 3.6300618590053577`*^9}, {
   3.63006216657314*^9, 3.630062166752334*^9}, {3.630062874548841*^9, 
   3.63006287478664*^9}, {3.630135391192319*^9, 3.6301353950944757`*^9}, {
   3.6301356293623466`*^9, 3.630135630440021*^9}, {3.630146648725366*^9, 
   3.630146717953038*^9}, {3.6301467488252563`*^9, 3.630146770556944*^9}, 
   3.630146852484201*^9, {3.6301475618108377`*^9, 3.630147571743808*^9}, {
   3.6301476238331947`*^9, 3.630147661432411*^9}, {3.630147728331946*^9, 
   3.6301477422979507`*^9}, {3.63014864239356*^9, 3.630148669501451*^9}, {
   3.6301487347495823`*^9, 3.6301487379426203`*^9}, {3.6301487754492817`*^9, 
   3.630148795528883*^9}, {3.6301488618531218`*^9, 3.630148931147234*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", ",", "bnew"}], "}"}], "=", 
   RowBox[{"BandLists", "[", 
    RowBox[{"11", ",", ".1", ",", "1."}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6301467933457403`*^9, 3.630146808858708*^9}, {
  3.6301477845629263`*^9, 3.630147821232638*^9}, {3.63014790194252*^9, 
  3.630147921163094*^9}, {3.630148680269642*^9, 3.630148680598625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TauQ", "[", 
      RowBox[{
       RowBox[{"-", "20"}], ",", "20", ",", "b", ",", "bnew"}], "]"}], ",", 
     "\[Tau]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Point", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"q", ",", 
         RowBox[{"exactFD", "[", 
          RowBox[{".1", ",", "q"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.630146775010429*^9, 3.630146816615945*^9}, {
  3.630147247899911*^9, 3.630147303661928*^9}, {3.6301473685566072`*^9, 
  3.630147378246504*^9}, {3.630147432194747*^9, 3.630147492256394*^9}, {
  3.630147591326623*^9, 3.63014760098674*^9}, {3.630147825535985*^9, 
  3.630147827290365*^9}, {3.630147907480007*^9, 3.630147923514306*^9}, {
  3.630148684489456*^9, 3.630148684838827*^9}, {3.6301488023944807`*^9, 
  3.630148841170191*^9}, {3.630148908826758*^9, 3.6301489237315693`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwtlIs3lAkYh4cx02HS2lQ02obGqHZNq9t0ongxKckaDPPRtCaL3OX7XFLY
2tqhGSfpIt3sKOu0oU1Sm1vvdJHSVNjirMumGmYjTcrlaKxt9+zvnOc85/kH
fnbhSQGRxjQazfcT/9rdPp3V70Qi7b+FIJNX0WS2jMT9N3bTLQ0EZvH69n39
FYlMapTpMEFgGs9nYhePxJn9r8236D+1HUfLYpNo9fCpTdFzAmeb3mtcTidx
WVH5Gic1gfX588isp8m4zUmSJPuBwJUuVzvn7E7GWtmlXjQh0LSXZnhRvRMH
u8fzwz4EY+UrYW/ZaBI2DM2dzxoLwsgAfvQDRSI+nK3SVBvEaNiQd9bRKAED
xHfFzsOBmJ6ak9xeEIcZS29Wa94FoIOsZPg3eixascVa1+f+eI7/0rQvMxpH
bIM8KttFOG7Lq/O12IHdaUHDoit+eIJ/cHriQCSqXwimjI/6YumtsDqdZQTq
UtV1j074YD039CH7YjgqVtu3HivzxhZ5VrPCbjuyHRuU85QbsXHZhCwzKgyH
vKdHq45uQMVZYUToFimWF6czTElP9JLq4AqEoJbTHBca6o76vOkv98YE4+3D
++lKjSu27ZrRdUociEV+LzM6C5xRdgiyRygR6qXH/UKKBXh7awtn9sXNaN9Z
neQfvAJVdPuUU3IhniEYezKFjnj9gcp56tB6HDu78Wl9vD3mdw9mV0054azs
u7kdHVaosVo6UO41B9/rLAtY3dM3O+rsWu++YYO+UMcz7PjbLc3nvGCkeCV4
HcrRcLOsgT/jZr7oqhuE9/IUDRx7UF5O67KN8wLd/F+LJn9xhNTiHpOKvi2g
bh3kLZavgBh+vYSb5g+sZr7qiyQBsLlY6doohgwR/cmZCmcoshipUj6WQIRC
rtKVuAJzlSHKpi0UKmsq+n5ydwdhKnldM+9bcH77pyZf6gm8Y7WJ/QUykBvF
mkUFboDSqh5t8NpweNXdULI3ZSO49NBsNXe+A1pB9MF9yd6gv8Q8p9wUCSXW
LuzcCB/gNctrHd5EgTimg9G+zxc6Rt61X0uNhqYjD9xN9viBrv7CCQ4nFkpv
eQ6teyyCHOH11fcwDi7wBHmTXf7QW7u4S+aVAKzRQHH5swBwuHH559ahRBi/
8Mw7uz8QGLs7l59y2Qke9w/sEL4Swzd5/i2vDTtB1N4UYt4TBPfXy/Vlj5Jh
QJ2QMfE6GKKnJB7SIyT0LAD1s34JvBhVLWo6TkLsApcol0EJ9Au1xk4nSRiz
EbBUbyWwcjTsNl1FgoWNY1DMhAS0JguF5ZUkeMy3/uujKQHuM1E42UxC2Vy9
hR2fAKX6qkfRNAmJs1SyOIqAlP1Ji4zpFEyan2Y8SSeg19zBOJ5JQY554cVV
mQTQFXK1mzkFqpl5H6YOEFD9/VwYYFPQZrYr93AhAduliesEAgrWzBBdrrlB
QA4M2KjWUnCH6RPEbiTgMFf60XQ9BSKm12T2LQJOvl9b2+NJQSxjnXBTCwG5
1k1rfvSn4Ax9Secf3QTUijhWb8UULKFzs9z6CNh8LmWMICioMV64qFRLQGmx
ZY1jGAWPjObEJwwT8M5v27HCcApCjT77vG2EgCuLz1O0KAoGaGbXBOMEcJdq
A2JjKEihMbae/kjAXgl3xe/xFPz/X/AP4rNDRQ==
     "]]}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->
   PointBox[{{-10, -3.509495115809514}, {-9, -3.190198963953028}, {-8, \
-2.8709511981762796`}, {-7, -2.551752466087729}, {-6, -2.2326033998603254`}, \
{-5, -1.9135046152536872`}, {-4, -1.5944567106561156`}, {-3, \
-1.2754602661499506`}, {-2, -0.9565158426036278}, {-1, -0.6376239807937927}, {
     0, -0.31878520056069876`}, {1, 1.3494514875004323`*^-17}, {
     2, 0.3187311453060813}, {3, 0.6374077830154018}, {
     4, 0.9560294847077399}, {5, 1.2745958465193703`}, {
     6, 1.5931064897281804`}, {7, 1.9115610612873173`}, {
     8, 2.2299592343056207`}, {9, 2.548300708473343}, {
     10, 2.8665852104319125`}}],
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.630146817205894*^9, {3.6301472913584347`*^9, 3.63014730418148*^9}, {
   3.630147472492814*^9, 3.630147495862493*^9}, {3.630147566130562*^9, 
   3.63014760156898*^9}, {3.630147636888597*^9, 3.6301476634600983`*^9}, {
   3.6301477388026342`*^9, 3.630147744592063*^9}, {3.63014779195735*^9, 
   3.630147796563559*^9}, 3.6301478283210983`*^9, {3.63014788170019*^9, 
   3.630147924007698*^9}, {3.630148672970718*^9, 3.630148685124613*^9}, 
   3.630148740774907*^9, {3.630148790381155*^9, 3.630148842714003*^9}, {
   3.630148873088325*^9, 3.6301489341760397`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"brute", " ", 
    RowBox[{
     RowBox[{"force", "!!"}], "!!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"th", ",", "num"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"num", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{"FractalFa", "[", 
      RowBox[{"11", ",", ".1", ",", "1.", ","}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.630149115001189*^9, 3.630149171745967*^9}}]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 994},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
Magnification->1.5,
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3630657024-6365008"->{
  Cell[949664, 17632, 122, 2, 312, "Print",
   CellTags->"Info3630657024-6365008"],
  Cell[949789, 17636, 1581, 42, 252, "Print",
   CellTags->"Info3630657024-6365008"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3630657024-6365008", 1143439, 22181}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 299, 5, 45, "Input"],
Cell[882, 29, 687, 10, 65, "Output"]
}, Open  ]],
Cell[1584, 42, 223, 5, 75, "Input"],
Cell[CellGroupData[{
Cell[1832, 51, 104, 1, 95, "Section"],
Cell[CellGroupData[{
Cell[1961, 56, 100, 1, 65, "Subsection"],
Cell[2064, 59, 2524, 66, 221, "Input"],
Cell[4591, 127, 2808, 74, 250, "Input"],
Cell[7402, 203, 2900, 82, 380, "Input"],
Cell[10305, 287, 1930, 52, 221, "Input"],
Cell[CellGroupData[{
Cell[12260, 343, 219, 6, 45, "Input"],
Cell[12482, 351, 1057, 25, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13576, 381, 194, 5, 45, "Input"],
Cell[13773, 388, 1037, 25, 228, "Output"]
}, Open  ]],
Cell[14825, 416, 2636, 53, 191, "Input"],
Cell[CellGroupData[{
Cell[17486, 473, 2556, 42, 119, "Input"],
Cell[20045, 517, 252503, 4198, 602, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272585, 4720, 1379, 34, 162, "Input"],
Cell[273967, 4756, 1859, 40, 359, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275863, 4801, 2822, 73, 336, "Input"],
Cell[278688, 4876, 1363, 34, 368, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[280100, 4916, 107, 1, 51, "Subsection"],
Cell[CellGroupData[{
Cell[280232, 4921, 167, 2, 52, "Subsubsection"],
Cell[280402, 4925, 716, 12, 802, "Text"],
Cell[281121, 4939, 8274, 171, 3300, "Input"],
Cell[289398, 5112, 687, 19, 357, "Text"],
Cell[CellGroupData[{
Cell[290110, 5135, 391, 7, 225, "Input"],
Cell[290504, 5144, 398, 7, 225, "Output"]
}, Open  ]],
Cell[290917, 5154, 1956, 63, 2026, "Text"],
Cell[292876, 5219, 632, 19, 393, "Text"],
Cell[293511, 5240, 3432, 85, 2067, "Input"],
Cell[296946, 5327, 4782, 108, 1845, "Input"],
Cell[301731, 5437, 3808, 107, 3583, "Text"],
Cell[305542, 5546, 704, 13, 225, "Input"],
Cell[CellGroupData[{
Cell[306271, 5563, 1396, 22, 225, "Input"],
Cell[307670, 5587, 6110, 108, 2857, "Output"]
}, Open  ]],
Cell[313795, 5698, 703, 13, 225, "Input"],
Cell[CellGroupData[{
Cell[314523, 5715, 1445, 23, 225, "Input"],
Cell[315971, 5740, 5985, 109, 2854, "Output"]
}, Open  ]],
Cell[321971, 5852, 368, 7, 648, "Text"],
Cell[CellGroupData[{
Cell[322364, 5863, 1249, 39, 933, "Input"],
Cell[323616, 5904, 2753, 55, 1761, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[326418, 5965, 157, 2, 41, "Subsubsection"],
Cell[326578, 5969, 1620, 43, 1086, "Input"],
Cell[CellGroupData[{
Cell[328223, 6016, 655, 15, 526, "Input"],
Cell[CellGroupData[{
Cell[328903, 6035, 280, 7, 171, "Print"],
Cell[329186, 6044, 280, 7, 171, "Print"],
Cell[329469, 6053, 280, 7, 171, "Print"],
Cell[329752, 6062, 284, 7, 171, "Print"],
Cell[330039, 6071, 282, 7, 171, "Print"],
Cell[330324, 6080, 280, 7, 171, "Print"],
Cell[330607, 6089, 280, 7, 171, "Print"],
Cell[330890, 6098, 284, 7, 171, "Print"],
Cell[331177, 6107, 284, 7, 171, "Print"],
Cell[331464, 6116, 282, 7, 171, "Print"],
Cell[331749, 6125, 281, 7, 171, "Print"],
Cell[332033, 6134, 282, 7, 171, "Print"],
Cell[332318, 6143, 282, 7, 171, "Print"],
Cell[332603, 6152, 282, 7, 171, "Print"],
Cell[332888, 6161, 282, 7, 171, "Print"]
}, Open  ]],
Cell[333185, 6171, 905, 19, 378, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334127, 6195, 3376, 90, 1701, "Input"],
Cell[CellGroupData[{
Cell[337528, 6289, 1674, 36, 1633, "Print"],
Cell[339205, 6327, 422, 6, 171, "Print"],
Cell[339630, 6335, 7494, 145, 2017, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[347173, 6486, 754, 17, 526, "Input"],
Cell[CellGroupData[{
Cell[347952, 6507, 280, 7, 171, "Print"],
Cell[348235, 6516, 280, 7, 171, "Print"],
Cell[348518, 6525, 280, 7, 171, "Print"],
Cell[348801, 6534, 282, 7, 171, "Print"],
Cell[349086, 6543, 280, 7, 171, "Print"],
Cell[349369, 6552, 280, 7, 171, "Print"],
Cell[349652, 6561, 282, 7, 171, "Print"],
Cell[349937, 6570, 282, 7, 171, "Print"],
Cell[350222, 6579, 282, 7, 171, "Print"],
Cell[350507, 6588, 282, 7, 171, "Print"],
Cell[350792, 6597, 282, 7, 171, "Print"],
Cell[351077, 6606, 280, 7, 171, "Print"],
Cell[351360, 6615, 282, 7, 171, "Print"],
Cell[351645, 6624, 282, 7, 171, "Print"],
Cell[351930, 6633, 282, 7, 171, "Print"]
}, Open  ]],
Cell[352227, 6643, 608, 11, 378, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352872, 6659, 3442, 91, 1702, "Input"],
Cell[CellGroupData[{
Cell[356339, 6754, 1498, 34, 1764, "Print"],
Cell[357840, 6790, 282, 4, 171, "Print"],
Cell[358125, 6796, 7211, 142, 2053, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[365385, 6944, 878, 18, 526, "Input"],
Cell[CellGroupData[{
Cell[366288, 6966, 280, 7, 171, "Print"],
Cell[366571, 6975, 280, 7, 171, "Print"],
Cell[366854, 6984, 280, 7, 171, "Print"],
Cell[367137, 6993, 282, 7, 171, "Print"],
Cell[367422, 7002, 280, 7, 171, "Print"],
Cell[367705, 7011, 280, 7, 171, "Print"],
Cell[367988, 7020, 282, 7, 171, "Print"],
Cell[368273, 7029, 282, 7, 171, "Print"],
Cell[368558, 7038, 282, 7, 171, "Print"],
Cell[368843, 7047, 282, 7, 171, "Print"],
Cell[369128, 7056, 284, 7, 171, "Print"],
Cell[369415, 7065, 282, 7, 171, "Print"],
Cell[369700, 7074, 282, 7, 171, "Print"],
Cell[369985, 7083, 284, 7, 171, "Print"],
Cell[370272, 7092, 282, 7, 171, "Print"]
}, Open  ]],
Cell[370569, 7102, 630, 12, 378, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371236, 7119, 4172, 110, 2007, "Input"],
Cell[CellGroupData[{
Cell[375433, 7233, 1666, 37, 1741, "Print"],
Cell[377102, 7272, 589, 10, 171, "Print"],
Cell[377694, 7284, 33321, 619, 2079, 19589, 393, "CachedBoxData", "BoxData", \
"Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[411076, 7910, 117, 1, 41, "Subsubsection"],
Cell[411196, 7913, 255, 5, 70, "Text"],
Cell[411454, 7920, 1443, 43, 161, "Text"],
Cell[412900, 7965, 1378, 35, 187, "Input"],
Cell[414281, 8002, 1892, 57, 199, "Text"],
Cell[416176, 8061, 2267, 60, 391, "Input"],
Cell[CellGroupData[{
Cell[418468, 8125, 1786, 51, 220, "Input"],
Cell[420257, 8178, 305, 5, 45, "Output"],
Cell[420565, 8185, 305, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420907, 8195, 202, 4, 45, "Input"],
Cell[421112, 8201, 164, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421313, 8208, 3077, 66, 278, "Input"],
Cell[424393, 8276, 1079, 15, 45, "Output"]
}, Open  ]],
Cell[425487, 8294, 3874, 85, 385, "Input"],
Cell[429364, 8381, 292, 9, 65, "Input"],
Cell[CellGroupData[{
Cell[429681, 8394, 2169, 48, 165, "Input"],
Cell[431853, 8444, 188543, 3107, 402, 180893, 2982, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620433, 11556, 1885, 37, 128, "Input"],
Cell[622321, 11595, 2330, 52, 402, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[624688, 11652, 345, 8, 65, "Input"],
Cell[625036, 11662, 1287, 32, 381, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[626360, 11699, 425, 7, 65, "Input"],
Cell[626788, 11708, 316, 4, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627141, 11717, 200, 4, 65, "Input"],
Cell[627344, 11723, 117, 2, 65, "Output"]
}, Open  ]],
Cell[627476, 11728, 846, 21, 162, "Text"],
Cell[628325, 11751, 3406, 77, 328, "Input"],
Cell[CellGroupData[{
Cell[631756, 11832, 2570, 60, 133, "Input"],
Cell[634329, 11894, 978, 14, 65, "Output"]
}, Open  ]],
Cell[635322, 11911, 3284, 86, 213, "Input"],
Cell[638609, 11999, 626, 16, 96, "Input"],
Cell[CellGroupData[{
Cell[639260, 12019, 624, 14, 95, "Input"],
Cell[639887, 12035, 1513, 36, 381, "Output"]
}, Open  ]],
Cell[641415, 12074, 168, 2, 45, "Input"],
Cell[641586, 12078, 3881, 85, 385, "Input"],
Cell[CellGroupData[{
Cell[645492, 12167, 2838, 46, 110, "Input"],
Cell[648333, 12215, 250191, 4161, 602, "Output"]
}, Open  ]],
Cell[898539, 16379, 1428, 42, 206, "Input"],
Cell[899970, 16423, 2218, 73, 277, "Input"],
Cell[CellGroupData[{
Cell[902213, 16500, 629, 16, 104, "Input"],
Cell[902845, 16518, 283, 4, 65, "Output"],
Cell[903131, 16524, 281, 4, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[903449, 16533, 622, 15, 104, "Input"],
Cell[904074, 16550, 410, 6, 65, "Output"],
Cell[904487, 16558, 412, 6, 65, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[904960, 16571, 130, 1, 65, "Subsection"],
Cell[905093, 16574, 181, 2, 352, "Text"],
Cell[905277, 16578, 834, 25, 384, "Input"],
Cell[CellGroupData[{
Cell[906136, 16607, 190, 4, 225, "Input"],
Cell[906329, 16613, 2906, 59, 1824, "Output"]
}, Open  ]],
Cell[909250, 16675, 169, 2, 352, "Text"],
Cell[909422, 16679, 4645, 111, 2290, "Input"],
Cell[CellGroupData[{
Cell[914092, 16794, 2027, 54, 1405, "Input"],
Cell[916122, 16850, 14625, 370, 1782, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[930784, 17225, 1742, 47, 819, "Input"],
Cell[932529, 17274, 9587, 185, 1872, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[942153, 17464, 223, 4, 225, "Input"],
Cell[942379, 17470, 180, 3, 225, "Output"]
}, Open  ]],
Cell[942574, 17476, 172, 2, 352, "Text"],
Cell[942749, 17480, 6748, 142, 3613, "Input"],
Cell[CellGroupData[{
Cell[949522, 17626, 117, 2, 225, "Input"],
Cell[CellGroupData[{
Cell[949664, 17632, 122, 2, 312, "Print",
 CellTags->"Info3630657024-6365008"],
Cell[949789, 17636, 1581, 42, 252, "Print",
 CellTags->"Info3630657024-6365008"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[951419, 17684, 2547, 62, 1405, "Input"],
Cell[953969, 17748, 35873, 913, 1761, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[989879, 18666, 1818, 48, 819, "Input"],
Cell[991700, 18716, 13405, 271, 1810, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1005154, 18993, 169, 2, 51, "Subsection"],
Cell[1005326, 18997, 955, 30, 1446, "Text"],
Cell[1006284, 19029, 2242, 52, 2220, "Input"],
Cell[1008529, 19083, 1064, 25, 1234, "Input"],
Cell[1009596, 19110, 357, 7, 337, "Input"],
Cell[1009956, 19119, 180, 4, 337, "Input"],
Cell[1010139, 19125, 294, 6, 757, "Text"],
Cell[CellGroupData[{
Cell[1010458, 19135, 283, 4, 337, "Input"],
Cell[1010744, 19141, 10404, 298, 2763, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1021185, 19444, 220, 6, 337, "Input"],
Cell[1021408, 19452, 112, 1, 487, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1021569, 19459, 232, 5, 51, "Subsection"],
Cell[CellGroupData[{
Cell[1021826, 19468, 167, 3, 58, "Subsubsection"],
Cell[1021996, 19473, 393, 12, 70, "Input"],
Cell[1022392, 19487, 1646, 43, 322, "Input"],
Cell[CellGroupData[{
Cell[1024063, 19534, 1245, 38, 333, "Input"],
Cell[1025311, 19574, 657, 21, 90, "Output"],
Cell[1025971, 19597, 163, 4, 67, "Output"],
Cell[1026137, 19603, 379, 13, 87, "Output"]
}, Open  ]],
Cell[1026531, 19619, 3123, 74, 550, "Input"],
Cell[CellGroupData[{
Cell[1029679, 19697, 1161, 31, 124, "Input"],
Cell[1030843, 19730, 22368, 474, 528, "Output"]
}, Open  ]],
Cell[1053226, 20207, 619, 19, 117, "Text"],
Cell[1053848, 20228, 8223, 170, 978, "Input"],
Cell[1062074, 20400, 2967, 72, 550, "Input"],
Cell[CellGroupData[{
Cell[1065066, 20476, 1175, 33, 124, "Input"],
Cell[1066244, 20511, 36797, 734, 528, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103078, 21250, 1236, 32, 181, "Input"],
Cell[1104317, 21284, 23278, 488, 528, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1127644, 21778, 108, 1, 41, "Subsubsection"],
Cell[1127755, 21781, 2429, 71, 2017, "Input"],
Cell[1130187, 21854, 1644, 43, 1086, "Input"],
Cell[1131834, 21899, 5793, 142, 3708, "Input"],
Cell[1137630, 22043, 407, 9, 225, "Input"],
Cell[CellGroupData[{
Cell[1138062, 22056, 1314, 32, 378, "Input"],
Cell[1139379, 22090, 3177, 58, 2763, "Output"]
}, Open  ]],
Cell[1142571, 22151, 511, 14, 526, "Input"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
