(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    529381,      10617]
NotebookOptionsPosition[    523744,      10433]
NotebookOutlinePosition[    524078,      10448]
CellTagsIndexPosition[    524035,      10445]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Styling", "Section",
 CellChangeTimes->{{3.650529670445614*^9, 3.650529671387044*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.621746080389682*^9, 3.62174608226017*^9}, {
  3.621746135693265*^9, 3.621746138092404*^9}, {3.621746173598854*^9, 
  3.621746176545178*^9}, {3.621746380188685*^9, 3.621746380796864*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/\"\>"], \
"Output",
 CellChangeTimes->{
  3.621746138720299*^9, 3.6217461772329283`*^9, 3.6217463820837097`*^9, 
   3.621914084597064*^9, 3.622354902377564*^9, 3.6224500465525513`*^9, 
   3.623673817987068*^9, {3.623732923752467*^9, 3.6237329431664143`*^9}, 
   3.623733011172534*^9, 3.6265009345731573`*^9, 3.626503064282505*^9, 
   3.626518136823456*^9, 3.6265986644273252`*^9, 3.626766190657977*^9, 
   3.6267758308974867`*^9, 3.626942336671768*^9, 3.6297104411821547`*^9, 
   3.629712724622324*^9, 3.629781022135947*^9, 3.630046408966426*^9, 
   3.6313337238449497`*^9, 3.631354144526745*^9, 3.631354355972702*^9, 
   3.6314232172648153`*^9, 3.63671596736003*^9, 3.637648354158971*^9, 
   3.637655444542446*^9, 3.638266550188231*^9, 3.6386965559831057`*^9, 
   3.649669983893663*^9, 3.649670056491778*^9, 3.650529695356668*^9, 
   3.6505341494579573`*^9, 3.650718391279537*^9, 3.650777807895626*^9, 
   3.650860551224863*^9, 3.6514086644847307`*^9, 3.651903982959107*^9, 
   3.6539850445470467`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Thickness", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"th", "=", "0.003"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.621748603657528*^9, 3.621748631317513*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Styling", " ", "of", " ", "the", " ", "text"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"st", "=", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<CMU Serif\>\""}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"stylize", "[", "text_", "]"}], ":=", 
     RowBox[{"Style", "[", 
      RowBox[{"text", ",", "st"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.649669976732336*^9, 3.649669979410515*^9}, {
  3.650534116404479*^9, 3.650534130111813*^9}, {3.651903971806678*^9, 
  3.651903980314279*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BostonBlue", "=", 
   RowBox[{"RGBColor", "[", "\"\<#00688B\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"comp", "=", 
   RowBox[{"RGBColor", "[", "\"\<#8B2300\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6496703258985233`*^9, 3.649670325915792*^9}, {
  3.649670489172563*^9, 3.6496705180944643`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"Text", "[", "\"\<caca\>\"", "]"}], ",", "BostonBlue"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6496705218533*^9, 3.649670536292047*^9}}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"caca\"\>", TextForm]], "InlineText"],
   Text["caca"]],
  StripOnInput->False,
  LineColor->RGBColor[0., 0.40784313725490196`, 0.5450980392156862],
  FrontFaceColor->RGBColor[0., 0.40784313725490196`, 0.5450980392156862],
  BackFaceColor->RGBColor[0., 0.40784313725490196`, 0.5450980392156862],
  GraphicsColor->RGBColor[0., 0.40784313725490196`, 0.5450980392156862],
  FontColor->RGBColor[
   0., 0.40784313725490196`, 0.5450980392156862]]], "Output",
 CellChangeTimes->{
  3.6496705366879787`*^9, 3.6505296954274397`*^9, {3.6505341326848087`*^9, 
   3.65053414248067*^9}, 3.6507183914281054`*^9, 3.650777808068985*^9, 
   3.6508605514505053`*^9, 3.651408664746698*^9, 3.65190398324144*^9, 
   3.65398504474504*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hamiltonians", "Section",
 CellChangeTimes->{{3.629712555829027*^9, 3.629712557652924*^9}, {
  3.650529701640504*^9, 3.650529711404598*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.632041721549465*^9, 3.632041723101447*^9}, {
  3.6358312356676207`*^9, 3.635831252179337*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hp", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
   3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
   3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
   3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
   3.629711744441989*^9}, {3.629712260739542*^9, 3.6297122613888474`*^9}, {
   3.629712372304244*^9, 3.629712372429983*^9}, 3.6313353026608963`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "antiperiodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ha", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{"-", "tw"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", 
     SuperscriptBox["e", "ik"], " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hk", "[", 
    RowBox[{"k_", ",", "n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "k"}], "]"}], "tw"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"ConjugateTranspose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}, {3.6342799382942677`*^9, 3.6342799433882017`*^9}, {
  3.634279999836821*^9, 3.6342800047344503`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "free", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Omega]", "=", 
     RowBox[{"N", " ", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Sqrt", "[", "5", "]"}], "-", "1"}], "2"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rot", "=", "28"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "rotate", " ", "the", " ", "sequence", " ", "of", " ", "couplings"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fib", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", 
        RowBox[{"(", " ", 
         RowBox[{"n", "+", "1", "+", "rot"}], ")"}]}], "]"}], "-", 
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "rot"}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"jump", "[", 
      RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fib", "[", 
         RowBox[{"n", "-", "1"}], "]"}], "<", "1"}], ",", "ts", ",", "tw"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hf", "[", 
     RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F2", "=", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"jump", "[", 
            RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ar", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"ar", "+", 
         RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hpn", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tbl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
          RowBox[{"jump", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"tbl", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "F2"}], "}"}], "\[Rule]", "tw"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"tbl", ",", 
         RowBox[{"{", 
          RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}, {
  3.6313347078403673`*^9, 3.631334724799961*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Harper", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hharp", "[", 
     RowBox[{"p_", ",", "q_", ",", "\[Phi]_", ",", "\[Lambda]_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hopping", ",", "pot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"hopping", " ", "subdiagonal", " ", "part"}], "*)"}], 
      RowBox[{
       RowBox[{"hopping", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"q", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"periodic", " ", "boundary", " ", "conditions"}], "*)"}], 
       RowBox[{"AppendTo", "[", 
        RowBox[{"hopping", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "q"}], "}"}], "\[Rule]", 
          RowBox[{"-", "1."}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"convert", " ", "to", " ", "matrix"}], "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"hopping", ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "symmetrize", "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"hopping", "+", 
         RowBox[{"Transpose", "[", "hopping", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"diagonal", " ", "part"}], "*)"}], 
       RowBox[{"pot", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "i"}], "}"}], "\[Rule]", 
             RowBox[{"2.", "\[Lambda]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"2", " ", "\[Pi]", " ", "p", " ", 
                 RowBox[{"i", "/", "q"}]}], "+", "\[Phi]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "q"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"pot", "+", "hopping"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "choosing", " ", "Fibonacci", " ", "numbers", " ", "as", " ", 
     "approximants"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"hfib", "[", 
      RowBox[{"n_", ",", "\[Phi]_", ",", "\[Lambda]_"}], "]"}], ":=", 
     RowBox[{"hharp", "[", 
      RowBox[{
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}], ",", 
       RowBox[{"Fibonacci", "[", "n", "]"}], ",", "\[Phi]", ",", 
       "\[Lambda]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"hfib", ",", "Listable"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.638249400809607*^9, 3.638249432782072*^9}, {
  3.638249651446948*^9, 3.6382496950248528`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wavefunctions", "Section",
 CellChangeTimes->{{3.6505299538228807`*^9, 3.650529958121068*^9}}],

Cell[CellGroupData[{

Cell["Wavefunctions: definitions.", "Subsection",
 CellChangeTimes->{{3.630934451760487*^9, 3.63093445745586*^9}, {
  3.650529960455673*^9, 3.6505299613584337`*^9}}],

Cell["\<\
We define general functions computing fractal dimensions from lists, rather \
than functions adapted to our specific case.\
\>", "Text",
 CellChangeTimes->{{3.6309975019888783`*^9, 3.630997549157268*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "We compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Chi]", "q"], "n"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[CapitalSigma]", "a"], "|", 
     RowBox[{
      SuperscriptBox["\[Psi]", "n"], "(", 
      RowBox[{"i", ",", "a"}], ")"}], 
     SuperscriptBox["|", 
      RowBox[{"2", "q"}]]}]}], TraditionalForm]]],
 ".\nWe define the local dimension of the wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["D", "q"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["lim", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
     RowBox[{
      FractionBox["1", 
       RowBox[{"q", "-", "1"}]], 
      FractionBox[
       RowBox[{"log", "(", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Chi]", "q"], "n"], "(", "i", ")"}], ")"}], 
       RowBox[{"log", "(", 
        RowBox[{"1", "/", 
         SubscriptBox["F", "n"]}], ")"}]]}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6297819505151176`*^9, 3.629782150655591*^9}, {
  3.6303260562655563`*^9, 3.630326139818005*^9}, {3.630934477152502*^9, 
  3.630934567217009*^9}, {3.630934630673167*^9, 3.630934631297505*^9}, {
  3.6309354307593203`*^9, 3.630935516815362*^9}, {3.6309356538549843`*^9, 
  3.630935654575048*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "wf", " ", "is", " ", "a", " ", "list", " ", "of", " ", "numbers", " ", 
     "that", " ", "are", " ", "a", " ", "priori", " ", "the", " ", 
     "coefficients", " ", "of", " ", "a", " ", 
     RowBox[{"wavefunction", ".", " ", "They"}], " ", "can", " ", "be", " ", 
     "coefficients", " ", "in", " ", "the", " ", "position", " ", "basis"}], 
    ",", " ", 
    RowBox[{"for", " ", "a", " ", "given", " ", "energy"}], ",", " ", 
    RowBox[{
    "or", " ", "coefficients", " ", "in", " ", "the", " ", "energy", " ", 
     "basis", " ", "for", " ", "a", " ", "particular", " ", 
     RowBox[{"position", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"WfD", "[", 
    RowBox[{"wf_", ",", "q_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"q", "-", "1"}], ")"}], 
      RowBox[{"-", "1"}]]}], 
    FractionBox[
     RowBox[{"Log", "[", 
      RowBox[{"Plus", "@@", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "wf", "]"}], 
        RowBox[{"2", "q"}]]}], "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"Length", "@", "wf"}], "]"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.630997267210726*^9, 3.630997456587614*^9}, {
  3.630997567916525*^9, 3.630997642602827*^9}, {3.6313445925282907`*^9, 
  3.631344626817724*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "a", " ", "more", " ", "precise", " ", "way", " ", "of", " ", "computing",
      " ", "the", " ", "dimensions"}], ",", " ", 
    RowBox[{
    "using", " ", "data", " ", "from", " ", "two", " ", "systems", " ", "of", 
     " ", "consecutive", " ", "size"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"tauqxloc", "[", 
     RowBox[{"int_", ",", "intN_", ",", "q_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Total", "@", 
          RowBox[{"(", 
           RowBox[{"int", "^", "q"}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"Total", "@", 
          RowBox[{"(", 
           RowBox[{"intN", "^", "q"}], ")"}]}], ")"}]}], "]"}]}], "/", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Length", "@", "int"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"Length", "@", "intN"}], ")"}]}], "]"}]}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.638596075723093*^9, 3.638596124392284*^9}}],

Cell[TextData[{
 "We compute the partition function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"\[Tau]", ",", "q"}]], "n"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[CapitalSigma]", "a"], 
     FractionBox[
      RowBox[{"|", 
       RowBox[{
        SuperscriptBox["\[Psi]", "n"], 
        RowBox[{"(", 
         RowBox[{"i", ",", "a"}], ")"}]}], 
       SuperscriptBox["|", 
        RowBox[{"2", "q"}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox[
         SubscriptBox["\[CapitalDelta]", "a"], "n"], ")"}], "\[Tau]"]]}]}], 
   TraditionalForm]]],
 ".\nWe define the local dimension of the wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], " ", "such", " ", "that", 
     " ", 
     RowBox[{
      SubscriptBox["lim", 
       RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], ",", "q"}]], 
         RowBox[{"n", "+", "1"}]], "(", "i", ")"}], 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], ",", "q"}]], "n"], 
        "(", "i", ")"}]]}]}], "=", "1"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6297819505151176`*^9, 3.629782150655591*^9}, {
  3.6303260562655563`*^9, 3.630326139818005*^9}, {3.630934477152502*^9, 
  3.630934567217009*^9}, {3.630934630673167*^9, 3.630934631297505*^9}, {
  3.6309354307593203`*^9, 3.630935667729848*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"compute", " ", "fractal", " ", "dimension", " ", 
     SubscriptBox["D", "q"], " ", "from", " ", "2", " ", "lists", " ", "of", 
     " ", "weights", " ", "and", " ", "box", " ", "lengths"}], ",", " ", 
    RowBox[{"using", " ", "the", " ", "thermodynamic", " ", "formalism"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PartD", "[", 
    RowBox[{
    "weights_", ",", "weightsN_", ",", "lengths_", ",", "lengthsN_", ",", 
     "q_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gam", ",", "gamN", ",", "\[Tau]", ",", "\[Tau]0", ",", "q0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gam", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", "weights", ")"}], "q0"], 
          SuperscriptBox[
           RowBox[{"(", "lengths", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"gamN", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", "weightsN", ")"}], "q0"], 
          SuperscriptBox[
           RowBox[{"(", "lengthsN", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", " ", 
       SubscriptBox["D", "q"], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Tau]0", "=", 
       RowBox[{"\[Tau]", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["gamN", "gam"], "/.", 
             RowBox[{"q0", "\[Rule]", "q"}]}], ")"}], "-", "1"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      FractionBox["\[Tau]0", 
       RowBox[{"q", "-", "1"}]]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.630997864395117*^9, 3.630997940972649*^9}, {
   3.630998058701036*^9, 3.630998151711904*^9}, {3.6309981817454863`*^9, 
   3.6309983368371696`*^9}, 3.630998958714292*^9, {3.630999209213921*^9, 
   3.630999246524372*^9}, {3.632048811113677*^9, 3.632048811171896*^9}, 
   3.632048900297194*^9}],

Cell[CellGroupData[{

Cell["Tree structure", "Subsubsection",
 CellChangeTimes->{{3.632042006415544*^9, 3.632042008959408*^9}, {
  3.6505334056990423`*^9, 3.6505334069834146`*^9}}],

Cell[TextData[{
 "After a renormalization step, a given site i of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " approximant becomes either molecular (in which case n becomes n-2) or \
atomic (n becomes n-3). \nWe can thus associate to each site a unique \
\[OpenCurlyDoubleQuote]renormalization path\[CloseCurlyDoubleQuote]: the \
sequence of molecular/atomic sites that has led to it, starting from the \
trivial ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["F", "n"], "=", "1"}], ")"}], TraditionalForm]]],
 " chain and inflating it.\n\nMore details in the \
\[OpenCurlyDoubleQuote]renormalization_path.nb\[CloseCurlyDoubleQuote] file."
}], "Text",
 CellChangeTimes->{{3.631365638464468*^9, 3.6313658553137217`*^9}, {
  3.631365896018684*^9, 3.6313659003057003`*^9}, {3.631426761322414*^9, 
  3.6314267847002087`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"take", " ", "a", " ", "renormalization", " ", "path", " ", 
     RowBox[{"(", "seq", ")"}]}], ",", " ", 
    RowBox[{"a", " ", "site", " ", "label", " ", 
     RowBox[{"(", "i", ")"}], " ", "and", " ", "an", " ", "approximant", " ", 
     "size", " ", 
     RowBox[{"(", "n", ")"}], " ", "and", " ", "return", " ", "the", " ", 
     "new", " ", "renormalization", " ", "path"}], ",", " ", 
    RowBox[{
    "the", " ", "new", " ", "site", " ", "label", " ", "and", " ", "the", " ",
      "new", " ", "size", " ", "after", " ", "one", " ", "renormalization", 
     " ", "group", " ", "operation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"i", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterSeq", "[", 
     RowBox[{"{", 
      RowBox[{"seq_", ",", "i_", ",", "n_"}], "}"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"inew", "=", "i"}], ",", 
        RowBox[{"seqn", "=", "seq"}], ",", 
        RowBox[{"nnew", "=", "n"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", ">", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "-", "1"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"seqn", "=", 
           RowBox[{"\"\<m\>\"", "<>", "seq"}]}], ";", 
          RowBox[{"inew", "=", 
           RowBox[{"i", "-", 
            RowBox[{"Fibonacci", "[", 
             RowBox[{"n", "-", "1"}], "]"}]}]}], ";", 
          RowBox[{"nnew", "=", 
           RowBox[{"n", "-", "2"}]}], ";"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", ">", 
            RowBox[{"Fibonacci", "[", 
             RowBox[{"n", "-", "2"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"seqn", "=", 
             RowBox[{"\"\<a\>\"", "<>", "seq"}]}], ";", 
            RowBox[{"inew", "=", 
             RowBox[{"i", "-", 
              RowBox[{"Fibonacci", "[", 
               RowBox[{"n", "-", "2"}], "]"}]}]}], ";", 
            RowBox[{"nnew", "=", 
             RowBox[{"n", "-", "3"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"seqn", "=", 
             RowBox[{"\"\<m\>\"", "<>", "seq"}]}], ";", 
            RowBox[{"nnew", "=", 
             RowBox[{"n", "-", "2"}]}], ";"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"seqn", ",", "inew", ",", "nnew"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"false", " ", "when", " ", "n"}], "<", "3"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"test", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", "3"}], "&"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"take", " ", "a", " ", "site", " ", 
      RowBox[{"(", "i", ")"}]}], ",", " ", 
     RowBox[{"a", " ", "size", " ", 
      RowBox[{"(", "n", ")"}], " ", "and", " ", "return", " ", "the", " ", 
      "renormalization", " ", "path", " ", "for", " ", "this", " ", 
      "site"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"path", "[", 
     RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"NestWhile", "[", 
      RowBox[{"iterSeq", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\>\"", ",", "i", ",", "n"}], "}"}], ",", "test"}], "]"}],
      "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "compute", " ", "the", " ", "relative", " ", "time", " ", "spent", " ", 
     "on", " ", "molecular", " ", "sites", " ", 
     RowBox[{"(", "x", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xPath", "[", 
     RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"StringCount", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NestWhile", "[", 
           RowBox[{"iterSeq", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", "i", ",", "n"}], "}"}], ",", "test"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<m\>\""}], "]"}], "/", 
       "n"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"generate", " ", "the", " ", "whole", " ", 
     RowBox[{"(", "x", ")"}], " ", 
     RowBox[{"tree", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tree", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"xPath", "[", 
       RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"Fibonacci", "[", "n", "]"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6313589574343977`*^9, 3.6313590302798233`*^9}, {
   3.631359076279845*^9, 3.6313593102066603`*^9}, {3.631359391471822*^9, 
   3.6313594047194157`*^9}, {3.6313594593282537`*^9, 3.631359462513579*^9}, {
   3.6313595010407*^9, 3.631359521955605*^9}, {3.631359596818037*^9, 
   3.631359606915451*^9}, {3.631359651491734*^9, 3.6313596831724777`*^9}, {
   3.6313634417688093`*^9, 3.631363482904171*^9}, {3.631364258193778*^9, 
   3.631364318864571*^9}, {3.6313647703411922`*^9, 3.63136477755731*^9}, {
   3.6313648216112947`*^9, 3.631364823625928*^9}, {3.631364880726359*^9, 
   3.631364887510838*^9}, {3.631364979383456*^9, 3.631365063114964*^9}, 
   3.631365189625307*^9, {3.631365920448059*^9, 3.6313659926244802`*^9}, {
   3.631426798788385*^9, 3.631426807777585*^9}, {3.631430687105792*^9, 
   3.631430691090613*^9}, 3.631516490573141*^9, {3.632049521570463*^9, 
   3.632049521680777*^9}, 3.632055040279293*^9, {3.6320551561537037`*^9, 
   3.632055177849278*^9}, {3.632055451480164*^9, 3.632055517600219*^9}, {
   3.632055616163237*^9, 3.632055618257159*^9}, {3.6320557064324903`*^9, 
   3.632055721461688*^9}, {3.651411367980667*^9, 3.651411368156102*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"paths", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"path", "[", 
     RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"Fibonacci", "[", "n", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.632049607276568*^9, 3.632049630389175*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"count", " ", "the", " ", "numbers", " ", 
    SubscriptBox["n", "A"], " ", "and", " ", 
    SubscriptBox["n", "M"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"count", "[", "n_", "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"StringCount", "@@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"paths", "[", "n", "]"}], ",", "#"}], "}"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<m\>\"", ",", "\"\<a\>\""}], "}"}]}], ")"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.651411239403208*^9, 3.651411320437634*^9}, {
  3.651411373654388*^9, 3.651411374613475*^9}, {3.6514114056223993`*^9, 
  3.651411653463367*^9}, {3.651411689447432*^9, 3.651411721094989*^9}, {
  3.6514117861820602`*^9, 3.651411801481333*^9}, {3.6514128745049753`*^9, 
  3.651412900313101*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"tree", "[", "7", "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632049297283428*^9, 3.63204929744164*^9}, {
  3.632049360308915*^9, 3.632049372484646*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.42857142857142855`}, {2., 0.42857142857142855`}, {3., 
      0.14285714285714285`}, {4., 0.42857142857142855`}, {5., 
      0.42857142857142855`}, {6., 0.14285714285714285`}, {7., 0.}, {8., 
      0.14285714285714285`}, {9., 0.42857142857142855`}, {10., 
      0.42857142857142855`}, {11., 0.14285714285714285`}, {12., 
      0.42857142857142855`}, {13., 0.42857142857142855`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 13.}, {0, 0.42857142857142855`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.632049297740069*^9, 3.632049325836025*^9}, {
   3.632049360724947*^9, 3.632049372828106*^9}, 3.6354952898718863`*^9, 
   3.6367162329633923`*^9, 3.637655514205216*^9, 3.6385961663440237`*^9, 
   3.6386805216221533`*^9, 3.638781175783618*^9, 3.6467292638237267`*^9, 
   3.649498911451948*^9, 3.649670096403277*^9, 3.650533409629578*^9, 
   3.650718391633026*^9, 3.650777808838047*^9, 3.650860559104454*^9, 
   3.6514086683856792`*^9, 3.65141137091581*^9, 3.651903989900375*^9, 
   3.653985068483418*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", "#1"}], "+", 
     RowBox[{"3", "#2"}]}], "&"}], ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"count", "[", "9", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.651412024051244*^9, 3.651412092486965*^9}, {
  3.6514121353360243`*^9, 3.651412159832211*^9}, {3.651412889784054*^9, 
  3.6514128913672037`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "8", ",", "7", ",", "8", ",", "8", ",", "7", ",", "8", ",", "7", 
   ",", "8", ",", "8", ",", "7", ",", "8", ",", "8", ",", "7", ",", "8", ",", 
   "7", ",", "8", ",", "8", ",", "7", ",", "8", ",", "7", ",", "8", ",", "8", 
   ",", "7", ",", "8", ",", "8", ",", "7", ",", "8", ",", "7", ",", "8", ",", 
   "8", ",", "7", ",", "8", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.651412032695732*^9, 3.65141203540511*^9}, {
   3.6514120817363663`*^9, 3.651412092936001*^9}, {3.651412140803094*^9, 
   3.651412160818954*^9}, {3.651412879819468*^9, 3.651412902849704*^9}, 
   3.651903990074747*^9, 3.653985068818076*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Wavefunctions: computations", "Subsection",
 CellChangeTimes->{{3.650533419401181*^9, 3.6505334255798063`*^9}}],

Cell[TextData[{
 "For a given \[Rho], q>0 and system size n, compute the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["D", "x"], "(", "x", ")"}], TraditionalForm]]],
 " dimensions, ie the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["D", "x"], "(", "i", ")"}], TraditionalForm]]],
 " dimensions averaged on all sites having the same x."
}], "Text",
 CellChangeTimes->{{3.6320422000484324`*^9, 3.632042246912817*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"avDx", "[", 
   RowBox[{"q_", ",", "vec_", ",", "val_", ",", "xvalues_", ",", "listPos_"}],
    "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"DxList", ",", "xlist", ",", "avDx"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"list", " ", "fractal", " ", "dimensions"}], ",", " ", 
      RowBox[{"indexed", " ", "by", " ", "site"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DxList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"WfD", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}], "/@", "vec"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "for", " ", "each", " ", "value", " ", "of", " ", "x", " ", "compute", 
        " ", "the", " ", "average"}], " ", "-", " ", 
       RowBox[{
       "on", " ", "positions", " ", "corresponding", " ", "to", " ", "this", 
        " ", "x"}], " ", "-", " ", 
       RowBox[{"fractal", " ", "dimension"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"avDx", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"DxList", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", "listPos"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "return", " ", "the", " ", "average", " ", "fractal", " ", "dimension", 
       " ", "as", " ", "a", " ", "function", " ", "of", " ", "x"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"avDx", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"xvalues", ",", "avDx"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "avDx"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.637663366965523*^9, 3.63766336766899*^9}, {
   3.6376636542094803`*^9, 3.6376636546090508`*^9}, {3.63766369696706*^9, 
   3.637663721542987*^9}, {3.637663774545248*^9, 3.637663827187294*^9}, {
   3.637663901777546*^9, 3.637663959294059*^9}, {3.6376641180637712`*^9, 
   3.63766411951794*^9}, {3.637667087009117*^9, 3.6376670892159443`*^9}, 
   3.6505334750409613`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "keep", " ", "one", " ", "processor", " ", "free", " ", "to", " ", 
    "prevent", " ", "freeze"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"LaunchKernels", "[", 
   RowBox[{"$ProcessorCount", "-", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.651408733195664*^9, 3.6514087897483873`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"1", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"2", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"3", ",", "\<\"local\"\>"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.651408779208383*^9, 3.6514087915203123`*^9}, 
   3.651904050829247*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "17"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tol", "=", 
    SuperscriptBox["10", 
     RowBox[{"-", "14"}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "wavefunctions", " ", "and", " ", "energies"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"val", ",", "vec"}], "}"}], "=", 
    RowBox[{"Eigensystem", "[", 
     RowBox[{"hp", "[", 
      RowBox[{"n", ",", "\[Rho]", ",", "1."}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
    "energy"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vec", "=", 
    RowBox[{"vec", "[", 
     RowBox[{"[", 
      RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"drop", " ", "small", " ", "components"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vec", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"vec", ",", "tol"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "x", " ", "for", " ", "each", " ", "site"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xlist", "=", 
    RowBox[{"tree", "[", 
     RowBox[{"n", "+", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"drop", " ", "the", " ", "site", " ", "labels"}], ",", " ", 
    RowBox[{
    "they", " ", "are", " ", "unecessary", " ", "as", " ", "x", " ", "is", 
     " ", "indexed", " ", "by", " ", "increasing", " ", "x", " ", "label"}]}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xlist", "=", 
    RowBox[{"Last", "@", 
     RowBox[{"(", 
      RowBox[{"Transpose", "[", "xlist", "]"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "list", " ", "all", " ", "possible", " ", "values", " ", "of", " ", "x"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xvalues", "=", 
    RowBox[{"Sort", "@", 
     RowBox[{"DeleteDuplicates", "[", "xlist", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "list", " ", "all", " ", "positions", " ", "by", " ", "increasing", " ", 
    "value", " ", "of", " ", "x"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listPos", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{"xlist", ",", "#"}], "]"}], "]"}], "&"}], "/@", "xvalues"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6376637410535107`*^9, 3.6376637612913322`*^9}, {
   3.637663903594638*^9, 3.637663904074048*^9}, {3.637664044065216*^9, 
   3.6376640443671303`*^9}, {3.638781296946495*^9, 3.6387812971536083`*^9}, {
   3.638781345298437*^9, 3.63878134803356*^9}, {3.649671679506936*^9, 
   3.649671679809421*^9}, 3.649672746111318*^9, {3.650533554503845*^9, 
   3.6505335545986958`*^9}, {3.650719857989237*^9, 3.650719859419755*^9}, {
   3.650719916441803*^9, 3.6507199166696*^9}, {3.6507199788689747`*^9, 
   3.650719979052927*^9}, {3.650860569022455*^9, 3.6508605693827963`*^9}, 
   3.6508627603366213`*^9, 3.650862815839922*^9, {3.6508632579523973`*^9, 
   3.650863258047233*^9}, {3.650877507081016*^9, 3.650877507302705*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qlist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.", ",", "10", ",", ".3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avdqlist", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"avDx", "[", 
        RowBox[{"#", ",", "vec", ",", "val", ",", "xvalues", ",", "listPos"}],
         "]"}], "&"}], ",", "qlist"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", " ", 
   RowBox[{
   "transpose", " ", "to", " ", "have", " ", "x", " ", "dependance", " ", 
    "as", " ", "the", " ", "first", " ", "direction", " ", "of", " ", "the", 
    " ", "array"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avdqlist", "=", 
   RowBox[{"Transpose", "[", "avdqlist", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6505335876055183`*^9, 3.650533597783469*^9}, {
  3.650534521500149*^9, 3.65053455238519*^9}, {3.650877545187459*^9, 
  3.650877549604154*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"qlist", ",", "#"}], "}"}]}], "]"}], "&"}], "/@", 
    "avdqlist"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\"\<x=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", "#", "]"}], "]"}]}], "&"}], ")"}], "/@", 
     "xvalues"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"stylize", "[", 
     RowBox[{"\"\<\[Rho] = \>\"", "<>", 
      RowBox[{"ToString", "[", "\[Rho]", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65053360196152*^9, 3.650533653403124*^9}, {
  3.650534106364189*^9, 3.650534107969198*^9}, {3.650534153706285*^9, 
  3.6505341665326433`*^9}, {3.650534256289744*^9, 3.6505343550709*^9}, {
  3.65053451545956*^9, 3.650534517458359*^9}, {3.650860598856923*^9, 
  3.650860648442417*^9}, {3.650860681627695*^9, 3.6508607750510473`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbP+ZexoiP6EZT/2L7t+KnlB09d
tj8DBm/s51vsr2G7eAwq/9l+u5aU8+ILe+0hpv2wf/uk/dY+hm1Q9X/sbx7h
mPno+kb7s2A+g0PLR2+JXw/WQfUzO/DGa2/dd3+1/UwwYHWY66yvvPbOSqh5
HA77dtjw5eavsE8DAy6HMm93ffWE5VDzeRycvI69lOlfBjWP3yFP92e3+cul
UPsEHHYYbItLTVoKNU/I4eHf7gVrPy2Bqhd2CA11+jZjyhKo+SIONYEv1nm4
LIG6R9Th0X4+1jf/FkPNE3NY59unmnVoMdQ8CQfFpBm82r2LoeZJOtRv2y/5
OXYx1DwphykuPJ6njBdDzZN2iJOL5X7NuxjqfhmHnDWFvNteL4KaJ+cgNONn
6sozi6DmyTt8i50sEbUBxldwkDnyyDZ/2iKoexQckksdIufVLYLap+hgInCo
c0UGzDwlhxP72GIjQhZB7VdyqGq6JdXgCDNP2UEpSS/nhz7MPGWHQ0tvuM+X
X2QPANmC6OI=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbvTVOvqC58DOU/tj+uuIFDLe+6
/RkweGPvLfJQK6D/PFT+s/2DDG1GifAT9hDTftgH721nTjpyBKr+j72xg/p6
izuH7M+C+QwO0fPedPYfPAjVz+xgXXRu81KBg/YzwYDVwfX/kodCsw5AzeNw
2O2gW/zB9YB9GhhwOXRfc1PIYz8ANZ/Hwbc9+GXDuv1Q8/gdBD6aTGdL2g+1
T8BB8Zny+nvK+6HmCTnU8L0Xif2wD6pe2GH/h6Pv/hzZBzVfxEH31ZM5X+fv
g7pH1KFC8vLdX/X7oOaJOTgfWWMmmrIPap6Eg8jyoz0d3jDzJB2Ca6ZFHTaF
mSfl0LDyvEewEsw8aQfVyZGOdwX2Qd0v47C6Xu+8OCPMPDkHHpf3PMc/7YWa
J+/w30t6+c6nML6Cw+JpmQuO3dwLdY+CQ0qQ7sLT5/ZC7VN0YLlwa/XqI3uh
5ik5BHcqyvjt3gu1X8nhfuueu3M3wcxTdghoizvbsQpmnrLD1sJTlv8X7bUH
ABN97FA=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP//oPAe3tjMLhsL7Xz6/3XEc+g/Mf2TofOWfv+
vW9/Bgze2Huuvp8tGXETKv/ZPo91x4IJctfsIab9sO81Xj0psvEKVP0fe4dn
a1UnL75sfxbMZ3B4pDQrv1HpMlQ/s4O9yxkP04uX7GeCAavDrTfSfm6zLkHN
43Bo7+Eyf1F0yT4NDLgcdogIWwWGXoKaz+Pw74LzD1O7S1Dz+B2kT21/OEv7
EtQ+AYfdc/3v2cnAzBNy4AzcetyXH6Ze2OH9DwUFMxaY+SIO+z/LPZ/w6yLU
PaIO/hKlesKfLkLNE3OwrT6k2frqItQ8CYfWzTVFex5fhJon6eBUlmg74+5F
qHlSDv9vNB7/dx1mnrTDl2mWPbcvXYS6X8Yh+okEg9w5mHlyDvMLrizdcRJm
nrxDjGlh4oKjML6CA9d3l++nD8Lco+BwYUX0KuN9MPsUHXb92vjxwi6YeUoO
u/e62c3bDrNfyUE56cDZaVtg5ik77NKb0rZtI8w8ZYeWGwW3f667aA8AP2X1
HQ==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP//oPAe3tjMLhsHyjmPVVC7TmU/9jeNVdBfdfi
h/ZnwOCNfVgWl+qZnrtQ+c/2DrvnhN/ed8seYtoP+yD1G36VwTeh6v/Y3xN6
KyjSd8P+LJjP4MCyXXrWfskbUP3MDt79h391nL9uPxMMWB0q3mXX7ZlzHWoe
h8OrmCLWm+XX7dPAgMth+oGImr3R16Hm8zhE/lgWXeV6HWoev4N4qH+ap/F1
qH0CDvz/rKK5VGDmCTkw2AjF/xODqRd22DBrcfwibpj5Ig4LlQ7XzGSEuUfU
Ya84s8yCH9eg5ok5vJm39kHzh2tQ8yQcWM0nNsm9vAY1T9Lh6KWm5KBH16Dm
STmwBRnbcty5BjVP2iFrNmOL7rVrUPfLOBg9WuG4+QLMPDkHeRkVx97TMPPk
HbzYdxVtPAbjKzgsnjyjXPwQzD0KDjPOH/PcsRdmn6LDZ/nNP3p3wsxTcshY
8aVk8laY/UoOk9XT049shJmn7PDV/baA7DqYecoOFjdCDGatumYPAD1M6ds=

         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbfVOlQKJn5Esp/bP923xH9/zFP
7c+AwRt7vs6pqomGj6Hyn+3tvD6oH5V8ZA8x7Yd9+0Jtj9zOh1D1f+xndb3N
brd8aH8WzGdwWBRTMzOL8yFUP7OD2rmff96/fGA/EwxYHda0cdw6fPkB1DwO
B7GE/uXqhx/Yp4EBl8Pylm9rhLc9gJrP4yCyIcEjdvUDqHn8DgE/b6X5L3oA
tU/AQezxl2tls2DmCTnYfd2t2z4Zpl7YoU5m2m3vXpj5Ig6Z02ynzm+HuUfU
Qf98qE56E8w8MYdfme8i+2ph5kk43L3yfi1rJcw8SYfjXh8NDpbAzJNyOBuv
V7a9AGaetIP8y89fH+TA3C/jsLJWeIZ5Jsw8OYfGiU/itqXCzJN3UPhzUiMy
CcZXcDCrmtIoEw9zj4LDZxan+r/RMPsUHd6UMCz/GQEzT8nB+6D7Db4wmP1K
DmlnGmysg2HmKTswvpa2qg2Amafs8FvDPeuy7wN7AHqi8Vw=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLa3zO9XklR5BeU/tm8r/PJO6OUz
+zNg8Ma+pklGZab1U6j8Z/uYhOfBkxKe2ENM+2FveWzDUp03j6Hq/9jvD+ds
bl352P4smM/gsKBnbuWv+sdQ/cwOpQsu1T5Ofmw/EwxYHVY5Cd2p8X8MNY/D
QUiW7cZh+8f2aWDA5fD/nX86nzHMfB6Hu213ryZrwMzjd3iQOb9eWx5mn4DD
b2ORHGZxmHlCDo/WtBiv4oepF3ZwapdZ+okDZr6Ig976yCl7mGDuEXU4eTO3
9sOfR1DzxBy2x4qcqvn+CGqehEPrveW8IZ8eQc2TdDipdvNG9ttHUPOkHPTP
q7/d/eIR1DxpB405xetsnzyCul/GQWv2mb2v78PMk3NgTHDacPA2zDx5h7B/
Ijd3X4fxFRweivYrXr8Mc4+CQ4ndylcCF2D2KTr8ijr9Ne0MzDwlB1P+s0HX
T8DsV3K4/PpBYMJRmHnKDnJPSioYDsHMU3bwuRFSsW3fI3sAiMb1wg==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbfv2misqzwGyj/sf3m6QKb17i+
sj8DBm/sK8WOVs5IeQmV/2w/yUHrUty7F/YQ037Yz3p2f9mHVS+g6v/Yv1rE
bvyx4YX9WTCfwWGl48XFBSkvoPqZHaZdZFDv8X9hPxMMWB1OXHUsMLWHmcfh
cGr27dYDhi/s08CAy2HaWS9DczWY+TwO91f4sbHKwMzjd3Bf67fsjBDMPgGH
aW43WAO5YOYJOTwRnnMpgwmmXtgh83Gewfdfz6HmizgYOpcmP//8HOoeUQce
//PKWm+fQ80Tc5h+mfH15mfPoeZJOOR/y79R/eA51DxJh4+cxz5X3YKZJ+Vw
eHfg6tVXYOZJO6xMra3kPP8c6n4ZB1nhrCUTTsLMk3OQTw3itzsCM0/eYYq+
swT/fhhfwSHwXHsd4y6YexQcDn4K8hfeCrNP0eGO5YdrThtg5ik5aEv5Tu1b
DbNfyaH67X+Tr8tg5ik7fKo1aCldBDNP2cH+zPs8vnnP7QEAs/I/
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 9.9}, {0, 0.9999999999999999}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"q\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
     Directive[FontSize -> 20, FontFamily -> "CMU Serif"], DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> FormBox[
       StyleBox["\"\[Rho] = 0.15\"", 
        Directive[FontSize -> 20, FontFamily -> "CMU Serif"], StripOnInput -> 
        False], TraditionalForm], 
     PlotRange -> {{0, 9.9}, {0, 0.9999999999999999}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"x=0.\"", "\"x=0.0526316\"", "\"x=0.157895\"", "\"x=0.210526\"", 
       "\"x=0.315789\"", "\"x=0.368421\"", "\"x=0.473684\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.650533608555561*^9, {3.650533640476817*^9, 3.650533653770853*^9}, {
   3.650534154224224*^9, 3.6505341669934893`*^9}, 3.65053427594904*^9, {
   3.6505343270136642`*^9, 3.650534355674901*^9}, 3.650534561037369*^9, 
   3.650718399567677*^9, 3.650719870174494*^9, 3.6507199256144648`*^9, 
   3.650719987781773*^9, 3.650777826847988*^9, {3.65086060426718*^9, 
   3.650860614723154*^9}, 3.650860650211389*^9, {3.650860682430964*^9, 
   3.65086069200284*^9}, {3.6508607376066647`*^9, 3.65086077564261*^9}, 
   3.6508627802946053`*^9, 3.650862833078875*^9, 3.65086327601633*^9, 
   3.6508777154925137`*^9, 3.651408995954805*^9, 3.651904286724691*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Comparison with theory", "Subsection",
 CellChangeTimes->{{3.650534590771367*^9, 3.650534595795209*^9}, {
   3.650777938347*^9, 3.650777938490938*^9}, 3.6507780149390507`*^9}],

Cell[CellGroupData[{

Cell["Theoretical fomulas", "Subsubsection",
 CellChangeTimes->{{3.65086079507728*^9, 3.6508607995890207`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["5"], "-", "1"}], "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lb", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[Rho]", "^", "2"}]}], ")"}], "^", "4"}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"\[Rho]", "^", "4"}]}]}], "]"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Rho]", "^", "2"}]}], ")"}], "^", "2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"\[Rho]", "^", "4"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "[", 
    RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[Rho]", "q"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lambda", "[", 
    RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"\[Rho]", ",", "q"}], "]"}], 
      SuperscriptBox["\[Rho]", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"\[Rho]", ",", "q"}], "]"}], 
          SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"]}]]}], 
    RowBox[{"2", 
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"\[Rho]", ",", "q"}], "]"}], 
     SuperscriptBox["\[Rho]", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wfdth", "[", 
    RowBox[{"\[Rho]_", ",", "q_", ",", "x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"q", "<", "3"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"n", "+", "2"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"lambda", "[", 
              RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], 
            RowBox[{"lambda", "[", 
             RowBox[{
              SuperscriptBox["\[Rho]", "q"], ",", "q"}], "]"}]], "]"}]}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"2", "x"}]}], "3"], " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"lb", "[", "\[Rho]", "]"}], "q"], 
            RowBox[{"lb", "[", 
             SuperscriptBox["\[Rho]", "q"], "]"}]], "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q", "-", "1"}], ")"}], 
         RowBox[{"Log", "[", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "2"}], "]"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{"d2th", "[", 
      RowBox[{"\[Rho]", ",", "q", ",", "x", ",", "n"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"d2th", "[", 
     RowBox[{"\[Rho]_", ",", "q_", ",", "x_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"n", "+", "2"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"Log", "[", 
          SuperscriptBox[
           RowBox[{"lambda", "[", 
            RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], "]"}]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"1", "-", 
           RowBox[{"2", "x"}]}], "3"], " ", 
         RowBox[{"Log", "[", 
          SuperscriptBox[
           RowBox[{"lb", "[", "\[Rho]", "]"}], "q"], "]"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"Log", "[", "2", "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"q", "-", "1"}], ")"}], 
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "+", "2"}], "]"}], "]"}]}], ")"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"in", " ", "the", " ", "finite", " ", "size", " ", "case"}], ",", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"3", 
       SubscriptBox["n", 
        RowBox[{"A", " "}]]}], "+", " ", 
      RowBox[{"2", 
       SubscriptBox["n", "M"]}]}], " ", "\[NotEqual]", " ", "n"}], ",", " ", 
    RowBox[{
    "so", " ", "that", " ", "it", " ", "is", " ", "more", " ", "accurate", 
     " ", "to", " ", "replace", " ", "x", " ", "by", " ", 
     SubscriptBox["n", "M"], " ", "and", " ", 
     SubscriptBox["n", "A"], " ", "in", " ", "the", " ", "fractal", " ", 
     "dimensions"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dfinite", "[", 
    RowBox[{"\[Rho]_", ",", "q_", ",", 
     RowBox[{"{", 
      RowBox[{"nm_", ",", "na_"}], "}"}], ",", "n_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"q", "<", "3"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["nm", 
           RowBox[{"n", "+", "2"}]], " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"lambda", "[", 
              RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], 
            RowBox[{"lambda", "[", 
             RowBox[{
              SuperscriptBox["\[Rho]", "q"], ",", "q"}], "]"}]], "]"}]}], "+", 
         RowBox[{
          FractionBox["na", 
           RowBox[{"n", "+", "2"}]], " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"lb", "[", "\[Rho]", "]"}], "q"], 
            RowBox[{"lb", "[", 
             SuperscriptBox["\[Rho]", "q"], "]"}]], "]"}]}]}], ")"}]}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"q", "-", "1"}], ")"}], 
        RowBox[{"Log", "[", 
         SuperscriptBox[
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "2"}], "]"}], 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}]}]], "]"}]}], ")"}]}], ",", 
     RowBox[{"d2th", "[", 
      RowBox[{"\[Rho]", ",", "q", ",", 
       RowBox[{"nm", "/", 
        RowBox[{"(", 
         RowBox[{"n", "+", "2"}], ")"}]}], ",", "n"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6505346020190897`*^9, 3.650534613880329*^9}, {
   3.650534669150167*^9, 3.650534719479341*^9}, {3.650534984787594*^9, 
   3.650535041805626*^9}, 3.650535089685038*^9, {3.6505352561288023`*^9, 
   3.6505352691138477`*^9}, {3.650535305848927*^9, 3.65053531675263*^9}, {
   3.650539324562834*^9, 3.650539446523595*^9}, {3.650718381841858*^9, 
   3.650718385947525*^9}, {3.650718606206324*^9, 3.650718692550974*^9}, {
   3.650719168987698*^9, 3.650719192466907*^9}, {3.650719240808002*^9, 
   3.6507192732162743`*^9}, {3.650719345419446*^9, 3.6507193562160177`*^9}, {
   3.650719511550655*^9, 3.6507195348102083`*^9}, {3.650719673709799*^9, 
   3.650719673984948*^9}, {3.6507197683523827`*^9, 3.650719828280758*^9}, {
   3.650777889563384*^9, 3.650777920554966*^9}, {3.650779897400887*^9, 
   3.650779897515992*^9}, {3.650780031982345*^9, 3.6507800506895103`*^9}, {
   3.6507803550576353`*^9, 3.650780396942089*^9}, {3.650780781423848*^9, 
   3.650780860329751*^9}, 3.6507809482568283`*^9, {3.6514090465857677`*^9, 
   3.651409069953024*^9}, {3.651409476849607*^9, 3.651409480289572*^9}, {
   3.651409683622151*^9, 3.651409685291746*^9}, {3.65140972162827*^9, 
   3.651409723889118*^9}, {3.651409819106538*^9, 3.6514098229669952`*^9}, {
   3.651410788030807*^9, 3.6514109568435993`*^9}, {3.651412748701247*^9, 
   3.651412762493246*^9}, {3.651412952530599*^9, 3.651412959198435*^9}, {
   3.651413068077416*^9, 3.651413069885495*^9}, {3.651413122958273*^9, 
   3.651413183375616*^9}, {3.651413338000152*^9, 3.651413353374942*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data averaged per value of x", "Subsubsection",
 CellChangeTimes->{{3.6507779715790157`*^9, 3.650778026778986*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ct", "=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"count", "[", 
    RowBox[{"n", "+", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.651412661015113*^9, 3.6514126907379932`*^9}, {
  3.651412792136095*^9, 3.651412792262451*^9}, {3.651412938407392*^9, 
  3.651412938758724*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6514126764276943`*^9, 3.651412691966154*^9}, 
   3.6514127943223057`*^9, 3.651412909900303*^9, 3.651412941802712*^9, 
   3.651904298684374*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"wfdth", "[", 
      RowBox[{"\[Rho]", ",", "q", ",", "0", ",", "n"}], "]"}], ",", 
     RowBox[{"dfinite", "[", 
      RowBox[{"\[Rho]", ",", "q", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "6"}], "}"}], ",", "n"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.1"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AbsolutePointSize", "[", "4.5", "]"}], ",", 
      RowBox[{"Point", "@", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"qlist", ",", 
           RowBox[{"avdqlist", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}]}], "}"}]}], 
   ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(0)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"stylize", "[", 
     RowBox[{"\"\<\[Rho] = \>\"", "<>", 
      RowBox[{"ToString", "[", "\[Rho]", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650718407766705*^9, 3.650718445165225*^9}, {
   3.650718786586598*^9, 3.6507188588705807`*^9}, {3.650718890554184*^9, 
   3.650718904495407*^9}, {3.650718962406781*^9, 3.650718979744109*^9}, {
   3.650719196348092*^9, 3.650719227265265*^9}, {3.650719261592016*^9, 
   3.6507192917470207`*^9}, {3.65071946572711*^9, 3.6507194913981953`*^9}, {
   3.6507195538237143`*^9, 3.650719633360579*^9}, {3.6507198201683397`*^9, 
   3.6507198235686703`*^9}, {3.650719903243977*^9, 3.6507199098558598`*^9}, {
   3.650719942830716*^9, 3.650719961759276*^9}, {3.65077783254595*^9, 
   3.6507779151685543`*^9}, {3.650862588940641*^9, 3.650862589131371*^9}, {
   3.6508626203648357`*^9, 3.650862742766029*^9}, {3.650862796270203*^9, 
   3.6508627999660807`*^9}, 3.651409012105715*^9, {3.651409496393302*^9, 
   3.6514095139449043`*^9}, {3.6514096902656307`*^9, 
   3.6514097052247562`*^9}, {3.6514127240600643`*^9, 3.651412736091091*^9}, {
   3.6514127733565683`*^9, 3.651412777100342*^9}, {3.65141280855617*^9, 
   3.651412815723261*^9}, {3.651412963164022*^9, 3.651412967579358*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YYFKXt2fjSxf9P8ADp51YQ==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
QvmS8MbuLgElBGx/rKP5f2H0Ods=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(0)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[FontSize -> 20, FontFamily -> "CMU Serif"],
  DisplayFunction->Identity,
  Epilog->{
    AbsolutePointSize[4.5], 
    PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbP+ZexoiP6EZT/2L7t+KnlB09d
tj8DBm/s51vsr2G7eAwq/9l+u5aU8+ILe+0hpv2wf/uk/dY+hm1Q9X/sbx7h
mPno+kb7s2A+g0PLR2+JXw/WQfUzO/DGa2/dd3+1/UwwYHWY66yvvPbOSqh5
HA77dtjw5eavsE8DAy6HMm93ffWE5VDzeRycvI69lOlfBjWP3yFP92e3+cul
UPsEHHYYbItLTVoKNU/I4eHf7gVrPy2Bqhd2CA11+jZjyhKo+SIONYEv1nm4
LIG6R9Th0X4+1jf/FkPNE3NY59unmnVoMdQ8CQfFpBm82r2LoeZJOtRv2y/5
OXYx1DwphykuPJ6njBdDzZN2iJOL5X7NuxjqfhmHnDWFvNteL4KaJ+cgNONn
6sozi6DmyTt8i50sEbUBxldwkDnyyDZ/2iKoexQckksdIufVLYLap+hgInCo
c0UGzDwlhxP72GIjQhZB7VdyqGq6JdXgCDNP2UEpSS/nhz7MPGWHQ0tvuM+X
X2QPANmC6OI=
     "]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox["\"\[Rho] = 0.15\"", 
     Directive[FontSize -> 20, FontFamily -> "CMU Serif"], StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{0., 9.999999795918367}, {0, 1.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6507184233671417`*^9, 3.650718445789122*^9}, {
   3.650718786971148*^9, 3.650718859699255*^9}, 3.650718905199617*^9, 
   3.6507189808930397`*^9, {3.65071921374327*^9, 3.650719227792285*^9}, {
   3.650719263444695*^9, 3.650719292323936*^9}, 3.650719358707658*^9, {
   3.650719467373415*^9, 3.65071949196379*^9}, {3.650719538196452*^9, 
   3.650719554428334*^9}, {3.650719587991088*^9, 3.6507196342943983`*^9}, {
   3.6507197721981297`*^9, 3.6507198306925917`*^9}, {3.650719883900537*^9, 
   3.650719990815322*^9}, {3.650777827488936*^9, 3.650777922067745*^9}, {
   3.650862585238174*^9, 3.650862628141445*^9}, {3.6508626687309217`*^9, 
   3.650862693584054*^9}, {3.6508627316813517`*^9, 3.6508627433681087`*^9}, {
   3.650862784447565*^9, 3.6508628003701878`*^9}, 3.65086283522078*^9, 
   3.650863277993328*^9, {3.6514090009943457`*^9, 3.6514090125871267`*^9}, {
   3.6514090542606173`*^9, 3.651409072477372*^9}, {3.6514094864859257`*^9, 
   3.6514095151394053`*^9}, {3.651409691263377*^9, 3.6514097273756447`*^9}, 
   3.6514098272748623`*^9, {3.651412737917293*^9, 3.6514127774680367`*^9}, {
   3.651412810990417*^9, 3.6514128164744883`*^9}, 3.6514129681949987`*^9, 
   3.651904301245048*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qdqlist", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"qlist", ",", "#"}], "}"}]}], "]"}], "&"}], "/@", 
    "avdqlist"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotfunc", "[", "q_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"dfinite", "[", 
      RowBox[{"\[Rho]", ",", "q", ",", "#", ",", "n"}], "]"}], "&"}], "/@", 
    "ct"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Blue"}], "}"}], ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", 
        RowBox[{"Length", "@", "xvalues"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"plotfunc", "[", "q", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AbsolutePointSize", "[", "4.5", "]"}], ",", 
      RowBox[{"Point", "/@", "qdqlist"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"stylize", "[", 
     RowBox[{"\"\<\[Rho] = \>\"", "<>", 
      RowBox[{"ToString", "[", "\[Rho]", "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\"\<x=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", "#", "]"}], "]"}]}], "&"}], ")"}], "/@", 
     "xvalues"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"AbsoluteThickness", "[", "3.", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.650718407766705*^9, 3.650718445165225*^9}, {
   3.650718786586598*^9, 3.6507188588705807`*^9}, {3.650718890554184*^9, 
   3.650718904495407*^9}, {3.650718962406781*^9, 3.650718979744109*^9}, {
   3.650719196348092*^9, 3.650719227265265*^9}, {3.650719261592016*^9, 
   3.6507192917470207`*^9}, {3.65071946572711*^9, 3.6507194913981953`*^9}, {
   3.6507195538237143`*^9, 3.650719633360579*^9}, {3.6507198201683397`*^9, 
   3.6507198235686703`*^9}, {3.650719903243977*^9, 3.6507199098558598`*^9}, {
   3.650719942830716*^9, 3.650719961759276*^9}, {3.65077783254595*^9, 
   3.6507779151685543`*^9}, {3.650862588940641*^9, 3.650862589131371*^9}, {
   3.6508626203648357`*^9, 3.650862742766029*^9}, {3.650862796270203*^9, 
   3.6508627999660807`*^9}, {3.650863301453699*^9, 3.650863311868124*^9}, {
   3.6508633475650587`*^9, 3.650863426718164*^9}, {3.650863462895014*^9, 
   3.650863481517935*^9}, {3.650863597726318*^9, 3.650863759375237*^9}, {
   3.650863792737142*^9, 3.650863885406082*^9}, {3.6508639511191998`*^9, 
   3.650864019393972*^9}, {3.650872519382955*^9, 3.650872521920269*^9}, 
   3.650877828026168*^9, {3.6508789115467577`*^9, 3.650878912644103*^9}, 
   3.650878943002697*^9, {3.650879203706778*^9, 3.650879209972184*^9}, {
   3.65140952679688*^9, 3.651409537035544*^9}, {3.65140960250891*^9, 
   3.6514096270149384`*^9}, {3.651412975455147*^9, 3.6514130001257133`*^9}, {
   3.6514131449107656`*^9, 3.6514131464137573`*^9}, {3.651413197295136*^9, 
   3.651413301006485*^9}, {3.651413331406447*^9, 3.651413332734539*^9}, {
   3.651904394933978*^9, 3.651904511732667*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[3.]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[3.]], 
       LineBox[CompressedData["
1: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
hIrXYP8P/F+V7g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[3.]], 
       LineBox[CompressedData["
1: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
pGYWFqgorOBHthH2/wBzQaVo
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[3.]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[3.]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[3.]], 
       LineBox[CompressedData["
1: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
BwVtGEs=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[3.]], 
       LineBox[CompressedData["
1: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
L6kaEddbG5UK7Ro277eopeT3G/8TG6dSsN7QaTp8Lx+RvR/lKWydgp0aOx9l
fuMjQSZ6jvn1rMU/ePAhKXAZuXm873DKERZGdhwKlN7OT/bnhUl39jKh9F1t
eEkTPymOTrexv8GEELUuOb+ZnxhXX/uef52JSQWvU5da+QlRoV+V8WOi2P51
6+BXfvLmyb6dHVeYONqoWVE3yE9atXpXnLjARGguXsTP85PF/rrvOzIxffeQ
vbYyhay+ar15nykTHS8mpCdVKcQiR1L+7X4mSkvCm1O3Usgdty8b1UwW9b+b
TdfvpJD37sJnRI2Y2OR5VJdCKERIVn++G0zYWTtINR+mkInJUW70DibKFS41
evlTiCpv/+ezq5kIoOfZ/gmgEMu+WT1+GSb0lXk4d+9QyLuqDfeeSzFRsjX4
e0IwhRQ2/ev6WZyJtzrP+WojKYS+ydTXfAUT2ea1mptZFBIS63LdbBkTPk1i
hZmpFDJ7xT1tYikTmta2BiSdQtZpud6J4GUi81jvQZvMRT8OJZKtCwywnWad
A99SyJiT4LjLHAMsP8XY7kYKEZf4QU3hMuCy4Cp3rplC5jRUDU1HGdh0i03/
1UIhp0lL5tgIAy/v6mbSvlKI5/f4gkPDDCQ9PlSrN0AhO94NHf7Vx8Bp8SeW
H4YoRPB+QVJyLwPy0R1tViOL+RXemrXqYSAx/uw3t3EKSfBbMHvNYeDE+lfu
PycppEo5dJdNJwNrkyYmbs1QCMf4c83yrwx8VdTyFZmlkJf2sYHFXxiIY1xf
iPlNIafWy+0+287AMZWyQMX5xfzt1c1k2xiQSaMKZfBQyf8Otuvv1mGhXf3A
491LqWTrKCeyVYuFmDfhUpXLqMRIqffIpV0s2Gq2JVhSqeT9prRQMU0WpHLX
KnIEqKR8n6AGW4OFqLfMbTM0KuG0JNeNbGPh8F/cbH8xKuF7cuVdsDoLq8o1
9giLU4n3SqqKylYWHn8o2q8gQyUD1kF73VRZePip2cFCgUoc28xTxpRYCPnf
A4UGJSq5HuAzEaPIwv1Nhv0HN1OJsZFnkoECC4F+mU5mW6ik30BCP1qOhWsK
4S77tKhk/c9+dyNZFs56m3vuMaUSzV7TA1miLGBV9VVlbyo5Ho6pnj9McC2L
H/GWU0nD8kcfHD8x8fqwuIH2+eXkvKH6bJA/E0m1AfE9YgJkndWvlFptJn5W
2F0TKxUgmqfSem6PM9D1qGh6hYcg8SrJd/dPZ2CmQVf6logQOSsa9WboEgNe
EfLFvgVCJPH2NiUnXQYka+VX9NkLExNvKRU5KgOWzal/ZOeFyYO0IqPCVjom
Tjx372CJkBLVH/UGDDqKTqYHipjSiFPe9siw63Tk1bn/3XmARiTnHm9q8aMj
a4+yaNohGjEfYw6uWeRU2eQ4MxsaUbTPH025SsfT1qdvQk7TyOUA5oqqy3Rc
Mr/TLeBLI/kOWfEiF+hQIcf1KC9ppEZAzyPHiQ6ldJmlLQwauamS5cu3yPJr
WytfptBI6HluurkjHVJ/LKyMMmgkI8QxbsiBDv6cfW6BBTSS4pZ9cc0pOrq3
asQsbaKRp6/KRR4co6MjYdy+qZlGnONVi74cpaNVOF0hqZVGHrmdiVFe5I/f
N7P1O2lk3z1qdaUtHQX0dRX+QzSyLPSOHMWajhyJryGHRhb9CTSstTlMx5vA
pxZyXBrp7r1kSLeig+Ug3lk8RSNK5yNE9lnSkdzYmBT2k0ZkJcfZ0RZ0JP4V
5nJyjkY+zJ/zGzpERxzbbKv6fzRy9PUfL51FfrJOcHphgUayS0NDg83p+D+j
NAZL
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"q\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
     Directive[FontSize -> 20, FontFamily -> "CMU Serif"], DisplayFunction :> 
     Identity, Epilog -> {
       AbsolutePointSize[4.5], {
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbP+ZexoiP6EZT/2L7t+KnlB09d
tj8DBm/s51vsr2G7eAwq/9l+u5aU8+ILe+0hpv2wf/uk/dY+hm1Q9X/sbx7h
mPno+kb7s2A+g0PLR2+JXw/WQfUzO/DGa2/dd3+1/UwwYHWY66yvvPbOSqh5
HA77dtjw5eavsE8DAy6HMm93ffWE5VDzeRycvI69lOlfBjWP3yFP92e3+cul
UPsEHHYYbItLTVoKNU/I4eHf7gVrPy2Bqhd2CA11+jZjyhKo+SIONYEv1nm4
LIG6R9Th0X4+1jf/FkPNE3NY59unmnVoMdQ8CQfFpBm82r2LoeZJOtRv2y/5
OXYx1DwphykuPJ6njBdDzZN2iJOL5X7NuxjqfhmHnDWFvNteL4KaJ+cgNONn
6sozi6DmyTt8i50sEbUBxldwkDnyyDZ/2iKoexQckksdIufVLYLap+hgInCo
c0UGzDwlhxP72GIjQhZB7VdyqGq6JdXgCDNP2UEpSS/nhz7MPGWHQ0tvuM+X
X2QPANmC6OI=
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbvTVOvqC58DOU/tj+uuIFDLe+6
/RkweGPvLfJQK6D/PFT+s/2DDG1GifAT9hDTftgH721nTjpyBKr+j72xg/p6
izuH7M+C+QwO0fPedPYfPAjVz+xgXXRu81KBg/YzwYDVwfX/kodCsw5AzeNw
2O2gW/zB9YB9GhhwOXRfc1PIYz8ANZ/Hwbc9+GXDuv1Q8/gdBD6aTGdL2g+1
T8BB8Zny+nvK+6HmCTnU8L0Xif2wD6pe2GH/h6Pv/hzZBzVfxEH31ZM5X+fv
g7pH1KFC8vLdX/X7oOaJOTgfWWMmmrIPap6Eg8jyoz0d3jDzJB2Ca6ZFHTaF
mSfl0LDyvEewEsw8aQfVyZGOdwX2Qd0v47C6Xu+8OCPMPDkHHpf3PMc/7YWa
J+/w30t6+c6nML6Cw+JpmQuO3dwLdY+CQ0qQ7sLT5/ZC7VN0YLlwa/XqI3uh
5ik5BHcqyvjt3gu1X8nhfuueu3M3wcxTdghoizvbsQpmnrLD1sJTlv8X7bUH
ABN97FA=
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP//oPAe3tjMLhsL7Xz6/3XEc+g/Mf2TofOWfv+
vW9/Bgze2Huuvp8tGXETKv/ZPo91x4IJctfsIab9sO81Xj0psvEKVP0fe4dn
a1UnL75sfxbMZ3B4pDQrv1HpMlQ/s4O9yxkP04uX7GeCAavDrTfSfm6zLkHN
43Bo7+Eyf1F0yT4NDLgcdogIWwWGXoKaz+Pw74LzD1O7S1Dz+B2kT21/OEv7
EtQ+AYfdc/3v2cnAzBNy4AzcetyXH6Ze2OH9DwUFMxaY+SIO+z/LPZ/w6yLU
PaIO/hKlesKfLkLNE3OwrT6k2frqItQ8CYfWzTVFex5fhJon6eBUlmg74+5F
qHlSDv9vNB7/dx1mnrTDl2mWPbcvXYS6X8Yh+okEg9w5mHlyDvMLrizdcRJm
nrxDjGlh4oKjML6CA9d3l++nD8Lco+BwYUX0KuN9MPsUHXb92vjxwi6YeUoO
u/e62c3bDrNfyUE56cDZaVtg5ik77NKb0rZtI8w8ZYeWGwW3f667aA8AP2X1
HQ==
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP//oPAe3tjMLhsHyjmPVVC7TmU/9jeNVdBfdfi
h/ZnwOCNfVgWl+qZnrtQ+c/2DrvnhN/ed8seYtoP+yD1G36VwTeh6v/Y3xN6
KyjSd8P+LJjP4MCyXXrWfskbUP3MDt79h391nL9uPxMMWB0q3mXX7ZlzHWoe
h8OrmCLWm+XX7dPAgMth+oGImr3R16Hm8zhE/lgWXeV6HWoev4N4qH+ap/F1
qH0CDvz/rKK5VGDmCTkw2AjF/xODqRd22DBrcfwibpj5Ig4LlQ7XzGSEuUfU
Ya84s8yCH9eg5ok5vJm39kHzh2tQ8yQcWM0nNsm9vAY1T9Lh6KWm5KBH16Dm
STmwBRnbcty5BjVP2iFrNmOL7rVrUPfLOBg9WuG4+QLMPDkHeRkVx97TMPPk
HbzYdxVtPAbjKzgsnjyjXPwQzD0KDjPOH/PcsRdmn6LDZ/nNP3p3wsxTcshY
8aVk8laY/UoOk9XT049shJmn7PDV/baA7DqYecoOFjdCDGatumYPAD1M6ds=

         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbfVOlQKJn5Esp/bP923xH9/zFP
7c+AwRt7vs6pqomGj6Hyn+3tvD6oH5V8ZA8x7Yd9+0Jtj9zOh1D1f+xndb3N
brd8aH8WzGdwWBRTMzOL8yFUP7OD2rmff96/fGA/EwxYHda0cdw6fPkB1DwO
B7GE/uXqhx/Yp4EBl8Pylm9rhLc9gJrP4yCyIcEjdvUDqHn8DgE/b6X5L3oA
tU/AQezxl2tls2DmCTnYfd2t2z4Zpl7YoU5m2m3vXpj5Ig6Z02ynzm+HuUfU
Qf98qE56E8w8MYdfme8i+2ph5kk43L3yfi1rJcw8SYfjXh8NDpbAzJNyOBuv
V7a9AGaetIP8y89fH+TA3C/jsLJWeIZ5Jsw8OYfGiU/itqXCzJN3UPhzUiMy
CcZXcDCrmtIoEw9zj4LDZxan+r/RMPsUHd6UMCz/GQEzT8nB+6D7Db4wmP1K
DmlnGmysg2HmKTswvpa2qg2Amafs8FvDPeuy7wN7AHqi8Vw=
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLa3zO9XklR5BeU/tm8r/PJO6OUz
+zNg8Ma+pklGZab1U6j8Z/uYhOfBkxKe2ENM+2FveWzDUp03j6Hq/9jvD+ds
bl352P4smM/gsKBnbuWv+sdQ/cwOpQsu1T5Ofmw/EwxYHVY5Cd2p8X8MNY/D
QUiW7cZh+8f2aWDA5fD/nX86nzHMfB6Hu213ryZrwMzjd3iQOb9eWx5mn4DD
b2ORHGZxmHlCDo/WtBiv4oepF3ZwapdZ+okDZr6Ig976yCl7mGDuEXU4eTO3
9sOfR1DzxBy2x4qcqvn+CGqehEPrveW8IZ8eQc2TdDipdvNG9ttHUPOkHPTP
q7/d/eIR1DxpB405xetsnzyCul/GQWv2mb2v78PMk3NgTHDacPA2zDx5h7B/
Ijd3X4fxFRweivYrXr8Mc4+CQ4ndylcCF2D2KTr8ijr9Ne0MzDwlB1P+s0HX
T8DsV3K4/PpBYMJRmHnKDnJPSioYDsHMU3bwuRFSsW3fI3sAiMb1wg==
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbfv2misqzwGyj/sf3m6QKb17i+
sj8DBm/sK8WOVs5IeQmV/2w/yUHrUty7F/YQ037Yz3p2f9mHVS+g6v/Yv1rE
bvyx4YX9WTCfwWGl48XFBSkvoPqZHaZdZFDv8X9hPxMMWB1OXHUsMLWHmcfh
cGr27dYDhi/s08CAy2HaWS9DczWY+TwO91f4sbHKwMzjd3Bf67fsjBDMPgGH
aW43WAO5YOYJOTwRnnMpgwmmXtgh83Gewfdfz6HmizgYOpcmP//8HOoeUQce
//PKWm+fQ80Tc5h+mfH15mfPoeZJOOR/y79R/eA51DxJh4+cxz5X3YKZJ+Vw
eHfg6tVXYOZJO6xMra3kPP8c6n4ZB1nhrCUTTsLMk3OQTw3itzsCM0/eYYq+
swT/fhhfwSHwXHsd4y6YexQcDn4K8hfeCrNP0eGO5YdrThtg5ik5aEv5Tu1b
DbNfyaH67X+Tr8tg5ik7fKo1aCldBDNP2cH+zPs8vnnP7QEAs/I/
         "]]}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox["\"\[Rho] = 0.15\"", 
        Directive[FontSize -> 20, FontFamily -> "CMU Serif"], StripOnInput -> 
        False], TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"x=0.\"", "\"x=0.0526316\"", "\"x=0.157895\"", "\"x=0.210526\"", 
       "\"x=0.315789\"", "\"x=0.368421\"", "\"x=0.473684\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[3.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[3.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[3.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[3.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[3.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[3.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[3.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[3.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[3.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[3.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[3.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[3.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[3.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[3.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3.`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3.`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3.`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3.`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3.`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3.`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3.`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.65141300969919*^9, 3.651413073149971*^9, 3.651413147932404*^9, {
   3.651413191225992*^9, 3.6514133019701567`*^9}, {3.6514133337209063`*^9, 
   3.6514133609725847`*^9}, 3.6519043045336323`*^9, {3.651904410393738*^9, 
   3.651904512674004*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qdqlist", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"qlist", ",", "#"}], "}"}]}], "]"}], "&"}], "/@", 
    "avdqlist"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotfunc", "[", "q_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"wfdth", "[", 
      RowBox[{"\[Rho]", ",", "q", ",", "#", ",", "n"}], "]"}], "&"}], "/@", 
    "xvalues"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Blue"}], "}"}], ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", 
        RowBox[{"Length", "@", "xvalues"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"plotfunc", "[", "q", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AbsolutePointSize", "[", "4.5", "]"}], ",", 
      RowBox[{"Point", "/@", "qdqlist"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"stylize", "[", 
     RowBox[{"\"\<\[Rho] = \>\"", "<>", 
      RowBox[{"ToString", "[", "\[Rho]", "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\"\<x=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", "#", "]"}], "]"}]}], "&"}], ")"}], "/@", 
     "xvalues"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "t"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.650718407766705*^9, 3.650718445165225*^9}, {
   3.650718786586598*^9, 3.6507188588705807`*^9}, {3.650718890554184*^9, 
   3.650718904495407*^9}, {3.650718962406781*^9, 3.650718979744109*^9}, {
   3.650719196348092*^9, 3.650719227265265*^9}, {3.650719261592016*^9, 
   3.6507192917470207`*^9}, {3.65071946572711*^9, 3.6507194913981953`*^9}, {
   3.6507195538237143`*^9, 3.650719633360579*^9}, {3.6507198201683397`*^9, 
   3.6507198235686703`*^9}, {3.650719903243977*^9, 3.6507199098558598`*^9}, {
   3.650719942830716*^9, 3.650719961759276*^9}, {3.65077783254595*^9, 
   3.6507779151685543`*^9}, {3.650862588940641*^9, 3.650862589131371*^9}, {
   3.6508626203648357`*^9, 3.650862742766029*^9}, {3.650862796270203*^9, 
   3.6508627999660807`*^9}, {3.650863301453699*^9, 3.650863311868124*^9}, {
   3.6508633475650587`*^9, 3.650863426718164*^9}, {3.650863462895014*^9, 
   3.650863481517935*^9}, {3.650863597726318*^9, 3.650863759375237*^9}, {
   3.650863792737142*^9, 3.650863885406082*^9}, {3.6508639511191998`*^9, 
   3.650864019393972*^9}, {3.650872519382955*^9, 3.650872521920269*^9}, 
   3.650877828026168*^9, {3.6508789115467577`*^9, 3.650878912644103*^9}, 
   3.650878943002697*^9, {3.650879203706778*^9, 3.650879209972184*^9}, {
   3.65140952679688*^9, 3.651409537035544*^9}, {3.65140960250891*^9, 
   3.6514096270149384`*^9}, 3.651412975455147*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1:eJwV0nlYzIkfB/CRKJUm0WhIlA5UCoUS7+8vchY1FTZp032MDsJGi4RFh5BW
l7Vbmi7TgUrnTFOaiO5D0jTdjTRN13ap7ffH53k/r+f91/t5PiqOPjQXMRKJ
FLtw/8+jLv21rIFL+5gHWPfNQkToY5505FGtkWJT373plggU6cbw11RnXNfW
3iMRIMJWw1Uv46n+kB/ewK90FcGoZkfmY+ptKLvuOehmIgIrlmMQRo1Ej6Ce
Ij49jOCgkN8eUBNRHdvbU+c5DGd/IfU+9Q0STaMc7ZKGIBl55O9hURkmOFKK
JroC5NZsP3RIuRpOZcaUbNdenA5ua+WENMDt6JFaDWoXfLIu6jwb+4Kjvif6
PX/yMGTMr6+UbIXqGclQtX4e6NzjV2eUWvG7ufHM9zoe3HmbK+xNW1H9TbQt
MZkHh+UdDupRrSh1EOS8s+bBwsMsMnvXV3z1JaVezmiHnor6TNXVNmjvWqum
6vMNIxFN3EWLeKBa01W8KF9RSM9CN4WHeZYMd1bsK/44HJrzXpuHVJvD1+OF
rVAimSSGnOaB7ZU4L13ZClOfVzcUMnngOmk+jwtsRZWGSWykbgfq1z/2vNv7
BRuWUGnJ7R1wKIm2PFbeAi77fUm1cSdsswceT6Y3IalqtjvsUCe04yUifo1v
wp3m7VJmtE7wfcL314c1weTHc2uuWyc8r6UyO7ybUKh4ZYD1uBNvjAzyH29r
QqaP5srs/k5McYXlZu8a8WzdPdfIyC70P53V5dc2wCPgyPJfBruRWszv/qBe
j9S1K87aT3RjnVKt7zS1HoNFLelOpB40COgWO2Tr4S3mbua9qgfK2uxh1kQd
/EPuhgQb94AWVUA6xq3DjXjOMmZoD4y8evNWna/DU/bepYt1ekGbkU63LKoF
e9n2+fTzfVBM3hQtd6UGm6z1ch/81of973WdHtNrEPF8q497cB/CZq+brXOs
gcMOLd7G6D5EcW/YHzevwZydWklMWR8KxlPSlNRqYJRJuXFvbT8s/ceS3ydV
483JmTmnyn70aQgkPvh+RlJC2dwadQEmE/1INIMq+N6x5mPhzwTj/ZKP1Kuw
x62b42woAD8/vKNNoQo1W8TvM80FiL3cXxcz8RFTWftXmlwWgOY+FcvM+wgz
VqmmR4UAr1izf2rjI0bbWBa5Ht8xmpHra2TzAQSl6B8r5iCm8q3eX07gQvyp
go9p3iDMGl5TvkZxwV3pvWdX6SBKW1Psjzzg4sSK9Q1rmgYx0D72er8fF/Yy
QUs6fw4iLaMihAkuromZuvua/0D3xlUcm/YK5AxV6YQN/kC/ZtvWbNUK6FS0
5b3fIkTth4CVE+XloAx5/YgwEMJbgXThXX45SAozKmcIIX7f/eDE3YxyNDhS
Q4Q2Qsg+qnQ2ji5H4JzNWcUgIW41KS2hni9HlUH1Is9mITiDLS9CKeUwqHN4
udRkGLb7TolUfcvQQFgNpQwN48UYJdDSmIPpv7ris0eHoTYif7FmBwcq8xfN
CyaH8bdC37SNFgfeRZHpVWIi1OoFJPmv4UDCqMlTSBFBrzCuZn6yFEY7funT
hwhTVzbHHM4txQv1XztKHorAjUo6fH13KehSXnWNeiPYP6n+yxkzNpKKKDlH
d47gXswflsUH2OD5lkaX7BnBBXbtLc29bNCaqedSDo7AdqdmgMxWNnYncoWB
diMg0dpWbZBjQ3yfxnK1eyPwOtC1xqORhTg//qELvBHUCtNl7ZxZ+Nhyqkg2
fBRTyp+fHlIvwa3WPgXPJ6PIf7V1nRy1BLvbrniXPxvFWv63LZ0yJUjk/bk+
MGEU0YQw55+xYgT2NgcN5I1ifP5mYmRZMXTGTh0s6xrFyYvtwfquxXhIPl0d
YDiGcF2Os1ZmEawOnuZ3d49BYKlXe/BsIfJXbqvuGhiDuXrjhg6rQqjylxV1
Do1hJt1mxc2jhRi5VvCsY3IMm84pltTvKkRElrJFm8w4Ane1va2UL0SVUk9x
vf446LqO575XFuDAqF9c6e1xXOph6fCNC7DzRcipF2oTKJ8mjIP085HJvhEg
vWUCiix6hVArH1pdF2Mv604g5N6rdOeN+digYcczM5pA0V1Vn3Py+ZBO13ab
OjEBoVz97qThd+jI/XSZdm0CNg/8FU8z3yGkmhwlXjcBxsAm3q6tC/3ckwb3
G/8ialDK7PO+PPQcqU6gcCYxnaZpr/M2B5nRvIBalWmENtyK+svsLV7eW3x/
89UZTDV29cmqvMG4k63AtWAWGpoCKfq215A+cJeWtXoOdTPy69wssxEo1yPD
t5vHqRNzlnpxWZAp1iI1m5MI3hfbfC9SFvZePvGTM00ibj/1CJekZyIuMTRh
Y9wi4iL96IOPXRmwt9H/tOyYGPHQoLRcY4qJt40uT4onxIi875JqTG0mDKsy
xXqjFhMze+25uUGvsMHUdfzJAXFCqU/5WGNrOgz0DR696RUntLJYG9ceTwdv
JKwy4c4S4vPm3cXna9IwuMPyDnX7UuIrbXaNgnUaNL7rCBbVLyXW2xpKkASp
KFO7VOcbJEF8cYlruHYzFQ8bGp1oapKEyxeLtGGNVAitWI/EyiSJ2mWPKl0a
UpBto7Df0G8Z4WeqN3U/KAUJn4LjO+WliPXWk2mfDFPwb4XdNflSKWLnOWbn
bVEyOh6VjMt5SxO+7AJ6UEYyJmr3UG/JyhBuK6JeD1xKhm+kKiugUIZ4cXub
huueZKz+pCrXbb+cOOKvqKUimQyrxvRZpbnlRBiz5GBRCwMjv/5Nb0uVJdja
P2r2JzNQ4pBxR9aMTLjmb38a8TsD+dX0Y+3HycTq6cebmgMZyNm3ZQXTkkxY
DKf0r1twutLLOPNTZELdvmAo7SoDMS0xr0MdycSV4BS5D1cYuGRxly8VQCYK
nHLiZS8woEWc3SuRRCaqpPZ657kyoJGxZnFzMpm4qZUTIL5gVeUWblIamQj3
E2ZYuDCgOEuzPphFJrJCXeIGnBhYmnfY604hmUjzyr247hwDfF396MX1ZCLm
VZls2BkG2p6L7OsbyYR7vHbJV1sGWpZnqCW0kIlHXs7RWxb8+fvmTJN2MnH4
nuRH7mkGChnrK4IGyMSS8LsqEicZyKN8C7UcXNgnVat8yoaB13diaCpCMsHv
umTKsGYg1UmhnTVGJjT8ImUPWzHwsq4uIeJfMqG0WpT5jMbAi/9FeDhMk4nK
ufOBA5YMxGWa6+r9JBO22bO+Rgv+c730+Pw8mcgtDQ8PsWDgP5Xhzjo=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[6, 7], 0.8571428571428571], 0, 
         NCache[
          Rational[1, 7], 0.14285714285714285`]]], 
       LineBox[CompressedData["
1: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
BfSZBSKD95eRLskn/+27UYGNB3+ZSzIRJU2DFN+LnqiAnq7eneJBUXJy6wlj
I7ICnOmE2qxoMXIsTPbJzKYK8HTsomm7xcldn2itn8UqoDGmNSrcIk4+OFbo
vW+cQrXar6zAyOVkY+zSk2w2hdvs1pP2ahKkVLuhRVU5Bb4DdUekWoK8KVkq
GpVL4YWTwgH9IEmyK9Rws3Yqhaz6qId9civI6DEeJziGwieGS5hc5QrSimFm
du8Chd475XOr/KXIV8NXqrV8KMw3G9KurZQmLSsvjJceoxCYvIkKLZUmDz++
XLzaisKa+k2r+t1kyCcDRsT6/RQcWnMX1i3KkAE+xJL0HgrT7k/OdD1fSfJ0
ysbealIo98iPXmlJkJYe9PdVGym8aTxzuMeaIF22Mi6lCPxqn6Zsnh1Byt/S
MzgrcO66pxlWRwhyTN2yQ1HgtI60onhPgrS7/ynRT4XCr7bXuStCCZJGF5uS
30BhG+m6d3kOQSZlWtv7r6Wgka+8rP1Pgpz8q9PKROBNGzpqcv4iyBg7dwdl
gZUW7B0PFRJklb5JOF2ZgniJ2enoUoJclUk7qCIwV1s3dVmLYL+Xm89SotCV
OeXW0kqQyd9tzZ8J3CGTr5bVQZDOnpG8CIEbxn4oMO4hyAdHFG21BC79Q4UR
OUKQS/yCuJg1FEoUu+PteAT5R/37YHeBi6LT7FX5BEnMRJzcI/Dzkwo91CxB
SkS3nehXpPCUxcpK/ESQI1pnAt4K/Hh/oq/HV4I0vp96/a7AGQVW2ju/E6S4
x/E/fAV+oCI1t7REkJ078ppJgf8HYPDEaw==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[5, 7], 0.7142857142857143], 0, 
         NCache[
          Rational[2, 7], 0.2857142857142857]]], 
       LineBox[CompressedData["
1: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
mJ6fpxKFeULPHXL/B80joz8=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[4, 7], 0.5714285714285714], 0, 
         NCache[
          Rational[3, 7], 0.42857142857142855`]]], 
       LineBox[CompressedData["
1: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
fxiojc3MEGQVs8/ZWe7/ATr50+k=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[3, 7], 0.42857142857142855`], 0, 
         NCache[
          Rational[4, 7], 0.5714285714285714]]], 
       LineBox[CompressedData["
1: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
llzbf7bGaREXevZHx+9slyOLpY1+MVDjwtLC8laJUI5UuRIoGlbkgj2S9DEr
Tp5szDcydJblYsB8XxzDTIEUalk/K5jlwLDfRCzdrEC+0dmRWjnFQZ3BmaaI
GEXSL+IGyZrg4GZLq7+rwTzy6UXWn1GjHEjcqm/J1M0jt5TrlgUMcfDSQ+MH
m0glUlN/6p7zIAdZn2IfUQuVybkPK5XTxRx8qz90fmGNMnkn/16gsJcDzq2q
8flhKmRGUa1FqICDib83MX5VVyVl3i4+ZMfjICJleXVUhSo5N8FcTnA5WPJp
+Xy+jxqpU+Jvo8/mwK01/7vurBqpbXXey+sfDkYOPwntfq5OCgv3FV3u4qDK
tzBO3YUgzUqVzom+cPCmMdS5ZzdB+n2OPs+lXbrVeEHBPoKUs0272Ek7Xzcn
fZcnQZ5+0X6NSfthx8NXiX4EGRC0taSI9pm9V7jKUQQ5kwevKNprSO8tirkE
Gd0p80WFtmGhtmz7bwS5b3GVujzt5Us7GnJfECTLcLHDbAcHWt9d3R2KCbLg
4ZU/h2grlO0IiasgyJM6F1610uaus0iVbSZIlaMWo49pd2cM+zS3EqRpwia7
VNodaoUGWR0E2V/cdPs27c/9q4vsegiS2VFgHUe74tmy+pg+gsz4kbh/nHaZ
5j+J+wYIctuR+BF/2q/iHrrqSwjSVyNhjzft5/4aPdVjBLkhwFx9L+2cpqas
5G8EmTPYFr6Tdua25GDfKYJ8Ly3XbEc7vWjXuvUzBLlL683GzbTvL1MZn5sj
yIi8yUeWtP8HvwLiWQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[2, 7], 0.2857142857142857], 0, 
         NCache[
          Rational[5, 7], 0.7142857142857143]]], 
       LineBox[CompressedData["
1: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
2MmyhA///aR+Cgkt68Pjt36TIxLzyveV3SZhYW5x8wVbjjB/U2OjeYtE39cb
79Ij5Qmj6GhT6XgSfDPXSLqpAvFXS+P14eskVg0b8qTbFIjKnmrTY9dI1OqG
tgZHzCHKYmufi66QiG/v8HHTnUs0Hs6KmL5EQuBefVOmdi4hk1OogYskCneq
bNt4fB6xbtqi+uI5Eukfr6QMLlYkHpz/k6MeRuJb3b5zi18rEu6TF/yKTpHo
v1k1vjBwPvEi96f48BASEy2b6JcXKBEXnTZ+TzxBIpihUx32Somot4keSQkm
8dNHnYUsT2UChyP82YEk3Duyv2vMKBNOKm1M52Mkvh54dLQnawGx1MA0MC+A
RJVXXuQCRxqRqrPam/An8bLpqEPvDhrR6Zuhbylxya8Gi3JdaUTkTMqomcTZ
GhkPnH6nEfNnZy7pS3yv615RrDeNqCk+XrpA4lCXqwOKYTTCpjjD/4sfiTXE
/i1zntCIkIJC9jmJV+Utk+3MpBFJ++51h0qss6Kr/slzGqEmN9IUJLHadzcP
mwIa4eHSUukjsUKZXUDkKxqxSSkqx0HiAWPzu7JtNILhTzSqS9yTKvJs66AR
FVIpXSoSdynn6aZ30Yh65j4WTeLG4Z/zrXpphCFbVkpO4ldPNesiuJJ6I9KW
70uiTPVLrCufRsjXOuxnS1wUec9NW0Aj2EVLQvolzvJR6a0W0wivyqqMdokz
WlvTE77RiFxOWnWjxA+3Jvh5TdEIv2tkT73ED/KdjE1+0IjVehFTryW+rTl/
fHaWRkzZnaNXSPw/+H3kgg==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[1, 7], 0.14285714285714285`], 0, 
         NCache[
          Rational[6, 7], 0.8571428571428571]]], 
       LineBox[CompressedData["
1:eJwVznk4lQkDBfBrSWW7VGQrZa1kSUxl6LxSylqWokhKVDMKX8tI2yAiktCi
ZMgWEUlqsmdNtq5ryHLtvO6usX0J3/3+OM95fv+c52w85efoLUyhUB4L8v+2
9ia/Vk5c3q1TNpVkGzWJ8ddHTvUrOkNadV37g/BJyEt0xLxVPI0tQifHe4In
obdrTcZzxUtIaDdIvBk4CZO27QVxirdBibTLWfCeROWzauN7ignol95YxTCf
RGhwVOBdxXR8yhOOlV7go1zFp/jIx3Rsu37DeHyOj7n3xJSaWwZ+a9yvXzPF
hy932q8kKROaqonSUWw+nN08z7BVsxGTJS5q28uHlrHxEXut19AWXpR8XMrH
6Us8xUjFIkidv7m0/U8+tovEBRX6F0H3YF8GcZ0P4Tijnp76IvDk9WscAvn4
K/9qkt6Vd/hQzHQK9uejmymiSqcVY2v4Xn25k3wcPKmgoRr9N3zrPh6XsODD
xN5c791iOQr3e76SFudjRd9wDONwBbKs1aNSxPjo/D2ctzyvAiHxjnt/EeHj
Y423a55uJdw2RHp2z/HgOpSjSOmthHaNyTcZBg9x64yTMnZ+ArtEkzeQzcOK
BKtU/mQNDuusftFqycP8zsH5VKVauKX+4mRmzgO3L/CIk0Utit9P1hb8ykO7
9kuJ4oRaGGxK6HhpwENyidiVazvqwLceHelV4sFouNpa7EY9NqlZyB/kc+Fp
uHtKeUUj/ri4o03/Ly6cOjvsmw0a8Shi81Grp1xYXj+fffNoI5wWgnvPPORC
py7JYzCnEeqSR0reRnExc3S+IdPuCxzyn+wKD+QiOvjD823xTfhnTPWgrBMX
79sM9+9f3wp1m3BuogQXMRPsA1stWxHg7lZ2fDkXPsJZ1rIXWjHG/2++pggX
8kbK9j1lrTAZHONU/eCg5Etwznu9NhhdEbLRYXKgrP/bG5uWNlhbX4st+8xB
97RJxUUpGt7JOD6qiuLAUliB8NlIw+FeqolQBAeF0tOVrsY0bFAOvrL3Ngd3
tfM/mR2nYf3wpeyO6xyYHFWvW55Hw1qlixFqFzhILJVofmbbDoqsXNUpBw5c
Q3u7q6PokKbkVp9S4kBmQGvrmVQ6piNmJ2vlOfhsGnBD/D0dTk9aW7auFuzN
LNvgMETHK/+HIcskBX/P6Xszdnbgpkmj69ACGwz7EN7caAcYV0dFLYfYOK20
SVSP6MTUTEPqkzw2/N5c1H0y9Q1ubT1lD+3Y4JoOtn9e0Q0/KxW7aWs2fBvs
g+ZVutHe9xYuB9g427+53mNfNzQ+3turZsGGp9SAp+ajbug+VAqj72Tj0Dnb
hMIdPTAor8rN0mDDYKPmfFNQL5Ypz4bNLrDwPfafBiGhfoh5qeSXFbNQ6vsG
I/L9UL+fGniliIU7B6KL67b2g+nu7rOtkAUVyp70KNd+6HXFpOflsbDPL++W
XEE/Spsdz1Sks9CktedZgv4ATie4sfbFs7BhmaLjS8YAxDJcXrUEsNBQVVfR
ajoEZaPg+sNGLGQ2/Ry5t38I5KYXLjGGLIR1GorbOg7hGEP5UoMBC3s4yc4N
Z4bwhqdrY64r+Kfwx0Rl3BAi4pvN92mxUOCnvbqQHMLym4mdCQosPFkX4ZOQ
MIws+wVi/yIT565aSR1lj0A8hbKQ1sxEjrLscY+ZESTvZM7YNDHBLuvK9aKM
Qt1Se2aqkYkLwmdtL6wZRZ1mAMW6gYlLUeFRoaajsLnnpk2pZuLW8+qVr6NH
QZNb2/PsAxMPq8zERHTHoPBV9kdkOhNVKw2Xcs+Po3p+9QupW0xscjZ4fzdw
HEJdKc6dN5iITdbzOxs6jmIF0ZnU60x4btfpV08ch6ens5BJEBOL7hoVT2vG
0Wn9YP3ly0yYFMjfilAmMXZ2zzN5XyaKjswven0moWxZrkw5xkRmWs2ikiYT
HhYLM6Y7mSDky144vWYj3mXWqJDChG5974e6LTz8Wip5Uo02ATrhxM3m8nHm
mNgxWuYEfMV/p3UYfMdj5QJn6dsT+NLlUiYd8y9OzMymPvSagJOl6+DIyBT0
l8yyTA5M4JeUKJcUjRn4Xe4b3mY4gYHFePrZW7P4+9s1y9h1Exi1ak2Tr54D
v+Gs3nfJCRQk9l/9uvEHCl407z69QCIjQiRyc9A8GIFzW0z4JKa9jjF9Sn5i
zUSw4d1REhJ7wx3frF3EppYFK98eEtdlRiUH3ZfAH8g21WonIVmuQ+m0oxBr
HhGtc19ImF05uFD9g0Ic2JUUu7qWRFJ6dJp6khBhJVFr51ZBwuOwUfNKG2HC
QK7oHe1vEu86vOPLZ4QJt86U3tkiEruaCoTHHokQNK6/91ABiQ37fKbj94oS
jhLDcgO5JIyNjB8UjYkSdyyCRIKySfR/v/c5LWwZwTS3sTmfSYK93SFM0VCM
+LTnp4N3Ggktli5TqF2MqPMo9G5KIVGjcZnmH7yc8Ko1CDFKJnGf3uHlqLGC
0NrhIbv0jATPqfKBcM0KIiaWMfpvIonCw3IWuwJWEoH5eatGH5NIaw59PrRK
nOge70pVfkRitt792qpP4gT9vm2AXQKJgQcV0zIXJIjBnAqLzDgSM19/VQyR
liQCfUNMjR6Q8E9Qq7xaKkm4jQmFltwnsbZZTWbEQ4oIbyxt8o8h4dSR+1Nl
UYoobA95uvseie8nUn17c6SJgPX/TohGk6jwzA+TtqUSf8yfNuTfJfGx1deG
YU8lPj2fucUSuHj3FtnXDlQi9E5ay5jAuSoZSXYuVMIs086vT+CnXU/fRp+i
EkGHusoaBb58KHxQ/CqVYHwJuJ8hsA5x3Gx5JpXwObFK2F1grXwlkc6XVGI9
59B/XARWW9/VkPmKSrwqTx52FFjhp6Oz5Rsq8VeJz2crgcU+HPg9rJRKtHCe
p+4QeFDfKFGknUpkXnS9vVrg3uRJj/YOKvGNdWIZVeAuqXyNtC4qETLuf0dc
4BbW5oI9DCrBpbyOERK4NEu1PniCSvyk383mRZL4IN8X7cCmEvcj6YYsgd+G
PXXcyKMSk3yNsjGBc7zkGJVTVKLiP130PoEzaLS02FmBe0xOfRM4xTz2nOcP
KlEQ94JPFzipwE7fYIFKDO6m/tkm8GNViemlJSohG/GnTJPA/wOeMbV5
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"q\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
     Directive[Large, FontFamily -> "Linux Libertine Display"], 
     DisplayFunction :> Identity, Epilog -> {
       AbsolutePointSize[4.5], {
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbP+ZexoiP6EZT/2L7t+KnlB09d
tj8DBm/s51vsr2G7eAwq/9l+u5aU8+ILe+0hpv2wf/uk/dY+hm1Q9X/sbx7h
mPno+kb7s2A+g0PLR2+JXw/WQfUzO/DGa2/dd3+1/UwwYHWY66yvvPbOSqh5
HA77dtjw5eavsE8DAy6HMm93ffWE5VDzeRycvI69lOlfBjWP3yFP92e3+cul
UPsEHHYYbItLTVoKNU/I4eHf7gVrPy2Bqhd2CA11+jZjyhKo+SIONYEv1nm4
LIG6R9Th0X4+1jf/FkPNE3NY59unmnVoMdQ8CQfFpBm82r2LoeZJOtRv2y/5
OXYx1DwphykuPJ6njBdDzZN2iJOL5X7NuxjqfhmHnDWFvNteL4KaJ+cgNONn
6sozi6DmyTt8i50sEbUBxldwkDnyyDZ/2iKoexQckksdIufVLYLap+hgInCo
c0UGzDwlhxP72GIjQhZB7VdyqGq6JdXgCDNP2UEpSS/nhz7MPGWHQ0tvuM+X
X2QPANmC6OI=
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbvTVOvqC58DOU/tj+uuIFDLe+6
/RkweGPvLfJQK6D/PFT+s/2DDG1GifAT9hDTftgH721nTjpyBKr+j72xg/p6
izuH7M+C+QwO0fPedPYfPAjVz+xgXXRu81KBg/YzwYDVwfX/kodCsw5AzeNw
2O2gW/zB9YB9GhhwOXRfc1PIYz8ANZ/Hwbc9+GXDuv1Q8/gdBD6aTGdL2g+1
T8BB8Zny+nvK+6HmCTnU8L0Xif2wD6pe2GH/h6Pv/hzZBzVfxEH31ZM5X+fv
g7pH1KFC8vLdX/X7oOaJOTgfWWMmmrIPap6Eg8jyoz0d3jDzJB2Ca6ZFHTaF
mSfl0LDyvEewEsw8aQfVyZGOdwX2Qd0v47C6Xu+8OCPMPDkHHpf3PMc/7YWa
J+/w30t6+c6nML6Cw+JpmQuO3dwLdY+CQ0qQ7sLT5/ZC7VN0YLlwa/XqI3uh
5ik5BHcqyvjt3gu1X8nhfuueu3M3wcxTdghoizvbsQpmnrLD1sJTlv8X7bUH
ABN97FA=
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP//oPAe3tjMLhsL7Xz6/3XEc+g/Mf2TofOWfv+
vW9/Bgze2Huuvp8tGXETKv/ZPo91x4IJctfsIab9sO81Xj0psvEKVP0fe4dn
a1UnL75sfxbMZ3B4pDQrv1HpMlQ/s4O9yxkP04uX7GeCAavDrTfSfm6zLkHN
43Bo7+Eyf1F0yT4NDLgcdogIWwWGXoKaz+Pw74LzD1O7S1Dz+B2kT21/OEv7
EtQ+AYfdc/3v2cnAzBNy4AzcetyXH6Ze2OH9DwUFMxaY+SIO+z/LPZ/w6yLU
PaIO/hKlesKfLkLNE3OwrT6k2frqItQ8CYfWzTVFex5fhJon6eBUlmg74+5F
qHlSDv9vNB7/dx1mnrTDl2mWPbcvXYS6X8Yh+okEg9w5mHlyDvMLrizdcRJm
nrxDjGlh4oKjML6CA9d3l++nD8Lco+BwYUX0KuN9MPsUHXb92vjxwi6YeUoO
u/e62c3bDrNfyUE56cDZaVtg5ik77NKb0rZtI8w8ZYeWGwW3f667aA8AP2X1
HQ==
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP//oPAe3tjMLhsHyjmPVVC7TmU/9jeNVdBfdfi
h/ZnwOCNfVgWl+qZnrtQ+c/2DrvnhN/ed8seYtoP+yD1G36VwTeh6v/Y3xN6
KyjSd8P+LJjP4MCyXXrWfskbUP3MDt79h391nL9uPxMMWB0q3mXX7ZlzHWoe
h8OrmCLWm+XX7dPAgMth+oGImr3R16Hm8zhE/lgWXeV6HWoev4N4qH+ap/F1
qH0CDvz/rKK5VGDmCTkw2AjF/xODqRd22DBrcfwibpj5Ig4LlQ7XzGSEuUfU
Ya84s8yCH9eg5ok5vJm39kHzh2tQ8yQcWM0nNsm9vAY1T9Lh6KWm5KBH16Dm
STmwBRnbcty5BjVP2iFrNmOL7rVrUPfLOBg9WuG4+QLMPDkHeRkVx97TMPPk
HbzYdxVtPAbjKzgsnjyjXPwQzD0KDjPOH/PcsRdmn6LDZ/nNP3p3wsxTcshY
8aVk8laY/UoOk9XT049shJmn7PDV/baA7DqYecoOFjdCDGatumYPAD1M6ds=

         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbfVOlQKJn5Esp/bP923xH9/zFP
7c+AwRt7vs6pqomGj6Hyn+3tvD6oH5V8ZA8x7Yd9+0Jtj9zOh1D1f+xndb3N
brd8aH8WzGdwWBRTMzOL8yFUP7OD2rmff96/fGA/EwxYHda0cdw6fPkB1DwO
B7GE/uXqhx/Yp4EBl8Pylm9rhLc9gJrP4yCyIcEjdvUDqHn8DgE/b6X5L3oA
tU/AQezxl2tls2DmCTnYfd2t2z4Zpl7YoU5m2m3vXpj5Ig6Z02ynzm+HuUfU
Qf98qE56E8w8MYdfme8i+2ph5kk43L3yfi1rJcw8SYfjXh8NDpbAzJNyOBuv
V7a9AGaetIP8y89fH+TA3C/jsLJWeIZ5Jsw8OYfGiU/itqXCzJN3UPhzUiMy
CcZXcDCrmtIoEw9zj4LDZxan+r/RMPsUHd6UMCz/GQEzT8nB+6D7Db4wmP1K
DmlnGmysg2HmKTswvpa2qg2Amafs8FvDPeuy7wN7AHqi8Vw=
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLa3zO9XklR5BeU/tm8r/PJO6OUz
+zNg8Ma+pklGZab1U6j8Z/uYhOfBkxKe2ENM+2FveWzDUp03j6Hq/9jvD+ds
bl352P4smM/gsKBnbuWv+sdQ/cwOpQsu1T5Ofmw/EwxYHVY5Cd2p8X8MNY/D
QUiW7cZh+8f2aWDA5fD/nX86nzHMfB6Hu213ryZrwMzjd3iQOb9eWx5mn4DD
b2ORHGZxmHlCDo/WtBiv4oepF3ZwapdZ+okDZr6Ig976yCl7mGDuEXU4eTO3
9sOfR1DzxBy2x4qcqvn+CGqehEPrveW8IZ8eQc2TdDipdvNG9ttHUPOkHPTP
q7/d/eIR1DxpB405xetsnzyCul/GQWv2mb2v78PMk3NgTHDacPA2zDx5h7B/
Ijd3X4fxFRweivYrXr8Mc4+CQ4ndylcCF2D2KTr8ijr9Ne0MzDwlB1P+s0HX
T8DsV3K4/PpBYMJRmHnKDnJPSioYDsHMU3bwuRFSsW3fI3sAiMb1wg==
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbfv2misqzwGyj/sf3m6QKb17i+
sj8DBm/sK8WOVs5IeQmV/2w/yUHrUty7F/YQ037Yz3p2f9mHVS+g6v/Yv1rE
bvyx4YX9WTCfwWGl48XFBSkvoPqZHaZdZFDv8X9hPxMMWB1OXHUsMLWHmcfh
cGr27dYDhi/s08CAy2HaWS9DczWY+TwO91f4sbHKwMzjd3Bf67fsjBDMPgGH
aW43WAO5YOYJOTwRnnMpgwmmXtgh83Gewfdfz6HmizgYOpcmP//8HOoeUQce
//PKWm+fQ80Tc5h+mfH15mfPoeZJOOR/y79R/eA51DxJh4+cxz5X3YKZJ+Vw
eHfg6tVXYOZJO6xMra3kPP8c6n4ZB1nhrCUTTsLMk3OQTw3itzsCM0/eYYq+
swT/fhhfwSHwXHsd4y6YexQcDn4K8hfeCrNP0eGO5YdrThtg5ik5aEv5Tu1b
DbNfyaH67X+Tr8tg5ik7fKo1aCldBDNP2cH+zPs8vnnP7QEAs/I/
         "]]}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox["\"\[Rho] = 0.15\"", 
        Directive[Large, FontFamily -> "Linux Libertine Display"], 
        StripOnInput -> False], TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"x=0.\"", "\"x=0.0526316\"", "\"x=0.157895\"", "\"x=0.210526\"", 
       "\"x=0.315789\"", "\"x=0.368421\"", "\"x=0.473684\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[6, 7], 0.8571428571428571], 0, 
                    NCache[
                    Rational[1, 7], 0.14285714285714285`]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[6, 7], 0.8571428571428571], 0, 
                    NCache[
                    Rational[1, 7], 0.14285714285714285`]]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 7], 0.7142857142857143], 0, 
                    NCache[
                    Rational[2, 7], 0.2857142857142857]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 7], 0.7142857142857143], 0, 
                    NCache[
                    Rational[2, 7], 0.2857142857142857]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[4, 7], 0.5714285714285714], 0, 
                    NCache[
                    Rational[3, 7], 0.42857142857142855`]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[4, 7], 0.5714285714285714], 0, 
                    NCache[
                    Rational[3, 7], 0.42857142857142855`]]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 7], 0.42857142857142855`], 0, 
                    NCache[
                    Rational[4, 7], 0.5714285714285714]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 7], 0.42857142857142855`], 0, 
                    NCache[
                    Rational[4, 7], 0.5714285714285714]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 7], 0.2857142857142857], 0, 
                    NCache[
                    Rational[5, 7], 0.7142857142857143]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 7], 0.2857142857142857], 0, 
                    NCache[
                    Rational[5, 7], 0.7142857142857143]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 7], 0.14285714285714285`], 0, 
                    NCache[
                    Rational[6, 7], 0.8571428571428571]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 7], 0.14285714285714285`], 0, 
                    NCache[
                    Rational[6, 7], 0.8571428571428571]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[6, 7], 0, 
                    Rational[1, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5714285714285714, 0., 0.09523809523809523], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[6/7, 0, 1/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[6, 7], 0, 
                    Rational[1, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[6, 7], 0, 
                    Rational[1, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[5, 7], 0, 
                    Rational[2, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.47619047619047616`, 0., 0.19047619047619047`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[5/7, 0, 2/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[5, 7], 0, 
                    Rational[2, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[5, 7], 0, 
                    Rational[2, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[4, 7], 0, 
                    Rational[3, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38095238095238093`, 0., 0.2857142857142857], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[4/7, 0, 3/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[4, 7], 0, 
                    Rational[3, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[4, 7], 0, 
                    Rational[3, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[3, 7], 0, 
                    Rational[4, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.2857142857142857, 0., 0.38095238095238093`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[3/7, 0, 4/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[3, 7], 0, 
                    Rational[4, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[3, 7], 0, 
                    Rational[4, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 7], 0, 
                    Rational[5, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19047619047619047`, 0., 0.47619047619047616`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/7, 0, 5/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 7], 0, 
                    Rational[5, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 7], 0, 
                    Rational[5, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 7], 0, 
                    Rational[6, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09523809523809523, 0., 0.5714285714285714], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/7, 0, 6/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 7], 0, 
                    Rational[6, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 7], 0, 
                    Rational[6, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.650863428677889*^9, {3.650863466549158*^9, 3.650863483205614*^9}, {
   3.65086360150422*^9, 3.6508636283337297`*^9}, {3.650863660935854*^9, 
   3.6508637610507174`*^9}, {3.6508637965574493`*^9, 3.650863886770648*^9}, {
   3.650863963068893*^9, 3.650864020180438*^9}, 3.650872522592334*^9, 
   3.650877776796816*^9, 3.650877829218299*^9, {3.650878914593853*^9, 
   3.650878944561372*^9}, {3.650879206286187*^9, 3.6508792111614513`*^9}, {
   3.651409523780261*^9, 3.6514095380538263`*^9}, {3.651409597512418*^9, 
   3.6514096278392982`*^9}, 3.6514129760003853`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
f3+05cOS/wduPW9p
     "]]}, 
   {RGBColor[
     NCache[
      Rational[5, 6], 0.8333333333333334], 0, 
     NCache[
      Rational[1, 6], 0.16666666666666666`]], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
wqF6k6oKKttVi/vXWCwcukqrP9fE9v8BmYtchg==
     "]]}, 
   {RGBColor[
     NCache[
      Rational[2, 3], 0.6666666666666666], 0, 
     NCache[
      Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[
     NCache[
      Rational[1, 2], 0.5], 0, 
     NCache[
      Rational[1, 2], 0.5]], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
Lwx31YLi6vY2CS2LK18Nwv1/Zqqeyw==
     "]]}, 
   {RGBColor[
     NCache[
      Rational[1, 3], 0.3333333333333333], 0, 
     NCache[
      Rational[2, 3], 0.6666666666666666]], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/cL9f8X0hWU=
     "]]}, 
   {RGBColor[
     NCache[
      Rational[1, 6], 0.16666666666666666`], 0, 
     NCache[
      Rational[5, 6], 0.8333333333333334]], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
u3sxIDV3ddlmC6D8nS2c290YLDVTAjLOC6KY/4xkH3VioPDD/d6hS4Jo70ap
r0mED7ZJNcxGCqI3e/1jQwgndV7Z6pwiiJKCzXTMCW8ctPlDfiaIDuTf8pns
wEBninX8Ta8g4jbZMmlMOFhC0/i3mRD6sRCkMteOAX68REZBYQ3a7+Klm/QT
A6OEwHP1lLUozcRCP7UZg1urFULGbsIo/LS5UX8DBs5yn6x7Z0QQd+QRnPGV
yIOqPqZyVBT5BhfVKX7BwHtvPvukhhhylTYLqv6IQWjkJQclthgacpEo/ETF
IJaZ2dbcLI6UH4uo9dZgYK22/vm6HAlkOse+eeg9BqkUHaq1uyS6n7hNoucd
Bg2Oj5dD9kuhktsSz0KrMKA2BaVo8Eijg4UmdItKDMr8o1FjnzSKqzmgr1hB
5GUFuoGvNyBKQK6yxH8YGHNcYh5EbERdLQPNGm8x8Oqona44KoMcSxOlTd9g
YBh97Y27kixqte1/Fvkag4ygqXfr6LKohX0ltr4cgz9RT2gPajahGqO3J0QJ
j3pXen2Ml0NqGz/Rg8owmDwnLtDkLo9okre1m15hUGLxfdlnhwKi0W+0GhKm
+Wrp8LAVkMulCPd3L4n5Ku7OjG9SRAauS5v3Eo45fSG/yUoJ/VxRF6wtxWBu
WSbVqlIJNeqlapoS3vYu+26DqjIKH3qn0VGCwV7PL4fFEpXRnXalLRcJU3Ol
NjaylZF9+dVDwoS3UaWSbJ1V0E9wZJVRMLDhG5P/WaOC9CsXY1wJT/Zgn76p
kZFZX5uRAOGg3FSJxHQyWrDRzat8gUEjl+qE5U0yal49Z1lBWO1MVcO6TDLq
DaTPvSWMadOjb9wmo0nDJ46vCZ/4iiaz88jogpelSCnhg9MzjU+LyYhLbfuN
AsLS5k5xn7+SUaIb5Us64YuUSfe4b2T03WFPeBrhVvH4A+bfycg+eVkrlXBy
X/nf781kJHXVLi+JMOmisGfbLzK6coI3LJYwM48Kf4bJKEgk2SCcsBnP8U0F
OBltcpKfDSNc4Mua9aaT0bPKidJLhN12y5aMMMlI2veI6r+E2+svyk1NkZFq
6CbR84S1NdfMl82QUaX9i+9BhNMyH7aFsMkooygiPpCwhWtT0vw8GQkk93DO
En76ydOnapGMbrP8qv0J825fNIpYJqN9MfvC/Ai7p92QN1wl+t1/SMeXcM3M
lgUOh4ysVtNnfAj/Dw4Tfk0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[Large, FontFamily -> "Linux Libertine Display"],
  DisplayFunction->Identity,
  Epilog->{
    AbsolutePointSize[4.5], {
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWX7UnnVbfEpj6D8x/b3819cVbx72f4M
GLyx37vMNuLLq2NQ+c/2LgxnHk/+vNceYs4P+8fxHw08pLZB1f+xv8xrJJH4
ZqP9WTCfwaHZ5vASe5b1UP3MDiE95Wua/q+2nwkGrA5m+yUq5H+thJrH4XC8
3NfJtnuFfRoYcDloXOO+d7BqOdR8HoeLUo0FJ1csg5rH75BQx2uozrQMap+A
w+EFn3t3Vy2FmifkkFTWuLKFaylUvbCD4pWLb1jWLIGaL+JQ4FZrFxm9BOoe
UYe7U6uXrBVdAjVPzEGxefaLZzcWQ82TcFhgu948e/FiqHmSDhf+8Lf/LV4M
NU/KoeJW2+4lnouh5kk73FCVSZmlvBjqfhmHU/9sKuwYYebJOcwOPlDF92gR
1Dx5B2GJ5q/zjsL4Cg66C3/PnrZ6EdQ9Cg5nUvbOWTV5EdQ+RQeuc37nZ9cu
gpqn5KC7tbrFJHMR1H4lBx4BjgtuYTDzlB3iyuT1VrvAzFN22CR7J8/eZJE9
AIl44W0=
      "]], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWV7O/k5kcWLH0P5j+3PtV6ceNfyhv0Z
MHhj/26aLefH3Reg8p/t1eqO7+BNOGUPMeeH/SGf6Q6Pbh+Dqv9jL7X6kv//
X0fsz4L5DA7X5f3mRz45DNXP7BBqdmTrbdPD9jPBgNVh61ufpXcPHIKax+Ew
SdOy8mruIfs0MOByUKrsm6dkcAhqPo+Dn/nWm5MZDkHN43coql0fc+XWQah9
Ag7cMyQj1fYchJon5OAnuurdzkUHoeqFHZ5MVnoU0HsQar6IQ/yKvdc4qw9C
3SPqIFVz+5xDNsw8MQejyQ2Lq2Nh5kk4eN88Vx0bCDNP0qEpK795nhvMPCmH
hoQfnmy2MPOkHQ7cr76ZbnIQ6n4Zh4+LNr+fpwMzT85h07Pvv3tVYebJOxi1
OS2VkYfxFRzirzJvMJOEuUfBYYf9TI3TwjD7FB1sM9ftP80HM0/JoXFNnrcO
F8x+JYdTk81SHrHCzFN2MHbnE3vKCDNP2eFXEesinX8H7AHZ4+VW
      "]], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWV7pqhbF9+xPYfyH9vfNv/ye5veQ/sz
YPDG3tdqovVjrTtQ+c/2GztX2/cq3rSHmPPDPu+0PnfdrOtQ9X/sa7f6n759
/Jr9WTCfwWFR0q3v132uQfUzO2xTNwjh+3/VfiYYsDrMPHyh0+nUVah5HA73
bgrq2yy5ap8GBlwO3T+dPOvbr0LN53FYrr1V8k3BVah5/A6mc8+xLIy7CrVP
wOFWl5l1rj/MPCGHiGoOr3YnmHphB7UoHZZUc5j5Ig5ZmTenLNGFuUfUwb3e
4cI/FZh5Yg5W3Qe32cnCzJNweMS6jslGDGaepMOSJyF91/lh5kk5rBb4/fAH
J8w8aYc3u9Y19LDA3C/jcPNRxuam/1eg5sk5NLzdvvLcrytQ8+Qdglf3XE39
BuMrOITtWltg/+kK1D0KDt84GBRC3l2B2qfoUHS6cc3cVzDzlBzsrrieEXt+
BWq/ksOio0nfdz2GmafssO3EK9e2BzDzlB2Mvp8MKb17xR4A8kruDw==
      "]], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWV738OzF6j/fA7lP7YP+u0t4qn82P4M
GLyxD8xS7I2c/QAq/9n+itufc6Zb7tlDzPlhv8G13r0w+y5U/R/7Iw+TZRi3
37E/C+YzOLx5mWPU630Hqp/ZIWSvf7QT2x37mWDA6jDr1ax2n2u3oeZxOHzv
1/0ruPm2fRoYcDm8aurd8mL6baj5PA5CQjM7lJpuQ83jd1Ax6q2QL7gNtU/A
4cGloPfXEmDmCTnwzpxSMTMYpl7YQUWNr+ydO8x8EYeiG1MTGmxvQ90j6rB7
oel7AROYeWIOxaG/txVqw8yTcCi/pZRTrwwzT9Lh0vWwvXIyMPOkHDjvLzCw
EoWZJ+3AfuD+sgN8MPfLOEw7MN13CQfMPDkH3ea+2zeZYObJO7jMVmaM+HsL
yldwKCuQ+Sv24xbUPQoObId6vAU+34Lap+ig+3VPut27W1DzlByu7hCcM+fl
Laj9Sg4pBZl31J7CzFN2aOFOXHHzAcw8ZYd9CYs+b7xzyx4AVj7oFg==
      "]], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWX7b2vv7lGf8ArKf2zvN/9o1InK5/Zn
wOCNvZFPVazD1adQ+c/2ZnVBM47+fWIPMeeHvfM6r41nup9A1f+x5w/0/PbV
64n9WTCfwWFRF4fEAaUnUP3MDjvnxKxdyP7EfiYYsDocW1404ePnx1DzOBya
vtfeP/DksX0aGHA5MGh8Ti6+8RhqPo+DQF3eKclzj6Hm8TvYfv5+VPHoY6h9
Ag7LJktv0t0LM0/IQXyOvcb/rTD1wg5iCeYS2eth5os4qPvW3g9a+RjqHlGH
6rRQ2QWLYeaJOSR7PRJzmgczT8Lhxoc/7DozYeZJOsjP+8wSMgVmnpSDe+Fq
8039MPOkHay3fw936Ia5X8bhxQl7759tMPPkHII4L9670QQzT94hk3f5lNt1
ML6CQ1OuWe2/Kph7FBw8+zql7Mth9ik6zI5T8ZpdDDNPyeEk+3NjwQKY/UoO
D4NW28zPgZmn7HCKafNv50yYecoOTiU2Rv9SH9sDAOzA6p0=
      "]], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWV7qVYfX93C11D+Y/s6yd3apQEv7c+A
wRv7b7Xf5n9wfQGV/2x/5FpcT/Gu5/YQc37Y6+gv37El+zlU/R/7l6nKc3Ot
n9ufBfMZHLpXLXDzkX4O1c/s0HBWK8yO5bn9TDBgdVAJEymZ8ekZ1DwOh/J5
GfMinzyzTwMDLger9La46BvPoObzOMR8m7TwzdlnUPP4HTgs7nrMO/IMap+A
A8+R0Fvqe2DmCTkEVL5LjtgCUy/sUFn97xTvWpj5Ig6zgq7O01/2DOoeUYd5
/e9erJ4PM0/MoUR0qXrpTJh5Eg7MzHJ/GybDzJN00Hwq5ne8F2aelEOCz+/l
jh0w86Qd9G9WXX3VBHO/jMNSSaVJ+2ph5sk53P7FG7yzAmaevEORiqPcjWIY
X8HBaJV3jkQ+zD0KDlNSIgQrsmD2KTpcCZut/TUVZp6SAxfHdtG+RJj9Sg6v
XcRjHGNh5ik7zJ3fvoU3EmaesoOFat33jyHP7AGZi+bK
      "]]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox["\"\[Rho] = 0.15\"", 
     Directive[Large, FontFamily -> "Linux Libertine Display"], StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"dir", "<>", "\"\<data/individual_wf_dimensions.pdf\>\""}], ",", 
   "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.650868587335389*^9, 3.650868617964363*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/data/\
individual_wf_dimensions.pdf\"\>"], "Output",
 CellChangeTimes->{3.650868619634753*^9, 3.65087787000494*^9, 
  3.651904316165288*^9, 3.6519045226961603`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Non averaged data", "Subsubsection",
 CellChangeTimes->{{3.6507780469393253`*^9, 3.6507780530350323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tol", "=", 
    SuperscriptBox["10", 
     RowBox[{"-", "14"}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "wavefunctions", " ", "and", " ", "energies"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"val", ",", "vec"}], "}"}], "=", 
    RowBox[{"Eigensystem", "[", 
     RowBox[{"hp", "[", 
      RowBox[{"n", ",", "\[Rho]", ",", "1."}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
    "energy"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vec", "=", 
   RowBox[{"vec", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6376637410535107`*^9, 3.6376637612913322`*^9}, {
   3.637663903594638*^9, 3.637663904074048*^9}, {3.637664044065216*^9, 
   3.6376640443671303`*^9}, {3.638781296946495*^9, 3.6387812971536083`*^9}, {
   3.638781345298437*^9, 3.63878134803356*^9}, {3.649671679506936*^9, 
   3.649671679809421*^9}, 3.649672746111318*^9, {3.650533554503845*^9, 
   3.6505335545986958`*^9}, {3.650719857989237*^9, 3.650719859419755*^9}, {
   3.650719916441803*^9, 3.6507199166696*^9}, {3.6507199788689747`*^9, 
   3.650719979052927*^9}, {3.6507780953059797`*^9, 3.650778126079351*^9}, {
   3.650778204254641*^9, 3.650778222365896*^9}, {3.650778263264227*^9, 
   3.650778263423543*^9}, {3.650779221697092*^9, 3.650779221840065*^9}, 
   3.650779517585662*^9, {3.6507796308333807`*^9, 3.65077963096668*^9}, 
   3.650786451749804*^9, {3.6507865399095573`*^9, 3.650786540180443*^9}, {
   3.650786573157386*^9, 3.650786573283986*^9}, {3.6508029962870903`*^9, 
   3.650802996718133*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"middle", " ", "of", " ", "the", " ", "energy", " ", "spectrum"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mid", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}], "+", "1"}], ")"}], "/", "2"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "fractal", " ", "dimensions", " ", "of", " ", "the", " ", "wavefunction", 
     " ", "at", " ", "the", " ", "center", " ", "of", " ", "the", " ", 
     "spectrum"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qlist", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0.", ",", "10", ",", ".3"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d0", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"WfD", "[", 
        RowBox[{
         RowBox[{"vec", "[", 
          RowBox[{"[", "mid", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      "qlist"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d0q", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"qlist", ",", "d0"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.650778102472867*^9, 3.650778106989212*^9}, {
  3.650778373741763*^9, 3.650778388990377*^9}, {3.650778429086762*^9, 
  3.650778522927538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wfdth", "[", 
     RowBox[{"\[Rho]", ",", "q", ",", "0", ",", 
      SuperscriptBox["10", "4"]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Point", "@", "d0q"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650778500775957*^9, 3.650778603327859*^9}, {
  3.650779289025511*^9, 3.650779312560617*^9}, {3.650779411202004*^9, 
  3.650779487216337*^9}, {3.650779558529374*^9, 3.6507796028656483`*^9}, {
  3.6507796684337463`*^9, 3.650779673504113*^9}, {3.6507799130737543`*^9, 
  3.650779996961499*^9}, {3.6507800637465773`*^9, 3.6507800638253613`*^9}, {
  3.650780904834978*^9, 3.650780932305645*^9}, {3.650780962547204*^9, 
  3.650780990401775*^9}, {3.650781037298661*^9, 3.650781059314354*^9}, {
  3.650786404277795*^9, 3.650786410532612*^9}, {3.650786474613081*^9, 
  3.650786561717279*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0.2},
  AxesStyle->Directive[Large, FontFamily -> "Linux Libertine Display"],
  DisplayFunction->Identity,
  Epilog->PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWX7hh9bfOe6vYbyH9u3fbJefo7ruf0Z
MHhjrx6sNWVT1WOo/Gf7H8ymXxzWPLCHmPPD3qcqWVRK/i5U/R/7I59XTFdj
vGV/FsxncJjQoHXt4JbrUP3MDs6GF9py/121nwkGrA7xcTKPj266AjWPw+HZ
/Nj3EZsv26eBAZeDc94ZJrbXl6Dm8zjc/DpFUMb7EtQ8fodDwopVvicvQu0T
cHif8niSV9xFqHlCDuv/LHW6yHIRql7YoeaKRzf3zgtQ80UcdtSaTFequAB1
j6hDvcD5eV/sL0DNE3NYK5vD+IjvAtQ8CYdZExmuBx8/DzVP0kE/aAXD4qrz
UPOkHM64vE1UMTsPNU/awXr/TZ5ZP85B3S/jkHCTYT/TwXNQ8+Qc9syUs+7p
Owc1T95hyX9l6c4EGF/B4fq5q0qZZueg7lFwkL+SlbqZ/xzUPkWHsqjgw4xv
zkLNU3I4nxOU8ffUWaj9Sg6hToVcMWvOQs1Tdsh8V7n7bv9ZqHnKDrunXdby
Lj1rDwD4EOZ3
    "]],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {0.23916459919725416`, 1.0001671231922462`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650786493055243*^9, 3.650786562244926*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"/", 
    RowBox[{"!", 
     RowBox[{
      RowBox[{"\\", " ", "to"}], " ", "have", " ", "a", " ", "completely", 
      " ", "bipartite", " ", "lattice", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"and", " ", "therefore", " ", "have"}], " ", "|", 
          RowBox[{"\[Psi]", 
           RowBox[{"(", "1", ")"}]}], "|"}], " ", "=", " ", 
         RowBox[{"|", 
          RowBox[{"\[Psi]", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}], "|"}]}], ",", " ", 
        RowBox[{"we", " ", "need", " ", 
         SubscriptBox["F", 
          RowBox[{"n", "+", "2"}]], " ", "to", " ", "be", " ", "even"}]}], 
       " "}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"vec", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{"vec", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650778690306499*^9, 3.6507787164151287`*^9}, {
  3.650778764351612*^9, 3.650778777230991*^9}, {3.6507791645263453`*^9, 
  3.650779218993454*^9}, {3.650786465526211*^9, 3.650786466037443*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxMfHlczN/3fwghhBBCCNlDyP60Z0sSQlKk0qI9rZr2vaZmmqWZCElIQihC
CHkLIYSQPVtCCOE3v8f33O7HPx6317zu6571nnvO89wBG93MN7dUU1PTaa+m
9v///79/9TM7p7c4pv4lYyb9AUfbjHDs3VJMYw08Dc24f70wk8ZaMN9osbLb
1mQaa8PNbvipFpZCGutg4P3hufM1dtNYF37To0pujJLQWA+KRTO63Oq1i8YD
Yb/76bLhxxNorA+R//0r7ROiaDwE5jf+fCqzSqOxAdq5uhz41yOaxsMhaMi4
Zu+aROORuDI7UvPiCvb90chvm9nKpl5KY0PM+Xhwt5ZsD43H4uObmcnh71No
PA6lq9sG3U1j4/GYLtBcKnjF5jOC1eoT4yRljJ4JuOLRpcflsYyeiVhulRL1
41U8jSfh/vPLdy8rwmlsjL9uMZJiXTb/ZNT592j18IuAxlNQselmQL4f+/1U
+HyvlJywZt+bhrdSuzbWyxm/psO2w1aPh0Hs+QzsKj31vVsRe38mljv1SxWG
hdIY8N/z9+fYGvq+AOju5HN/56EIej4Ljta9tmRdSKTns7CneHnII3tG/2zs
m+qxLWGrjJ7Phuj0nD33lmTR8zl4kOvnEf0plZ7PwcP5d0072Yno+Vwk/zof
kj9zLz2fi2WVDz7dUUun5/Pw69vWmJmfST6CeRibaCxPkzP9mo/hHh37Hd8S
S8/no/ztf/4/9jH5LsD5t+6vi/uz5wtQNM108BZ99r4JGjV/P9BbxOY3QUod
DH5ryen5QnjeHRX91InoESxErxfy3bMTiR61Rci89vzmvnrGv0XoJxnZJ0Sf
6dNi1F5Ovrq6geQhWIyuc0cF9DRm+rEEq6rXPPLcT/ohWIKTT7K1Ll8Io+dL
sWHXs6/Bl8m+BEvx7K3w4gKr7fTcFBWCH28dl5O+CExhEDtk7fzZbH3L8KSd
1RPTfLIfwTIsOD1gW1we0zczrL5qEKMYQfPBDH86Nb12e+RHvzdD0M8WM20X
xfzfuMQMS6K/LfipEUjvL4f2xt9LmmJovViOOUufysekM3qXY8OmcEX/EtKf
kuWQla15tSaK9EXNHBeTx+9zyKL1wRwjjj69OukwW685/Avev3mupN+XmMN9
tOyF1yuaT20FTL0Kg8vO0vewAj/369feO0LrEayAjmtSsac/rbdkBaojl50+
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
PpsU3P+5//jJMyQPuxRIru2yVV9P/HFMQfspA07dekXzu6Qg+8HGVk3LWD9J
Cl5cSu08n53vvFMwNeDKnckjST5+Knmu1O/2qYL0IygFQ57npGsuYfcTpMAt
6drQyytJPyJS0MLqP30vZ6I/JgWtvgTeN7lL/i5BRc+9X63CBQyvm4LdMdc6
72H5LHEKNo2y7CmPZ/FSCrbGydzkZfR9ZQpGuj2b9PQhq5+lwHRK26s9RtA4
SyWP415qs9bSfDkp0HU8F1cykvxJrkofTAqe5LP7CPJTYFM3LPB0BelvgUq+
42b63M0n+RSmwNYgZsoGe+J/cQrW7uqx+NZRwpeWpCDl+bzrIxeRvZemIKpV
ab+D6xgeJwVvx3jJf7uR/MtV/Bn9sPspOcNbquTVtt33mI7kjytTEDHsYIC5
vz3Zfwq0186c+iWV3q9Owbp5/SQuGeSva1TzJzuc+XaAvv9SZQ/BKem5o5j9
p6DXJN+//QcR/z+k4OfcC8ldskj+9SmwOPvu8tJvRG9DCk5MKe348gqNG1Nw
17R3lss8+n1TCsZffTdoTRT5U7VUfB65vbRRRPxXT8UFp73/la9geLBUqGdV
5Wle2kz2nwqdBF3nmeZkX1qpqD83sGd+6Cay/1Ssvj8qaZEB0aeTim12jpUa
daRfuqnYa51y9+IY2n/0UhFe1kWgG0ny009FosmWD+2cyb8bpOKfsG2Cpjnx
c2QqHsxwiPnN+lUNU3HF1zjj+ADCpxmlIj1B56Owktl/Kty/SVywi/R5Wiqc
t8R3PmnH9v9UzMramyM3JXuZmwqkXU44nED8NklF332iZyctaP1LUjEm2/xe
4Cc6L5qlotx318e/Z0hfLFKRK7FInDef5rNMRa/xw35YlJE/sErF9pUbW4zf
xfDhqQi+/jZUJ5bWY6dav9A3sfVReu6YiotxBWWZf+h9l1TMn1g7dGEqy2+k
4mrAoLq4Bvq+dypSr9XamphRftEvFYdV4ZDTCVp/kIrfMTMWZqjRWJCK217/
WtrdpfkiUmFQGWp36hSrh6eqzvPDLn0fTvackIqBmZ6KYlOK74Wp2O3XvbRR
jfRfnIp1H2N1AjqSfslSERZ98o6FLemDMhWKSQYPwn9QPJKZiuvtqzUiPWj/
zEqFxdavbUO2kf7mpEIyRdm3rjM9z03Fi+zbwRpD6f38VHxPfHa3hZD0syAV
vZ9cVSjEDG+ZCqdnAxoXxpE+FadihsWyx20XE39LVPOL4nuMnU3xSGkq7AKm
PBvXn+KVslRstvpj92Yh+Z/yVBw5+ThqyS6avyIVdetb2Ez+SuPKVGQmL/bO
amD1epX8vgxY2mYKrb86Fbf6xZ9qrhfXpOLeptGXkwVE78tUZFSetfR+Qvpc
m4oebeotf2Yx+09FH8uaN5veUXxUn4r/lj98+PkPxS8NqXgf6rqxkyHZe2Mq
TN6kD907kO3/qvX+bmPlNZHdPyHCyNxsR8Foshd1EaxeflausqT1aIigqT+1
Vz92/5SmCNc3zm+/dCbZn5YIEwWLSycwf6ktQtvdg51T8hheSIS4Fa1E8d/J
XnRFUAw4O33fODpf64lwLeFI5qjTLP4XoXTpvA0XdxD/DERo5bBg4TfWXz1S
hOBHy07oqlM8biiC768+I+/n03xGIkS45eh2O8nwpqr1+fXJXjST9HmaCP/6
timaeIHVn0UoayPMT1fQ87kijC531ot9xOJ/EVam5ev9WE7fX6KiZ+mVIrcx
rD4hgs2hg6cH6VE+ykIE/7pVUc9ZvctSBLuPyVg5icZWIgw7/fLcsh4MHy/C
XY/w4XNXED12IlQYFIbN3s3wDCJ0nTe5y46fbP8XocWIa709NRi+UTVf/uFw
t63k37xFyNP4euePAdmfnwh+fvvUh+aRfw0SQVacmRRVyu4vEWG/2cnTxT2J
XxEi9DvRv2/WC3YeFiHE9PPnnfX0foIIW2aYtlp3huYXihDW6d9kY2OiTyzC
Ccv1T4YOIn2XiVB11rPbwU80v1KE2cnJcstnlB/JFGHBZqPJ3UYRP7NE0I5c
13tBLPEzR4T3q4qNJikpPswV4dLq9DvKqQxfI4Lk/PJJ/ncpH1cgQuzAXsUT
WT2mUAS1daOn320ifher1l9u4tlszyUiiDMS3otvkP6WijB8p7hhHLufoEyE
d1nlWypE9LxcpV9Jr3sUJrN+S5V+LHL/a/KV9KNSRW8H76qcUKKnSoQ92a3L
zMKJnmoR8rUjZy97TfyqEaHj2MraKW1p/FIErdCZIfZHab5aEXY+3X5Lpkbr
+SDCUdPPDbPVSD/qRWi5zSysZi7pR4MIu7c/qJnQk9X7RUiZ0WF8RGdab5NK
/3Ojh+ew/IuaGKkVGy6lRtP+oi7GQw+jmz4jaD0aYkQPvaqeN53iJ00x6q02
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
l5NPrYzh4YxH5Ft7w3Bo+GjysZXzfBRWQr629wzxcUHkc/vIgJid5Hur4PH3
oAX54L7w9re594fJF/eNz/dJEvnkKilAbivyzZkpyG+8lnx05grc7swhX101
BUdKg8hnZ6Eg4nwN8t3VVDBm7kjy4dVSEPY+k3x5dRS0HtWefHqWCnq0XUe+
vfoK3If0Jh+flYIW+06Sr6+hgrGlDuTzs1ZQGOVAvr8mCvb67CMfoI2C2EnP
q5h8gc0UnCtqTj5BWwUTnCeQb7CFgnQrF/IR2il42jGMfIWtFUQe3Uw+w7YK
ujhuJd+hvQLmNJR8iB0UbBs9lnyJnRRcnFP6g09RwZXM/8i36KjgxDQ38jE6
KbCMsiZfYzd+fQ7FL00+R2fePlccyffYQ8Er43TyQfZSUDnl812TL7KPghn9
1pNPErz9rLuRb9JFweQ3O8hH6apgmeVi8lX2V7DkZSH5LAcquBkG8l26Kejc
KpN8mO4KTjnOIV+mh4KvmX3Ip+mlYODC9eTb9FEwqiKOfJy+CozmK8nXOVzB
nsyyXSaf5wgFM5tFk+/TT0FI3c/+Jh+ov4KeZl/IFxqgoP/JueQTDVSQ8HAX
+UaDFPzRvSf5SMcrqPHuU12TrzRYwclOv5HPNETBgwEnyXcaqmDVr9PJhxqm
4OjB2uRLnaLgXfel5FMNV+Af3o98qxEKfjXkkI91hoJL/5YeMvlaIxXcPf2D
zzVKQWZoPvleoxUc93YmH2yMAsdGueSLnadgU1Yi+WTnK1gZaSTf7AIFuy1/
cjP5aBcpSPqQT77aJQoKXniSzzZeQZ2CultNvtvlCu433UM+3AR+vV9rNzf5
clcpaPYsmHy6iQqcfvIh3+5aHp9X/yMfbxKP5xkLyNebrKDWXwPJ55uioOJ1
Nvl+U/l4uB5HPuA0BW2HHiNfsMTbZ+wg8gkzHk9Zi8k3rCoI3BZJPmKjgm61
apCveAvPJ11bkc84XcE6ezfyHW9T8NA1jnzIO3i8De1OvuSdClIC/yWfcoaC
nZ/NVpt8y5kKKjXxIh9zloJBtRqRr3mfgtuVqkomn/MBnn9cvcn3nK0g5lUY
+aBzFJx58IB80UcUVG/VmnzSuQrCO1ZuYvJNH1fw96oF5KPOU1Cl91XyVecr
mDLiPfmsCxQsrDyEfNenFZTGbycf9lme30peky/7vIKXmi/5tC8qeB27lnzb
lxW0P5NGPu5CPn58n5Gv+5qC+mlB5PO+oeB0+mTyfd/i8XVhL/nA7ygY2nML
+cKLFJT5MfKJ3+f5ansR+caLFfz1nzf5yB/x/u/zgnzlTxTkRS4ln3mpAldL
W/KdP1NwmLUiH/oLPt5iRpMv/SWff7reI596mYI71YaRb/0Nj8/oI+RjL1fQ
9ZEn+drfKzhfep187h8VbOnfjXzvFQqaPw8lH/wXBb8v+zjH5Iv/xudv41Py
yVdSkb57DvnmzVTE1MskH725imGDj5GvvpoKS/OfyWdvoWJ+4U/ku6+pojTh
tKf1PH2/kIqcXR4RjyeL8uuoWJZW3mXwavE9wFLFtX+6p1ysEPmgvoqWi33T
apzXvyeo6L3MeraDmzhuqMK4/+tEi1JxPmsVDf3HWDUvEOO3iYq0EPuBW3bp
641UzHvcIPv1CjGemqm4nZrq8N9U3V+kwre+96ld7UR7tVDRZv/rC7/ki3iy
U7Ft3fWsHnNFfmytYsS9spAxl0V/tFXh4/E242iJ6D97FZNnzRtqyNF5JSr+
qFrN5aiH+P9OKkIuZ271DxDnd1CRtWXPofVpov8cVfS08Xe32qbzDFWw6sFD
H97T538Vb8dMTVh8UcSHs4r7m5Zsj9Ofz3uouOpTMovp6wd7qQg8uXGX4iXq
10eFX/Po5t2O6P5yFd7t/d98LxDt6aJitF2ntefqifhwVXFqvV9IsP4+vr+K
CEf78JK5+vzP2+P6+/NPmop866Zif3aweUt9f7W7ijfrA0/5LhXjz0NF2yTn
ReNW6/wUfv2Nkp1+fyXq46PCfHPEk3XtRH18VZRM8qx5tpEof7iKXqebn66w
0L+v8vgq95x9aZCINz8VazOnXA1eps//KsbdvPaHcb24fwhQEW4ZH+4cIt7H
B6q4ubHevgHRIn6DVBzMa/fi2XExX45XMaokqfF6nU8QrGJV229tUiDe14ao
WPJibtzEQJFPQ1Wc/xpX/EbfDxWm4svBxKBmfvr8ryK394C6wwfo329UvBoY
9bp6c3F/HqGirKCJxWh9v+oMFU2sPDcebKI//6uIfhj5NqKBznfh8Tyk6+St
FqL8aBW7fl86t4++vjNGxeduQRdsAkT+msf7+3bYyrJz+vyvopbr3YZ5DUR9
F6j4e+DIkemFIp8tUtEqIfFAqJv4+yUqDNKa7n319YvxKv6dMCZ5ywpR3+V8
fDYrbjPdSeTfBBUnJvzy0myhuP9dxcfLk6WOXp/0538Vq4/Venaoqni+WKvi
0Mjvc2Z46+vJ+HjKX5G++7q4/mQVVfvNtb83TdQ3RUXySF+b6/3E/WCqig13
O8X97iTaL42Ph7Ky3NvfxfOOpMJskr3nDv15gamQN49eGT5APL+pKgYPjx+W
Mlbn0aloNKbL1/b698AtvD0+7t/h7iPur9NV/JNTM/R5TzEfbePxdeG3zKbJ
Oq9CRY8Frxrf6SfaayfvrwZnb95Q9O/XPJ76Dc3d6C3iK1PFyuBbMyPq6d+z
VNiYLb4S/Uzki30q3FtcsSmz1fe3qKiX+y7b2ElcTzYfX5veBfvaiN9zVMze
eNv7wW3x/0dUPPi68IKsv8/K5b8/LY9PdxHlH1dx5p8JBt+l4vryVKQe/ZRt
3UZcf76KkWdL3o6KFPUrUHGkcvibbw31+V+F4+Gkzx1a6utleD5p1V+O2CLa
77yK/iO127YQ7XtRRdeirecH6Ov5LvP55unJP11CRf8UqpjVr+/8FTpP5ZqK
vPdOJzadFPFxg4/XkT3/9zZbxMctng8y0rysrfX9tjweAgMS27iI34tUlA+1
lFbo76/vq8jIObdl1UzxvFnM85H1kMgHfjqPk/fvKFY5O1eU/0TFVO9tfU/X
0Pfn8P4s3fBmu76+75mKDqcXSt+WivZ5oWJN5Oi35yPFeHzJ59fdPrVv1tL5
zCqUzPru5f3E8Rven3dOx8U81tfzq2h8sMcR376i/d+rKO5x++CkhWK8feT1
fTv58M+bxHirUPHsROJY26eifb7w+jy36zTgq+j/byq2xr3b++B/Ov9Hg/e9
2k2axIr7PzMNzT68d8kfLOLBXEO/0bm22y1Ff1TTMOfcsZ1qfX1/kIas1nlX
jl8U5dfU8DgzZrbbcP39v4ZTlUdMXaDvf6qjYdTJkJdjF4r6WmowO3K78cZk
MT/U1xAWO87HrLt4HrXSUPdC/4Ds7/r8r6H9U62zoau+v0hDSFJ49jX9ebSJ
hssPrnhfyBbHNhoWvK28YOoWMR804+c7vPH1jiARr7Ya3j0Z9vbTanG+Fhpi
rnf//nKivh9Bw9b7jg1/yxLx01rD20vre23y1H2XGmoWXY0M6inyj72G4QEb
PjTUv0920JCa6dTgb31/TScNPXytq9dsLOY3B15fv8lBE9qL+c1Rw9kP/wwc
94fIt04aWq3sqG67LeKhm4Z0ZfO6nkPF/Y2zhvDlgcc+ZIr69NDg9bXYKyBI
1KeXhiPDXQ+Fhon276Phc8U7v/nmYj6BBvOTbfZMtxfnd9GQ3KVKP+f/if5x
1ZC06mOXhYro//68/fbvSOxzTtR/oIYZra94zvIT53fT8OZ7do7HXZ2XomFe
nahGhSfE/3touLsg9tKF7mK+8dLwfuTxDrK+3tBHw7NEy4cRyfp+Kg0t3FPr
9+wq+mO4hj5Nnw6w1u+PR2i4Nbab7611Il/5abiQkPHscH3Rnv4aMlPLs0rW
ifYM0ODvmPrOspa+/kLDIN/ZJ+1ri/ufIA22RysO/uso7ifH8/PfWuNyyqA/
/2twDV23vftn0b8hGtrO3HRlWJSI31Aeb+2qblkRr+/X0jBwn11FfgPx+xQe
DyfGVLzUeQThGh48Pe2Tki3qE8Hjd0qfEOmF/v5fw6/Tb6Tcei7Kj9RgaTR/
XVdfjxDFy1++rCC0uziO1tBtzK0uD2LF+WI0/Lmx9qQ9a0R/zNOw/GeXD7F/
i/uf+RoWrxs2sUOiuP9ZoMEl/Lx/u8/6fnANats2VQ4VifZfwtujMGVFpbo6
H1LDx2mB2ddaiOed5RrqLLBdkNJUXy+uIdfD8W6o/v52lYY9/o/Hb5+s+xU0
3B80RzUbLu6n1mqwG1zHwTNRzAdJGto1H3Ro9xWR/5I15HnNyYmYLfJViobs
CpfSa7tFvKZqWJG3YW7BEZEv0nj7zJYeTn8s6idpSLOsXFqcJtqDaSgvOXzq
910i3lQNsZ2G/TPRKI6NGg5Huz4euUT8/RYN10tjNjXPFedL11CDl9o5VZS3
TcO5kLvuX+L1/eoaHiVUH/jJQlzvTl5+zxp9x7rpPnten5MPnky9Le7nMjU4
dBoZv6m9yKdZGkYc/GnW8p0iXvZpOG4YXeSh7wc+wMfjeGe//i6iPbM1BE0s
ehrirc//PJ5HZJ8Y4C/Od4S3h9Ppt3PzxXjN5fmmCrPMPy6u97iGhOOLbkds
1Z//ef6o2iC6kbPIx/kafIKST/1VLupboCHuVK9fYu1EvjmtweJxwYV/yvT9
MhpKX+1VXVaK6zuvYX5Lm6X3QnW/hQY2rnfbz5ZivFzm+f2d1S1bN30/nYbo
D11aTbLTn/81DEld+iSnuc7X0vBCOTX7wz9i/dYtnm+qfmy6d5L4/Y6GL1uG
bly/Ufx/kYbitUPj+74W57/P833LoldXKonxVszzmXthbEZfMd4e8eOT+z3q
6OvTnmioPDhp2tJXoj6lGo62ctSuuYv6POPlnw2dlTBFxMsLDbtHT469HSzG
20ueP6Y8CzEeF/FTxvOhY+x1+V8xP7/R0KBRjYrf7uvreTR0ibRYm6i/T3iv
YdHOm+8bHNR9rhqCxw2bditG9EeFhg4+46sF6Psjv/D5efzL5H0B4vdvGjx2
Z0Rn6PypSkY0uWdf5dYbES9mRniy2OQcG1G+uRF3duRczde/R1QzIt14eMmH
x7ov1oj+Zz78nP+biI+aRpS3zHFMLhDl1TJi30ubIfMfi/rXMWLi+v/Nuap/
j7Y0orPVqNULn4vj+kb4Wm5SLVNE/1gZ0e3kpiqBZaJ/GxqRul+qdWKoOJ+1
Ecs6hZ0JnizuN5sYEYDYbd/19QI2RnQv/v6qwF/k+2ZGWK89frJmghg/tkZk
d6/jZb9XtFcLIxyS29S71FjUx86Iv+suyz3fUdSntRF9j/TY0d9ClN+Wt8/2
etmVR+jP/0Y8io0b1mCKGF8djIhas/r6uQNivXEnIz5WbRXSxEzMRw68PpM7
7zF/Y+j7f2NQDew=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
P3WOuDhpa5vTpX60/ybsfW4Z8GwNra+zCX+jS3el+/vQ/ptgGzI8L+Uyg38T
DpQvE46aw+7zTWhNybbU0iL9mr8JvS8sev/lNM2XbsK0eSMu5Vwl/NRtgkRn
kSDlONvfCWnGF+bNcSV66Djh6AXlzQVd2H3ghHvSow91wOB3woWCaVt9drH7
zQnVham/9IeTvZnvhNL60M9/+hK/ljphyIK7X2wDCD91TjCp0jijNYrh3xm2
1ba51gmkr3ScUSJ6n1g4h/gBzvjHU1q59TfJj70zlh24sezZQ0Z/Z2R9+e5k
rc3gd8bxO82nC8bTeUqd0XFzuXaTDs3XOWPsdll1yFtm37lgwsoKf58edF4d
F+SJFpfKl7H9XWA14v792m10PnsX3Ap40v/RbDq/wAXXRLOPDMpm9HfBukFt
XN/NZPC7YH/anv0Wy+k8dS7Qej+/dWwFk7/NmGoatkLmwOi/Gf5bVqd5LWD4
34yj/01cun8P0cd+MxY5Pit9+JfoJ9iMQY5zoqYZBtL+m/Gr3kz73mymfzaj
/+6AMU+9GfybUaWXW3j4HtM/rmjSaAr1W0b8oeMK++Zeb8908KX9XdG7KmaS
5Q9Gf1dc69v9Q9sY4keBK/4tbh3la0jylu+KQfetsnelMP3jivCU5OkmsYSv
OldkOSuKXRex+8sNg53MVxfWMPjdYFz+rm9ZL2YPuGFH+01pTTfo9/ZueCRe
Wam9jvG/GwJvZof/60DymO8GYf6YLXvUmb3hBmVJ0BefXmTP1bmh0MxSfmoA
e0+5Y3ddF/W1Iwh/Ou6Y3pL5qdMQkle44/OtWd1XLiB5tndHlDBxw+A1zD5z
R6NHyvPPOkz/umOOxCfK2Z7t747Kez30ZCB7qs4dvtfT+2cJ2f27BdnddBrf
XiR4dbag0n7siQUhZP9gC7pMCvMyciH7x34LfiZVzS3IYu+NLVirFXTHKYnu
g/wtyPWZHXxrIbN3tuDF8Qn//VQn/NVtwULjBV0q+tH9puaBmCynV+LRdL/p
eEDRstNw2kdmT3kg/YJ+7MYMBr8HpkVsumadwOwbD+S8c2w/XIPkI98DPXe9
uPlqEL3HSj3w58BMr9fhTP96YF7dYhenuWx/TwhtdDNv9KD3to4nnA45f/5b
TvYPPLFlh+uQqefI/rH3xEKXwkPbLGks8MTUtCeB+S9ovXxPxJwI3hclJXhK
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
mfynwcF5WPvLrD4yKA3DNCKlb/ay+qA02B7661q4i+YT0zDCU+vOxZPs/ZcG
k57zXB+FkXzI0nDPa+u6o8tJf+SnYWhRS+Sqb3S+wjScLRx7dNwT4uci1Xjv
Dc/ptsz/k4Ztl/WWuL9k/p80mF7t5ZCbzvw/aTCMTqnfweprqtIws9+u37/L
mf8nDd5W3ZZHWbN6gjQUXVt59P1YwldDGiRWuQtMLzH/fxpefLyec9iU5LMl
DZ47hoafcGT5X+lw8PTyefKT6KeeDt3GQ10+zKV5zXSMDTA+XviH6K2VjpSf
/oovI1l+WDrGzxbKrFcRv+ml48OcshcFY2g/g3RM+p6dIEih9Y3SMeRwUQ8/
b5Y/mI4g5d/Luy7RfmbpONhW5CteR/S0TMfG5FuTp9XT+jbp6DAib1qeKcuH
V+23POWniPkbXdJRpn5U1NCL5dul45Cp9qNBZwifQelYsnNOv4tTWP5ROsSv
PpVWDCF9k5gOSdcxlbP0yf4UpqN6ysk702NJfmTpeLHIU2eZCYvPp0N0Mrg4
35bgKUxH/w7vJf4DWbw+HXN+JdS0bKb9i1XrOUxa91DA3v/piBg9I2A0yz8p
T4fauJWTl3wk/3pVOoLVTEYZFpL+rk3HFd+fA/Y3kz+kLh3+zntm7xtK+qEh
HSOSiw4uGMb8f+lYe2apz41ldJ+0pGP+26ft+0aRvlTLwEnzq7bH95I/Tz0D
kvnhfTuvJ/g0MzB/dtqidrqkn7QyoF9/Ufmb1T/pZMCrnc0lDRaP1MtAhveV
58NiWPwnA3+Xr7o/wZf4xSgDj7ttM2zpzPLHMnBGZ4nGdJYvZZaBu+a53kNO
sXzaDHzMs6ybcp/d/xmIWDBg4LfnzP+fAe2y8OX1dqT/XDJgvbzixNAeNPbK
QHl+tyW957H4TwYC3my3P1jN9H8GLurc3u7tTfAkZmDc9M07rsSSPSzMwJJ7
fYpavlL8SZaBqN05B5ZtoPd3vgpfbT5ZPB9C+SyFGWgYXDje8x39vigDx4Oq
454raL/iDOR+n69u35/F/zIwvr9f26YSpv9V3+svChpvSPG0qgw8PZm8f+kk
io/WZkB9bkhNK8uXqstQvVfK1q8bS/GvhgxEX3p+xHor4bMpAwujEl6878P8
/xko61iS5sbqgdWEmCYxX6v5kPixvRCjbFPUj0nZe1CIyMB/05Z2JH7SEGLl
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
v4K5jzuZE35LM+Fbltt34hyyR8oysShp7LNJQ8heKc9EwZZmx9cLSf9UqOQh
8X28xTZavyoT/l0/rZ/+hcY1mRhsuMqvoJnF6zMhaum/uOMMOv8jlTxcCD/9
f/HiOpW8zceVDAHB+yITW+bus/F7QvzcoOKXC+9tfhQw+c+EduDr1xvfkn3U
lImhTjcffGol+6VZdd4fYRv+MSB5b8lEuVX6qJ3D2P2von/9H1vfqaz/hBgP
wk+4CMaTvLQXY5JLvXKlDZ1HXYz99+f2H8z6T2mI8XHSnC6LTUj+NMUw6Yqy
KUxf9hZDWm3kJjrI8oXEuDTvS2bKN5IXbTH8vxybtXsSva91xFitcyF/3Blm
/4tx2M5w/aU8wp+eGIrd1gu/svpqfTHqqxad0G5P9riBGGYPuunfK6L1DMX4
PqREu9dJlm8qRrJD912LTIifjcWIKu14aupFFn8Ww/l1ZpEih+ZNxXh10k4n
6SGz/8W42PmKzvdltL+FGI8jzp3ynMDiE2L803/bmeE65I+yVsG/zS3+OYt3
2ajmbcKwYhqN7cSYUf/p/NK+LD9ejKmtkWNMrQgeRzEOzS2MnrOd5TOIUXba
vEfeD3b/i5Fw7tQAH3WW3yhGtsueGE8P0m9+Yoh3/alu1SP5CxJj5EVx+1EH
Sb+GiRF96Hh6fBnrXyLGYqdDZ0r6Eb5ixbC4oTmooJ69h8XY1tT589Ym+j5V
jOfvZ7SzPUvrC8Ww3d5xhpERwScRQy/S9smo4cTvMjHykh177ftI6yvF2PR9
p9zmGflH8lX8M27s9F7jCJ8FYlzOshywIInwWShGB8dKw2lKsg/3q/h1bXy1
cibLrxGjvY39tOA75I87psLHs14lU1k8plgMb7XBs+78JnyXiCFYu97n/+S5
VIzftZHvJDeJf8vEsNonbp7E+hOUq/bfWbW5SkzzFSp+vnO3b3EGq7cU461P
3B+zL8QfNWL8snGrLYwieGrFiNT4ddUyhuB5JMYJI8Wcpa8IX3VidA0qbZjR
icYvxGhuNI90OkLrNYjhdzn0lkyNztMoBiKfNc9RI/5oEuPZaYfoOlPij2YV
v6T8VzelH4v3i7Evrd3k2O503t+q31dKxhQy/4uaBItPLr2cmUD3S3sJuu2e
U+k/ls6jLoG5y7n2B2eR/aQhwdyJy5vDlxG/aUqwElfLGlk/ld4SzKk/km7z
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
PrxlfDA+yH0gvjJuhzlwX4ifjN98BJ/ILBnbdnThvpEAGYMq/+Y+kjm0PdIF
X8k8GfuavuI+kyAZFaLvJFiGVeJo7kNZIMPUVPClLJJReF/wqYTIKFtQy30r
oTJ61lpwH0uYjOhBEdzXEi4jrnY097mskLF1meB7WSkje9JE7oOJpNfzzy/c
F7OG1oe/EffJRMm41F7wzayTMXiI4KPZIAP5gq9mk4wFp525zyZGhpGZ4LvZ
SvNP7cB9OHG0vroLvpx4erzmM7hPZwfNxzOB3Lezi/YvTwQfzx4aDzFPua8n
4f/jQfD5JNLtzoLvZ7+MPl/Ocx/QQRmGewVfkE6Gc7bgE5JlfBrQmPuGCM3H
tYKPSC+j3dWJ3FeULGMUsec+oxQaf91fcd9RqoyQgL3ch5QmI2uE4EtKl/Fe
vsN9Ssdl6L9mc9/SSVr+3oKP6ZSM8r5F3Nd0RsYyf8HnlCFj8iPB95Qpw+HG
WO6DypbxJlHwReXI0PW24j6pXBmX+wi+qTzaXw835z6qi3T/OHPuq8qX0XGW
4LMqoPneIPiurtD8rl7MfVjXZJQ0ieW+rELa//ge4z6tIhn3lwi+rVsymvwk
+LjuyOj3rA/3dd2V8SxW8Hndp9fn5cN9XyW0/q0EH9hDGu8Zgi+sjLbfojju
Eyun8bRR8I09kRHwoxv3kT2TMaHQkfvKXtDjiz6zlzJ8z5Zx39krGU9nCz60
ChkXLgu+tEo6Xj2L5D61Khk3AgXfWrWM4z8s5D62dzS/I+9zX9sHGdbTBJ/b
R5q/S45w31udjO43zbgPrl6G8fI67otroONBl13cJ9dIgdsmwTdnoCA9+AD3
0TVVYNmwkPvqmivwLxJ8doYKrs4QfHdGCpKOCz68VgoiPgi+vDYKao505z49
EwU/jRB8e+0UjH7pxH18pgqax5/mvj4zBYdrBJ+fuYJnbyy576+zgt6LBR9g
VwWn42u5L7C7gj9+EHyCPRXsGi74Bi0UdC525D5CSwWLH/tzX2FfBWax57nP
0EpBz2f7uO/QWsEy0Ydoo6AuZx73JdoqiLpcLPgUFXS0KuO+RTsFS1eC+xjt
FWzuI/gaHRR8b/yZ+xyHKbCt7MJ9jyMU5O4QfJBOCnKGfuS+yFEKznQVfJJQ
0NdL8E26KOhkL3Mf5VgFD68IvspxClq5PuY+y/E0fursuO/STcHCY4IP011B
1bdLuS/TQ0HQasGn6Unry/IQ921OUXDg/CLu45yqwGmn4OucrqDJqPfc5zlD
QUNXwffpreBl31bcB+qrwLHuNfeF+in4dqbgE52lwMQnl/tGAxQ80A3gPtI5
CrJDBF/pPAX/HhnAfaZBCoYlCb7TYBrPe3dwH+oCBROvfy3+z5e6SEELCD7V
EAUOqW7ctxpK4/NeGvexhinYuErwtYYruLlY8LmuUPBrtOB7XakgwMid+2Aj
FSxPOM59sWsUbL8n+GSjaH29Jtw3u45ef7Lgo92g4NNnwVe7ScFBs9HcZxtD
81v03W5V4Lkwj/tw42j8Vnzhvtx4BZWHBZ/uDgVbd/7Afbu7FPRLz+A+3j0K
TCXB15ugYM75wdznm0jbM1Tw/e6n8T86hvuAD9L4TD7FfcE6Gv/hgk9YVjAy
ZTn3DRMFjbsJPmK9gmudO3NfcTJtvwkduM84RUGpveA7TlVwxDmS+5DTaP5s
F3zJ6QqM3C5zn/JxBYVlH7hv+aQCi1eCj/mUgulSL+5rPkPro7qW+5wzaL49
EnzPmQpOWs/hPuhsBfuHCr7oHAXt0wWfdK6C/MEV3Dedp+D2MMFHfVFBh5n3
uK86X8Hr/oLPukDB3x8F3/UVBef/JdyHfY323+sEX3Yh3X9nIPdpF9HxJGwt
923fovHXNJX7uO8oSBz6gvu679J8aSb4vO/T/PaI5r7vEgWhwQr3gT9U8B6C
L7xMQdztI9wnXq6gLFrwjT+h9bdG8JE/U7Bqazn3lb+g/VPtGu4zf0n78zLB
d/6K1sf1jtyHXkHz8Z3gS6+k/UdVKfepVykocBN869UKrvQo4j72dwp+th7N
fe0fFCTPF3zuH2l7Zo/lvvc6BTE+gg++XkHFAsEX36BASiznPvlGBEE5i7hv
3oCgn9lF7qNvSnAo4ij31TcnqO4l+OwNCW75tOW+eyOC8s7nJpmv0dYLEZgd
8w99vpCdvw2Ba9vngydsZ98DTAiK3AYmFtWx/qAdAWkTeLBlofY9geBT/xYR
A93YbzOCGW4tgwxfsuOZEyydPdO0RwHL384Exj92HZ98TJtvRLCthWXm21iW
T90JHh2NHfjnYs1fRHByxITLx/qz+rIg+GVK/Y0u+SyeLAl87+SfGrGa9Y99
Cb4ZbDD/51usPawI3lyvOP7H36z9rAmmJy3xSsrWeCUELlmdXf7wYPvbEqCW
HPH1Y8cfSOA8/mzW3oOs/ewIHnTxcTdN1XiGBK9jvb2e/qWN/wTjvKLjNhax
+BhGMKts+dFo7fl8BMGP8WXLZW3+oBPB1gFHjimerHyjCCI7BPdwyNH85QQL
zwZWfy1g9elC0Laqz67rbVl8jCXwCJ8YNE97Hz+O/r+vU8jfq7Xxn+DFzSeF
L7qx/taN4OjrOU17a+ur3Ql0DoGXp25m+edBsMndZsPs7Ro/hcD752T7oW9Y
eaYQJHvNfbG7PyvPVHr9/V2NrnVk559OEGo38EqdofZ9lSAxAxE3f2Dx5k2v
32JF8bwt2vhPYDvk1hj9Xnb/4EfQ4+2qkGFB7H38LIKkqwPOuK5k8RtA8PV0
94pXeWy8nENwPy++016NTzCPoOGb9laJYO9rgwjibUOjA2ex/jSYoEN07JNq
bT3UAoJOq7cEdPfWxn+CPutGGk931b7f0PjM2v22RQ92fx5KsC+ipeFP2nrV
MIL+Ezz3ne2sPf8ThHusrAltr/FdCE47Wi88YsjOv5JgTL9fV4/S5ndGEiy3
mHajqx/rv9YQDP8yZ1vVdW38p/k0scLsYntW3nU0ns+7zUy5w/qzDQTzgvZn
BLux/28i8LeIG+6szV+MITDc6ZWQHMvKu5Ug/ceGfkvtWf8bR7D5cOtKg/Xs
/jee4N8L6+08P2nP/wQZlaavspqx54tdBLuXv1kVNlmbT0bzISIp5cQ9dv0J
BFELwq3/WsLKm0hQc2x813uj2f3gfvr7o0v0UHtWfwcJAsPLc0u/sucdHcH7
B4MmpWnPCzLBSAufbSGu7PmNEDyvWTUt0V/j0RHUj3T9MkD7HphM8HHd4TT3
Kez+OoXmX6fGwf86svEoldbHEpeT3RI0XgWt30ePOj0czeornaCjw4MH9xXt
+zXdHuiRu28yi6+TBJdKry4Lbat9z6LxZ7Pv9spXrL84Q/PJ/1LXqp7a+haC
guJ3mXpbdj2ZBI3qPs6b2pVtz6b1bXF98uNStn8Owff//HpD0t5n5RLocypi
UlzY+fMIDPJ8kqZuZtd3kUAOap1l3o9dfz6Nn6DiGp9wVr4Cgj9erqpuMNPG
f4Ljx+M/2/TW5svQfJ46VApNZvVXSGDz4vfSnmD1W0QQY3Kg0FWbz3eLQPr2
/Pcuwax97tD6MZwQFavxVO4SXPnd8sKBSyw+7tPyvXV7XZPJ4qOE4ERhgqe5
ubbeliAhfPKOfi5sexkd31pZ6mK199fltD3j/kiOX8aeN58QmFd6hj/21nic
BH575MaZuez8LwjaBCU4X2mprc8hWNLucPVRbX7fKwKLact1DZtZ/VQQPGs0
vaYwnOVjJUFmw8+tH7TS+Mx0PGzTzP3daPa7msAp5k505HNtPj/BzJH2OVOd
Wf1/oOObcdHZ+etZvn0kCF4ce67DAZZvdQT2t6P8e/7D6qeett9VC1vXL6z9
G2j/c+Tz6cevNf6Pii9b6zp1Xsvu/wxU+Hs1GZM/gcVDUxV9fM/0PGrC2qO5
CqdBWemknbY+SMXIE49u5xWx8xupmBAzN8Jtuvb+X8XpQ3MXr9PWP7VRMTZ+
bqX/elZeExW/R17utC+BjQ/tVMzKCp1iMJw9j5qqWNp+hF/mV238V2Fy4OB3
SUO09UUq9tdGZt7Vnkc7q8hckj/5Rib73VVFhwWt1i1OZuNBdxWf/tz5Ni2A
xWtPFSNOutV82s6OZ6HiUdgPXysDtfUIKrzzepgNOsXip6+KLaMSnA5M0nyX
KqoiSsIDHFn/Y61ifERsrZn2fdJGxa3E79v/oq2vsVVhF2bUwqgTG98GqtjR
bG7A3AFsfLNTkeqZMX72GNbf2quw7dmdpJayeHBQUVF/bLejF7u/GaZiVw+f
87UnWXlGqGgbcdfTL4CVx0nF8Zn+WcELWP2PUrF2+kvvqKZsPAEt7yWL35da
s+O7qAgLajV62GvWPmNVWPT7Z/B6hbX/OBXmBud2jLrOyj+elr80f9Jyb3Z8
NxVpnseyPR5pvBQV4a6xHe9cYPt7qBi9LuTmjeFsvPFU0b53gY2kzTecoqJ4
mPHT0ARtPZWKlu7b2zkOYe0xXUX50jpXc+3+eAYtXy+rqSW7WX/lrUI2T3l1
rh2rT18V1b5NTv+9m9Wnn0r7u63vTVpp8y9UzE/ccMm6Nbv/CVBxO6X67G92
7H5yDm0f+40ul5O0538VA+/rjw7/zNo3iMbP5c23p61g8RusYjppkhwbo63X
UhH1xrouvz3bvkjFxRSvukqNRxCiIqt/6ZTETFaeUJpvHQYF6Sq09/8qbCYU
JZb8y84fruLlc9O3xtp8hBUqugWsLAgezn6vVNHj2dPBj9ey40WqcC41nP/7
TtYea1TUvh1Su/YXdv8TRa+/RUigzQ52/7NOxd2WF3z7f9bWg6v42aFXk6wy
Vv+bVGz4RGIbGWt8SBX5g6Zm3rVgzztb6f7fDliX2E2bL67izAjrR8Ha+9t4
FfGTSuccXaj5FVSkeCYSg+nsfmqXCuP6uu8m7WDjwR66vbV71onbrP9LoPGf
vDo7NIL1V4kq0o0dXt49weJ1P23PnNTVBTmsvziowuNx/NOlz1n5dLT/Sa79
+8lBVh8yLb/NjctDj7F4IypGvR5zOFDPfutVuAd5Pp+5if0/WcX/1GUHeuSy
46Wo6P307b7v9rPzpap41fiNe32Mtl5dRWX0e9dPhux60+n2Wc2c/d00nz2N
l4RXLxaXsvu5kyqu5Y+JOTCA9aenVASuMV++NZ3FyxkViZu8yjy09cAZtD5L
BnqPc2H1mUn781EV/wRN1sZ/Gj+zyQVXX3a8HNoe+XdrVuezfM2l7TUjySQ/
j11vnooXo0NLQ49oz/8qrK0tVnYcxvrjfFr/uVsu//iOlbdARW7kkC5rLVl/
c0XFuR+Lbxyu0tbLqCjYlUJctrHrK1TRMLHv5r+CNb8F7W/Shlh9NmH5cktF
45KWJT3dtPV0NB5+GdNnvqX2/K9iY33Yi+weGl9LRX/pckTtYTZ/q0TF4jv1
3U7PZ9sfqtg0ePy+vfvY/mUq5p2aHeP8lh2/XIXv66I3txuxfHuiYuu0a2uP
O7N8e0bzZ9sljzba/LQXtPzrNy7Z/IaV56WK5BpH9a47K88rFbqcucvjFrF4
qVBRMt9/bek8lm+VdDzJaTZfn8fip0rFFCn0nvQbG5+rVYS0blo3qFybz0Pj
I67trh3a+4QPtD9Kuvqh/VnN50rz7+rsJSWRrD3qVHhGzWzup62PrFeRE/s0
4Ywf295A+wfDvJXHNf5UIz38TnRrUlLN4sVAj8tWGxKyu7LzN9WjRV1Wcb72
PaK5HkVy6qba55ovVo+6A83N8gex+DDSI63umF1CATtfKz1mpneYGPWclb+N
HlGedauKte/RJnrkFU/cvv5f9rudHhv36IlJImsfUz182u1tMquKta+ZHs/L
d7e64MWOZ66HYeaWq/MWsvvNznoUlixK/arNF+iqx+6pDW8KfFl/312PW+YF
l4ziWP701COgd90k69Osviz0WPzAvu3NTqw8lnrsHb4mt/BbVp6+egypH5w2
zpCd30qPoLY9MhvP0J7/9diTHjSt/SKWXzZ6ODn8eu96BptvbKuHyfheQZ0N
2Hg0UI8/z3T5vWl1kvP/ATDIMlI=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 2584.}, {0, 0.052437323982692484`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650778695108264*^9, 3.650778717000136*^9}, {
   3.6507787673817053`*^9, 3.650778777619443*^9}, 3.650779226229619*^9, 
   3.650779643255351*^9, 3.650786466471334*^9, 
   3.650786582803713*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXWusXdVxvpyzz/ue+/S9vn6BgwM2BsIrbWMKSVPlpVSWQSQ1RFUbl2JM
jXkEx8LBSIgKY5w4BlxoMMgSFYJiHlUlV2DFyh+DaEP5URUJ3BiiCzGxoXJt
aszb7ln7nLO+veZ8M3ufe29IaRvFZnvttWZmzcyaNWtm1j6Ll61eccWqZauv
unzZ3K9/b9l1K666/Ia5X7v2e42m/Ak9PSes6OnpeX1uj3s+3nhs/XW88f/j
V7m/XEv680Xxf4ZOOHbs2Pd37tz5y7Vr1/5qzZo1O7Zs2TLn4MGD7u3wkSNH
nr7rrrv23Hzzzf9wzz339L377rta+5kxuJHjy5cvj59af7oBobYv7IQ9VWT3
zI8h5r/77LPPOvgfrVixoicf/z00VfQv0FFM1TSKgUzP37t37y/WrVs3/fDh
ww7Dtbt27frp5s2b3dufPPTQQzfv2LHDPf/oscce++Hjjz+utSsy7QaE2k5k
OlVkt2X62QMHDuxrMLX6/vvv90Rx2+CU0L6AwM9PLetbAv1W/J++GYcOHTqy
atUq969fr169+uS33nrLPZ/92muv/XsDm9auCLAbEGp7U4D5AHY0OXJbfL3x
qaee+tdbb731nEZzi6+DU0LyaQR+cXIkhwtvrCH1ex5++OGFb7zxhluWTpq7
N27cGH388cfHrrzyyvIHH3zgeo6+/fbb71x99dVaO5FbtyC0drbwporsFoNH
v/zyyy//2y233LLlkUceKXz00UdTRftCDn6qyA9l2fvee+8dXbly5XMbNmxw
b3+2adOmUxorPt8Y/XFi9Ehj9NvXXHON1k5k2S0IrZ3JcqrIbsN2DH5w27Zt
f9MwUlNG9+mdsKeM7pYUL26u9QM33HBDu0vLltSczXag3b/OHR8fdxupe6bt
TVLzf/rcc885uxGzumWTuoKjtS9Q4U+e9uY+OObWxSP3339/W0Xm/kfjf9df
f33XtCrtzSlULDR+KtEEphFK9Ofr16+fv3///iRX/rqx+u944oknco0d11mC
25988kn3hra3JPoHe/bseeDBBx9MSrQrOFr7AhX+5GlvSbT/6NGj/3ndddf9
3quvvuoW0eqGC/nPDdhd06q0tyRqofFTiSYwjUCig49u3brVLWXnErs/P96+
fXvbLj/VcHT3N/Zd5+gOvvPOO2r7GU2eOjR/14AX/yvXhN8VHK39NB3+lNDf
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
NyGX\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"edges", " ", "of", " ", "the", " ", "energy", " ", 
    RowBox[{"spectrum", " ", "/", 
     RowBox[{"!", 
      RowBox[{
       RowBox[{"\\", " ", 
        SubscriptBox["F", 
         RowBox[{"n", "+", "2"}]]}], " ", "needs", " ", "to", " ", "be", " ", 
       "even"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"edge", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "fractal", " ", "dimensions", " ", "of", " ", "the", " ", "wavefunction", 
     " ", "at", " ", "the", " ", "edges", " ", "of", " ", "the", " ", 
     "spectrum"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qlist", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0.", ",", "10", ",", ".3"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ded", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"WfD", "[", 
        RowBox[{
         RowBox[{"vec", "[", 
          RowBox[{"[", "edge", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      "qlist"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dedq", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"qlist", ",", "ded"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "now", " ", "we", " ", "compute", " ", "the", " ", "max", " ", "value", 
     " ", "of", " ", "x"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"compute", " ", "x", " ", "for", " ", "each", " ", "site"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xlist", "=", 
     RowBox[{"tree", "[", 
      RowBox[{"n", "+", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"drop", " ", "the", " ", "site", " ", "labels"}], ",", " ", 
     RowBox[{
     "they", " ", "are", " ", "unecessary", " ", "as", " ", "x", " ", "is", 
      " ", "indexed", " ", "by", " ", "increasing", " ", "x", " ", 
      "label"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xlist", "=", 
     RowBox[{"Last", "@", 
      RowBox[{"(", 
       RowBox[{"Transpose", "[", "xlist", "]"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "list", " ", "all", " ", "possible", " ", "values", " ", "of", " ", "x"}],
     " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xvalues", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"DeleteDuplicates", "[", "xlist", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", "=", 
     RowBox[{"xvalues", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.650778102472867*^9, 3.650778106989212*^9}, {
  3.650778373741763*^9, 3.650778388990377*^9}, {3.650778429086762*^9, 
  3.650778522927538*^9}, {3.6507786547346888`*^9, 3.650778669408868*^9}, {
  3.6507792503341923`*^9, 3.6507792803993998`*^9}, {3.650779354624097*^9, 
  3.650779401856529*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wfdth", "[", 
     RowBox[{"\[Rho]", ",", "q", ",", "xmax", ",", "n"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Point", "@", "dedq"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650778500775957*^9, 3.650778603327859*^9}, {
   3.650779289025511*^9, 3.650779312560617*^9}, {3.650779411202004*^9, 
   3.650779487216337*^9}, {3.650779558529374*^9, 3.6507796028656483`*^9}, {
   3.6507796684337463`*^9, 3.650779673504113*^9}, {3.6507799130737543`*^9, 
   3.650779996961499*^9}, {3.6507800637465773`*^9, 3.6507800638253613`*^9}, {
   3.650780904834978*^9, 3.650780932305645*^9}, {3.650780962547204*^9, 
   3.650780990401775*^9}, {3.650781037298661*^9, 3.650781059314354*^9}, {
   3.650786404277795*^9, 3.650786410532612*^9}, {3.650786601845405*^9, 
   3.650786655204216*^9}, {3.650787097750403*^9, 3.6507871197978487`*^9}, {
   3.650802982511197*^9, 3.650802982657402*^9}, {3.650803018271101*^9, 
   3.650803018462138*^9}, 3.650803050383156*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
r2Poq5tAB8P9Hwv/9s8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0.7000000000000001},
  AxesStyle->Directive[Large, FontFamily -> "Linux Libertine Display"],
  DisplayFunction->Identity,
  Epilog->PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLZnSk7rmtb1Gsp/bL/xIFd2k9ZL
+zNg8MZ+8bHUuXP4X0DlP9s/kGzmse9+bg8x7Yd9gXlj1GWP51D1f+z5jNL3
eqk8tz8L5jM4WIqsrzHiew7Vz+zAKblz+8z/z+xnggGrQ7Fs7gP9r8+g5nE4
9Mau+uTy9pl9GhhwOcg9yT397tkzqPk8Dut7Yu4ue/gMah6/Q7G350zpu8+g
9gk4KF4J0pC8CTNPyCGj+LVh7VWYemEHFsE4eYNLMPNFHCbdPmyleB7mHlGH
C8KTol3OwMwTc9B1dSiZcBJmnoRD7x+7Jf+OwcyTdJDlzJ3VeQRmnpSD3DZB
Ld1DMPOkHa51FTM82w9zv4zD8Xy2go17YebJOQQftfTq3Q0zT94hkTX5cPlO
GF/BgWfm8dj87TD3KDgoTTtws2grzD5Fh1fOUzQbN8PMU3KIEefJmLkRZr+S
w5rXohd3rYeZp+wwf8OH3U/WwsxTduiwaZ8mtuaZPQBhle59
    "]],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 3}, {0.7159458043780647, 1.1024193394380135`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650778526543234*^9, 3.650778554122921*^9}, 
   3.6507786038724823`*^9, {3.650779296104377*^9, 3.650779313354301*^9}, {
   3.6507794148479137`*^9, 3.650779487997682*^9}, 3.6507795225278683`*^9, {
   3.650779566417025*^9, 3.650779603227543*^9}, {3.65077965547705*^9, 
   3.650779674162058*^9}, {3.650779921580859*^9, 3.650779998043417*^9}, 
   3.650780064625599*^9, {3.65078037421954*^9, 3.650780400796521*^9}, {
   3.65078080836873*^9, 3.650780863610257*^9}, {3.650780906304796*^9, 
   3.650780990936616*^9}, {3.650781039657382*^9, 3.650781059638322*^9}, {
   3.6507864050825872`*^9, 3.650786410885579*^9}, {3.650786588146055*^9, 
   3.65078665572735*^9}, {3.650787098682789*^9, 3.650787120213595*^9}, 
   3.650802917749737*^9, 3.650802983045279*^9, {3.6508030130867043`*^9, 
   3.6508030192890463`*^9}, 3.650803051062154*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dthtest", "[", 
     RowBox[{"\[Rho]", ",", "q", ",", "xmax", ",", "0", ",", "n"}], "]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Point", "@", "dedq"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650778500775957*^9, 3.650778603327859*^9}, {
  3.650779289025511*^9, 3.650779312560617*^9}, {3.650779411202004*^9, 
  3.650779487216337*^9}, {3.650779558529374*^9, 3.6507796028656483`*^9}, {
  3.6507796684337463`*^9, 3.650779673504113*^9}, {3.6507799130737543`*^9, 
  3.650779996961499*^9}, {3.6507800637465773`*^9, 3.6507800638253613`*^9}, {
  3.650780904834978*^9, 3.650780932305645*^9}, {3.650780962547204*^9, 
  3.650780990401775*^9}, {3.650781037298661*^9, 3.650781059314354*^9}, {
  3.650786404277795*^9, 3.650786410532612*^9}, {3.650786601845405*^9, 
  3.650786655204216*^9}, {3.650787097750403*^9, 3.6507871197978487`*^9}, {
  3.650802924238203*^9, 3.650802943967598*^9}, {3.650802975039426*^9, 
  3.650802975185238*^9}, {3.6508030261270523`*^9, 3.6508030430712547`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1Xk4lU8bB3Bbz1iSJZSthShFpdJCzHSoVJQ2KnVIUlSULIWsSUqSKCJZ
IknJEr0oP6JCkiVCsnY2jg7Kvrz3+etcn+s7z9zzzNzPnKV2LgdOCwkICCgL
Cgjwf8f2OD+2cLloFL7RrVKlh4ePUoHzazX34vTS2mF2Bw8nRmDLO5p0vLra
vavgJw9/OJzgeV7TGc+t1pG2bOLhw2/NRY9r+mLTCsHpuEoeTnBM/XZQMxyf
uvZb2uI1D9NodXn7NBNwokfcxBlfHo5azUwz13yFTc3zjr5T5WFx+sAgy6kE
y68cuu5VOIBDVBzc31h+wgNL3gRXBHCxcMXuz6l1X7HVuqcNG7z78UIL/TKl
oa/49KuAJlXPfqzdplV8V7YW0zn1jWKX+7HloOjrqwdrsXfXzfccp36crvrp
ofn3WuzkxVry7Vg/1ixKyvU6/w0PB0kPLjfox1XzFwWpXazDNZuW9QnO9OH5
FQpqrp4NuPE/dtTcsD6cw2XRH95owC/EKse6b/ZhC4WiuOLoBvxzh3FKUXAf
Dj9jI4/yGrBuXsfHy359WFQ8XTSe14DVRkKWzbr24am9W/5UODZikQLVBQHH
+nDvD+tixePf8WfFF/9bsaoP5/cnWpaSZpySeejRu3oODpepWLNqfzO+GiQt
3FPLwQ4b2aLRJ5ux/JbCN+I1HKzgr1t0NrAZb6vZPGT7iYPd55ctli5vxl+/
P45dUczBG/R7WPSdP3Bm69Ba9TQOzg7R8J4yb8H7ggQkC705OFMt48km6zas
l1N5Uk6HgyfWeTcfOteGpVJ66VUrOdjU2EzK1bsN/xhRXh24goN7Tg34Zsa1
4R13lQ1H1TlYKXUdfenPNhzQqfFvRImDQ5cXqUic+IlbTNrv7BGD9Wp/if1F
b8f9CcdvYSYbL944cD/YrgPbaXnaUulsHPg89vadSx04oypKf0caG/eqbA+K
9u/A82nCNiFP2ThdON41NaEDY7fSQMkkNl5bt2t/RWsHLvU5r6j1iI2X5B8I
CdTqxGPKzcnxYZDvf2VSltSJP27/sM3ZlY33h5wu2RbZhddsDkm6sY2NF2F7
sbOPuvCeEGWRIczG/SN2B8OTu3CBjMlTuhEb33SwZbbmdOG91GCMgQEbv99u
LeXW0IWbbLbrieixsbbIfps0uW68RkFsV+0KNkYBW2fFH3ZjH4vBoO0ybPzO
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
Yb0q
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0.7000000000000001},
  AxesStyle->Directive[Large, FontFamily -> "Linux Libertine Display"],
  DisplayFunction->Identity,
  Epilog->PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLZnSk7rmtb1Gsp/bL/xIFd2k9ZL
+zNg8MZ+8bHUuXP4X0DlP9s/kGzmse9+bg8x7Yd9gXlj1GWP51D1f+z5jNL3
eqk8tz8L5jM4WIqsrzHiew7Vz+zAKblz+8z/z+xnggGrQ7Fs7gP9r8+g5nE4
9Mau+uTy9pl9GhhwOcg9yT397tkzqPk8Dut7Yu4ue/gMah6/Q7G350zpu8+g
9gk4KF4J0pC8CTNPyCGj+LVh7VWYemEHFsE4eYNLMPNFHCbdPmyleB7mHlGH
C8KTol3OwMwTc9B1dSiZcBJmnoRD7x+7Jf+OwcyTdJDlzJ3VeQRmnpSD3DZB
Ld1DMPOkHa51FTM82w9zv4zD8Xy2go17YebJOQQftfTq3Q0zT94hkTX5cPlO
GF/BgWfm8dj87TD3KDgoTTtws2grzD5Fh1fOUzQbN8PMU3KIEefJmLkRZr+S
w5rXohd3rYeZp+wwf8OH3U/WwsxTduiwaZ8mtuaZPQBhle59
    "]],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 3}, {0.7159139043062996, 1.0554473752303326`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650802930971486*^9, 3.6508029446697273`*^9}, 
   3.650802975697588*^9, {3.6508030279632483`*^9, 3.650803043801159*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 CellChangeTimes->{{3.650777953595093*^9, 3.650777954043025*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["D", "1"], " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Rho]", " ", "Log", " ", "\[Rho]", " ", 
       FractionBox["d", 
        RowBox[{"d", " ", "\[Rho]"}]]}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", " ", "Log", " ", "\[Lambda]"}], " ", "+", " ", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"2", "x"}]}], "3"], "Log", " ", "lb"}]}], " ", ")"}]}]}], 
  TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.650723946127346*^9, 3.650723978597384*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "=", "10"}], ",", 
     RowBox[{"\[Rho]", "=", "12."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"lambda", "[", 
         RowBox[{"\[Rho]", ",", "1"}], "]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"2", "x"}]}], "3"], 
       RowBox[{"Log", "[", 
        RowBox[{"lb", "[", "\[Rho]", "]"}], "]"}]}], "-", 
      RowBox[{"x", " ", "\[Rho]", " ", 
       RowBox[{"Log", "[", "\[Rho]", "]"}], 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "[", "lambda", "]"}], "[", 
         RowBox[{"\[Rho]", ",", "1"}], "]"}], 
        RowBox[{"lambda", "[", 
         RowBox[{"\[Rho]", ",", "1"}], "]"}]]}], "-", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"2", "x"}]}], "3"], "\[Rho]", " ", 
       RowBox[{"Log", "[", "\[Rho]", "]"}], 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", "1", "]"}], "[", "lb", "]"}], "[", 
         "\[Rho]", "]"}], 
        RowBox[{"lb", "[", "\[Rho]", "]"}]]}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "\[Omega]", "]"}], 
      RowBox[{"dth", "[", 
       RowBox[{"\[Rho]", ",", "0.999999", ",", "x"}], "]"}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.650723265764867*^9, 3.6507233483368*^9}, {
  3.650723506298774*^9, 3.650723711730349*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.412742510087561`"}], ",", 
   RowBox[{"-", "5.412732824461093`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.650723348858259*^9, {3.650723562637055*^9, 3.650723583983691*^9}, {
   3.6507236183174467`*^9, 3.650723712151079*^9}, 3.65077782759768*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  SuperscriptBox["\[Lambda]", "ll"], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.650801714280854*^9, 3.650801716762652*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "s"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", " ", "r"}], " ", ")"}]}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["s", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], "2"]}], "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", "c"}], 
          RowBox[{"(", 
           RowBox[{"1", "+", "r"}], ")"}]}], "+", 
         RowBox[{"s", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]}]]}], 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}], "-", 
      RowBox[{"s", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "\[Rule]", "1"}], ",", 
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.650793044057288*^9, 3.650793287321713*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["3", "2"], "-", 
  FractionBox[
   SqrtBox["5"], "2"]}]], "Output",
 CellChangeTimes->{{3.6507930544229794`*^9, 3.650793069101947*^9}, {
   3.650793104334138*^9, 3.6507932112785273`*^9}, 3.650793245601375*^9, 
   3.650793289616272*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "s"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", " ", "r"}], " ", ")"}]}], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["s", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "r"}], ")"}], "2"]}], "-", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", " ", "c"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", "r"}], ")"}]}], "+", 
          RowBox[{"s", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]}]]}], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"c", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}]}], "-", 
       RowBox[{"s", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]], "/.", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"\[Gamma]", " ", 
      SuperscriptBox["r", "2"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "\[Rule]", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["r", "2"], "/", "2"}]}]}], ",", 
     RowBox[{"c", "\[Rule]", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["r", "2"], "/", "2"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.650793393783947*^9, 3.650793438855825*^9}, {
  3.650793596503955*^9, 3.6507936290317717`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "2"], "-", 
   FractionBox[
    RowBox[{"\[Gamma]", " ", 
     SuperscriptBox["r", "2"]}], "4"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "r", "]"}], "5"],
    SeriesData[$CellContext`r, 0, {}, 0, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`r, 0, {
    Rational[1, 2], 0, Rational[-1, 4] $CellContext`\[Gamma]}, 0, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.650793428572075*^9, {3.650793611331892*^9, 3.6507936296492968`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"generate", " ", 
    SuperscriptBox["\[Lambda]", "ll"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "s"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", " ", "r"}], " ", ")"}]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["s", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "r"}], ")"}], "2"]}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", " ", "c"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", "r"}], ")"}]}], "+", 
            RowBox[{"s", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]}]]}], 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", 
          RowBox[{"(", 
           RowBox[{"1", "+", "r"}], ")"}]}], "-", 
         RowBox[{"s", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]], "/.", 
     RowBox[{"{", 
      RowBox[{"r", "\[Rule]", 
       RowBox[{
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"r", ",", "q"}], "]"}], " ", 
        SuperscriptBox["r", "2"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"%", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", "\[Rule]", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox["r", "2"], "/", "2"}]}]}], ",", 
       RowBox[{"c", "\[Rule]", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox["r", "2"], "/", "2"}]}]}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6508018647641993`*^9, 3.650801954013679*^9}, {
  3.6508019857590723`*^9, 3.650801996798781*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]ll", "[", 
   RowBox[{"r_", ",", "q_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         SuperscriptBox["r", "2"], "2"]}], ")"}]}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        SuperscriptBox["r", "2"], 
        RowBox[{"1", "+", 
         SuperscriptBox["r", "q"]}]]}], ")"}]}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["r", "2"], "2"]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           SuperscriptBox["r", "2"], 
           RowBox[{"1", "+", 
            SuperscriptBox["r", "q"]}]]}], ")"}], "2"]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              SuperscriptBox["r", "2"], "2"]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             SuperscriptBox["r", "2"], 
             RowBox[{"1", "+", 
              SuperscriptBox["r", "q"]}]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             SuperscriptBox["r", "2"], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], 
             RowBox[{"1", "+", 
              SuperscriptBox["r", "q"]}]]}], ")"}]}]}], ")"}]}]}]]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox["r", "2"], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox["r", "2"], 
          RowBox[{"1", "+", 
           SuperscriptBox["r", "q"]}]]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["r", "2"], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["r", "q"]}]]}], ")"}]}]}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.650801977077053*^9, 3.650801981206396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"\[Lambda]ll", "[", 
    RowBox[{"r", ",", "10"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6508025601239967`*^9, 3.65080256033156*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "2"], "-", 
   FractionBox[
    SuperscriptBox["r", "2"], "4"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "r", "]"}], "5"],
    SeriesData[$CellContext`r, 0, {}, 0, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`r, 0, {
    Rational[1, 2], 0, 
    Rational[-1, 4]}, 0, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.650802560707993*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  SuperscriptBox["\[Lambda]", "lc"], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.6508023885850763`*^9, 3.650802390300971*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["r", "2"], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{
     SuperscriptBox["r", "2"], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]lc", "[", 
   RowBox[{"r_", ",", "q_"}], "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", "r", "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["r", "2"]}], ")"}]}], "+", 
     RowBox[{"s", "[", "r", "]"}], "+", 
     RowBox[{
      RowBox[{"lb", "[", "r", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"s", "[", "r", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", 
            SuperscriptBox["r", "2"]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"c", "[", "r", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["r", "2"]}], ")"}]}]}], ")"}]}]}], ")"}], 
   RowBox[{"-", "1"}]]}]}], "Input",
 CellChangeTimes->{{3.65080239972957*^9, 3.650802495534398*^9}}],

Cell[TextData[{
 "Interestingly, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Lambda]", "ll"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Lambda]", "lc"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " have different corrections at order 4 in \[Rho]"
}], "Text",
 CellChangeTimes->{{3.6508025725534897`*^9, 3.65080259540135*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"\[Lambda]lc", "[", 
    RowBox[{"r", ",", "10"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65080249919963*^9, 3.650802547611807*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "2"], "-", 
   FractionBox[
    SuperscriptBox["r", "2"], "4"], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["r", "4"]}], "8"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "r", "]"}], "5"],
    SeriesData[$CellContext`r, 0, {}, 0, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`r, 0, {
    Rational[1, 2], 0, 
    Rational[-1, 4], 0, 
    Rational[3, 8]}, 0, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.650802505062044*^9, 3.650802547992568*^9}}]
}, Open  ]],

Cell["Fractal dimensions", "Text",
 CellChangeTimes->{{3.650802728089134*^9, 3.6508027323452377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dthtest", "[", 
    RowBox[{"\[Rho]_", ",", "q_", ",", "x_", ",", "y_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"n", "+", "2"}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "y"}], ")"}], " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"\[Lambda]ll", "[", 
            RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], 
          RowBox[{"\[Lambda]ll", "[", 
           RowBox[{
            SuperscriptBox["\[Rho]", "q"], ",", "q"}], "]"}]], "]"}]}], "+", 
       RowBox[{"y", " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"\[Lambda]lc", "[", 
            RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], 
          RowBox[{"\[Lambda]lc", "[", 
           RowBox[{
            SuperscriptBox["\[Rho]", "q"], ",", "q"}], "]"}]], "]"}]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"2", "x"}]}], "3"], " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"lb", "[", "\[Rho]", "]"}], "q"], 
          RowBox[{"lb", "[", 
           SuperscriptBox["\[Rho]", "q"], "]"}]], "]"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"q", "-", "1"}], ")"}], 
       RowBox[{"Log", "[", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}], "]"}]}], ")"}]}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.650802738975987*^9, 3.6508027648475847`*^9}, {
  3.650802825024201*^9, 3.650802851856612*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Individual wavefunctions (no average on states having the same value of x)\
\>", "Subsection",
 CellChangeTimes->{{3.6539850952068567`*^9, 3.6539851155430117`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "17"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tol", "=", 
    SuperscriptBox["10", 
     RowBox[{"-", "14"}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "wavefunctions", " ", "and", " ", "energies"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"val", ",", "vec"}], "}"}], "=", 
    RowBox[{"Eigensystem", "[", 
     RowBox[{"hp", "[", 
      RowBox[{"n", ",", "\[Rho]", ",", "1."}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
    "energy"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vec", "=", 
   RowBox[{"vec", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6376637410535107`*^9, 3.6376637612913322`*^9}, {
   3.637663903594638*^9, 3.637663904074048*^9}, {3.637664044065216*^9, 
   3.6376640443671303`*^9}, {3.638781296946495*^9, 3.6387812971536083`*^9}, {
   3.638781345298437*^9, 3.63878134803356*^9}, {3.649671679506936*^9, 
   3.649671679809421*^9}, 3.649672746111318*^9, {3.650533554503845*^9, 
   3.6505335545986958`*^9}, {3.650719857989237*^9, 3.650719859419755*^9}, {
   3.650719916441803*^9, 3.6507199166696*^9}, {3.6507199788689747`*^9, 
   3.650719979052927*^9}, {3.650860569022455*^9, 3.6508605693827963`*^9}, 
   3.6508627603366213`*^9, 3.650862815839922*^9, {3.6508632579523973`*^9, 
   3.650863258047233*^9}, {3.650877507081016*^9, 3.650877507302705*^9}, {
   3.653985392945644*^9, 3.653985399388588*^9}, {3.653985648571368*^9, 
   3.653985652105939*^9}, {3.653986343821896*^9, 3.653986347866518*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"D2List02", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"WfD", "[", 
      RowBox[{"#", ",", "2."}], "]"}], "&"}], "/@", "vec"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.6539853288726397`*^9, 3.6539853332249823`*^9}, {
  3.653985655387836*^9, 3.653985657246315*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"D2List", ",", "D2List02"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.65398562582708*^9, 3.6539856361210623`*^9}, {
  3.653985713562564*^9, 3.653985719385581*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxEfXlczc/3f0iylkQhxDsJIYQQnhSiJBRFkQrt2hdtt/2231v3dtcISQjZ
QwghewhFUrKEkL0I3/t7/Drzef/zfow5d87MOc8528y8GumydeWmrkpKSnbq
Skr/7////7/Wec02Gx5cW9A8r/Mf0PLw774YG2qrIkpyVDJ2eFNnWx09Ztis
q51N/ZqwKVFxPTCP2tr4fVrW9mka0etgAV+W2jezobOtC4MNtdMM+lP/KEwP
3uccOpl+rwe/pSKbf1bU1sfenimHrmsQvQEmVRardNen/nFY0jd9yExQ2xDy
Ae/XB08l+olwv6Z0eI2A+BuhqEfM36S+1D8Z9/2OOsyIp/4pGGyx6vX/2lPx
b5B90WpGb4zFZlpDwcabBuU3qXZBjN90NDxRTyuZT/OZgbY5lS9txlDbBMN3
/jDrMoDoZ6L31d7B7ZbUPwuTnru9XmBE7dlQvtV10QIVojfF/HP8//qx+c3B
N52LUx+No/65KBl18+dUQ/r9PEiOSxynG1AbKDQWKJ3u2UnPARYPyh2ynulz
PnJ/rizLmtDZ5sxH89VVG7/2ovEXwEd2wHM1r5M/ZwGeB3/qrT2a+s1gMlPz
8NwU6jfDqdwTqZuorWSO3WOW2v2dQPzNoRdRk53C8LEQA7vKgpS7UP9CrK3W
OuISRP2LMMipuHYmG38RrnmoPBkoedTZvxhrn44ziCF6zmIsnll7fXsi/d4C
Jwc6Ve80oPEt8Hxr6KVIxn8JHPbEdbnch/qX4NfxBPlqNv+lmGcZb8Jj/Jci
8ER5XIkyrd8SP53/uQ1m8rHEYv9U5dkMH1a479XlxWnCB8cKQ5eUnb0ymuS/
DHOnS9PPkbw5y/DH3dJRwPRjjbScoRM1htPvrWG2bsNeD4aP5TiWZ9RuTvjg
LMfkhV+3GY2nfhs8P/f83M+5nb+HDXz3TdiVYkLj2cC5//LCBbTfym2QaX0j
/aUp8V+BRSeMY78SPrAC2hN2zYxUovmuQH7jmB2eJJ/yFVC5dHX6f/8R/5Uo
euoZ8C+0sx8rwV2YbsPanJVQWjNVZSTRl6+Eq8MSk2VM/qsw7nYf56XED6vA
ffpy5PwhNP9VyOqdett6bGe7fBWqz0/Yuf3fi87f20LHxfl4C9kP2GLOfb1z
/8O7LXa+m/AucCTxt0WC793NeeHE3w4b/x0a8LijczzYYd6Y27JRQ+n3dkhW
2b75Ismz3A67sx9p56nS+lfD7J68aZoe8V+N0WtfvTEj+8VZjTYXy4mmhJfy
1VhzYe3S61nEfw1Sxq6J7054wxqcum17h0f45qyB++Yr++ZTu3wNPOy7emUy
fNqj9/A5TWeoH/b4bCOa4zCC9GePE6bPLr1Lo9/bY7lFv72vtxF/B/Q7HD/i
xp7O/QYHtPv/3sWl+XEcMLvoSNxloi93wBH3uT8n035WWottN977jaX9hrXQ
yvxz4ZMh8V8Lc1PTHscJv+VrMfKm3C6Q2bt1mJ/rIdMYSutfh21jlv+uYetf
h+jGbv+GED7K14E3prVsYSD93hEpx7fNFsUSf0ck3l3kpVnYuR6OIx6fTHM3
Dib+joiPMT2/mq3fCaYZ0bIu12n9Tjg17kzt4vB7nb93gk/Jick7Yzr7y51w
jtPN9Jon/X490rbpPfZNJv7r8azDZJkdyZOzHqsTNa8WEX35eswe9GZ+E7Nf
G1DkqnppHNkvbEC7sXi6L1v/Bry7tD8s5FcnPss3IPH1mJr9TH7OONg6W5ZG
bV1n6P8sfHGmN43njJ1rX14eTPpxdoakXEXvKbOXzvicf21uC+Ej3xlirYGb
S5i+nbFs2OEGCa2nwRn9riXJExh+N2LCR0NjGdHrbsS1z+9eJP+k/bQRn8JN
NDJoPc4bMfdl5abt5F84G9F96pyVM6g/fyOG1u1202d434hiCA3c9DrpGzZC
3G3w8R5kj5Vc8HjN7kufyb7qukC9x2yp2iTajy547va4qJLsnbMLNnnaDoli
9tgF/CkJ/WaSP813wZkHoQ59yd+Wu+DRc50nLaOIvwt8r/9c1ieC+LvC1eDN
GYO/nevVdUVMqM2dySOIvyvCdLrolc0i/q74z/i+o5jZV1fcdp0yv2kA8XdF
j029dgyeSPxd4ey1aDrzbw2u0PttFBPP7Kcb1oy4e+1oV1q/G2Z1N/wUHkZ4
dIPVN5WqbdR2dsPijUXWJUTPccOUC9grofHy3XB8gtnT28Sv3A2nd11KjKd4
sMENIR767frMv23C6NArYz+oE/9NkFhukv5dQuvfBP99dpaWtB7nTbhfi3eu
3Yn/Jkx66pw6JY74b8Liy7sz/4wl/pswMLResJr00bAJ+r5dBjuy+Gczes/y
FbZS/KO7GWc7fMfvIf+Kzaiy10+tIX/gvBmGN2X9BjP5b4bDlkzHbQx/m6Hm
PKR25hDivxnr/Z45LYvu7G/YjJhozfJAaittwbDRYeo/CB+6W+AfML9PNO1H
bMHEZVVLf3zvxIfzFsR9tor29aD9vQWJaiN+LaTx8rdAvzBnzYR4sjdbEDlf
0zuV6Bu2YOP3RTn7mf1yB3/p6chrw4i/O7y863k7GH93aBpGP3xB9trZHXem
adZsIH4cd+SpjfotZvzdUec5uX1PO9kbd9haWvXtS/JpcMe1llVvDAkfSh7Y
feyA6mPSj64H9CurJr1SJ/l74Ps9720tbP0e+Htz0u+H5K85HlhRd2/B6p6E
fw+FPl3eHv5C/D0wzuOVfuZW4u+BLF+1Q5FaxN8TBvN9o9wYf098uj5lxy/C
JzyxanXS3VsULzh74m+WaXDiOOLvif6i8Ke55O/zPWHoanz43w/i74mX5xca
fIwh/p54sFfjVOFg4u+FgTuXl0h9yf55Ifs2d5CM2vDCvFj3wmqid/aC9s32
u0ockr8XPCY9/vuH+OV7Qdk9snivNu1/L/zzb/jvFOUbDV5482nvbC2yN0re
OJf738hQWq+uN+bG+64YRvKAN4Q3poy+qEv8vdE/Py27hewBxxtme+fpGFD8
k++NMbqyDwNIHuXe2L3WKfo4xT8N3lj+dIfq/+IfH/z+W7UWFP/o+uDE4oqu
NhT/wAfaaSo/Min+cfaBbpfYwkEsnvaBR86iC1YUz+T7QOfqvylZzP77wGjE
Cpe5DH8+mH6sn3wqi3984THw8vo11K/rC+5mg9QPlN/CF4WZ+oKRXLJ/vjh8
ft3+YSw+9UVUjduCUds791u+L+Z3v1uzj8VLvvg137roZQjx98WA07MHjKf9
obQVW74flGklEf+tUNPomltF/gpbMXanTjPzF85bobq7wuw67V/OVvhetPz4
kfLn/K0YceWi8EAk8d+qmE/o11eEj4at2F6h+fg5i1/9kNL2+MIUWp+6H+62
btux4VjnenT9MN3hgd0r4m/kh6WaY1/2YvGSHxbLn51a/qiT3sYPicrFfXKT
OuMfZz/02sJ9+Sm9s9/PDxhT/XG9P83fD/59vz1VpfiC5wf9uCb1nUdJnn64
qbtvsz3Rl/jBdbLgiyCd1ueHrFVLw16RPanyw0PfDXtGkDwbFPM9/yx12O/O
9bf6wTaSH3eNxT/+2DHTctEeaqv7w1bnssNMin90/fH1/P0PKRm0fn+03/zX
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
nQyv5hfrL6Xz6AYZet8OSunr19n/UkF/vOnc7WV0/ifDhDtGx4U/O99rt8hQ
XVjJMyN+rTIcv27xTED03xT6ywvtU7SZzv9kMH5nrX2C+HfIMGh92Yed5eT/
5eg79ubKJBpPWQ7NCbV9Z1JbVY6vxedd/9J5Yh85mh6PWhrF/L8cAypsJpze
Rv5fjn4vzL98p/dr2nL806+JYPZbR467+nPNJxDedeUY6TtBPY2d/8txTbnb
qGSynwZynEkcctGO8GEox5sy272XaD1GchiY7fE2IHwYy/FtESKSaX+byHFe
bXOIKdv/cqxuNw/dmk/+Xw6P4ItJkbS/zeV4P2p/4RP2PSI5Svdscd1Y00lv
Jcfkn+Zv2iT0PlGOj25aPfTpPZWtYj5vGnfdI/nZy1FeEGFURW1HORZ96ZZl
T/TOcqSpFjS103huclzMlZpOI37uclROdvq5iM5HvOW4svBfZX/Cv58cZhdw
PI/wHiTHvbEJV36T/w1TzM+37XgAyTdSjv220YP5ZL84Cv0PPG7L4skExfoW
Gq8ZRvEmVw7XlGbjv5R/pcuhVz5bezzFFzw5Ciu+VLB8RyBH6xbRiquU74nl
8NOu/NCX/LtcjunbtdYdYfU/OXzrr/+6RPa2QI6ps06EDKbzziI5+vccfpC9
RyyWY+H48b+LqF0iR319xp1yoj8ux+kTg74XsvxfjpABpR1SOu8rU6x/3d1b
RyieKZeD65GqLyN9V8gxwntxGot/KuV4kKAReozobynwqqXr94l9b1aOxQus
J42jen+1HGXVo7TY91Fr5Ag/cO/nV6rX18mxzlf8YDH5swY5Xq0u3O9G7Zdy
vC0/uaP8Jfl/OUqebZ1bQv6iRY69ZyMsN7H8XyGflZa73Vj9Xw4nF+tFhuz+
jxxd9EIMGN475OgZnTmzB3v/kwe7D0fVXIheOQ9Hn9fNrqb9rJqH0h6GdyKC
6P5PHozstz6dRn/fQD0PF/jJWuw+pGYe/jY87nKb3f/Jw5p5FjuYP9DJQz8H
y53se9O6edB7Izn5jfCkp+BfI67Ip/jGIA9HHnQftIbwbJiHqclT9iZRPdgo
Dw1jjpzzJP0Z50E2OXxrEbVN8vBxoiPfnt4vmOZhVZCqHasvQLH+r8ePxhI/
8zxEXh/t2Y38r0UerIqdgypJXlZ5UMk8pDY1m/x/Hix+nipQI3rbPOjvmNXE
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
SH8EMXkwDRQULiH7r8amNgXXz06m+n9qvLz8fHMAfW+VGiPigmVdfzXd1w5W
w2NhG3Ut9V+rRltd3m27NU3t9WqIF/0oWn6u6fsb1Tjd2/qCBdEzRI0XRaXn
FNvJ/qvxKcF0RSaNF8rk7/Yo636b6f6/GtJlHntmU72ccEaPtnGwJvpEsPnk
WactvUX2n+H/tVOP8YSPKDW29Tk5yXtRUztaDf8jJ6/pCO8xaqy0k01w5uf/
aswoGryL18uKVUM+eWSgG+EjTg1B5zGFv4me8WoMnLd79GPCRwKjZ7LhpseU
n5uohknMP9dXkPwnqdGs4G7/IIoPHlPD6FTuq0ryn0+o0WnU8hGfCB8CNfo8
tm8zn8YXquFpH3Oa+ytiNZIyrn3RkT8jZfrtv31tdxI95Ux/HB6xireVaiz2
SDnxgvqr1ch1H9OZf0+rRvW7YYOdaLxUph//G9U4meiXxvTJy4Vn5pE/dFqN
8RW5lSsJ7+lqODple7cj/ZWhhuXwfkPTyX5kqhF4bIi4I+mvLDWGX5C/DSJ+
ZjP+XbK/84z0V44aU39fdOXynavGjT1WpudJf+Ux/knFO51Jf+arcW1CoP1w
ku8CNSLDhjt4kn0rZPJ3yf2llvyfG2o8L4+vdyT9cEuNLYqbdsvJXhWpod9i
q+cZ/n4uw++xq0cXUrtYjVMnnh30o/4lavQc6nYugn5/yOi1Y8yKrhQffKxG
eajXOwk//1fDdGqbFkKiV5kazzzrDfsSPcuZflrjO9qO7EWFGpUF+h2WUv9K
NfTmn9N1pvjkS7ae1RcvNSP7WqXGskW1hy6SfatWw12jiWtG+vytGqXpwn9y
yb7UqLFcYb2qtjXZf8Yv1YssDbf/7Hv18SuryJ7WM/1suraxA/k/DWp8iT5T
t5j8ny9MXm30mhWQ//NNjad5MTFmpA9/qJFfnG3qSvL6S41F32cPvUvy1KjG
dNt/SjqT/tDToKxY2yeY8KmvwaDYxxka8mcMWDssXDmT/B9DDWzO6SmH0fhG
GrzPDxkso/6tNNja/lzBf4SPNhpcW9l6/E2KhxhrsNbiug0/HzbRwH3pxVMG
5O920GDs/AV+Wfz8X4Pbk/QWJPH8Pw1W+laeG0r3+c3Y9013Ouwl/7SbBlZB
Rk6g8cw1yCp2bnCm+VhoYH6u2czfvP6vBiapIVpz0h89NTiqvysyi/zjXhq0
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

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
/FsYgT4dQ7/L1YT+4gjEbvH8a0D8XBKB+ZcGB3anviqLwIbt31s+jad9H4HW
X5q1ucn8hsoIRD7JcnftyfuPgNp3zJpixfuPwJ3nj0vd6D9VicSXRXUj794i
/ouE3vVsx+wnlP+RuFa//sNt4mPNSOzF50FnWvL+I7FvquHBUeQP3Ug8CbjW
vI8D9X8k5uRP77+X/GUQiesHdZ7oUd4iEklH5k0sHC/sxygSOwM3jCgl/5pG
4reoMryM8twiEgvHL//kyfVaR8LY7O3Yrjx/+0j0GZcX5bqJ/rZIfCwv+mnP
9XlH4sBbi01VlF+iSPTU6DZ3EvkjKhID7d7E5DXp/0io6ae9GkD/nDwS+SF3
f1QzvpAZCd8/1c2+kj9yImEX/c84Ooz+ikisChp3Zz3zDfMicTGk6zKzm3z/
kbAusM8d1lGQH8WRyLjld/zVM8bzIhGqUzK8dS/q/0hMOF5/v4z+hvJIPD7/
wcWc/tTKSHiMnmnmNZr6PxLjhiy9/9KP8j8SivHqpyppH6pEwSs56P0pbYG+
ahQG1x1pTNUQ5Jd6FHat7tcnaij1fxS+7PlTHXeJ8dEodNkQEV/Jtm4UWv4b
uaPLEPpLojAj4dIfW85nEIWT6yO69Rgo0EMUJhbIPvwgnjKKwp45+gMdtlP/
RyF8lvUCFzthPosotMqcc2AS5Y11FP5UddUdfZb3r5y/5NNraXvivyi4XVP8
VeF7845C/mC95tl/qP+V/Rd1Rgw9SP2vpGd99GIe86vEyvV/8bgTNUkYL4/C
pxX9PvciXsqMwpLVU5v7UJ7nROH09sRD7V4K9l6ucv78vn2+vhDo50VBQ66z
zSWQ8dso9LrY9+C2E0J/cRTCYq/VauTx/qMgebP9UnIB7z8Kk/t1Ky6/JvSX
R8F07u0HuXKBXmUU/vack2U+jP6uKFy+1rte7zrxXxTcHzeEJuZdE+4/Gp56
TsXL9YR+1WgEzdA/fW2b0FaPxivXkPamR3j/0biZf3jtB56ndjRUwxtS5b8F
+rrRCDnebZZPAePl0Zh5eeXN41eEtkE0cn/PcEu5w/h5NN7M6Le+7LHQbxQN
u10zPcf/o/6Phn5h6NvDxIcW0eidciHnVTLxfzSGxI2dfoD8bh8N56rJXwyb
/G3R6DtwW4uuQXz/0TDs/WpxcTvefzRMY61EBTcE+lHRKPjP/bUN6YujUdOp
2Ydm9N/KozHnQJXclfIxMxoa+wvkfluF8TnRKLk8sNtqyrvcaKw2/DlnD+3d
vGgY9HL/PKU17195PhEGxpuIV4qjsSFiwvV15dT/0VgSfN/5D/FOWTQi49Yv
rGe7PBrzu/TunvWW+C8aJ2Y01xrP+WqjEWpgUzOlpdBfHw33tp4etfRPqMTg
byeDwFZl1P8xuPt48r6z5Hf1GGx8ZaU9k/hNMwabE1LdllL+aSv7+0zAI9oT
ujHQPqvT6SLll14MsgeNvWfCeLRBDPZ4Nb6R8H0jBobRGs49mvx/MTh1xOSE
2Jf3H4PbWkXbJuTz/mMwdLmLYir1oXUMOvxe87f1bvp/YrCpn/4MD+p35xis
rliqW8Z8Be8YtHjlNzqe8SJRDGa0n+l9mO85KgZiP8WC0dRv4hjE2vxn+pn6
RR4DrT3zjliyXiczBtPGjfxuxvlyYmDTbn57Y+LLXOV8w2aZrKL/Oi8G0d3d
DsdwfYXK83t4dtdR5vsVx+D4pJVDVr6g/ycGxzatHjKB/u6yGFicNa+aZ0v/
Twysv6cXX79P/R+DqfPfHZ5O+6Q2BkmjfXsmD6T+j8FNUY3jZParxCJ+fXj8
kNvU/7HQyF7UI572i3osOt9b/aIZ8YRmLPbWrzO+ncL8sFgg76OkGe1x3VhM
6vfaIof+cb1YJAzrG2bbwPuPxcGyQ4/PFQv8gVjcjqttfrMt9X8sthUf9XYr
oPyPxfkBeeOuMP/KIhaPkk+p7CX+sY7Fn2DPdnHkD/tYvO7Waauc/gbnWJyN
bFT/yPiodyxajGxYY0y8L4qFqPks2xvkj6hYXL3a22oM70cci98xT7reoD0j
j4XXgeyHqmN5/7GoO6Oh20h8mhOL0xsTji2Q0v8Ti7l2v841Z35/nvI8j3rt
3t7k/4vFR5XrtTn2xH+xePe++uwi5iuUxOLYtJYr5xGPlsXiwzDzwppS+n9i
0Wfb5fhH9D9VxsJy/tsTQ5jPWxsL39FWvo3Ur/WxmGib6zORbZU4jFDtkGpg
Q/9PHAyC7pYMo35Vj8PXAfrexsQ/mnFQtF5X1Mj71Y7D8p3xV6aOIv6Pg2Nc
3ZZz+6j/4/Cz5WStwArivzj0XT79kgv9BYiDjuRar9p5gvwwisPBiPDic7Sf
TOMw8mOs/nvmR1nEYW780ai/9G9ax+HwO3mrVNbD2MehuUqFz/A46v842C08
GrPrEOW/kp5B38G3KW9EcZhl+PfPk/4C/ag4NL6oTQgiXhEr5281boKVLvV/
HDqvrK3sTryTGYdnM7O8e7KdEwcz6x87RnJ8bhwGhPlEWHO+vDh8nFF9oIT0
CuOgfdDt2kHaK8XK9d1fVbj5CPF/HHxCqjfrJFL/xyHNauONPOaLlMfh0Ve1
xDZN/t84JA5/c77ncuK/OGzZsr3bY55nfRxCirrvaDpvlXh89z1fmEl7TTUe
J24MLZNSf6rH47h8zaWsvdT/8chvNaFNF9LXjsfs3RMMb9J/oRsPmWmbKxO+
0v8Tj7zZBauGUH4ZxGPo2Q2bljN+jXhcOjdtQzvep1E8bvqY51WwbRqPkpj/
Vqgspv8nHkXj49QraQ9bx+PAmw63Bh+n/ycek5Z1/V1Feeocj6w58v5/6U/0
jseKAYttrzD+JYqHld4vmxaU11HxKI29Z+XG+Jo4Hlft4/dahxL/x+Oc2ffZ
6xg/z4xHjz+XXp5hvkhOPLSvv7qqy9/nxuNoccH0w/R/5cVD7rPRNo/+48J4
mEye7WDP8cXxeDRzZI5eAv0/8eidcSldk/lWZfEYctn1cRv6o8vjYWHhlLWL
/sFK5X31H/hoLusXa+Nxo9fNH1+ov+vjkXrATM2gD/0/CbCPHHJyEvPDVBNg
dbnmSgPtEfUEOFZvqjhLf5hmApZ87V7Uiv4Q7QSYZy2a8475YboJqJLvcO7I
/Fa9BCRqdC+RM/5rkIBt1vPmPKpm/C8BxkPuP22k/DJKQOCPBw7es2n/J+Bw
77+ba8k/FglQi2rzRUx9bZ0A8cRPd99HUP8noHlwrbjJf+ucANGz4wvNWJ/n
nQCLiYPnRFBfiRJg2u7G0PX0H0clQHXezrerWa8kTkD1vvhT7k34LwH3T9os
FbH+MzMBGrp32q0N4v0n4KT+33FtSD83Ac1O5sXbMH8wT7n+kmOqK4lfChPQ
ta1+1XSeV3ECGnQv3CinfilJwLMXj8/ETOL9J0Cna2sr3bvU/wlIkOYEGugL
/vrKBHR4OD9z4D3mOySgv2JBdael1P8JmH+sk9pu1jOpJKJYtuNvR9Y7qCai
62w9q7XMZ1NPxBP3R11aNaP+T4Rp9yV3GlhPpJ2IP8P3bt5fzfhPIm76rhts
/5jxn0S43lS9mjmS8Z9E7N9o9NWqkvG/RCw/H91iMutXjRKV9lZ7jbGsrzFN
hKPe4/BDzG+wSMSPUN3GCsb7rBNxLeuaUz35yz4RihYWs6qa8g2U89mXGbRn
PaO3cn1B3V8k0r8gSsQ0i9fvfzGeFJWIGots7YNHmI+ViJ09nD7OrGP8NxGG
XSc9eD2a+j8R8nP9ht5ivWhOIu7uKmjT7A3jv4l4MOmG13XmO+QlYvI8q/BZ
xNuFiXBW+x3Ri/HO4kRYOnfaWe/E+E8iFrrsMWjOfLOyRKQaV/VSZ7yoPBF3
3Jtfyg8W+isTofk9ZrbTW95/Imau7fyfGuPp9YkYnfTvviv1jYoY38KGfn/H
fJqWYpTP/bq1gvkhqmJ8mbdwhRnzAdTEuJqRvHUd8/3UxZhkL9Y+Sf7oJlba
03Uq25kvqSlG356uV68x31dLjMWHvlf8pT9aW4zOXk6hbbsI701HjLENo/c1
5QPqijGzYXOYGuuXRohx2LvZgnjml+qJ0aLDGOlirldfDJNex+vekz8MlO3q
KVUDiHcMxTh3v2iWO+UHxNi0ocrwBuOps8WY7dXHYy/9iUZidFTP7nuZ/Ggs
xtCoDrJ7JxifFKOH7ZcTa38IbTMxfowM/RrH+jgLMVZu/1r3lfFzSzEObX82
qt9Bxq/FuJyZ1b6U67UVY9afqoiLxEf2YoSt2/npEeWXoxiaPbrah+QyvimG
ItrqrRG/t+AuRm+bswezh5DfxZgzVs3ZN0kY7y/Gqs+eRpc+Mf9KjJKvGtpS
xgvDlOPrkyrPUt5GibHj+fTbcdRXcWK0beuUsIf6RCzGI1VHH2e2U8RYKr96
pjPHy8WY3Pbv026U7xliDE4dP30X64kyxUho2dqjbI+wnt1idP/878ZuE74n
MdI7/GzWyPjKQTHy2mdJvpfyfSnbU7euWcx6pxNiSNP/HL39XBifJ8aewbrH
d5wX6OeL4fC38/Vs1lMVKu/nRNb3L3Lh90XK/dvGpj/aJrSLxdg/cG/BZn5/
4JYYaa9b9H3MeHSJGLdu9vlczPy7UiW/R3fSaEb5Waac3ypA5TT1xXMxmvk5
zfTcwvcrhq+Ow/HRfD8VYixMullyi+1KMaIOHn8zzUcYXyXGgBY+NSupj2uV
65W9vdSJ9mKd8j7KR+U70T9RL0brxw6ntg4V5mtUvmer49c/05+mIsGQmd+e
FzIfoqUEH4ePnjuG+F9Vgto7xmtXMX9RTQLfV7cnjac9oy6BhmnIET9+76Cb
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
VlnqM7/SWopJxf7VI1ifbSvFhobKQ21SWc8gRdzEl3bPmC/tKIVB2qY/2fwe
hLMUeCB6fpD34y5F6vI+PSexXsZbikUTb13ezvopfyneje304wDrYURSzPty
o0f4bKE/TIrug2a5eaUJ7Sgpmm84M/wo7b04Kc71Mg8ayPibWIolHeWDepN+
ihT9J2z8PHIX7X8p8iQFpy3YzpBCoXLvtMpD6n8p2mzXchjKfObdUlyfkd+7
ZZP+l8Jz77NHO+mPPyjFwg83JVXLif+V5+FhceUg/YMnpPDqeKePJ/ebp6QP
LIIL8b+Sn/ZvOVx0hvE3KV6ZLF6zQiHQL5Ji4qbAV/9Y31ssxdoeWwe+shR+
f0uK2kG6BjNZv10iRVZg743VzEcsVfLPOmuDr7to/0vxO2GtzYz1Qvu5FKev
9roW/YbxeylmOrt+iOH7qZDi25egKe8Z/6mUQqX/4Tp75mtWSZF9x37cWL6P
WiluF/0nqeZ51Umx/9aOj9f5fuulGHnFern5RYFeo/K+1RZsc4yh/pfBISgw
4TH9hS1lmLjo6LbKq4I+VJWhZlHUxcR4+v9l6HJoQPhUxkvVZeiY/rxTOu2D
bjJ0HV38tDv1gaYMvQcEqvakftGS4c/bBstujFdry/CvuNSxgOvVkcG5xaes
LPozdWWYOqw+0oLnM0KGwoakSb0oP/RkiCmvnNqW/mx9GXKudprbL0poG8jw
8PuigcXMfzaUQcXz9tJ81o9BuZ4Ton8erkJ7tgwitTD9E9RvRjLEeua2ieZ6
jWXo13bQ4KNbaf/L0Prm543/Md5lJsPQnFW/erB+20IG78yoDQeZf2Mpw9W7
uQXS9/T/y7Dqx+hll+nvsJXh1ZaQi4tYX2Uvw+AL32e9b9L/MrR9cnibPfOP
nGXovzjy4WT6B9xlcN80Qm80297K8RsrA1rQ3+0vQ7JXz+EP6I8XyfDbWbTF
gvUIYTKcfhHT2orxpygZXnxcfNCG8cE4GVpca3vwDv0PYuX9NK97eTeT9r8M
26r75h/g99nkMsy4X1EuZf5xhgzana2TvBgvyJShe8fTLQ+x/my38v5XOO2/
z3quHBk273taOI/fPz4oQ4fgUp0ptK9zZeimMyS7Oe37E0r6A95W/qE/Kk/J
z5OczG7we6L5MrTJrnze9D2DQhnsbcwPV/H7ZUUyfNx9VyHj+RTLkO/lM/A+
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
LlMXAl59FbRr/BKT9+if56egm3MPT7RFv3J/BV1K8BnTo7m+i4LurHmyaAbk
5yCGj0F1FkdgHwxW0KeYf4sGoL9kiIJqTD4UGoK+7lXQ65x+HySwF+1X0Fzf
iycGoL/DQQVtsA3Z9xb4c1hBFZVZK/zQXzJUQTO7V5y+BP9bmIKe6lfe1gX/
ilCQsdeK+Gb7fqSCIkYcCxwFeTNKQQEV3Qa59YL+z/7naLjbbvTTiFHQ/lc1
YZ3Qrz5WQdfX/Om7HPV/ziho1ch/rpXodx/H/vf3ElU/6DvxCqofIHQ04HHz
+Qr6b1uGXkfwdyGjV28q423gfxMr6JiJ44Qp6A8iZfA7Vzehpw23vlxBW6bS
2TTYZ5UKujY4NutuKuz/Cmp3qfhWL/jLtIweCLodWyfl5p9XEM0sU5+A/zGR
nb+toMAb/rQkBn/GYdKH8G8kK8jb+vjCOIxTFPSiRWZ1KOanKmj2uky7E+BH
1xh+fZ1f0U8M/q+gA9EDxyS/4PZ3k+GL8YpfRw9w41sKOtrK+osO+ktmKGjh
1y/25u25/d9VUHx1N8ODqEedqaC+SbdF+YDnLAUZZO4gLeILshVU1N3XPQ39
cXPY/3dTxghyYf9X0MaA7ZOjnnLjPAav67rpjEO+R76CtjeYr0npw61fwOjl
4C9tNaBnzxTk33n/5Emgd0UKOlXfx6YO/R2LFXSuc821BNCDEkZPVnqvmgl5
o1RBH1f9XFyJcRmDd4czG0YjXvytglqbhFxxAj6VM3zr/mbxD/SXrGD0pbVb
6H7YZ6oUdNv6s+CAFfe9jwqqyp3Z6tc68H8F1Va+OZYGe/AXBY0NnPnKGvSh
RkHd5qwPXI945FrGLyQBYSNRr7KOwW9ElYMP/JP1Coq5vcVLBXmmkcHTwm+8
O9CnmhR0434q7xv8k78VpDbYsfkP7MN/Gf7sKCoYCPzVUVLqo7Lpu+A/bKkk
nw2fzCXIh9BVklfN2+or6K/dRkk5ga6O35r9/0qa7//rbQniwfWUNDN6x/jm
/tr6ShLf7x/R3F/bQEkvsruYTUd/7c5K+nUssrBZ3uyqpM5rwu5saK4npqQ9
M64UxKC/tpGS3uSnhK4D/horKfe35YwOoHcmSrKJtlobj/5wpkraWrd883Lo
W2ZKmuC6VdMP+UzmSlpcmNMoxPlYKKl/u4npeZCn+yup0v+0iw7Oy1JJ+jZD
+zT31x6kpHGO7ev2Iv/HSklpho3z+gI+rJXk7/782/dB3PyhSjpYLox0WIv8
fyXNdb+76jbksxFKUn38uiuvKzffVklnDPNDPqzjvj9aSfFdfnp2xP7GKule
Zfcj9bCn2Ckp4E+T0W/cp72SOn4fkHID/MVBSQbnHjQ1oD8sKelV3lfBWtAj
RyWNXLKtOCcJ/F9Jh9sdetYF/RyclOQ4rNC+D+zHzkryvXh9+3o98H8lfSkK
NDoBeuyqpCDeql4W4LezlPTXK3xBMvDJTUmCEN3iI5Cf57L/jbLkJ6JfkbuS
Ih6Mqk2B/32BksrydLyqIc8sUtJE438p3ZCfuERJl2697Zqngf1fSaL8Hk/z
18D/rySJ9PiBBagf76Ekh5zWzwphP/dUkuvroe/1sb6XktZY/JkUDf64lu1v
7E0XOcbeSrr/1UzfCvN9lNTh6vmY8/Cvb2TnMV5yyQT15TYrySPvQcu1avj/
2f19a3zliHgPXyWtur8i6xzkHz9237eNhswCP/NX0m/HLmdmQ/4IVNLljR8P
iIO4+UFK0gnO14uEPzFYSU8DfY2ydbjnIUqaXDqrWwP8nXuVlG+2/dG0d9x4
v5K691QUHoB8elBJbhNFil+IlzispE78LZFf67lxqJJoy07pkjhufpiSrDtM
4J9u5v9KevLSaHcZ8CNSSbZZ/Vb/Az5GKWlOjy8Sd/i3opW0rOnfVQ/AZ4yS
TvXK7rcE+kaskrQHU1cXgb6fUVK1x64xGfDHxSlpkPeH7ibwD8cribf2T9uO
XTl84zP6tb9f/HZ8T6gks+EbfTogHlWspGt391xwRn09qZLa9EjJTMV8uZKu
80NvFOK8lUpKt4oPs4D8rlZS9mpNwGL099AqaUBEw9sXsBedV1JP28sbgoGP
iUpakvVpdxDssUlsv1u/pSyGPTyZ0SfBZJOO8N+ksPktp1w1Q3xUKttPU1BG
BA/+f3ae6wcdskX/mjQlVa0yuGSB87rJ6OuLuRsPgd7eYvTwaOe/v+BPymD0
53Vx5Dzw+7vsPOuGZJ3swPHjTCXtXrprWiPqSWcpyW7Oph5L0a8wm913P63a
BPJ8Dlv/1KIJO9D/IpeNpdNbxEP+zFNSRiureTtgP85XktOtd/E/4D8sYPRi
o+pEDsbPlNR65jqvt5AXixh9qT9xvxrycbGS1mbVVuxq7rehJGFj+lZbnF+p
khYFGo5yRnxHmZLC49oNPwD++pb9n3JhYWQ37n/LlTT1M6/dsDRufgX7/owP
rsaIT6xS0o3s6LtGsD98ZPxUb6K9G/ChWkmxpytT8iC/fFFSrZ1A9gv6XA3j
nyE2/wwWgv8rybxNn8vvh3Pr1ylpeNEss4/ol1KvJPd/v24sQL33Rsav2tTu
eWcP/s/g65Fl2Dzwq99KOnKobVgy5O2/SkqxDrMYCHlRR0UR/Xp+vnmCm99S
Rb9zyxoI96OrIgMdnRlRdRx8tFFRkM6dfea4j3YqUnQ2W2g8hpuvpyLDpkEd
Gvcg/19FKRaVewYg/sRARclHPPqfhT2gs4qG3fciR+Sfd1VR7lX9bpbgr4Yq
mlPlNP4Q5HMjFf1oq3xzDfhmrKLJRq6O+0E/TFRkYbphYTHyz01V9KRyaT8v
+PfNVHRj+Lu6LiHg/yqaIr5R8xXyo4WK9Iwq37vC3tZfRbt/pO19gfoNlir6
fGqK00nw80EqMntxqWsa8i+sVNRVeS3EGPH01ipy7jyjcHwJ6v+oKMrR5NsP
Ay5/w0ZFxh1b3ckAvRihIq3p3/A24Ee2KnI4Iqo9r+S+N1pFV2uVOd9grxir
osJnk7ISYK+xY+dxp115MezJ9ipqlz/yqxXol4OK8rv0ibVEvVpi93nGvfMo
xDc6svsZMCf6PeShKSqynj5zlvd+br6TivaqbZ43NfdHV1Hc6K6ZAuiLLioa
GP5PsBb5IK4q6r/sXNNg4OcsFX1w75fVAvEdbir6/ir7nyP8oXNV9P7ktjdz
cZ/uKjrnIFjYGfC+QEWi9X/99sOfu0hFYbf7zM+HP2eJirL2Dz/VCfawZSoy
PeJZFA97xQoVLb0RFJrVzP9V9NUj7/lb+FM8VdT395BDTfvA/1UkFsb80RnG
7X8t26/PYoO96FfqraL124Z/PYP6Zj7s/waNTI2FPXSjiqKdAv3UyDfarKLW
Ga/eNSxE/p+KzoyQjgg34vJ7fFVUUm3U9HA6Bx9+Kvq789Xz/s32fxX1bLQ5
NAL6VqCKdA4O/vTfWe57QSo6GRFd+A73E8zGPsZJuxA/EKKit92MvrVFfsJe
FVl1C23o3oNbf7+KLvcufXTnDer/qGjU54pf41JQ/0dFrjktB4/HOFRFkwZ3
S/2N+WEq2peQIBqO70WoqGyVOsUQ60Uy+C+R/hTgvqNUFKNbIO4Oe1G0ippa
BUeMhb0zRkWfKn62bg15KlZF1RNnplhA/j+jokNBiZVncV5xKtqqHtZmO84z
XkWpja1KGnHefBVtmXtq7R7IB0IVjX9dujgQ/iwxg2+5c1gS8u+kKmrlaT1Q
CX+vXEVH+d3W2tpw85UqGqTfcV5XOQcvagafqpIbb0E/tSq6M2DUufOQj8+z
82xouf8+9LdEdp8mCbcGQ99MUtGaizHzviP+J1lFLW4fuBuA+05h9Glb/KJC
xLOkqqj91+3Tz3eD/q+iTYmTbkY317tj9CV3Tlo1+hvcZPvd7OtwD/rqLTb+
3Ve3AfiRwfB/kFR5APLIXRWtHHrESAT9IJPxg+XdxyacBP9Xkb1doWEE9MFs
Rm8WtNW/hPvJUVGOsrbeAfk1uew8Z80KbAf7V56Khiury2Mhz+SriBeVKxyK
eIoCFU3oM37/dvCvZyoafN4yPfE08v/Z/516cGYP7OXFKrp+fcr36aD3Jew8
uwmKj8HeXqqilo+OeV+DPb6MwbPPX5vDsNe/VdGRC5vGa5v78ahoc4X8ylH8
fwXjF00rmtLDkP/P7vf8ksIJ8I9+VNGKq4YT3gP/q1UklDzfs2Y5939fGP/q
/qCKB/pRoyJpa57Rz2yOHtWq6IKpfUMu6Fedim5Gz15QD3tmPaO3Mo92ZbCn
NjL+/TXIdT7wo4ntJ/DYismwl/9W0SJ9g513QU//qsjnXVy/Wcgv0lFTjf+e
AU2IH2yppqWXnB/WID5bV002kZKePxA/2EZNXbNzVRHYbzs15a/c82QQzl9P
TX96Xf9xBPqqvpoe7THZuxv7M1CTW1JDqQ7GndV0uK6b0UzAc1c1vbBpmpAD
fmGoptIrM/aPRv88IzVVX1nt+w32FGM1GR55cqAO8oyJmsz7xURGof6hqZom
6jw9uQ78woztf2GG9SL0nzdX03iXxBG24McWanp4cuvcDy9R/4e9n9+2vJMJ
+L+a/jv/9lMp4p8HqWnuNo1gaXP8v5oWzmjlfhDxdtZq0vGeG/se9biGsvOd
EXr8K+wbNmq6UqM/KN+cW3+EmtZ7Kewvdefol62afpq8WCkZDP6vpknZ1W1V
Gaj/p6ar/14k6N5B/T81mYrNIoehv4K9mgaOWFG9D99zUFOPxvu6tv249UhN
Ez763+gAecpRTfrXNGb7kE81RU2+VsXj+Wu47zmpid/xZaYb5DNnNW0//XR9
c3yAi5qCn6589AD5X65qKl+RbTkK+VKz1LQhLXd7cRP4v5rGFO1smAp/81w1
bbkQfqkQ+Snuauoy+dSiO+O4+QvU9C2AFzAW+T2L1DSVJ42LBT1foiax/33f
Dqg3u0xNiUn83G+vUP9PTTPdf1v6hnDf81BT6GwdES+Ze+6ppm59w592R365
l5q+z3n6O/om8v/VtFn058Jr+Hu91ZT0quDQhTOo/6emC5L1yvlWqP/Hznvo
dd3hD5D/z/Ap4OO+46lcvvZWNWnfz0paYIP6f+z80kddvs/jxn4Mvhe18ZiD
+q3+atp1aebGKpxnIMO/0UHrz6L/RZCaAq87eOy8ifp/aqo4uf/ZJfjHQ9Qk
yCl/exL52HsZvGT8l/L8OfL/1TRt4p0EW+SbHVRTb+fH005APj3M/j9qhEUG
6r2FsvO5ce/iVsB7GIOHHM825sjPi1CTS+fWI+pDuHEkg+9fY0pPov9EFDuv
3w2zwpAfGM2+96xbw1CsH8PgRzPh3EfEB8eq6cPEoGNLwR/OqEkv00o4aws3
P46dT8BZi6mwj8Wz81zj5nMc8cN8Na2Z6ffTDPEOQjXd0Alb6gp5Raym2Wuu
FE4pA/9X074nfi6lkHfkarpYHDimBGOlmq4f6V90+B03X62mU5o/xT3xPa2a
dshnXTBH/czzDN+2rRN8QL2hRDVtFU9I/gt6n6Sm1jfytAmA92Q1/U2qqRoP
+S1FTZ5Gmz1cQf9S2f0/zgjN6cjh8zU1/bvSy+8K6Feamj6eFM92Qv73TTUN
/5CoHwn8vqWm49Kv0m6wF2aoqfBQ0fajqHd5V00pytvGIxGvkKkmC8VhM7s+
3Pws9n6fwuXfZRx9zlbTfIfz4asg/+Soqd2rpKV3IU/kMnjftv5KIO4nT00h
aau+nYX+kc/uo86xqCf6cRaoSdX2w5VC3P8zBt9DnKudoC8XqSlI75nHWHyv
WE1nis5sGIbzKmH7b6xYZ45+1KVqcug1ZPUm7K+M0SOB28wY8MO3apryanjm
CORPlKvprn9iVCfIXxVqsouY3KIv4tOq1FS24vIKEeLRPqqpyG5Rnx6g79Vq
ilScHb0e+usXdv5t18zrjOc1aso1WOv+Jxf8X00vHSJmmcA+U6emqENrDI6b
cPutV9PK7y/nVEL+aVQzfeDg/Ejo401s/dsa01HQH3+r6WbS09kBqDfyl/Gr
zQcW5oJ+6GioKLL99FfoZ9VSQ/2srJf9BL/X1VCFtVO3GbjvNhp6ZudNSajv
105D51oG7O4CeUlPQ8uMB5T0Bj/W19DorSO1FvC/GWhIMHZf6iHoJ501NCYp
dmcrwEdXDfWoNrbzhvxhqKG/cU9u60BeNNJQ96hTRfaIHzXWUGdpXPow2BNM
NDTf5c/L3bHcc1O2H9slRy0hj5lpKPNd8PwMyMfmGhK1W9f/qw/3PxYaCs9a
bbN1CDe/v4Zcf6emrod8bKmhubM8nusiH3yQhlrunb35E/KrrDQU77nK0R7+
c2sNdSiu3N4J+vRQDc1b+Wa2C/itjYYO5E6e6LKamz9CQ44rJE728A/Zaqjn
wO1PlsMeOlpD+yK/ulkiXmSshlq493ZfN5Sbb6chy5Rn5wzU4P8aGh/X+ZoC
+QYOGvrYNnzTueb65xrKVs/vPdmZox+OGuq/PeuBAejXFLZ/6wtjxiFew0lD
V6/XJg4EvDtr6PefNhNuWXPru2hoVpxsfEgE+L+G6lXDujxqrv+joS9NVdfq
QW/cNPSq1Wbz7hbc+nM1ZNKxXfg1yCvuGvKJS28fh34JCzTUdpin6RzIP4s0
9OtNzdl5GC9h65ltN1+H+cs0VFb6pPQsvrdCQ4M21Ba3x3oeGjp0qE9FGvRr
Tw2d19//OQj9+7w0JI5/1WXqcfB/Dd247+/84D9uvjc7/6gQU+Pm/D8NrUsJ
H2yH89qooeeOc/c3QB/drKEJg8o6dMF5b9VQyt0HjxMRj+Wroce22joZ+Kef
hvZ266t3RwH+r6E8vdYjLbB+oIa2btPzeQn7RRDDB1FcmwD4Q4IZfNq6ha8D
PQjRUPvYjsGx6EezV0OrtJcfTUd9hP0a+qmn6tAf8eUHNfRfea/7DvB3H9bQ
QSfJTEvow6EaupBoUOWF+mFhGjpmInjYD/QjQkNP23T8YAt8jtRQ8svjNALx
CFEaanP0Vcg4+O+iNXQyY+ZmFeh5DDsf6fg2x2F/imX33XH9quOo13JGQ8Y3
Bl2vhP86TkMeju8Gzm/m/xp66ffkcDHihfgacop4u/4d7N1CDY3a3nr6ScwX
a+jMWK3HUvhjpWz9y003+sA+KNfQjEudmgxgv1BqaNMkYe7FePB/DdkGnCue
OQD6v4aOGL/99QP2xPMaep2x3WlyL+T/a8jUW/R8SjHq/2go8WrCgzbg58ka
Gtl9xa+boBcpDD/jXd+0B71JZfBmPWDRZ9gHr2lI4vd4U1fYB9MY/VCWPIwH
vt9k62d3KE6vRv8LDanN/VZUgJ5kaOh4+4YnqyZD/9eQsIn6vAD8ZGrohGVM
5E7EI2QxeLKITMg9BP7P7tfLkn5Af8vR0GztklfjkW+Xq6FuLQfeXY945jyG
3+2HSp1sufn5jL51cQ+1gHxeoCG7C93fLmzm/wy+L47buRr8qIjBQ+t1Ex1g
zy3WUOjIfXMrsX6Jho5WtT/jiHogpRrK6vtCMhbx4WUa8huiu7cPzuuthjz1
ehvcQn5AuYZKx6z/tn4s9H8NNfzrEdE2F/xfQ30NlvJzEe/xkT13n/rwKvyV
1YyexYkmyBEf/kVDnUyfx9jBf1ajoevpQSdlyHeo1dBDxenwepxXHbuP8Odz
eeBX9Yx+PA8dEBMA/Z/R4+0vPk55yL3fpKEuLR7cb3kZ8f+M/p3RpI2HfeUv
28/oxXa/7nHPdbQ0pwtvceEexP9rKWpEwM5S2Ed1tbRlt1XDYsBbGy2FnB21
7wT8ne20tGHVv3QZ8F1PS3+3BajOYqyvpTZzrDdcnQf+z8bJFv0cAE+dtVRz
7N44OdbrqqX3HiVPth3j9mOopeu7X1xol8+NjbS0KWhQX2VH8H8trTNIan8S
522ipSKbz32y0rmxqZbmxr6eEAN/v5mWqOJygAH0AXP2/vgn/PeFqP+jpUs3
1v3NnMG9319Ltg3btXkXuLGlll5b7f5VinzoQVpyXhNWHb6Se26lpd09nh60
v82Nrdn5qlfNOY56AUO1dDP/xrAfzfl/Woq0qFjsjfzIEVoaVzhgzjrI97Za
2mnnMvE55MHRWvpjmNjiPeI7xmopNE/n2ljgt52Wfkr9eX1h37fX0ooZXcrn
oV6Mg5aGPczoHQ79g7RkeWXCPovHnD7oqKXzpzYF6APepmjJu/8Iz7PIl3TS
UuW5Z+cskO/izO6ny5yP7yAfuWhpR3Lu7GDI565aSpnm+7W5HuUsLXW8NdJd
D/zFTUvVCf/d8xjLzZ+rpTobUVsH+IvctbRAR5y6GP7YBez/Rzn/cYc/epGW
NNP+G/62APl/WuK7X/nWGf6PZVoyObzvpD/yi1doaUTP2LbScMT/aanpvvmY
FYh/9tRSKxvNnxnw73ux9WoS+KtwP2u1tN14+pFuwFdvLQ2fs9Gu+APy/7T0
wP6o0TjkM27U0sY7psqOvsj/19KVOvNr87Ph/9eSbxdXXTecl6+WNkeeqd4B
e5WflvT/9fgxDfkj/lp6+HTcRE/E5wSy/d9roP8wDtLSWM0xwzzURwrWUt90
18VPUQ8jREvxN0e9WoV8t71s/5tnL7yGfMf9Wopelfn0MPK5Dmqp06rg6FLY
+w5rae+ea3nPkuH/Z/fbM/XW8OXcOExLyqwCx8tp3PwILQVvW77+CPKpIrV0
PH2xNnI0t36UlqZHFte8COTej9bS256nb9zejfg/LR1JfzBpAfK/Yhn9cZHV
ZDzgnp/R0vPbB7OTEY8Sx/DT9nbuPOgT8Voa7NEqrT3s03xG39KG/ctC/Qyh
lsrml6n2A97EDP4zXR71QTyBlOHH+nVDo2G/lmtp7Z5LoxIgrykZvUkJ0V0N
fFBr6fbIYTPvAX60DN/v7ptzH/rmeS3ZOSbNO2cL/q+lQdmBmcaQf5K0NGFR
38lHIY8ks++VRB5ORf5oipYe+z2ecRLyTCrDn9AVF16gPsE1LeXGjCz3gj02
TUtZTfU9DzXn/2sp/9eOrz8Rf3NLSx+u3GnTCf7DDC0p7sTNckR9lbvs/s0m
lFlAvszUUvKG8MvTQA+ytPTv1CVtPezH2VpanKWwOQp+kaOluGjluG2gN7mM
XyREu3w+j/45WpL2eHr/L/pt5GvpwIGWhunwtxYw/rMuotdBnOczLW3NDKmb
inpCRVpaNfVDuoM9N79YS7LT5kNGN9v/tTTqymVxEey1pez7VyLWfkc9njJ2
P4dvjrgOefutlraJ/4YcGwP+z/Br/ewVs0FfKxh9/Tsv+zDmV2np0OwOk/5B
3/uopYuHAw/o436qGXwaGk4RIf7ni5buK8J4o3DfNYz/jbYb0h7xXrVaKm+5
uu++saj/o6Ubj14O/Ap7Rr2WbsUkef8FfDSy9TbeffsJ+YFNWlr587NRT8hX
v9nzKJ6THuJ//mppqHDMLVvwX50E+i/inuFPyHMtEyjgm87aWYjX0U2gMc6F
S24jvrdNAp3rnBU3BPp8uwRymivjJ0P+0UugxO977W6AH+snUC9lO0kj5B+D
BCoo04raN3DPOyeQXm5twKkT3LhrAj1cbtk2qhU33zCB+v1X0XMZ8uONEijv
wsIxwYjXNE6gwc87RKZBPjBJoHtb1w95h3gN0wSaUsdbVwX/gVkCtb3XJnY/
4qnME6jFiP/r6crjckrbMCWMLEnRIksT0oJSjTWXNCTZUpayRZLsWSZLWT6E
KWuyVnaK8zyHQoyMfYnJlmRLkaIhhohQ3/njvfrz/N77Pec8z3Pv93XfJ/TN
EuoPawXuq7q3KODzbRTkOxi9Gs38Q1sFXj3/92Ad+yFsFVhZNjiRSfyenYJ+
jTzePOS1g4Ln38dNMyV9BwU5SrsTccRTd1JwtfNC958GjP8VPO4XP9mY/oOL
gvgH9ccUGXD+j4JcozU5temfd1HwtE6ueeQrHX03BbEVXSJCuL89FJwxraoz
nv0u7grGpP1r0Z35XCjQ8/X/Fkr8oIeCuku7V03apPu/p4IvV6MKFPqrfRV0
Sm4+5IK9jt5LgXPi7T1W7G/wVtDF+bX5L/V07+ujQH+F1cdS8ssgBce/1Frp
yHrvEAXXs1P/+4Pr91XQ9Fgrr23Es/opWP76fngp8WLDFfh2WLHqW3X/v3Ye
ATWWlrP+EqCt1zI8ZRH15WgFYnXa73Opv8YqWPk04tA1zoscr8DllMnbMc10
8jZBwb7AlWNNeb9gBT6nhzU+wvp9iMZfvVffeEd5DlVQ/+j9EROI/wlTMNJs
uN6qxbT/Cuzq/nh3h/mfGQpmeRvY1WU8N0tBXkTxozWBtP8KSsKjcjowPzZX
wYa3f31ypP8+X8HMXOXsDPZfRygI+ie/TUv6PwsVmF01e9GC/s9iBe2ajij9
g/3FUQpabOi6pCn966UKai3v/jogSHf/5Qq6TWk3Io14lhUKZkeudP+V+IpV
CiYZHsE14tNWKwg3XJZY+Z32X8GqDOOYHsRnxSgYfT3y4bJo9v8rMAxTlS6c
D7VBO58Dl0P/XKGj36TA2txlcHX/aJyC5LRhA9YwHxyv4PPkVL0S+pPbFGQ9
2678zesdCg6EjlJPcJ7SLgUx/l9On2O9PVFBaoj/Tx8+b7fG71GrTG7c0r3P
XgXFVX8cf8h5PvsVvN986nVN6o+DCpZFWnz++lP3+2EFd6cmu8YdJP5f02dW
2wtast5/VNv/919yLDjPXCgYtc+uzxA+X9X2O7z4biz9meMKPm3Ur0glXj5N
Qf+kGUkZ7Hc4qe3H/grPGEudfKVr77810Gf9E+L/FCz5+Mjanf1dZxXYbImb
nkW8wjkFpwd4mf/OePm8AqdOF+deZX7mooJ7CzIqetBfuaygpUvcnzXZn3dV
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
dPvkQPYjfdXWtzt58wHq1wpt/SvDVprT//mhyW/EZANb6rtKzR78eLQog/Q1
VPzipG62Z728poryaKuHnpz/rqfiVu1bpg1Zv9ZXYZxyuqoO+amWCpuXTg/c
KnXrNVBx+qPD4yzOK6+t4lrKq/K5zB/XUXHEqtGmZdQ3dVWckTf2O87W/f6L
CnWzq+cEzmuup8LlrV1kCeXJUEWUS+iR0eSf+ioeTfB0CWC+sYEKj+ytey5U
9xuq+K/8sl05rxtp9ytqkllEeiMVzolzN5pSvzRWMcBh3ugP5EdjFVtq7exc
2EC3f01U7E5a8yCB+AoTFUrQsN63Od/NVEWtvGC/CEcdfVPt/2axPqmcd9FM
RcCUQwscq79fpKLSaOgac+oDcxU3DkzIdtzFfIaKbeMLnm9jvcJSRfNOX1tN
pz/WXEWbh0sLDXvr6K1UzHUsv5/PeSktVOzw9+jiR/vRUoV7ZvnrSzz/VipK
/nXqfZj+dGsVJ02v/8hcqvvdWoXPju+W8xnf/aqiqIXMt2E/jI2KTUF3D5Qk
6ejbaPuZl146lPLWVoXTtC6TN/C826lo17VeQGfinW1VWPsWXDnI+K29iv02
h0wCxuvkzU5F7Ja+dracp2Cvoo9tcNx/lBcHFaNC5Pl/GV87qrBbPydGj/FY
B40//jfhoOD3BTuq2FXb9Pd91NedVORHDxzfmXgtJxWHb9t8d23PeowKi5iI
JxeJt+us4uOZpzXH0J65aPIxMufBYPKHqwqYfnuYxPkDbirOXU16Vsb6128q
xmbsmvuG/k8XFQvOmk/OZ/90VxUGO/cmm1jTn9P2s/fqKHfmn7qruB18IfQK
+aOHiqoHJseN6uue31N7/0Vfez6r0N3PXUU974YBX9h/3kvFxplf1IAWOnqo
WBzZa+plzofprWLzysitEcTXeqho1ajvX0bsL+6jovWS2BExu+kfqmgZ27Hz
bOLxflexYmDvM5G87qtiXeTzljP26ej7qeg1ZHiJW0/2j6joG/js4F98Xn8V
GZ+8ejXivCdvFXGrGi90ZT/2AO33qA3OEcRr+Gj82OvdnN56ut8HqjhhNmnN
CvL/IBVdv509kn9ZRz9Y03ehNUJKiO8doiK7x8lmnsQ3DtX4PzM74Qe/n+Gr
YsyoER839tHdb5gK/5KetatY3/FTsaiv3rIm9D/9Nf3Tb/tu23Fvev0f3Hb3
Vg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4181.}, {0, 0.7928660523122988}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.653985636750784*^9, 
  3.653985721781097*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
dUvQJqF2gPIAlYEC8cboeKr8L1fFKIWEBgvIBTxVwwLLKW4lXaZiqDBFPXVx
dakMarXcBGqFBre0wVFLpMir0QQebgXpNDfs1x7yTYD3f7GBDZwt4JMPKy2I
A7J8iAy3jpC6g1mxOevZsepFGeXBnmxcaKh2aPcKOvDiSdWONINbIXlx8w5M
RVmkxPndiCiXn+WYoiANZmlsooEFq6E6mbG71gAe1k1u0ykwt0nxNibqeYwK
HH+wH5SJfFE9fNaCle8Yqxl5rPGBVRmURjMNAQjza8M4UuAxAGEprkyoiGmv
oSzFmXIPnQK6Op+yzltC7bqExlsbJqtD3RKxyrrsrI5loi3mTFK9ZihN/Luo
eL9hGzWPMFyNR0NUKaOky8xYMpUNWFlwDHxjER1jMKetMa0xQr6jU1CfyBj8
2vVYx8lZImwR9n4VbxvEP2wkPo4VF0jiEuWSAwcOWMmGQ4FKupBGvXQwupP+
ZE4qgN+3Ut/D4aTBs0g9YWosJbbrZo13NbUOE8ZM85Jjx8yZM8dv3rxZwJNe
fvllYVDKmMbTxnpC6Ut1AxvR0q4bx2gzilfGIc/4jplxjn69SD518DWTXx2L
X1w6IPTcQfxbQX535ImQ3D6+DSOrLSbhYl/d+G317Cl8IP55InG5LD/AMw3c
E2T2t4Ki2iDs7bUa5Ktvv/128CW6wJNXp+FBeojjQ9w1rLKTuBXf88gjj9zt
BUiTNzPFkx/xCzJV+Wt81b+8U7Qd7ujouHXHjh2C+fe2b9++d+rUqSlljbta
HfXGG2+I34kqfrno3z0Z5T8ekcS3Lx7hqumXsPqXJXL9/gfVNO6T\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<data/d2psi_rho01.dat\>\""}], ",", "D2List"}], "]"}]], "Input",
 CellChangeTimes->{{3.653986360549761*^9, 3.653986413146398*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/data/\
d2psi_rho01.dat\"\>"], "Output",
 CellChangeTimes->{{3.6539864026822033`*^9, 3.653986413798131*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<data/d2psi_rho02.dat\>\""}], ",", "D2List02"}], "]"}]], "Input",
 CellChangeTimes->{{3.653986360549761*^9, 3.653986425482306*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/data/\
d2psi_rho02.dat\"\>"], "Output",
 CellChangeTimes->{3.653986425903118*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 965},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[697, 27, 299, 5, 32, "Input"],
Cell[999, 34, 1072, 16, 70, "Output"]
}, Open  ]],
Cell[2086, 53, 223, 5, 55, "Input"],
Cell[2312, 60, 725, 20, 77, "Input"],
Cell[3040, 82, 351, 8, 55, "Input"],
Cell[CellGroupData[{
Cell[3416, 94, 200, 5, 32, "Input"],
Cell[3619, 101, 792, 16, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[4460, 123, 146, 2, 57, "Section"],
Cell[CellGroupData[{
Cell[4631, 129, 150, 2, 49, "Subsection"],
Cell[4784, 133, 2524, 66, 165, "Input"],
Cell[7311, 201, 2808, 74, 187, "Input"],
Cell[10122, 277, 3023, 79, 187, "Input"],
Cell[13148, 358, 2900, 82, 288, "Input"],
Cell[16051, 442, 1930, 52, 165, "Input"],
Cell[17984, 496, 3327, 88, 253, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21360, 590, 100, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[21485, 595, 165, 2, 49, "Subsection"],
Cell[21653, 599, 255, 5, 51, "Text"],
Cell[21911, 606, 1377, 41, 117, "Text"],
Cell[23291, 649, 1378, 35, 116, "Input"],
Cell[24672, 686, 1135, 34, 55, "Input"],
Cell[25810, 722, 1826, 55, 146, "Text"],
Cell[27639, 779, 2339, 61, 297, "Input"],
Cell[CellGroupData[{
Cell[30003, 844, 158, 2, 40, "Subsubsection"],
Cell[30164, 848, 933, 21, 147, "Text"],
Cell[31100, 871, 6144, 146, 407, "Input"],
Cell[37247, 1019, 322, 9, 32, "Input"],
Cell[37572, 1030, 928, 23, 55, "Input"],
Cell[CellGroupData[{
Cell[38525, 1057, 269, 6, 32, "Input"],
Cell[38797, 1065, 1723, 37, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40557, 1107, 412, 11, 32, "Input"],
Cell[40972, 1120, 673, 11, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[41706, 1138, 117, 1, 41, "Subsection"],
Cell[41826, 1141, 487, 14, 51, "Text"],
Cell[42316, 1157, 2394, 61, 231, "Input"],
Cell[CellGroupData[{
Cell[44735, 1222, 359, 8, 55, "Input"],
Cell[45097, 1232, 432, 10, 32, "Output"]
}, Open  ]],
Cell[45544, 1245, 3594, 95, 429, "Input"],
Cell[49141, 1342, 979, 26, 99, "Input"],
Cell[CellGroupData[{
Cell[50145, 1372, 1408, 37, 65, "Input"],
Cell[51556, 1411, 34863, 701, 294, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[86468, 2118, 181, 2, 41, "Subsection"],
Cell[CellGroupData[{
Cell[86674, 2124, 111, 1, 40, "Subsubsection"],
Cell[86788, 2127, 8047, 221, 510, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94872, 2353, 121, 1, 40, "Subsubsection"],
Cell[CellGroupData[{
Cell[95018, 2358, 317, 7, 32, "Input"],
Cell[95338, 2367, 632, 19, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96007, 2391, 2511, 56, 86, "Input"],
Cell[98521, 2449, 14096, 246, 296, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112654, 2700, 3793, 88, 157, "Input"],
Cell[116450, 2790, 62235, 1167, 288, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178722, 3962, 3523, 84, 157, "Input"],
Cell[182248, 4048, 58584, 1148, 294, "Output"]
}, Open  ]],
Cell[240847, 5199, 36004, 637, 292, "Input"],
Cell[CellGroupData[{
Cell[276876, 5840, 219, 5, 32, "Input"],
Cell[277098, 5847, 233, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277380, 5856, 112, 1, 40, "Subsubsection"],
Cell[277495, 5859, 1966, 44, 165, "Input"],
Cell[279464, 5905, 1512, 44, 143, "Input"],
Cell[CellGroupData[{
Cell[281001, 5953, 1254, 27, 38, "Input"],
Cell[282258, 5982, 5539, 105, 274, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287834, 6092, 1383, 37, 56, "Input"],
Cell[289220, 6131, 77373, 1282, 242, 67521, 1119, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[366608, 7416, 3182, 85, 341, "Input"],
Cell[CellGroupData[{
Cell[369815, 7505, 1406, 28, 38, "Input"],
Cell[371224, 7535, 5853, 108, 272, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377114, 7648, 1441, 29, 38, "Input"],
Cell[378558, 7679, 7449, 136, 268, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[386068, 7822, 93, 1, 41, "Subsection"],
Cell[386164, 7825, 685, 20, 66, "Text"],
Cell[CellGroupData[{
Cell[386874, 7849, 1614, 47, 140, "Input"],
Cell[388491, 7898, 309, 7, 32, "Output"]
}, Open  ]],
Cell[388815, 7908, 242, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[389082, 7917, 1187, 42, 83, "Input"],
Cell[390272, 7961, 273, 7, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390582, 7973, 1729, 59, 136, "Input"],
Cell[392314, 8034, 553, 16, 49, "Output"]
}, Open  ]],
Cell[392882, 8053, 1911, 62, 141, "Input"],
Cell[394796, 8117, 2608, 86, 117, "Input"],
Cell[CellGroupData[{
Cell[397429, 8207, 273, 7, 32, "Input"],
Cell[397705, 8216, 452, 15, 49, "Output"]
}, Open  ]],
Cell[398172, 8234, 244, 5, 51, "Text"],
Cell[398419, 8241, 1245, 41, 90, "Input"],
Cell[399667, 8284, 451, 14, 51, "Text"],
Cell[CellGroupData[{
Cell[400143, 8302, 271, 7, 32, "Input"],
Cell[400417, 8311, 584, 19, 49, "Output"]
}, Open  ]],
Cell[401016, 8333, 102, 1, 35, "Text"],
Cell[401121, 8336, 1715, 51, 66, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[402873, 8392, 174, 3, 41, "Subsection"],
Cell[403050, 8397, 1865, 42, 165, "Input"],
Cell[404918, 8441, 303, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[405246, 8454, 236, 5, 32, "Input"],
Cell[405485, 8461, 117309, 1937, 245, 111460, 1840, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522831, 10403, 251, 6, 32, "Input"],
Cell[523085, 10411, 176, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523298, 10418, 253, 6, 32, "Input"],
Cell[523554, 10426, 150, 2, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
