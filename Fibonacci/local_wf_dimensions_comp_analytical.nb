(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    355775,       7516]
NotebookOptionsPosition[    351045,       7362]
NotebookOutlinePosition[    351379,       7377]
CellTagsIndexPosition[    351336,       7374]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Styling", "Section",
 CellChangeTimes->{{3.650529670445614*^9, 3.650529671387044*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.621746080389682*^9, 3.62174608226017*^9}, {
  3.621746135693265*^9, 3.621746138092404*^9}, {3.621746173598854*^9, 
  3.621746176545178*^9}, {3.621746380188685*^9, 3.621746380796864*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/\"\>"], \
"Output",
 CellChangeTimes->{
  3.621746138720299*^9, 3.6217461772329283`*^9, 3.6217463820837097`*^9, 
   3.621914084597064*^9, 3.622354902377564*^9, 3.6224500465525513`*^9, 
   3.623673817987068*^9, {3.623732923752467*^9, 3.6237329431664143`*^9}, 
   3.623733011172534*^9, 3.6265009345731573`*^9, 3.626503064282505*^9, 
   3.626518136823456*^9, 3.6265986644273252`*^9, 3.626766190657977*^9, 
   3.6267758308974867`*^9, 3.626942336671768*^9, 3.6297104411821547`*^9, 
   3.629712724622324*^9, 3.629781022135947*^9, 3.630046408966426*^9, 
   3.6313337238449497`*^9, 3.631354144526745*^9, 3.631354355972702*^9, 
   3.6314232172648153`*^9, 3.63671596736003*^9, 3.637648354158971*^9, 
   3.637655444542446*^9, 3.638266550188231*^9, 3.6386965559831057`*^9, 
   3.649669983893663*^9, 3.649670056491778*^9, 3.650529695356668*^9, 
   3.6505341494579573`*^9, 3.650718391279537*^9, 3.650777807895626*^9, 
   3.650860551224863*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Thickness", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"th", "=", "0.003"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.621748603657528*^9, 3.621748631317513*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Styling", " ", "of", " ", "the", " ", "text"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"st", "=", 
     RowBox[{"Directive", "[", 
      RowBox[{"Large", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Linux Libertine Display\>\""}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"stylize", "[", "text_", "]"}], ":=", 
     RowBox[{"Style", "[", 
      RowBox[{"text", ",", "st"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.649669976732336*^9, 3.649669979410515*^9}, {
  3.650534116404479*^9, 3.650534130111813*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BostonBlue", "=", 
   RowBox[{"RGBColor", "[", "\"\<#00688B\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"comp", "=", 
   RowBox[{"RGBColor", "[", "\"\<#8B2300\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6496703258985233`*^9, 3.649670325915792*^9}, {
  3.649670489172563*^9, 3.6496705180944643`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"Text", "[", "\"\<caca\>\"", "]"}], ",", "BostonBlue"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6496705218533*^9, 3.649670536292047*^9}}],

Cell[BoxData[
 StyleBox[
  InterpretationBox[Cell[BoxData[
    FormBox["\<\"caca\"\>", TextForm]], "InlineText"],
   Text["caca"]],
  StripOnInput->False,
  LineColor->RGBColor[0., 0.40784313725490196`, 0.5450980392156862],
  FrontFaceColor->RGBColor[0., 0.40784313725490196`, 0.5450980392156862],
  BackFaceColor->RGBColor[0., 0.40784313725490196`, 0.5450980392156862],
  GraphicsColor->RGBColor[0., 0.40784313725490196`, 0.5450980392156862],
  FontColor->RGBColor[
   0., 0.40784313725490196`, 0.5450980392156862]]], "Output",
 CellChangeTimes->{
  3.6496705366879787`*^9, 3.6505296954274397`*^9, {3.6505341326848087`*^9, 
   3.65053414248067*^9}, 3.6507183914281054`*^9, 3.650777808068985*^9, 
   3.6508605514505053`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hamiltonians", "Section",
 CellChangeTimes->{{3.629712555829027*^9, 3.629712557652924*^9}, {
  3.650529701640504*^9, 3.650529711404598*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.632041721549465*^9, 3.632041723101447*^9}, {
  3.6358312356676207`*^9, 3.635831252179337*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hp", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
   3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
   3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
   3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
   3.629711744441989*^9}, {3.629712260739542*^9, 3.6297122613888474`*^9}, {
   3.629712372304244*^9, 3.629712372429983*^9}, 3.6313353026608963`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "antiperiodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ha", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{"-", "tw"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", 
     SuperscriptBox["e", "ik"], " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hk", "[", 
    RowBox[{"k_", ",", "n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "k"}], "]"}], "tw"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"ConjugateTranspose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}, {3.6342799382942677`*^9, 3.6342799433882017`*^9}, {
  3.634279999836821*^9, 3.6342800047344503`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "free", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Omega]", "=", 
     RowBox[{"N", " ", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Sqrt", "[", "5", "]"}], "-", "1"}], "2"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rot", "=", "28"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "rotate", " ", "the", " ", "sequence", " ", "of", " ", "couplings"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fib", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", 
        RowBox[{"(", " ", 
         RowBox[{"n", "+", "1", "+", "rot"}], ")"}]}], "]"}], "-", 
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "rot"}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"jump", "[", 
      RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fib", "[", 
         RowBox[{"n", "-", "1"}], "]"}], "<", "1"}], ",", "ts", ",", "tw"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hf", "[", 
     RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F2", "=", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"jump", "[", 
            RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ar", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"ar", "+", 
         RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hpn", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tbl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
          RowBox[{"jump", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"tbl", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "F2"}], "}"}], "\[Rule]", "tw"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"tbl", ",", 
         RowBox[{"{", 
          RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}, {
  3.6313347078403673`*^9, 3.631334724799961*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Harper", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hharp", "[", 
     RowBox[{"p_", ",", "q_", ",", "\[Phi]_", ",", "\[Lambda]_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hopping", ",", "pot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"hopping", " ", "subdiagonal", " ", "part"}], "*)"}], 
      RowBox[{
       RowBox[{"hopping", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"q", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"periodic", " ", "boundary", " ", "conditions"}], "*)"}], 
       RowBox[{"AppendTo", "[", 
        RowBox[{"hopping", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "q"}], "}"}], "\[Rule]", 
          RowBox[{"-", "1."}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"convert", " ", "to", " ", "matrix"}], "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"hopping", ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "symmetrize", "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"hopping", "+", 
         RowBox[{"Transpose", "[", "hopping", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"diagonal", " ", "part"}], "*)"}], 
       RowBox[{"pot", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "i"}], "}"}], "\[Rule]", 
             RowBox[{"2.", "\[Lambda]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"2", " ", "\[Pi]", " ", "p", " ", 
                 RowBox[{"i", "/", "q"}]}], "+", "\[Phi]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "q"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"pot", "+", "hopping"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "choosing", " ", "Fibonacci", " ", "numbers", " ", "as", " ", 
     "approximants"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"hfib", "[", 
      RowBox[{"n_", ",", "\[Phi]_", ",", "\[Lambda]_"}], "]"}], ":=", 
     RowBox[{"hharp", "[", 
      RowBox[{
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}], ",", 
       RowBox[{"Fibonacci", "[", "n", "]"}], ",", "\[Phi]", ",", 
       "\[Lambda]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"hfib", ",", "Listable"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.638249400809607*^9, 3.638249432782072*^9}, {
  3.638249651446948*^9, 3.6382496950248528`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wavefunctions", "Section",
 CellChangeTimes->{{3.6505299538228807`*^9, 3.650529958121068*^9}}],

Cell[CellGroupData[{

Cell["Wavefunctions: definitions.", "Subsection",
 CellChangeTimes->{{3.630934451760487*^9, 3.63093445745586*^9}, {
  3.650529960455673*^9, 3.6505299613584337`*^9}}],

Cell["\<\
We define general functions computing fractal dimensions from lists, rather \
than functions adapted to our specific case.\
\>", "Text",
 CellChangeTimes->{{3.6309975019888783`*^9, 3.630997549157268*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "We compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Chi]", "q"], "n"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[CapitalSigma]", "a"], "|", 
     RowBox[{
      SuperscriptBox["\[Psi]", "n"], "(", 
      RowBox[{"i", ",", "a"}], ")"}], 
     SuperscriptBox["|", 
      RowBox[{"2", "q"}]]}]}], TraditionalForm]]],
 ".\nWe define the local dimension of the wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["D", "q"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["lim", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
     RowBox[{
      FractionBox["1", 
       RowBox[{"q", "-", "1"}]], 
      FractionBox[
       RowBox[{"log", "(", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Chi]", "q"], "n"], "(", "i", ")"}], ")"}], 
       RowBox[{"log", "(", 
        RowBox[{"1", "/", 
         SubscriptBox["F", "n"]}], ")"}]]}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6297819505151176`*^9, 3.629782150655591*^9}, {
  3.6303260562655563`*^9, 3.630326139818005*^9}, {3.630934477152502*^9, 
  3.630934567217009*^9}, {3.630934630673167*^9, 3.630934631297505*^9}, {
  3.6309354307593203`*^9, 3.630935516815362*^9}, {3.6309356538549843`*^9, 
  3.630935654575048*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "wf", " ", "is", " ", "a", " ", "list", " ", "of", " ", "numbers", " ", 
     "that", " ", "are", " ", "a", " ", "priori", " ", "the", " ", 
     "coefficients", " ", "of", " ", "a", " ", 
     RowBox[{"wavefunction", ".", " ", "They"}], " ", "can", " ", "be", " ", 
     "coefficients", " ", "in", " ", "the", " ", "position", " ", "basis"}], 
    ",", " ", 
    RowBox[{"for", " ", "a", " ", "given", " ", "energy"}], ",", " ", 
    RowBox[{
    "or", " ", "coefficients", " ", "in", " ", "the", " ", "energy", " ", 
     "basis", " ", "for", " ", "a", " ", "particular", " ", 
     RowBox[{"position", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"WfD", "[", 
    RowBox[{"wf_", ",", "q_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"q", "-", "1"}], ")"}], 
      RowBox[{"-", "1"}]]}], 
    FractionBox[
     RowBox[{"Log", "[", 
      RowBox[{"Plus", "@@", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "wf", "]"}], 
        RowBox[{"2", "q"}]]}], "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"Length", "@", "wf"}], "]"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.630997267210726*^9, 3.630997456587614*^9}, {
  3.630997567916525*^9, 3.630997642602827*^9}, {3.6313445925282907`*^9, 
  3.631344626817724*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "a", " ", "more", " ", "precise", " ", "way", " ", "of", " ", "computing",
      " ", "the", " ", "dimensions"}], ",", " ", 
    RowBox[{
    "using", " ", "data", " ", "from", " ", "two", " ", "systems", " ", "of", 
     " ", "consecutive", " ", "size"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"tauqxloc", "[", 
     RowBox[{"int_", ",", "intN_", ",", "q_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Total", "@", 
          RowBox[{"(", 
           RowBox[{"int", "^", "q"}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"Total", "@", 
          RowBox[{"(", 
           RowBox[{"intN", "^", "q"}], ")"}]}], ")"}]}], "]"}]}], "/", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Length", "@", "int"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"Length", "@", "intN"}], ")"}]}], "]"}]}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.638596075723093*^9, 3.638596124392284*^9}}],

Cell[TextData[{
 "We compute the partition function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"\[Tau]", ",", "q"}]], "n"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[CapitalSigma]", "a"], 
     FractionBox[
      RowBox[{"|", 
       RowBox[{
        SuperscriptBox["\[Psi]", "n"], 
        RowBox[{"(", 
         RowBox[{"i", ",", "a"}], ")"}]}], 
       SuperscriptBox["|", 
        RowBox[{"2", "q"}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox[
         SubscriptBox["\[CapitalDelta]", "a"], "n"], ")"}], "\[Tau]"]]}]}], 
   TraditionalForm]]],
 ".\nWe define the local dimension of the wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], " ", "such", " ", "that", 
     " ", 
     RowBox[{
      SubscriptBox["lim", 
       RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], ",", "q"}]], 
         RowBox[{"n", "+", "1"}]], "(", "i", ")"}], 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], ",", "q"}]], "n"], 
        "(", "i", ")"}]]}]}], "=", "1"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6297819505151176`*^9, 3.629782150655591*^9}, {
  3.6303260562655563`*^9, 3.630326139818005*^9}, {3.630934477152502*^9, 
  3.630934567217009*^9}, {3.630934630673167*^9, 3.630934631297505*^9}, {
  3.6309354307593203`*^9, 3.630935667729848*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"compute", " ", "fractal", " ", "dimension", " ", 
     SubscriptBox["D", "q"], " ", "from", " ", "2", " ", "lists", " ", "of", 
     " ", "weights", " ", "and", " ", "box", " ", "lengths"}], ",", " ", 
    RowBox[{"using", " ", "the", " ", "thermodynamic", " ", "formalism"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PartD", "[", 
    RowBox[{
    "weights_", ",", "weightsN_", ",", "lengths_", ",", "lengthsN_", ",", 
     "q_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gam", ",", "gamN", ",", "\[Tau]", ",", "\[Tau]0", ",", "q0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gam", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", "weights", ")"}], "q0"], 
          SuperscriptBox[
           RowBox[{"(", "lengths", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"gamN", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", "weightsN", ")"}], "q0"], 
          SuperscriptBox[
           RowBox[{"(", "lengthsN", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", " ", 
       SubscriptBox["D", "q"], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Tau]0", "=", 
       RowBox[{"\[Tau]", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["gamN", "gam"], "/.", 
             RowBox[{"q0", "\[Rule]", "q"}]}], ")"}], "-", "1"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      FractionBox["\[Tau]0", 
       RowBox[{"q", "-", "1"}]]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.630997864395117*^9, 3.630997940972649*^9}, {
   3.630998058701036*^9, 3.630998151711904*^9}, {3.6309981817454863`*^9, 
   3.6309983368371696`*^9}, 3.630998958714292*^9, {3.630999209213921*^9, 
   3.630999246524372*^9}, {3.632048811113677*^9, 3.632048811171896*^9}, 
   3.632048900297194*^9}],

Cell[CellGroupData[{

Cell["Tree structure", "Subsubsection",
 CellChangeTimes->{{3.632042006415544*^9, 3.632042008959408*^9}, {
  3.6505334056990423`*^9, 3.6505334069834146`*^9}}],

Cell[TextData[{
 "After a renormalization step, a given site i of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " approximant becomes either molecular (in which case n becomes n-2) or \
atomic (n becomes n-3). \nWe can thus associate to each site a unique \
\[OpenCurlyDoubleQuote]renormalization path\[CloseCurlyDoubleQuote]: the \
sequence of molecular/atomic sites that has led to it, starting from the \
trivial ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["F", "n"], "=", "1"}], ")"}], TraditionalForm]]],
 " chain and inflating it.\n\nMore details in the \
\[OpenCurlyDoubleQuote]renormalization_path.nb\[CloseCurlyDoubleQuote] file."
}], "Text",
 CellChangeTimes->{{3.631365638464468*^9, 3.6313658553137217`*^9}, {
  3.631365896018684*^9, 3.6313659003057003`*^9}, {3.631426761322414*^9, 
  3.6314267847002087`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"take", " ", "a", " ", "renormalization", " ", "path", " ", 
     RowBox[{"(", "seq", ")"}]}], ",", " ", 
    RowBox[{"a", " ", "site", " ", "label", " ", 
     RowBox[{"(", "i", ")"}], " ", "and", " ", "an", " ", "approximant", " ", 
     "size", " ", 
     RowBox[{"(", "n", ")"}], " ", "and", " ", "return", " ", "the", " ", 
     "new", " ", "renormalization", " ", "path"}], ",", " ", 
    RowBox[{
    "the", " ", "new", " ", "site", " ", "label", " ", "and", " ", "the", " ",
      "new", " ", "size", " ", "after", " ", "one", " ", "renormalization", 
     " ", "group", " ", "operation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"i", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterSeq", "[", 
     RowBox[{"{", 
      RowBox[{"seq_", ",", "i_", ",", "n_"}], "}"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"inew", "=", "i"}], ",", 
        RowBox[{"seqn", "=", "seq"}], ",", 
        RowBox[{"nnew", "=", "n"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", ">", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "-", "1"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"seqn", "=", 
           RowBox[{"\"\<m\>\"", "<>", "seq"}]}], ";", 
          RowBox[{"inew", "=", 
           RowBox[{"i", "-", 
            RowBox[{"Fibonacci", "[", 
             RowBox[{"n", "-", "1"}], "]"}]}]}], ";", 
          RowBox[{"nnew", "=", 
           RowBox[{"n", "-", "2"}]}], ";"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", ">", 
            RowBox[{"Fibonacci", "[", 
             RowBox[{"n", "-", "2"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"seqn", "=", 
             RowBox[{"\"\<a\>\"", "<>", "seq"}]}], ";", 
            RowBox[{"inew", "=", 
             RowBox[{"i", "-", 
              RowBox[{"Fibonacci", "[", 
               RowBox[{"n", "-", "2"}], "]"}]}]}], ";", 
            RowBox[{"nnew", "=", 
             RowBox[{"n", "-", "3"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"seqn", "=", 
             RowBox[{"\"\<m\>\"", "<>", "seq"}]}], ";", 
            RowBox[{"nnew", "=", 
             RowBox[{"n", "-", "2"}]}], ";"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"seqn", ",", "inew", ",", "nnew"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"false", " ", "when", " ", "n"}], "<", "3"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"test", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", "3"}], "&"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"take", " ", "a", " ", "site", " ", 
      RowBox[{"(", "i", ")"}]}], ",", " ", 
     RowBox[{"a", " ", "size", " ", 
      RowBox[{"(", "n", ")"}], " ", "and", " ", "return", " ", "the", " ", 
      "renormalization", " ", "path", " ", "for", " ", "this", " ", 
      "site"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"path", "[", 
     RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"NestWhile", "[", 
       RowBox[{"iterSeq", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "i", ",", "n"}], "}"}], ",", "test"}], 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", "i"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "compute", " ", "the", " ", "relative", " ", "time", " ", "spent", " ", 
     "on", " ", "molecular", " ", "sites", " ", 
     RowBox[{"(", "x", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xPath", "[", 
     RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"StringCount", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NestWhile", "[", 
           RowBox[{"iterSeq", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", "i", ",", "n"}], "}"}], ",", "test"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<m\>\""}], "]"}], "/", 
       "n"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"generate", " ", "the", " ", "whole", " ", 
     RowBox[{"(", "x", ")"}], " ", 
     RowBox[{"tree", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tree", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"xPath", "[", 
       RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"Fibonacci", "[", "n", "]"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6313589574343977`*^9, 3.6313590302798233`*^9}, {
   3.631359076279845*^9, 3.6313593102066603`*^9}, {3.631359391471822*^9, 
   3.6313594047194157`*^9}, {3.6313594593282537`*^9, 3.631359462513579*^9}, {
   3.6313595010407*^9, 3.631359521955605*^9}, {3.631359596818037*^9, 
   3.631359606915451*^9}, {3.631359651491734*^9, 3.6313596831724777`*^9}, {
   3.6313634417688093`*^9, 3.631363482904171*^9}, {3.631364258193778*^9, 
   3.631364318864571*^9}, {3.6313647703411922`*^9, 3.63136477755731*^9}, {
   3.6313648216112947`*^9, 3.631364823625928*^9}, {3.631364880726359*^9, 
   3.631364887510838*^9}, {3.631364979383456*^9, 3.631365063114964*^9}, 
   3.631365189625307*^9, {3.631365920448059*^9, 3.6313659926244802`*^9}, {
   3.631426798788385*^9, 3.631426807777585*^9}, {3.631430687105792*^9, 
   3.631430691090613*^9}, 3.631516490573141*^9, {3.632049521570463*^9, 
   3.632049521680777*^9}, 3.632055040279293*^9, {3.6320551561537037`*^9, 
   3.632055177849278*^9}, {3.632055451480164*^9, 3.632055517600219*^9}, {
   3.632055616163237*^9, 3.632055618257159*^9}, {3.6320557064324903`*^9, 
   3.632055721461688*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"paths", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"path", "[", 
     RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"Fibonacci", "[", "n", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.632049607276568*^9, 3.632049630389175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"tree", "[", "7", "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632049297283428*^9, 3.63204929744164*^9}, {
  3.632049360308915*^9, 3.632049372484646*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.42857142857142855`}, {2., 0.42857142857142855`}, {3., 
      0.14285714285714285`}, {4., 0.42857142857142855`}, {5., 
      0.42857142857142855`}, {6., 0.14285714285714285`}, {7., 0.}, {8., 
      0.14285714285714285`}, {9., 0.42857142857142855`}, {10., 
      0.42857142857142855`}, {11., 0.14285714285714285`}, {12., 
      0.42857142857142855`}, {13., 0.42857142857142855`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 13.}, {0, 0.42857142857142855`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.632049297740069*^9, 3.632049325836025*^9}, {
   3.632049360724947*^9, 3.632049372828106*^9}, 3.6354952898718863`*^9, 
   3.6367162329633923`*^9, 3.637655514205216*^9, 3.6385961663440237`*^9, 
   3.6386805216221533`*^9, 3.638781175783618*^9, 3.6467292638237267`*^9, 
   3.649498911451948*^9, 3.649670096403277*^9, 3.650533409629578*^9, 
   3.650718391633026*^9, 3.650777808838047*^9, 3.650860559104454*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Wavefunctions: computations", "Subsection",
 CellChangeTimes->{{3.650533419401181*^9, 3.6505334255798063`*^9}}],

Cell[TextData[{
 "For a given \[Rho], q>0 and system size n, compute the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["D", "x"], "(", "x", ")"}], TraditionalForm]]],
 " dimensions, ie the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["D", "x"], "(", "i", ")"}], TraditionalForm]]],
 " dimensions averaged on all sites having the same x."
}], "Text",
 CellChangeTimes->{{3.6320422000484324`*^9, 3.632042246912817*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"avDx", "[", 
   RowBox[{"q_", ",", "vec_", ",", "val_", ",", "xvalues_", ",", "listPos_"}],
    "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"DxList", ",", "xlist", ",", "avDx"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"list", " ", "fractal", " ", "dimensions"}], ",", " ", 
      RowBox[{"indexed", " ", "by", " ", "site"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DxList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"WfD", "[", 
         RowBox[{"#", ",", "q"}], "]"}], "&"}], "/@", "vec"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "for", " ", "each", " ", "value", " ", "of", " ", "x", " ", "compute", 
        " ", "the", " ", "average"}], " ", "-", " ", 
       RowBox[{
       "on", " ", "positions", " ", "corresponding", " ", "to", " ", "this", 
        " ", "x"}], " ", "-", " ", 
       RowBox[{"fractal", " ", "dimension"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"avDx", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"DxList", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", "listPos"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "return", " ", "the", " ", "average", " ", "fractal", " ", "dimension", 
       " ", "as", " ", "a", " ", "function", " ", "of", " ", "x"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"avDx", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"xvalues", ",", "avDx"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "avDx"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.637663366965523*^9, 3.63766336766899*^9}, {
   3.6376636542094803`*^9, 3.6376636546090508`*^9}, {3.63766369696706*^9, 
   3.637663721542987*^9}, {3.637663774545248*^9, 3.637663827187294*^9}, {
   3.637663901777546*^9, 3.637663959294059*^9}, {3.6376641180637712`*^9, 
   3.63766411951794*^9}, {3.637667087009117*^9, 3.6376670892159443`*^9}, 
   3.6505334750409613`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "17"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tol", "=", 
    SuperscriptBox["10", 
     RowBox[{"-", "14"}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "wavefunctions", " ", "and", " ", "energies"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"val", ",", "vec"}], "}"}], "=", 
    RowBox[{"Eigensystem", "[", 
     RowBox[{"hp", "[", 
      RowBox[{"n", ",", "\[Rho]", ",", "1."}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
    "energy"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vec", "=", 
    RowBox[{"vec", "[", 
     RowBox[{"[", 
      RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"drop", " ", "small", " ", "components"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vec", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"vec", ",", "tol"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "x", " ", "for", " ", "each", " ", "site"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xlist", "=", 
    RowBox[{"tree", "[", 
     RowBox[{"n", "+", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"drop", " ", "the", " ", "site", " ", "labels"}], ",", " ", 
    RowBox[{
    "they", " ", "are", " ", "unecessary", " ", "as", " ", "x", " ", "is", 
     " ", "indexed", " ", "by", " ", "increasing", " ", "x", " ", "label"}]}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xlist", "=", 
    RowBox[{"Last", "@", 
     RowBox[{"(", 
      RowBox[{"Transpose", "[", "xlist", "]"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "list", " ", "all", " ", "possible", " ", "values", " ", "of", " ", "x"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xvalues", "=", 
    RowBox[{"Sort", "@", 
     RowBox[{"DeleteDuplicates", "[", "xlist", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "list", " ", "all", " ", "positions", " ", "by", " ", "increasing", " ", 
    "value", " ", "of", " ", "x"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listPos", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{"xlist", ",", "#"}], "]"}], "]"}], "&"}], "/@", "xvalues"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6376637410535107`*^9, 3.6376637612913322`*^9}, {
   3.637663903594638*^9, 3.637663904074048*^9}, {3.637664044065216*^9, 
   3.6376640443671303`*^9}, {3.638781296946495*^9, 3.6387812971536083`*^9}, {
   3.638781345298437*^9, 3.63878134803356*^9}, {3.649671679506936*^9, 
   3.649671679809421*^9}, 3.649672746111318*^9, {3.650533554503845*^9, 
   3.6505335545986958`*^9}, {3.650719857989237*^9, 3.650719859419755*^9}, {
   3.650719916441803*^9, 3.6507199166696*^9}, {3.6507199788689747`*^9, 
   3.650719979052927*^9}, {3.650860569022455*^9, 3.6508605693827963`*^9}, 
   3.6508627603366213`*^9, 3.650862815839922*^9, {3.6508632579523973`*^9, 
   3.650863258047233*^9}, {3.650877507081016*^9, 3.650877507302705*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qlist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.", ",", "10", ",", ".3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avdqlist", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"avDx", "[", 
        RowBox[{"#", ",", "vec", ",", "val", ",", "xvalues", ",", "listPos"}],
         "]"}], "&"}], ",", "qlist"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", " ", 
   RowBox[{
   "transpose", " ", "to", " ", "have", " ", "x", " ", "dependance", " ", 
    "as", " ", "the", " ", "first", " ", "direction", " ", "of", " ", "the", 
    " ", "array"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avdqlist", "=", 
   RowBox[{"Transpose", "[", "avdqlist", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6505335876055183`*^9, 3.650533597783469*^9}, {
  3.650534521500149*^9, 3.65053455238519*^9}, {3.650877545187459*^9, 
  3.650877549604154*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"qlist", ",", "#"}], "}"}]}], "]"}], "&"}], "/@", 
    "avdqlist"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\"\<x=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", "#", "]"}], "]"}]}], "&"}], ")"}], "/@", 
     "xvalues"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"stylize", "[", 
     RowBox[{"\"\<\[Rho] = \>\"", "<>", 
      RowBox[{"ToString", "[", "\[Rho]", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65053360196152*^9, 3.650533653403124*^9}, {
  3.650534106364189*^9, 3.650534107969198*^9}, {3.650534153706285*^9, 
  3.6505341665326433`*^9}, {3.650534256289744*^9, 3.6505343550709*^9}, {
  3.65053451545956*^9, 3.650534517458359*^9}, {3.650860598856923*^9, 
  3.650860648442417*^9}, {3.650860681627695*^9, 3.6508607750510473`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbP+ZexoiP6EZT/2L7t+KnlB09d
tj8DBm/s51vsr2G7eAwq/9l+u5aU8+ILe+0hpv2wf/uk/dY+hm1Q9X/sbx7h
mPno+kb7s2A+g0PLR2+JXw/WQfUzO/DGa2/dd3+1/UwwYHWY66yvvPbOSqh5
HA77dtjw5eavsE8DAy6HMm93ffWE5VDzeRycvI69lOlfBjWP3yFP92e3+cul
UPsEHHYYbItLTVoKNU/I4eHf7gVrPy2Bqhd2CA11+jZjyhKo+SIONYEv1nm4
LIG6R9Th0X4+1jf/FkPNE3NY59unmnVoMdQ8CQfFpBm82r2LoeZJOtRv2y/5
OXYx1DwphykuPJ6njBdDzZN2iJOL5X7NuxjqfhmHnDWFvNteL4KaJ+cgNONn
6sozi6DmyTt8i50sEbUBxldwkDnyyDZ/2iKoexQckksdIufVLYLap+hgInCo
c0UGzDwlhxP72GIjQhZB7VdyqGq6JdXgCDNP2UEpSS/nhz7MPGWHQ0tvuM+X
X2QPANmC6OI=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbvTVOvqC58DOU/tj+uuIFDLe+6
/RkweGPvLfJQK6D/PFT+s/2DDG1GifAT9hDTftgH721nTjpyBKr+j72xg/p6
izuH7M+C+QwO0fPedPYfPAjVz+xgXXRu81KBg/YzwYDVwfX/kodCsw5AzeNw
2O2gW/zB9YB9GhhwOXRfc1PIYz8ANZ/Hwbc9+GXDuv1Q8/gdBD6aTGdL2g+1
T8BB8Zny+nvK+6HmCTnU8L0Xif2wD6pe2GH/h6Pv/hzZBzVfxEH31ZM5X+fv
g7pH1KFC8vLdX/X7oOaJOTgfWWMmmrIPap6Eg8jyoz0d3jDzJB2Ca6ZFHTaF
mSfl0LDyvEewEsw8aQfVyZGOdwX2Qd0v47C6Xu+8OCPMPDkHHpf3PMc/7YWa
J+/w30t6+c6nML6Cw+JpmQuO3dwLdY+CQ0qQ7sLT5/ZC7VN0YLlwa/XqI3uh
5ik5BHcqyvjt3gu1X8nhfuueu3M3wcxTdghoizvbsQpmnrLD1sJTlv8X7bUH
ABN97FA=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP//oPAe3tjMLhsL7Xz6/3XEc+g/Mf2TofOWfv+
vW9/Bgze2Huuvp8tGXETKv/ZPo91x4IJctfsIab9sO81Xj0psvEKVP0fe4dn
a1UnL75sfxbMZ3B4pDQrv1HpMlQ/s4O9yxkP04uX7GeCAavDrTfSfm6zLkHN
43Bo7+Eyf1F0yT4NDLgcdogIWwWGXoKaz+Pw74LzD1O7S1Dz+B2kT21/OEv7
EtQ+AYfdc/3v2cnAzBNy4AzcetyXH6Ze2OH9DwUFMxaY+SIO+z/LPZ/w6yLU
PaIO/hKlesKfLkLNE3OwrT6k2frqItQ8CYfWzTVFex5fhJon6eBUlmg74+5F
qHlSDv9vNB7/dx1mnrTDl2mWPbcvXYS6X8Yh+okEg9w5mHlyDvMLrizdcRJm
nrxDjGlh4oKjML6CA9d3l++nD8Lco+BwYUX0KuN9MPsUHXb92vjxwi6YeUoO
u/e62c3bDrNfyUE56cDZaVtg5ik77NKb0rZtI8w8ZYeWGwW3f667aA8AP2X1
HQ==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP//oPAe3tjMLhsHyjmPVVC7TmU/9jeNVdBfdfi
h/ZnwOCNfVgWl+qZnrtQ+c/2DrvnhN/ed8seYtoP+yD1G36VwTeh6v/Y3xN6
KyjSd8P+LJjP4MCyXXrWfskbUP3MDt79h391nL9uPxMMWB0q3mXX7ZlzHWoe
h8OrmCLWm+XX7dPAgMth+oGImr3R16Hm8zhE/lgWXeV6HWoev4N4qH+ap/F1
qH0CDvz/rKK5VGDmCTkw2AjF/xODqRd22DBrcfwibpj5Ig4LlQ7XzGSEuUfU
Ya84s8yCH9eg5ok5vJm39kHzh2tQ8yQcWM0nNsm9vAY1T9Lh6KWm5KBH16Dm
STmwBRnbcty5BjVP2iFrNmOL7rVrUPfLOBg9WuG4+QLMPDkHeRkVx97TMPPk
HbzYdxVtPAbjKzgsnjyjXPwQzD0KDjPOH/PcsRdmn6LDZ/nNP3p3wsxTcshY
8aVk8laY/UoOk9XT049shJmn7PDV/baA7DqYecoOFjdCDGatumYPAD1M6ds=

         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbfVOlQKJn5Esp/bP923xH9/zFP
7c+AwRt7vs6pqomGj6Hyn+3tvD6oH5V8ZA8x7Yd9+0Jtj9zOh1D1f+xndb3N
brd8aH8WzGdwWBRTMzOL8yFUP7OD2rmff96/fGA/EwxYHda0cdw6fPkB1DwO
B7GE/uXqhx/Yp4EBl8Pylm9rhLc9gJrP4yCyIcEjdvUDqHn8DgE/b6X5L3oA
tU/AQezxl2tls2DmCTnYfd2t2z4Zpl7YoU5m2m3vXpj5Ig6Z02ynzm+HuUfU
Qf98qE56E8w8MYdfme8i+2ph5kk43L3yfi1rJcw8SYfjXh8NDpbAzJNyOBuv
V7a9AGaetIP8y89fH+TA3C/jsLJWeIZ5Jsw8OYfGiU/itqXCzJN3UPhzUiMy
CcZXcDCrmtIoEw9zj4LDZxan+r/RMPsUHd6UMCz/GQEzT8nB+6D7Db4wmP1K
DmlnGmysg2HmKTswvpa2qg2Amafs8FvDPeuy7wN7AHqi8Vw=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLa3zO9XklR5BeU/tm8r/PJO6OUz
+zNg8Ma+pklGZab1U6j8Z/uYhOfBkxKe2ENM+2FveWzDUp03j6Hq/9jvD+ds
bl352P4smM/gsKBnbuWv+sdQ/cwOpQsu1T5Ofmw/EwxYHVY5Cd2p8X8MNY/D
QUiW7cZh+8f2aWDA5fD/nX86nzHMfB6Hu213ryZrwMzjd3iQOb9eWx5mn4DD
b2ORHGZxmHlCDo/WtBiv4oepF3ZwapdZ+okDZr6Ig976yCl7mGDuEXU4eTO3
9sOfR1DzxBy2x4qcqvn+CGqehEPrveW8IZ8eQc2TdDipdvNG9ttHUPOkHPTP
q7/d/eIR1DxpB405xetsnzyCul/GQWv2mb2v78PMk3NgTHDacPA2zDx5h7B/
Ijd3X4fxFRweivYrXr8Mc4+CQ4ndylcCF2D2KTr8ijr9Ne0MzDwlB1P+s0HX
T8DsV3K4/PpBYMJRmHnKDnJPSioYDsHMU3bwuRFSsW3fI3sAiMb1wg==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbfv2misqzwGyj/sf3m6QKb17i+
sj8DBm/sK8WOVs5IeQmV/2w/yUHrUty7F/YQ037Yz3p2f9mHVS+g6v/Yv1rE
bvyx4YX9WTCfwWGl48XFBSkvoPqZHaZdZFDv8X9hPxMMWB1OXHUsMLWHmcfh
cGr27dYDhi/s08CAy2HaWS9DczWY+TwO91f4sbHKwMzjd3Bf67fsjBDMPgGH
aW43WAO5YOYJOTwRnnMpgwmmXtgh83Gewfdfz6HmizgYOpcmP//8HOoeUQce
//PKWm+fQ80Tc5h+mfH15mfPoeZJOOR/y79R/eA51DxJh4+cxz5X3YKZJ+Vw
eHfg6tVXYOZJO6xMra3kPP8c6n4ZB1nhrCUTTsLMk3OQTw3itzsCM0/eYYq+
swT/fhhfwSHwXHsd4y6YexQcDn4K8hfeCrNP0eGO5YdrThtg5ik5aEv5Tu1b
DbNfyaH67X+Tr8tg5ik7fKo1aCldBDNP2cH+zPs8vnnP7QEAs/I/
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 9.9}, {0, 0.9999999999999999}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"q\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
     Directive[Large, FontFamily -> "Linux Libertine Display"], 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> FormBox[
       StyleBox["\"\[Rho] = 0.15\"", 
        Directive[Large, FontFamily -> "Linux Libertine Display"], 
        StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 9.9}, {0, 0.9999999999999999}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"x=0.\"", "\"x=0.0526316\"", "\"x=0.157895\"", "\"x=0.210526\"", 
       "\"x=0.315789\"", "\"x=0.368421\"", "\"x=0.473684\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.650533608555561*^9, {3.650533640476817*^9, 3.650533653770853*^9}, {
   3.650534154224224*^9, 3.6505341669934893`*^9}, 3.65053427594904*^9, {
   3.6505343270136642`*^9, 3.650534355674901*^9}, 3.650534561037369*^9, 
   3.650718399567677*^9, 3.650719870174494*^9, 3.6507199256144648`*^9, 
   3.650719987781773*^9, 3.650777826847988*^9, {3.65086060426718*^9, 
   3.650860614723154*^9}, 3.650860650211389*^9, {3.650860682430964*^9, 
   3.65086069200284*^9}, {3.6508607376066647`*^9, 3.65086077564261*^9}, 
   3.6508627802946053`*^9, 3.650862833078875*^9, 3.65086327601633*^9, 
   3.6508777154925137`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison with theory", "Subsection",
 CellChangeTimes->{{3.650534590771367*^9, 3.650534595795209*^9}, {
   3.650777938347*^9, 3.650777938490938*^9}, 3.6507780149390507`*^9}],

Cell[CellGroupData[{

Cell["Theoretical fomulas", "Subsubsection",
 CellChangeTimes->{{3.65086079507728*^9, 3.6508607995890207`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["5"], "-", "1"}], "2"], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lb", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[Rho]", "^", "2"}]}], ")"}], "^", "4"}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"\[Rho]", "^", "4"}]}]}], "]"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Rho]", "^", "2"}]}], ")"}], "^", "2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"\[Rho]", "^", "4"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "[", 
    RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[Rho]", "q"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lambda", "[", 
    RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"\[Rho]", ",", "q"}], "]"}], 
      SuperscriptBox["\[Rho]", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"\[Rho]", ",", "q"}], "]"}], 
          SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"]}]]}], 
    RowBox[{"2", 
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"\[Rho]", ",", "q"}], "]"}], 
     SuperscriptBox["\[Rho]", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wfdth", "[", 
    RowBox[{"\[Rho]_", ",", "q_", ",", "x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"q", "<", "3"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"n", "+", "2"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"lambda", "[", 
              RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], 
            RowBox[{"lambda", "[", 
             RowBox[{
              SuperscriptBox["\[Rho]", "q"], ",", "q"}], "]"}]], "]"}]}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"2", "x"}]}], "3"], " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"lb", "[", "\[Rho]", "]"}], "q"], 
            RowBox[{"lb", "[", 
             SuperscriptBox["\[Rho]", "q"], "]"}]], "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"q", "-", "1"}], ")"}], 
         RowBox[{"Log", "[", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "2"}], "]"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{"d2th", "[", 
      RowBox[{"\[Rho]", ",", "q", ",", "x", ",", "n"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d2th", "[", 
    RowBox[{"\[Rho]_", ",", "q_", ",", "x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"n", "+", "2"}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Log", "[", 
         SuperscriptBox[
          RowBox[{"lambda", "[", 
           RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], "]"}]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"2", "x"}]}], "3"], " ", 
        RowBox[{"Log", "[", 
         SuperscriptBox[
          RowBox[{"lb", "[", "\[Rho]", "]"}], "q"], "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"Log", "[", "2", "]"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"q", "-", "1"}], ")"}], 
       RowBox[{"Log", "[", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}], "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WfDTh3", "[", 
   RowBox[{"n_", ",", "x_", ",", "q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"n", "+", "2"}], ")"}], 
   FractionBox[
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"Log", "[", "0.5", "]"}]}], "-", 
     RowBox[{
      RowBox[{"q", "/", 
       RowBox[{"(", 
        RowBox[{"q", "-", "1"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"5", "x"}]}], ")"}], "/", "6"}], 
      SuperscriptBox["\[Rho]", "2"]}]}], 
    RowBox[{"-", 
     RowBox[{"Log", "[", 
      RowBox[{"Fibonacci", "[", 
       RowBox[{"n", "+", "2"}], "]"}], "]"}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dth", "[", 
    RowBox[{"\[Rho]_", ",", "q_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"q", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"lambda", "[", 
            RowBox[{"\[Rho]", ",", "q"}], "]"}], "]"}]}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"lambda", "[", 
           RowBox[{
            SuperscriptBox["\[Rho]", "q"], ",", "q"}], "]"}], "]"}]}], 
        ")"}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"2", "x"}]}], "3"], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"q", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"lb", "[", "\[Rho]", "]"}], "]"}]}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"lb", "[", 
           SuperscriptBox["\[Rho]", "q"], "]"}], "]"}]}], ")"}]}]}], ")"}], 
    "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"q", "-", "1"}], ")"}], 
      RowBox[{"Log", "[", "\[Omega]", "]"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6505346020190897`*^9, 3.650534613880329*^9}, {
   3.650534669150167*^9, 3.650534719479341*^9}, {3.650534984787594*^9, 
   3.650535041805626*^9}, 3.650535089685038*^9, {3.6505352561288023`*^9, 
   3.6505352691138477`*^9}, {3.650535305848927*^9, 3.65053531675263*^9}, {
   3.650539324562834*^9, 3.650539446523595*^9}, {3.650718381841858*^9, 
   3.650718385947525*^9}, {3.650718606206324*^9, 3.650718692550974*^9}, {
   3.650719168987698*^9, 3.650719192466907*^9}, {3.650719240808002*^9, 
   3.6507192732162743`*^9}, {3.650719345419446*^9, 3.6507193562160177`*^9}, {
   3.650719511550655*^9, 3.6507195348102083`*^9}, {3.650719673709799*^9, 
   3.650719673984948*^9}, {3.6507197683523827`*^9, 3.650719828280758*^9}, {
   3.650777889563384*^9, 3.650777920554966*^9}, {3.650779897400887*^9, 
   3.650779897515992*^9}, {3.650780031982345*^9, 3.6507800506895103`*^9}, {
   3.6507803550576353`*^9, 3.650780396942089*^9}, {3.650780781423848*^9, 
   3.650780860329751*^9}, 3.6507809482568283`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"r", ",", "q"}], "]"}], 
      SuperscriptBox["r", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "[", 
           RowBox[{"r", ",", "q"}], "]"}], 
          SuperscriptBox["r", "2"]}], ")"}], "2"]}]]}], 
    RowBox[{"2", 
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"r", ",", "q"}], "]"}], 
     SuperscriptBox["r", "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6507801043681927`*^9, 3.6507801300652437`*^9}, {
  3.6507802663221827`*^9, 3.650780296882216*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox["3", "2"], "-", 
     FractionBox[
      SqrtBox["5"], "2"]}], ")"}], "+", 
   RowBox[{
    FractionBox["1", "10"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "20"}], "+", 
      RowBox[{"8", " ", 
       SqrtBox["5"]}], "+", 
      RowBox[{"5", " ", "q"}], "-", 
      RowBox[{"2", " ", 
       SqrtBox["5"], " ", "q"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"r", "-", "1"}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "100"], " ", 
    RowBox[{"(", 
     RowBox[{"300", "-", 
      RowBox[{"136", " ", 
       SqrtBox["5"]}], "-", 
      RowBox[{"125", " ", "q"}], "+", 
      RowBox[{"58", " ", 
       SqrtBox["5"], " ", "q"}], "+", 
      RowBox[{"25", " ", 
       SuperscriptBox["q", "2"]}], "-", 
      RowBox[{"11", " ", 
       SqrtBox["5"], " ", 
       SuperscriptBox["q", "2"]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"r", "-", "1"}], ")"}], "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"r", "-", "1"}], "]"}], "3"],
    SeriesData[$CellContext`r, 1, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`r, 1, {
   Rational[3, 2] + Rational[-1, 2] 5^Rational[1, 2], 
    Rational[1, 10] (-20 + 8 5^Rational[1, 2] + 5 $CellContext`q - 2 
     5^Rational[1, 2] $CellContext`q), 
    Rational[1, 100] (300 - 136 5^Rational[1, 2] - 125 $CellContext`q + 
     58 5^Rational[1, 2] $CellContext`q + 25 $CellContext`q^2 - 11 
     5^Rational[1, 2] $CellContext`q^2)}, 0, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.650780118346199*^9, 3.650780131299046*^9}, {
   3.650780284292341*^9, 3.650780297215617*^9}, 3.6508608158240137`*^9, 
   3.650862611343598*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Data averaged per value of x", "Subsubsection",
 CellChangeTimes->{{3.6507779715790157`*^9, 3.650778026778986*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wfdth", "[", 
     RowBox[{"\[Rho]", ",", "q", ",", "0", ",", 
      SuperscriptBox["10", "4"]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AbsolutePointSize", "[", "4.5", "]"}], ",", 
      RowBox[{"Point", "@", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"qlist", ",", 
           RowBox[{"avdqlist", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}]}], "}"}]}], 
   ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(0)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"stylize", "[", 
     RowBox[{"\"\<\[Rho] = \>\"", "<>", 
      RowBox[{"ToString", "[", "\[Rho]", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650718407766705*^9, 3.650718445165225*^9}, {
  3.650718786586598*^9, 3.6507188588705807`*^9}, {3.650718890554184*^9, 
  3.650718904495407*^9}, {3.650718962406781*^9, 3.650718979744109*^9}, {
  3.650719196348092*^9, 3.650719227265265*^9}, {3.650719261592016*^9, 
  3.6507192917470207`*^9}, {3.65071946572711*^9, 3.6507194913981953`*^9}, {
  3.6507195538237143`*^9, 3.650719633360579*^9}, {3.6507198201683397`*^9, 
  3.6507198235686703`*^9}, {3.650719903243977*^9, 3.6507199098558598`*^9}, {
  3.650719942830716*^9, 3.650719961759276*^9}, {3.65077783254595*^9, 
  3.6507779151685543`*^9}, {3.650862588940641*^9, 3.650862589131371*^9}, {
  3.6508626203648357`*^9, 3.650862742766029*^9}, {3.650862796270203*^9, 
  3.6508627999660807`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
f3+05cOS/wduPW9p
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(0)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[Large, FontFamily -> "Linux Libertine Display"],
  DisplayFunction->Identity,
  Epilog->{
    AbsolutePointSize[4.5], 
    PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWX7UnnVbfEpj6D8x/b3819cVbx72f4M
GLyx37vMNuLLq2NQ+c/2LgxnHk/+vNceYs4P+8fxHw08pLZB1f+xv8xrJJH4
ZqP9WTCfwaHZ5vASe5b1UP3MDiE95Wua/q+2nwkGrA5m+yUq5H+thJrH4XC8
3NfJtnuFfRoYcDloXOO+d7BqOdR8HoeLUo0FJ1csg5rH75BQx2uozrQMap+A
w+EFn3t3Vy2FmifkkFTWuLKFaylUvbCD4pWLb1jWLIGaL+JQ4FZrFxm9BOoe
UYe7U6uXrBVdAjVPzEGxefaLZzcWQ82TcFhgu948e/FiqHmSDhf+8Lf/LV4M
NU/KoeJW2+4lnouh5kk73FCVSZmlvBjqfhmHU/9sKuwYYebJOcwOPlDF92gR
1Dx5B2GJ5q/zjsL4Cg66C3/PnrZ6EdQ9Cg5nUvbOWTV5EdQ+RQeuc37nZ9cu
gpqn5KC7tbrFJHMR1H4lBx4BjgtuYTDzlB3iyuT1VrvAzFN22CR7J8/eZJE9
AIl44W0=
     "]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox["\"\[Rho] = 0.15\"", 
     Directive[Large, FontFamily -> "Linux Libertine Display"], StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6507184233671417`*^9, 3.650718445789122*^9}, {
   3.650718786971148*^9, 3.650718859699255*^9}, 3.650718905199617*^9, 
   3.6507189808930397`*^9, {3.65071921374327*^9, 3.650719227792285*^9}, {
   3.650719263444695*^9, 3.650719292323936*^9}, 3.650719358707658*^9, {
   3.650719467373415*^9, 3.65071949196379*^9}, {3.650719538196452*^9, 
   3.650719554428334*^9}, {3.650719587991088*^9, 3.6507196342943983`*^9}, {
   3.6507197721981297`*^9, 3.6507198306925917`*^9}, {3.650719883900537*^9, 
   3.650719990815322*^9}, {3.650777827488936*^9, 3.650777922067745*^9}, {
   3.650862585238174*^9, 3.650862628141445*^9}, {3.6508626687309217`*^9, 
   3.650862693584054*^9}, {3.6508627316813517`*^9, 3.6508627433681087`*^9}, {
   3.650862784447565*^9, 3.6508628003701878`*^9}, 3.65086283522078*^9, 
   3.650863277993328*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
qIHgew==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qdqlist", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"qlist", ",", "#"}], "}"}]}], "]"}], "&"}], "/@", 
    "avdqlist"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotfunc", "[", "q_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"wfdth", "[", 
      RowBox[{"\[Rho]", ",", "q", ",", "#", ",", 
       SuperscriptBox["10", "4"]}], "]"}], "&"}], "/@", "xvalues"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Blue"}], "}"}], ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", 
        RowBox[{"Length", "@", "xvalues"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"plotfunc", "[", "q", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AbsolutePointSize", "[", "4.5", "]"}], ",", 
      RowBox[{"Point", "/@", "qdqlist"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"stylize", "[", 
     RowBox[{"\"\<\[Rho] = \>\"", "<>", 
      RowBox[{"ToString", "[", "\[Rho]", "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\"\<x=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", "#", "]"}], "]"}]}], "&"}], ")"}], "/@", 
     "xvalues"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "t"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.650718407766705*^9, 3.650718445165225*^9}, {
   3.650718786586598*^9, 3.6507188588705807`*^9}, {3.650718890554184*^9, 
   3.650718904495407*^9}, {3.650718962406781*^9, 3.650718979744109*^9}, {
   3.650719196348092*^9, 3.650719227265265*^9}, {3.650719261592016*^9, 
   3.6507192917470207`*^9}, {3.65071946572711*^9, 3.6507194913981953`*^9}, {
   3.6507195538237143`*^9, 3.650719633360579*^9}, {3.6507198201683397`*^9, 
   3.6507198235686703`*^9}, {3.650719903243977*^9, 3.6507199098558598`*^9}, {
   3.650719942830716*^9, 3.650719961759276*^9}, {3.65077783254595*^9, 
   3.6507779151685543`*^9}, {3.650862588940641*^9, 3.650862589131371*^9}, {
   3.6508626203648357`*^9, 3.650862742766029*^9}, {3.650862796270203*^9, 
   3.6508627999660807`*^9}, {3.650863301453699*^9, 3.650863311868124*^9}, {
   3.6508633475650587`*^9, 3.650863426718164*^9}, {3.650863462895014*^9, 
   3.650863481517935*^9}, {3.650863597726318*^9, 3.650863759375237*^9}, {
   3.650863792737142*^9, 3.650863885406082*^9}, {3.6508639511191998`*^9, 
   3.650864019393972*^9}, {3.650872519382955*^9, 3.650872521920269*^9}, 
   3.650877828026168*^9, {3.6508789115467577`*^9, 3.650878912644103*^9}, 
   3.650878943002697*^9, {3.650879203706778*^9, 3.650879209972184*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0, 0]], 
       LineBox[CompressedData["
1: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
f3+05cOS/wduPW9p
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[6, 7], 0.8571428571428571], 0, 
         NCache[
          Rational[1, 7], 0.14285714285714285`]]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[5, 7], 0.7142857142857143], 0, 
         NCache[
          Rational[2, 7], 0.2857142857142857]]], 
       LineBox[CompressedData["
1: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
y5fw/wAGdmiu
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[4, 7], 0.5714285714285714], 0, 
         NCache[
          Rational[3, 7], 0.42857142857142855`]]], 
       LineBox[CompressedData["
1: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
qiscDhXNLJtPPyP8PzUSg/4=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[3, 7], 0.42857142857142855`], 0, 
         NCache[
          Rational[4, 7], 0.5714285714285714]]], 
       LineBox[CompressedData["
1:eJwV1nk01N3/APAZk5JEhCQJow0JRZS8r5BWSUnZ1+zE0/OoqIhMthJKKkta
ZFfq+doeZCmESFkqn88sZkaDrGNnfp/fH/fc8zp3Oe/7ft97zlV2DbTyECKR
SHyi/X+ffsN1pbZ7nNGyXYZ8MWkMMmyH99soecNxoxLvrexR6DsZG6ykdBX6
WSMCueZRCDG/IC6sFANna2hnou6PwuEGZD+zJQ2sl1Y8clcdhcJbeyPHtuTC
gWMnHNdb/QGGS5HsyJZyKJPLFQv8PAy85wK34cFyiEjc3WT+bhgm2JZvht5U
wHutJVWz9GFY4TN5nGdSBZVkU2ZB4DBsC9aP4HrWQGf7a0812WHQM2bwx3rq
wNvsFxR7D0HoaV/noS3N8Ni7ak/MTh4sR+ptxOOb4c8/La8WpXkQ/i/569e5
ZjgnU78+hcSDqE2PTCq6WqBlfvs6zd7fcJfdsC2G1gqeeSdUVsf8hqyriiPb
Rr8AR8+4XXt8EFgdg4baTl1g6J0hJ/2DC6o+FhvzH3TBF4vG0YJmLlykvOOr
tnZBgG+Pjns5FwZ1bxbJGXwDa6UbDrvSuDD8WEaJtP476BQljm+15cK0+yHK
l4/d0CxW/zWBwYHVc0+a/TR/wCa1rKc7hTmgT+u7dszlBwh6ah0V59jgJbNB
Y0fKD7CutAzcOcKGj9pJd1lzPyDyeMByxHc2RPncOWPb+BP4UxKeBjlsIP26
3G9u3w9qM3ljLy3YoOXz9u7We/2wwvscd8yEDU6zo0Cp64eL+i/0LA3YUC3t
m129HYO2jf+6HFdlQ+hJF0/dSQx2pO0O01oYgFD81RVJMzoU7fJ0f1wwAEmv
zE6HO9JB/B/J/QrPByDPf2DnaAgdfLaWXy5JG4AfC8o/W/Po4Na/PV2CNgD6
cukH76xjgOmkvu1L1wGYtkwWEvxkwPTuv96s3zwAQXU344eDWaB388z0jgwW
zEqmFP6MY8G59NBGxkMW3HB53d7yggUjViIFr++xIJ7UuS63mwXUd5VnnSNY
8NpI5YHH/gHQSOrWuuzBAnpFQzpGZgO/JuXCBi0WeIr2VbfJs+H0t/dOL3ey
4M+FEbxqDxtOUCvpQGXB4qyMyhMPNnRq1oylybJAbp/nK5tmNthmWaTjS0yw
LF1d3JHIgU39FOOn7UzoEVLsqMnlwKrb3ws4TUxwtNIZL6rjwK38cjnDeib4
jdvuSZjiAJc/93BVGRPu7C7439HzXKjWQB8Us5lQk29RW7dlELYk93P2X2GC
5ovkzndFv8Fx143Fx+pMkH6kNVPb/BsOZc4+rtzGhIW4NoW2gd/A/U7T4igz
oemvVV5seR58czDjnJdjgqtJ6LIMjQeM1D6xt8JMeMB0VQ9xGoIqNs1ficmA
sG6BZeS1IVh9+pxZdz8DXFue/nPvwRA46EvWpvQxQPNt94ecz0NAPvr1lHon
A5oijp3v3TcM1lzT/6pqGbCopHPbYN0IFLteiXV+xgCm9Jc8M/URcJj6VZWa
zoBmEb+O04dHYM9QoV93GgMejr3c5BM2Aj+8qGSfJAZo1W58+3hwBMqbTTUH
Ixng5kTGF2r/wMTkqRc6XgxgW3gp4Ppj0Lk2Q/WRLgOkP/qp3jAbA1+nvaVd
Ogw4dDBIY7PVGNAujWhLazEgS/2aoZ3vGKTGZfc8V2OAvUi8fU/6GKh8O1ay
uIUBXz8UP/0iNA7G8jzj+DUMqN47o1DbOg5DI3/SBth0GMlfUHXqG4fQUxYX
Clh0UKCSdi2zx+H9WauxEAYdrkquPmgoGIed1/bR5PvpsPePvEOZ9gQ0HSqM
if9Gh7wco/SShxPwvH531uYGOqTKR29+5jwJ2h7DOxpf0mGa1Z5jETAJFMdd
2t+e0+Fs4QadxdBJeH+oo57zjA5SKPewTeok0Cs1fWUz6BDv0Rq4tn0SYkgJ
8xkP6RBeIlV39cAUFJ4nSZ26Qwevw5kXrWT5sHZYg7XkT4ePEoNjAiofcqO3
Hgnyo8PWPq3QQm0+RLRm+HJ96MD0rbsncpIP79gyvT896WB/n11WHcmHwIbq
4gEXOlj+Ul+jPs6Hq1IJDUHn6GAQXFZMaZ2GiJ68NTbGdOgQHHAM6puGjnVJ
uoqIDhcTasRwzjTU9XMDuEZ0SHr90buCPAMFZK7gpiEdeNg3atC+GRBeq7mr
eR8dnh4fT8WyZ2DCLcqxTJMOy6pq4eVXZyE/J2p8bDMdUt4Wam6nzcLBG5X9
Ewp0UEPa/Skps2CuMug5vYkO5+z0918qnoUq+f+OCsnTofj+4alt7FlwL5wb
0ZClg/Oyq1eK5Ry8pz1T/ixOh/qeJ5aB2+fhqNRU3gYysb+r9RR/zzxcX35b
ak0i4h8RfxSG5uFRhGHJTgEOopRbeMyFedDSNu7VWMTBUtMr4EXcPMSRMJmT
0zhgUXvj+0bnoXiCQprg4TCv3fbJpGwBTOmRle++49BaFe3b0rAAypOZry99
wyHDHEmc7lyAegdxB80uHIwdSs858hZAqTNAorgDhzt30thXFBZBUdTQrPEz
DrK4B6UofBFeRak6HqrDQTt+2Uju6BKscfbM9y3BQcd70b3w3BK0N51ZNinG
Ye/h+dhD7kvQ3GtHUizCQY803e13cwmOtNsK9+TjYHh5JODD+yX4lJXxn30O
Dkfsf2X4qCyDT4bpqXcZODhrVCxXLSxD0AqGT/hdHFxXl6larRZAMyVbIiYB
BzfO+2NcWQFs9LNZkxyPw8WsNw8ldQSQkKq4nBeLg590ruZFLwGI8STu8aJx
CFlMdZT4LoDFUp7dq5s4mHP241o2JFQRlRpGDibWd30bpjmQ0Be5AppREA5R
tQHzmBsJZZqZ3gq7hMOHx9kyCZdIyHlxAhYCcDhwSvTE7xgSKjKuL6X44bC7
rK/sWRUJRcxq6cJFHDbEXkmSUiEjZ0bKwjk74vwhUlneO8joE/++QbEtDmfd
CwprNckoMfnsARHC943oTQEHyMhBfOR21Xkc1kyaC1rOktGWRG9ZzXM4COw2
+EXSyOj73QqVvadx4O7612xqmIyihBjQYI6DynV/D/VJMqrA/87XJWzfqnrb
dY6MxN3n3+QcxqHDJ7mhQ1gILSn1xSeY4VCRc8mkUFEIFTvRXJxNcIhXVje+
aCmETut21ysDUV+ZLMPeUiG0fsej/LX7iHy629hLVAihgtHwvkQ9HF6Viocd
rhVCDgbkWGnC8lbXK9+1CqFTF2S8N+visOKe7f77bCGkwBKW092DQ7eIjP6x
DRR0zLQ3JXQ3DqGLMXuqrlFQkL6Hp/MOHNovu6Vci6Agxykdmd/bcVAaMeTr
36Eg4dRcs2DCDf2j/75/QEEP2nYrRm/DQazGen9xCQUFB0fllaoS9zlC2Tib
Q0ERe57c3KpM1GtlucUdqxVI95BtiJM8DqskB73PqgkjrYWTZ0TFcZim2Ztl
agmjbSL3/pSuxYGz3KHE0xNG/lU/cQfCH4fLe26aCKNXimvT3orhEN0UZ5Zv
L4xE9ma/cFqDw8rw3cpC94SR+7bO4k8ihEf/6S2eFEbZrg6cVgoOwm3C5mv+
W4neqMYx0uYxEPN/6tZfvxKp2nQ7WhCWXrsnvLiFGH9QJE0hrHrSufxM70pk
OwXK/nMYmLZVqD+dXIkWpk+6m85icKstcN0utVXoQ5LAXMDHgNTe12eRugrR
TLnJ2eMYLLQX+iUFiaD4j5PDWb8xUOx0eWJ6RQTJZDU8dSd8qEumZfqGCHp4
4HXYDsKxPde328WLoC9n6j6XDGIgRz/JpOaIoDOX1z2r52KgNz5i8/6XCHoe
kz8zzsbg0npNk17z1chOdpEZyMSAbVO0UVFRFK0oiFfi/MTg1fmlOntVUbQQ
O5f5P8JeF074PVETRaVne41iCPNsedVy+0SRRJrfDw3CYw7b3NdbiqLf5PDb
f//AYNEto0jklihKcbFPFOvDYP2luyaTbFH0pOdqrmU3BsZ3AvybCtegsfux
XLVODB4sl602cVqLoMYRP/wJAzuF+hO/JsWRVFXI6/M1RL5r1YdVrNchU9/M
ONb/MPDQzeZf0JBEs9HcrPA3GITcuGKlxJdE9nCw9kABBrd5yV3t7VLIoFO5
c2sOBifUJF6LPV6PKA2bG9nZGCQU6tWecJFGX7MDNypnYtBy5vniZQMZVKQ5
Q/d7gkFtW2C8BkUWTV8dJB95hMFbnwjU2i+L0i2K/lZ/QNTjOOgHvNuAKr4G
RzsnYWAisI/MDJND1teSnOfvYeDeXTNRZr0RGfj/3JucgIFRxK33LkryqHZu
b+jNOAySAscrxbjyKKhqnpUWgwEz/CUns3oTEq79ihXRMBjyKHevoykgK4Nl
ZUo0kV9/qVVtLptRzO6Z86ejMCg6+nnx4i5FpH0qq/H7LQw4Xlp6FL4i0vEv
cg6JwEA+/0cyrW0LGtfTj5YMxyDSOTi77bgSwgI7srtvYDCzuDHheLkSqm6c
+zvlOvHPrkxNa1FVRoXN9r+8wzDQdWs8JRmjjPQctTGXUCIfT2XkWvnK6FY6
mFhdI+bXysRa2KkgLDjDz+UqBieFhzd/rVZBY3Gu7uFXiHh/DtQ3q1ERTxY1
poZgEPg0YX3MPSqarbBpavoHg1ay6uix+1QkLqJm3EhYzbOiRSyZiu6Ol1R8
IDygzY1IfEhFNh9/FlcQPv8JjaWmU1F+bGZ2AeFDE5Otr/KpqCGhJDeRsOwR
2+iGT1SkbXrb8ALhvwrHXKKbqejrdORna8IdUrSDRz5T0VCelp0V4bj+0qnP
7VTEPpocdpww6a+1bl3fqeh8U8ing4R56bXAZFHRlOz96yqEzSk2m16wqSiU
Z7NhC+EXXiPTHlwq+pPY/GYTYac98kW/eVRkEV8wKE34W9NfCuPjVBT10ddx
FWFtTdHZt5NU9Kw0colC+G5yVtdlPhUdHDBNJxE+6tgWOztLRQfM67C5v4n3
V+92sWKeinJkb4RPE16xc944bJGKdrkyVSYJu9xN3Gy0TEWxs38aRwlXT26b
EwioSCj3ufcw4f8DG6SfmQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[2, 7], 0.2857142857142857], 0, 
         NCache[
          Rational[5, 7], 0.7142857142857143]]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[1, 7], 0.14285714285714285`], 0, 
         NCache[
          Rational[6, 7], 0.8571428571428571]]], 
       LineBox[CompressedData["
1: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
rmVvm+NwcJ5i6Wvzsf8HZDRqEw==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"q\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
     Directive[Large, FontFamily -> "Linux Libertine Display"], 
     DisplayFunction :> Identity, Epilog -> {
       AbsolutePointSize[4.5], {
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbP+ZexoiP6EZT/2L7t+KnlB09d
tj8DBm/s51vsr2G7eAwq/9l+u5aU8+ILe+0hpv2wf/uk/dY+hm1Q9X/sbx7h
mPno+kb7s2A+g0PLR2+JXw/WQfUzO/DGa2/dd3+1/UwwYHWY66yvvPbOSqh5
HA77dtjw5eavsE8DAy6HMm93ffWE5VDzeRycvI69lOlfBjWP3yFP92e3+cul
UPsEHHYYbItLTVoKNU/I4eHf7gVrPy2Bqhd2CA11+jZjyhKo+SIONYEv1nm4
LIG6R9Th0X4+1jf/FkPNE3NY59unmnVoMdQ8CQfFpBm82r2LoeZJOtRv2y/5
OXYx1DwphykuPJ6njBdDzZN2iJOL5X7NuxjqfhmHnDWFvNteL4KaJ+cgNONn
6sozi6DmyTt8i50sEbUBxldwkDnyyDZ/2iKoexQckksdIufVLYLap+hgInCo
c0UGzDwlhxP72GIjQhZB7VdyqGq6JdXgCDNP2UEpSS/nhz7MPGWHQ0tvuM+X
X2QPANmC6OI=
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbvTVOvqC58DOU/tj+uuIFDLe+6
/RkweGPvLfJQK6D/PFT+s/2DDG1GifAT9hDTftgH721nTjpyBKr+j72xg/p6
izuH7M+C+QwO0fPedPYfPAjVz+xgXXRu81KBg/YzwYDVwfX/kodCsw5AzeNw
2O2gW/zB9YB9GhhwOXRfc1PIYz8ANZ/Hwbc9+GXDuv1Q8/gdBD6aTGdL2g+1
T8BB8Zny+nvK+6HmCTnU8L0Xif2wD6pe2GH/h6Pv/hzZBzVfxEH31ZM5X+fv
g7pH1KFC8vLdX/X7oOaJOTgfWWMmmrIPap6Eg8jyoz0d3jDzJB2Ca6ZFHTaF
mSfl0LDyvEewEsw8aQfVyZGOdwX2Qd0v47C6Xu+8OCPMPDkHHpf3PMc/7YWa
J+/w30t6+c6nML6Cw+JpmQuO3dwLdY+CQ0qQ7sLT5/ZC7VN0YLlwa/XqI3uh
5ik5BHcqyvjt3gu1X8nhfuueu3M3wcxTdghoizvbsQpmnrLD1sJTlv8X7bUH
ABN97FA=
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP//oPAe3tjMLhsL7Xz6/3XEc+g/Mf2TofOWfv+
vW9/Bgze2Huuvp8tGXETKv/ZPo91x4IJctfsIab9sO81Xj0psvEKVP0fe4dn
a1UnL75sfxbMZ3B4pDQrv1HpMlQ/s4O9yxkP04uX7GeCAavDrTfSfm6zLkHN
43Bo7+Eyf1F0yT4NDLgcdogIWwWGXoKaz+Pw74LzD1O7S1Dz+B2kT21/OEv7
EtQ+AYfdc/3v2cnAzBNy4AzcetyXH6Ze2OH9DwUFMxaY+SIO+z/LPZ/w6yLU
PaIO/hKlesKfLkLNE3OwrT6k2frqItQ8CYfWzTVFex5fhJon6eBUlmg74+5F
qHlSDv9vNB7/dx1mnrTDl2mWPbcvXYS6X8Yh+okEg9w5mHlyDvMLrizdcRJm
nrxDjGlh4oKjML6CA9d3l++nD8Lco+BwYUX0KuN9MPsUHXb92vjxwi6YeUoO
u/e62c3bDrNfyUE56cDZaVtg5ik77NKb0rZtI8w8ZYeWGwW3f667aA8AP2X1
HQ==
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP//oPAe3tjMLhsHyjmPVVC7TmU/9jeNVdBfdfi
h/ZnwOCNfVgWl+qZnrtQ+c/2DrvnhN/ed8seYtoP+yD1G36VwTeh6v/Y3xN6
KyjSd8P+LJjP4MCyXXrWfskbUP3MDt79h391nL9uPxMMWB0q3mXX7ZlzHWoe
h8OrmCLWm+XX7dPAgMth+oGImr3R16Hm8zhE/lgWXeV6HWoev4N4qH+ap/F1
qH0CDvz/rKK5VGDmCTkw2AjF/xODqRd22DBrcfwibpj5Ig4LlQ7XzGSEuUfU
Ya84s8yCH9eg5ok5vJm39kHzh2tQ8yQcWM0nNsm9vAY1T9Lh6KWm5KBH16Dm
STmwBRnbcty5BjVP2iFrNmOL7rVrUPfLOBg9WuG4+QLMPDkHeRkVx97TMPPk
HbzYdxVtPAbjKzgsnjyjXPwQzD0KDjPOH/PcsRdmn6LDZ/nNP3p3wsxTcshY
8aVk8laY/UoOk9XT049shJmn7PDV/baA7DqYecoOFjdCDGatumYPAD1M6ds=

         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbfVOlQKJn5Esp/bP923xH9/zFP
7c+AwRt7vs6pqomGj6Hyn+3tvD6oH5V8ZA8x7Yd9+0Jtj9zOh1D1f+xndb3N
brd8aH8WzGdwWBRTMzOL8yFUP7OD2rmff96/fGA/EwxYHda0cdw6fPkB1DwO
B7GE/uXqhx/Yp4EBl8Pylm9rhLc9gJrP4yCyIcEjdvUDqHn8DgE/b6X5L3oA
tU/AQezxl2tls2DmCTnYfd2t2z4Zpl7YoU5m2m3vXpj5Ig6Z02ynzm+HuUfU
Qf98qE56E8w8MYdfme8i+2ph5kk43L3yfi1rJcw8SYfjXh8NDpbAzJNyOBuv
V7a9AGaetIP8y89fH+TA3C/jsLJWeIZ5Jsw8OYfGiU/itqXCzJN3UPhzUiMy
CcZXcDCrmtIoEw9zj4LDZxan+r/RMPsUHd6UMCz/GQEzT8nB+6D7Db4wmP1K
DmlnGmysg2HmKTswvpa2qg2Amafs8FvDPeuy7wN7AHqi8Vw=
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLa3zO9XklR5BeU/tm8r/PJO6OUz
+zNg8Ma+pklGZab1U6j8Z/uYhOfBkxKe2ENM+2FveWzDUp03j6Hq/9jvD+ds
bl352P4smM/gsKBnbuWv+sdQ/cwOpQsu1T5Ofmw/EwxYHVY5Cd2p8X8MNY/D
QUiW7cZh+8f2aWDA5fD/nX86nzHMfB6Hu213ryZrwMzjd3iQOb9eWx5mn4DD
b2ORHGZxmHlCDo/WtBiv4oepF3ZwapdZ+okDZr6Ig976yCl7mGDuEXU4eTO3
9sOfR1DzxBy2x4qcqvn+CGqehEPrveW8IZ8eQc2TdDipdvNG9ttHUPOkHPTP
q7/d/eIR1DxpB405xetsnzyCul/GQWv2mb2v78PMk3NgTHDacPA2zDx5h7B/
Ijd3X4fxFRweivYrXr8Mc4+CQ4ndylcCF2D2KTr8ijr9Ne0MzDwlB1P+s0HX
T8DsV3K4/PpBYMJRmHnKDnJPSioYDsHMU3bwuRFSsW3fI3sAiMb1wg==
         "]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLbfv2misqzwGyj/sf3m6QKb17i+
sj8DBm/sK8WOVs5IeQmV/2w/yUHrUty7F/YQ037Yz3p2f9mHVS+g6v/Yv1rE
bvyx4YX9WTCfwWGl48XFBSkvoPqZHaZdZFDv8X9hPxMMWB1OXHUsMLWHmcfh
cGr27dYDhi/s08CAy2HaWS9DczWY+TwO91f4sbHKwMzjd3Bf67fsjBDMPgGH
aW43WAO5YOYJOTwRnnMpgwmmXtgh83Gewfdfz6HmizgYOpcmP//8HOoeUQce
//PKWm+fQ80Tc5h+mfH15mfPoeZJOOR/y79R/eA51DxJh4+cxz5X3YKZJ+Vw
eHfg6tVXYOZJO6xMra3kPP8c6n4ZB1nhrCUTTsLMk3OQTw3itzsCM0/eYYq+
swT/fhhfwSHwXHsd4y6YexQcDn4K8hfeCrNP0eGO5YdrThtg5ik5aEv5Tu1b
DbNfyaH67X+Tr8tg5ik7fKo1aCldBDNP2cH+zPs8vnnP7QEAs/I/
         "]]}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> FormBox[
       StyleBox["\"\[Rho] = 0.15\"", 
        Directive[Large, FontFamily -> "Linux Libertine Display"], 
        StripOnInput -> False], TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"x=0.\"", "\"x=0.0526316\"", "\"x=0.157895\"", "\"x=0.210526\"", 
       "\"x=0.315789\"", "\"x=0.368421\"", "\"x=0.473684\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[6, 7], 0.8571428571428571], 0, 
                    NCache[
                    Rational[1, 7], 0.14285714285714285`]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[6, 7], 0.8571428571428571], 0, 
                    NCache[
                    Rational[1, 7], 0.14285714285714285`]]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 7], 0.7142857142857143], 0, 
                    NCache[
                    Rational[2, 7], 0.2857142857142857]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 7], 0.7142857142857143], 0, 
                    NCache[
                    Rational[2, 7], 0.2857142857142857]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[4, 7], 0.5714285714285714], 0, 
                    NCache[
                    Rational[3, 7], 0.42857142857142855`]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[4, 7], 0.5714285714285714], 0, 
                    NCache[
                    Rational[3, 7], 0.42857142857142855`]]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 7], 0.42857142857142855`], 0, 
                    NCache[
                    Rational[4, 7], 0.5714285714285714]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[3, 7], 0.42857142857142855`], 0, 
                    NCache[
                    Rational[4, 7], 0.5714285714285714]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 7], 0.2857142857142857], 0, 
                    NCache[
                    Rational[5, 7], 0.7142857142857143]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 7], 0.2857142857142857], 0, 
                    NCache[
                    Rational[5, 7], 0.7142857142857143]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 7], 0.14285714285714285`], 0, 
                    NCache[
                    Rational[6, 7], 0.8571428571428571]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 7], 0.14285714285714285`], 0, 
                    NCache[
                    Rational[6, 7], 0.8571428571428571]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[6, 7], 0, 
                    Rational[1, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5714285714285714, 0., 0.09523809523809523], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[6/7, 0, 1/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[6, 7], 0, 
                    Rational[1, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[6, 7], 0, 
                    Rational[1, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[5, 7], 0, 
                    Rational[2, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.47619047619047616`, 0., 0.19047619047619047`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[5/7, 0, 2/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[5, 7], 0, 
                    Rational[2, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[5, 7], 0, 
                    Rational[2, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[4, 7], 0, 
                    Rational[3, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38095238095238093`, 0., 0.2857142857142857], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[4/7, 0, 3/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[4, 7], 0, 
                    Rational[3, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[4, 7], 0, 
                    Rational[3, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[3, 7], 0, 
                    Rational[4, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.2857142857142857, 0., 0.38095238095238093`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[3/7, 0, 4/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[3, 7], 0, 
                    Rational[4, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[3, 7], 0, 
                    Rational[4, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 7], 0, 
                    Rational[5, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19047619047619047`, 0., 0.47619047619047616`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/7, 0, 5/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 7], 0, 
                    Rational[5, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 7], 0, 
                    Rational[5, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 7], 0, 
                    Rational[6, 7]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09523809523809523, 0., 0.5714285714285714], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/7, 0, 6/7]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 7], 0, 
                    Rational[6, 7]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 7], 0, 
                    Rational[6, 7]], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.650863428677889*^9, {3.650863466549158*^9, 3.650863483205614*^9}, {
   3.65086360150422*^9, 3.6508636283337297`*^9}, {3.650863660935854*^9, 
   3.6508637610507174`*^9}, {3.6508637965574493`*^9, 3.650863886770648*^9}, {
   3.650863963068893*^9, 3.650864020180438*^9}, 3.650872522592334*^9, 
   3.650877776796816*^9, 3.650877829218299*^9, {3.650878914593853*^9, 
   3.650878944561372*^9}, {3.650879206286187*^9, 3.6508792111614513`*^9}}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJwV02c4FfwbB3COlFRGRhLCkXqQUUiD7y+iUmZlxGOTSqSURKElpWS1SPY+
xyoPkiSKk01WCumIg5CREH//F/f1vT7X/eZ+8b2lHDxMnSlsbGxTS/P/fHbV
YbmK010tNRW3v3S2McQeH95lLnkSQhsmbAraRtFhcOecpKQPdOiZlzfRR+G9
35KHUzIYLqNHaQesRqFXQax/b3wCkT2ODWkFP0G7pnp9bGM6PFws8xc8R9Br
Txce2ViEQM4YHu95FliJi47DA0UIUrJ7taaVhV9M49yh3GIMLmusepvNwrJT
E4dYOiWgX3rUds2RBdlzGoE/TrxBljKXj3vNINT39k6NtZWjSUS9WiRpAL4m
p+2GNlbD5BZa17r1Y+G6+vrukGo0cp043aLXj4AC9qamP9XoKjwb90aqHzc2
PNYpbmbAJFytWKCdifvMCtngoBpEXEhTKNRjIs5HYkR2tB7GAiPsGxS+o69h
YI+KbTOU2DeMWoh8g8wpw/WZUc1wyGJExs30woXjxZRMTTPyei3thDt6MaDm
TxfZ2QINCKWHPO3F8FMhSTaBTyhUP30xeWMvpp20Oerft0KmyVMvdFsPVv6J
rnZT7ETnkdYfHtNd0AjquKxv34ksvtcH2d93wVVoncKWyE6c4RbAt6guvFcJ
v9/3pxM2Rj9IuHoXbpy6feR45WdsMOv9mOz7GWxdXl/2W3+BByVuwV2wE77d
KZf4dXvAP+ze2HW1DeEpuiYBNj1wMDoaMGnehowz3/8Z9e7BxUTxL0dU2tA5
J/W5JqMHmtI9Rwe+t0JD5Jnmbb5eDGVpLtgYtWLaOIKy+LkXqhcfN6mrfIJn
uX/I8Lk+ZH17vIlXthkz/JG0z3f7cJ6ypoGLqxlX7dPqGEl9yA9ttdzDakII
WyNfemsfmjhFnxllNyFNSzrKedd3XHtm9FlsTxN6iiuefWVnosaieoHdrhEn
uDtKa0WZmPboy3DXbcRPy5Huku1MpAupXeWVb8T8jJB0tDMT+w2fKg1PN0Bk
x4kU82ompB4bfF4R1gDj/JXZDQ/60Tvn+nsiph5tFImGN+lLPSj25lw4Uw8b
023j9PJ+sA5c1HJGPdzGj2+/N9kPLS+674G+OtxWyvrvoMUPaF12MjFSqsOb
TMOy8o0D6J/x2cZoq4FiUkTjC/ogPnq/XjHvzIDgY+XfZdWDKBdvcziixcDc
3Vqx2u+DqJLpD2Zbx0DV+RWuTFEWeNvDDltWV8NBx3dBKIiFZKVldmMq1Yj6
5iDvbTuEqJj2euG1VfBrXTS+fnkIu0Rzr10Y/QAHRszF0KghRB5xapeo/QDF
vNa3qR+HEGczUGcY/AFVgfoW7TuGIbOe3svP+QHzkttu7uQbgexQXOjjle/x
TbA+Q1d+BOymqTHHhipRzeXWYKI3AgNZ7ZNHaivxcCx5wym/EeTv7J3gCa+E
ctn6vKcDI5jmsp26IFEJR1v27rmyn+Ce2ll1W7sCTENXsW6NMbSNRO7d/KIc
gu/dZK7qjmFYYE2xf2w5tDU9FcRNx9B3JvoqJbgccfKX91idHgPtYGLATZty
WHOFWLc9G8Nry/wk71VLf/02O6aeMg4t1w+vytzeolT1t1hZzTj0tzKraPpl
GMmck7HtGIfa5ivXaTvLIEZl27rAHAf99bc7tVvK4MO/UnPP4jh8b652O7Oi
DKo/Rf8tVPmFaIW69fohb5CRqvUs5+EvfNDwpnuFl+KR6C3xeLsJ7Hq39mNM
VQmm++pSDd0nEFYpZeSbWYKjtHXb5n0nsJc+3RVxvwRrSbqe+aMJ0GILODyP
lSDEucZjTd0EmnMzdWqZrxCQs7bcZ/ckgooY/z3ne4WvPlaHNx+cxPHEE7v7
pouhqZPU2mI2icEDfqssvxRj9pPakNK5SVzL6ajuyCiG15yFYH/aJF57JN+m
HiiGq95zF1PhKfzaOf7W524R3vMOjC1Sp6Ac1fOV7lWETR3KvjSVKax/qJbI
a1OEb6fLQ7kMpvBWXCTaVKUI1mHMwtLrU9hdVc9o7iiEcZf8KvnxKQRuOr/1
3LZC7DxXmM1RMw2qocHGd4sFaFjcbePZMQ0+u3CWwM8CuNx7s7q7fxp1I9QH
N7oKEJ72/mQx+2+wHW6zqCgqAOtrC9Vzx2/w8MwHF1woQMyh8UdfE35jeUho
vsLESyzIyAUU+czgyZiXeSHlJSLzaIqbg2agcNxC/O7kC8gRlS+RkTPw71HQ
v9j/AmZWGrvOZs9A0TJrdRTjBbLD9CZlmTNw5Vcs+RnxAnYLDq6Rxn+wV+3y
uQG5F3jXFm3ssXkWq0a4Egtd8xHpcGxyavssIs5vi6fY5MNlhOexH5mF2aV1
nP8eyQc3x7XuYMtZBOSbB2pr5cNY0dU96e4srE9JTNcI5uPrDdWQjtFZ5Jn8
Ga2syMOsSu0HncI5KKR/v3xTKQ81JbdOMyrmoDxjn5gkm4fY/YTXpHEO7Vud
KxrE87D333wzG9YcfuY8CTVanYfbt58wL4nNY7WeUcn3wVwIdztz0APmcTtq
2R3L1FyohCxoiRz8i5zfH7a1yeVi28l5J5rZX3ySKW1lSOdCVW/2jrbTXwyt
n4pliOZCnW261c3/L+pX/af1kzsXe7xG3N++/AsDp8Yd74ZycMC6K/aU9AL4
9qqGPcjOgZ1C8ULJ3AIGZx4/lUUOHFYWypiuXMSIgQ3lgkYOHPtf6v8QXsSG
YJG5GpUcuMTlPuTftgjbN6ctn8jkwE0wXdHFdRGsZIveeO4ceM8/suH9tIit
q3iC3+dkY3//rm5lczayyU/wncckHS7NLcNB/7KRPJHXAmODdNwoc5/96shG
LsaFpV7ppuPt0wShe2fZyD6rMFLGoGO3EffhwWA2EhZ1qKsnng6lwo7C+BI2
wmNAX/AzpWPdnUvha6XZybWLzh8jS2hQ914bd3ILO7HdnhYTlU/DUacsWpki
O+Exztoen0FDmFZPlftudpKj2ejT/piGVRP7FxlH2clj1zt3Ki/QsGi1zu16
EDvZ8nJA9a4KDT+2FuhODrMTrjW8SmY5WZC+csZZfoKdBG3gnvwvLQvWNTI3
Hf6wE7ezAarS8VloOBVR0cBJIcmvaOx84VkoTj2rQ5OgkKnAiHNGXlkIkZLf
62JMISbRIa9Nd2VBRShuT3s+haivzI0WqcmEm5O5NW8xhdjEjk6cq8xESj6P
n14ZhWwKM/RuKc2EqOmVVy9qKIRirqqdlZuJZaHHd4UxKaSwRLiT/igTrVxC
GvrrOIguRztt2ikTvvPB20suc5Bo6R21hssyUeflGHk5kIO85J4Q/PM3A5Ij
e6Y0bnMQ/WKTBxm/M1DxZbTgZRQHadwW3iI1lIHVb47tys7hILLPKSz7pgzE
BkrtTejnIMkRPIviCRl4u7zI8LbpMqLPzarcp5eBFfwDJ4/KcZLstV87XZ6n
YzrIWve5MicRFb3n3/Y0Hf0LDZIs9SWraq8xeJiO98NFbf46nIR//SdNnXvp
uFV1VzfTmpPoKNCf2PumY3mAkhQllJN4noiVs7VY8ujF9uwJTmJYzOehLpQO
zlrO/ateLydXVh6LtHqShtVnYhy/vFtOlDJGkp2i0iC4ZntANmM5cU/KcT8b
lgYZA7uiI+3LyW8vJc/Q4DTsqy2Wj5lYTkwmk2L/+KThWq0H31a5FUSrXs7/
slUa2Oo6OgwfrSDta1QODUqmYa6O5hbuyUXoKpb94S9TIdFoH73vEhdhXM/V
PZ2XCu1mIcb0VS7CGZ2vqpedijttVzZbhSztPXRfcqSnQqTH4Bs1lYvsF8tg
xcSkQn18xPxlFxcx/MO4pXsjFWcFFHXa968kqmLLfa2OpYJpTl8vIcFNkndX
slYspCDF4m+5tQw3Gf242zR6LgWulofdouWWrGPtpPwnBazjrFKRHdykNO5N
oO1kCsb+lXUSMOYmDycjPBtZKZh3jKVzXeMmc12CuZT2FAicva8zweQmyl69
/qH5Kdh72/1MFW0VMSthBC26pyBqoXClju0awn/Y573fUDKsxN4d7prgIRcz
nLlwLRmry+SHpY/xEaa1O/HYmAxntYQpSwV+0t3SojvESIL31UumklP8ZFBr
Uy+5mYSbrIjmurq1pPhM6BZe7SQcluNNW/1UgMiukN44ujIJ92jqZYftBcnj
sIc6Ku2JYBxJnPfaKUTU/+kyM05NRFmtR4gChzDp3H/z5qcricg7FUhqvgiT
9t58Y8bRREgcgob7i3UkklOHOamUCJ1F6+vP/URInLXdDRO+RDi1vvlVeGw9
kTgSuz1+LAFagdde2kuKkkNMmWTNTwkI9xh/tfqHKOFRkMjYVZKAbwHJ/c9L
N5DJIL59YwkJGHIucioPEiPV7NXOAyEJGDuzdkWtvTiZbRDtfnAxAfSDH+dd
tkoQocwz/yxzTEC/q7I6x5QE+TVK05wxToBoZmdEUO1GMthXsBislYDrducS
ag9JktO/urVNFRPwe379vUNFksS+vPZCsXgCtrx69IQhI0WOUTr8LXkSoOZY
acQfLEU4qu+2lLEloCxGSKRmSoqkfZOrefcrHlvKhO4YWkkTtdIdp63742HA
OSzeVCpNaqzEPSs74zH2+fu7ajkq8R+tdmHUxcMj5p5AcCiV8Mv7HpOqiEcN
u8yofhiVPBi1afz1Lh5yJ4oZqyOoRF/ggVnFkr+r/Ah88JBKLEzq/U4s2eID
GXv0jErMWs5r0Mvjof1roiYlk0r8ZgdPar6Nh/CB47cqPlDJaz23BIfSeJyn
jdnfqqYS4fJ0bbUlN6wN0jzwkUokfL4MrVjy3S/5kx/rqCTkr5gl7XU82M6v
cWz+RCUuJnmxMyXxYD0rw7c+KvEVHWx+8Coe+znMNyQxqYR3gyHFaclJriPT
zj+opNvaf+eOJdtuF6UPsqjk/sE95V+K49FSdV5sfHzp/ptte+SXrKLIPZM3
QSVf9cxyF4ricT8irtlrikqe00MUm5Z80Kb2zswMlXioC+v4LDnlnaNL8SyV
fNzt1Hl4ycv+md3rN08lbHm2lyWXbH//gbjWApUo8yynThbGo3RC9s/iIpVc
f3+05cOS/wduPW9p
     "]]}, 
   {RGBColor[
     NCache[
      Rational[5, 6], 0.8333333333333334], 0, 
     NCache[
      Rational[1, 6], 0.16666666666666666`]], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
wqF6k6oKKttVi/vXWCwcukqrP9fE9v8BmYtchg==
     "]]}, 
   {RGBColor[
     NCache[
      Rational[2, 3], 0.6666666666666666], 0, 
     NCache[
      Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[
     NCache[
      Rational[1, 2], 0.5], 0, 
     NCache[
      Rational[1, 2], 0.5]], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
Lwx31YLi6vY2CS2LK18Nwv1/Zqqeyw==
     "]]}, 
   {RGBColor[
     NCache[
      Rational[1, 3], 0.3333333333333333], 0, 
     NCache[
      Rational[2, 3], 0.6666666666666666]], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1Hk0ld33AHBcJA1mysyVeo1RJGQfhGTIUMkQGZMMGfoaokglQ4OhUiKv
JBEqKSRJXiJEpiTDfe6A6964XfP4e35/nHXWZ51h7bP3XkfBK8TBl4uDg4OF
j/+fcy978Wr5pBpxN0nIV3DMQJ4LQ99J/hzQ3lYalIxPw6BNSpi8fDRM2NCL
lTunIdLCeTuPfDLYm7++WpEzDeZNyG1B7iFk2Id3LOhNQ9nV/Ykzci/gb6+z
kUTsHyB5losz5WrAMc0q7ZAiE+hPN7wZEzXwKux+yd9tTPhLtXs99boWmFFm
zR1LDOAOYFvRTesgxPVw02w3A5TD9BLGz36CaIZf4VoiA3SNSXMzA43QHCT1
vw9/puCS/fkzU3KtoNdr6iswTIf1RN2do2mtkCnF1Cr8Rof4d5w/fiy1QsUN
r0nXWjpck8o2re1pA89gM4592XS4TW1STk5qB9sIV7uoE3TIj5ZlKk9/h8y1
u6LK/ZMg1D/rsE2jC8Qtym3bmifBIcRFM8mnC0TCLANuvZ+Evn93TcR0d4Ga
9LBryMNJ+MVb5+xV2g1m2c7kHPdJIHdNGGp59EDD1rN7z/6ZAKUA252l93rA
3KYXjY5NgB/h7ZxSew+Yztm2hfVMwITOlfIdB3shrc3+ylT1BDAeiclziPTB
w7fP+WSvT8C8jwnhe3M/NFsI3zqtOAGbl3JaAzV+gZKkCYM3ZBz0kgZjjnr+
AqZ5DsvUdxz8xSTU9mT9gkti5uuZruPQrJVxm7z0CwyPbisOPDIO1wJuOrr8
NwRdP8yerCqOA8fviGELt2E4wsN4FjNEg70Bb27vujMM4XWbWn/+oIHH4jQQ
Gofh9hD8sWijQb3o+YL63SMgYXy38VQNDS7ZeJ7VYY/AfyIz2sbZuEeLooTM
xkBGPvupsDMNMorM7OPdx6Chl5EdZk+DkiDKP9ORYyAlRiojWdLg14rCUHvJ
GLxyLGlk6NNAb0fuoZuCJCj5aRNeKUODebtMro0hEozFLRvRqVQIbbySxggj
Q3f3qh7EU2FRKKtsKJUMORmcFudjqHDZs7izrZAMnP8NPy2IoEIaR7fgi34y
uF+kMLXPUaHYSPGerz4Fuk6GmA04UGGstil3hJMKT77EpUjtoYJd5eaKrrs0
aCzJkVkfpMAAl2zXpxc0MGCtcAf0UcDdQZtV3kgD45ngvJEuCgSyXPbdmqVB
elFsLqmFAjc1X763PIXX4Upph/U7CnwqtW1olJsA/rOtkcVZFNAozOx+Wz4J
JrNRBhxOFBDN3rvQ0DoJtbt9R4UdKbCS2iHdQZkEy2sqjurHKPA1fJM/VZIO
VslDntEWFPAyvbQulkQHOe1GlUA9CtzDvFQjPaYg6qDjhTIpCqzKa18/KMiE
fwIq4zTHyYCJfi8xU2XCyZQ/atIUMrTyBXbZmzMhIUiuejuJDPdnnkkFxDKh
K25KnWeIDHsbdr55NMEEeYNQTd3vZPD24BxdafgD+/TranKryUC19Zce1ZsB
kyr/Xu07ZBBtDlS6bDYDHlli/sw0MpgcClWTcZiBmJcuw6UpZMhXjTF0PT8D
x9w32+6/QQY3vjS3gdwZqAzPvxgWR4Yfnysef+digVVR1PXcQDLU71+Qbmhn
wbnVM/ZXbMjALF1R8hhkwS15clKxFRmkiRzq61QWvCWOtvVakiFaaPMhww0W
fD+a4KFrTob9fyRPV2v9BWM6piwDZCh5bpT76v5fWGcohEVokeGB5A2Zf8+w
4YFFf7jyDjLMkzuf2wazgSCWKp4kTobjZRLaq5fYoJDknE4XJYMwemHu9IAN
Xge0lmqEyJDm2x6yrZMNUQGspegtZIh/JdwYbTALc8VCu2M2MPA3f+LnID4H
7FcHn56axKBZYGJmgzgHAdbhgfwTGOwa3HupTGsOTtovhdbTMMDON97hs5kD
0QsL8uoUDNzSqdX1iXOQWcJ6qDSKgd1v1S2qrDkQ6DkZGNWHwcGw6gpC+zyI
Ccp9y/6CQdeGgXvo4Dy845H1v9OIgd+tT1tHafPw5YpDddJnDDKKm8/Vci6A
jnmHb9wnDOgjvcTQAwug2BKQF/sBg8dWrAcjBQvgP7iJ0lKJwbqSSnxN9CJE
tja0xz3DIOtNmcbupEVoz8xTelaIgQrSGs7KWoTwnKK+jqcYnHTV079QsQjF
1w8fJBZgUJFuPqtMXYTL5zQbh/MwOLPu5Z9ltwSTbPTfnWwMvgzk2IXsXoY9
+ZotA2n4/V4nZuf2LcNlj9wqLdx+zO3ZsWgZ5M9cz0hLxYCfcHU02XkZNorc
hcxS8Hxo+AcXpi5D384DCw1JGIxc2582OL0MmvFeW8lXMVjW6mgxrV4BbVaE
RnM0Bu11N863Na1AysujfAa48yyQgH33CjzaU1TwKgoD49OVJ93pK8Cr3S6S
F4nBzZsPqVHSq+De9rop4SIG4qO+hPL4VTDJfGF7PhQDrbR1ox2Wa6D3Ogur
P4eB9rlVn7KTa+B+dCkXcO83X04x8VkDqbZYwc/+GOhyzPcHXlmD/flVYs1n
MTCMYAZ/rsLXLSzifvpicMTtd16A4jrcvPaiVMYLz5da7Xrdyjp0cPc7Kbhi
4LW5Wslh8wYErh58+s4FA29a1dFx8Q1YPj4Yb43bL//1fSHtDYh/2von2hmD
QNEXGn7+GyDq8SJ6yAmDyNUH7gJ9G1C3dzGs+jgGFjT90b1OHMil5lVGjy1+
vqeXkXSaA11YcLC7gvtaQ/DyiDcHutjrGaGK+/OjArFbFzhQS7ou85oNBgbH
+K0nkzkQbN1919AaA83qwep/6zhQEd9DwXpLDCRSojKEFTlRiM46jccMf3+k
cP65PZzoxOtTlh8PY3Dc52VZgwYnKtd+shGBO91o7GuwASfqtJbwo5pisIVt
sdF2nBM5b6/Y2maCwYarRGBiEid6xc/hWIAwGFd/ZzbL4EQnA88kphpioBgX
5KvK5kSJI6wqG9xu7UrXvZY4kYSKgKog7q6AzKYuHi7kg+UM3TPAoPb5BdMy
WS50tOiuVaE+BmkKqsZ+dlyoP3m7aIceXl+xfMOflVyo4rBAr5UOnk8fJzeB
Wi4U9ulIsRjuosrtseYNXOh0Z8rb0f0YSDrEfXjbzoW4BPNCI3Bz33HRT6dy
oQL9quj8fRj084npHZUgoMSxk7Fc2hhcWk3eVxdDQFIRq3YMDQw6I7yzYhII
aPGsU3Q1bnmm4ZzeTQKKrSsdvIa7aXj6XdU9AooqDTaUxb310wn9ilcEJP44
PslRHe/nBAXjAhoBDS43T7ao4vXirbG96cCNtAZTx/r2YLBJaOLccRUexHhD
ZUQSMZhPcjN7spcHJZspH3PATVvvkqfr8iCz1419aribGTUDV0x50MRRZWNM
EYMbX1PNSt14kOdhdqEtbt54TQWuOzzoviMlTF0B9/T/flaw8XUUw8MlhwFP
B4/Flo+86GWeutWGJB5v0GPv4S+86FPMaZcR3KLb9sVXtPGiufsrVz/iVrI5
U+P4kxe9DwiQicV9uKNW9TGbF7W6vilf3onB1Y4QQXWVTeidkQlxbQcGHJ2D
g7YPNqGkj9PfxCQwWOksC8wI5UPH3qz13BfBQLbbM+dwFB9KKDG9FIvbpEes
bf4yH7r71feAF+6Ugbjdrml8KCJ9iKmOe8eYDUZ8zofqm0l2zcJ4v7KYTlW/
+VBnVPSvZSEMLohomP602IzYj467hQliQHUq3ykry49CdDNT72/D++HUWqOb
Ej8iRvLoXMXt72wdmKPCj+JOExlBuOku9PodB/jRhoFqohnumdPKPiJ2/MjM
bNphbisGq9555XxX+ZFLztMgJ9wiF26bsqn86EWlvO6uLfj/dDM46GvZFnSB
hsVQ+DC4t1692dRjG3rRZ513hxsDV+kv1r/Z21EJjUkT48Tz3aDKUDwhiHLc
dnV0rZHAV6dgzllNCBUuvc8lrJAg8nKUg/ycECIz499XLpLgOj2zp7NTGLF8
35hHzZPAWkWgeOsjEWRr/vLJo1kS3CrTbbD2FEVL146JsP+SoM3x6WrEQTF0
SPP2WwcWCRo6QtLUCOIoIyodsaZJ8CYgAbUPiyM+b2Zw5h8SyFqBXvBbCSTg
oxTqzCSB6YZb4pPYHej2QOtbKwYJfPo//a0+sRONBbUkHpoigVHC1SpPeUmU
w6O36EgnQUYI68PWcUnkcd294vIkCbD4Z7Qn9VIocCae8HyCBFO+NT6NSdKI
+8Ga4tQ4CWaChDd1eMqgr+E6j9Rwl1t+W/VTl0XctF9j12kkoPnv1SXMySLe
pPLFKSoJJEt/ZSZ1yCG2wZtWW9yJZ8IKOqzk0T1FcnQThQQLqztvWdXII0VK
ybwu7j0fHjxsU1JA1WlOnZVkEuh4/3dMKFkB3X8ZMgi4Gx6L7WifU0DDh5PT
vmL4/gaxFFtXRbQUaPjFHbcND0PmR70i4la1mFoh4fEOUb60qhBRR8Xkx3u4
Qx7fEkm+Q0QJz9g/9HG3cypNH00noqUBQ/ODuFXO1rZtzSQibY++mgO4KVrj
CXfvE1GXwOy/+3GfakEzD3KJaNCdelEDt8lfdntRKREZiSeqKeIWP+Jyo6mF
iEqGNvVuxh1eNuN5o5WIzE9vt+fD3SWcdOjINyISsvHs5MWdOlw5+62TiCak
Ga0E3Bzh27x7+oiIky+zaW2MBPTcBsDIROQQIPyVhduC4CRVSCWiySN9ljO4
C/2Z877jRDSvSf72B7fHPsnySToRhdaPdk3h7v0aLs1iEdGxSOcRKm4tDf7F
N2wi6tUM86Lgvp2Z3xMxR0Qxxn00DLele0fK4iIRPZeImRnFXfTF2692mYg+
v/pwcQQ39z/LxrGrRKRjZbHyG7fn7bsyRutEdLZbOmEIdz1beWljg4h4NQw3
/cL9f8X0hWU=
     "]]}, 
   {RGBColor[
     NCache[
      Rational[1, 6], 0.16666666666666666`], 0, 
     NCache[
      Rational[5, 6], 0.8333333333333334]], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
u3sxIDV3ddlmC6D8nS2c290YLDVTAjLOC6KY/4xkH3VioPDD/d6hS4Jo70ap
r0mED7ZJNcxGCqI3e/1jQwgndV7Z6pwiiJKCzXTMCW8ctPlDfiaIDuTf8pns
wEBninX8Ta8g4jbZMmlMOFhC0/i3mRD6sRCkMteOAX68REZBYQ3a7+Klm/QT
A6OEwHP1lLUozcRCP7UZg1urFULGbsIo/LS5UX8DBs5yn6x7Z0QQd+QRnPGV
yIOqPqZyVBT5BhfVKX7BwHtvPvukhhhylTYLqv6IQWjkJQclthgacpEo/ETF
IJaZ2dbcLI6UH4uo9dZgYK22/vm6HAlkOse+eeg9BqkUHaq1uyS6n7hNoucd
Bg2Oj5dD9kuhktsSz0KrMKA2BaVo8Eijg4UmdItKDMr8o1FjnzSKqzmgr1hB
5GUFuoGvNyBKQK6yxH8YGHNcYh5EbERdLQPNGm8x8Oqona44KoMcSxOlTd9g
YBh97Y27kixqte1/Fvkag4ygqXfr6LKohX0ltr4cgz9RT2gPajahGqO3J0QJ
j3pXen2Ml0NqGz/Rg8owmDwnLtDkLo9okre1m15hUGLxfdlnhwKi0W+0GhKm
+Wrp8LAVkMulCPd3L4n5Ku7OjG9SRAauS5v3Eo45fSG/yUoJ/VxRF6wtxWBu
WSbVqlIJNeqlapoS3vYu+26DqjIKH3qn0VGCwV7PL4fFEpXRnXalLRcJU3Ol
NjaylZF9+dVDwoS3UaWSbJ1V0E9wZJVRMLDhG5P/WaOC9CsXY1wJT/Zgn76p
kZFZX5uRAOGg3FSJxHQyWrDRzat8gUEjl+qE5U0yal49Z1lBWO1MVcO6TDLq
DaTPvSWMadOjb9wmo0nDJ46vCZ/4iiaz88jogpelSCnhg9MzjU+LyYhLbfuN
AsLS5k5xn7+SUaIb5Us64YuUSfe4b2T03WFPeBrhVvH4A+bfycg+eVkrlXBy
X/nf781kJHXVLi+JMOmisGfbLzK6coI3LJYwM48Kf4bJKEgk2SCcsBnP8U0F
OBltcpKfDSNc4Mua9aaT0bPKidJLhN12y5aMMMlI2veI6r+E2+svyk1NkZFq
6CbR84S1NdfMl82QUaX9i+9BhNMyH7aFsMkooygiPpCwhWtT0vw8GQkk93DO
En76ydOnapGMbrP8qv0J825fNIpYJqN9MfvC/Ai7p92QN1wl+t1/SMeXcM3M
lgUOh4ysVtNnfAj/Dw4Tfk0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[Large, FontFamily -> "Linux Libertine Display"],
  DisplayFunction->Identity,
  Epilog->{
    AbsolutePointSize[4.5], {
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWX7UnnVbfEpj6D8x/b3819cVbx72f4M
GLyx37vMNuLLq2NQ+c/2LgxnHk/+vNceYs4P+8fxHw08pLZB1f+xv8xrJJH4
ZqP9WTCfwaHZ5vASe5b1UP3MDiE95Wua/q+2nwkGrA5m+yUq5H+thJrH4XC8
3NfJtnuFfRoYcDloXOO+d7BqOdR8HoeLUo0FJ1csg5rH75BQx2uozrQMap+A
w+EFn3t3Vy2FmifkkFTWuLKFaylUvbCD4pWLb1jWLIGaL+JQ4FZrFxm9BOoe
UYe7U6uXrBVdAjVPzEGxefaLZzcWQ82TcFhgu948e/FiqHmSDhf+8Lf/LV4M
NU/KoeJW2+4lnouh5kk73FCVSZmlvBjqfhmHU/9sKuwYYebJOcwOPlDF92gR
1Dx5B2GJ5q/zjsL4Cg66C3/PnrZ6EdQ9Cg5nUvbOWTV5EdQ+RQeuc37nZ9cu
gpqn5KC7tbrFJHMR1H4lBx4BjgtuYTDzlB3iyuT1VrvAzFN22CR7J8/eZJE9
AIl44W0=
      "]], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWV7O/k5kcWLH0P5j+3PtV6ceNfyhv0Z
MHhj/26aLefH3Reg8p/t1eqO7+BNOGUPMeeH/SGf6Q6Pbh+Dqv9jL7X6kv//
X0fsz4L5DA7X5f3mRz45DNXP7BBqdmTrbdPD9jPBgNVh61ufpXcPHIKax+Ew
SdOy8mruIfs0MOByUKrsm6dkcAhqPo+Dn/nWm5MZDkHN43coql0fc+XWQah9
Ag7cMyQj1fYchJon5OAnuurdzkUHoeqFHZ5MVnoU0HsQar6IQ/yKvdc4qw9C
3SPqIFVz+5xDNsw8MQejyQ2Lq2Nh5kk4eN88Vx0bCDNP0qEpK795nhvMPCmH
hoQfnmy2MPOkHQ7cr76ZbnIQ6n4Zh4+LNr+fpwMzT85h07Pvv3tVYebJOxi1
OS2VkYfxFRzirzJvMJOEuUfBYYf9TI3TwjD7FB1sM9ftP80HM0/JoXFNnrcO
F8x+JYdTk81SHrHCzFN2MHbnE3vKCDNP2eFXEesinX8H7AHZ4+VW
      "]], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWV7pqhbF9+xPYfyH9vfNv/ye5veQ/sz
YPDG3tdqovVjrTtQ+c/2GztX2/cq3rSHmPPDPu+0PnfdrOtQ9X/sa7f6n759
/Jr9WTCfwWFR0q3v132uQfUzO2xTNwjh+3/VfiYYsDrMPHyh0+nUVah5HA73
bgrq2yy5ap8GBlwO3T+dPOvbr0LN53FYrr1V8k3BVah5/A6mc8+xLIy7CrVP
wOFWl5l1rj/MPCGHiGoOr3YnmHphB7UoHZZUc5j5Ig5ZmTenLNGFuUfUwb3e
4cI/FZh5Yg5W3Qe32cnCzJNweMS6jslGDGaepMOSJyF91/lh5kk5rBb4/fAH
J8w8aYc3u9Y19LDA3C/jcPNRxuam/1eg5sk5NLzdvvLcrytQ8+Qdglf3XE39
BuMrOITtWltg/+kK1D0KDt84GBRC3l2B2qfoUHS6cc3cVzDzlBzsrrieEXt+
BWq/ksOio0nfdz2GmafssO3EK9e2BzDzlB2Mvp8MKb17xR4A8kruDw==
      "]], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWV738OzF6j/fA7lP7YP+u0t4qn82P4M
GLyxD8xS7I2c/QAq/9n+itufc6Zb7tlDzPlhv8G13r0w+y5U/R/7Iw+TZRi3
37E/C+YzOLx5mWPU630Hqp/ZIWSvf7QT2x37mWDA6jDr1ax2n2u3oeZxOHzv
1/0ruPm2fRoYcDm8aurd8mL6baj5PA5CQjM7lJpuQ83jd1Ax6q2QL7gNtU/A
4cGloPfXEmDmCTnwzpxSMTMYpl7YQUWNr+ydO8x8EYeiG1MTGmxvQ90j6rB7
oel7AROYeWIOxaG/txVqw8yTcCi/pZRTrwwzT9Lh0vWwvXIyMPOkHDjvLzCw
EoWZJ+3AfuD+sgN8MPfLOEw7MN13CQfMPDkH3ea+2zeZYObJO7jMVmaM+HsL
yldwKCuQ+Sv24xbUPQoObId6vAU+34Lap+ig+3VPut27W1DzlByu7hCcM+fl
Laj9Sg4pBZl31J7CzFN2aOFOXHHzAcw8ZYd9CYs+b7xzyx4AVj7oFg==
      "]], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWX7b2vv7lGf8ArKf2zvN/9o1InK5/Zn
wOCNvZFPVazD1adQ+c/2ZnVBM47+fWIPMeeHvfM6r41nup9A1f+x5w/0/PbV
64n9WTCfwWFRF4fEAaUnUP3MDjvnxKxdyP7EfiYYsDocW1404ePnx1DzOBya
vtfeP/DksX0aGHA5MGh8Ti6+8RhqPo+DQF3eKclzj6Hm8TvYfv5+VPHoY6h9
Ag7LJktv0t0LM0/IQXyOvcb/rTD1wg5iCeYS2eth5os4qPvW3g9a+RjqHlGH
6rRQ2QWLYeaJOSR7PRJzmgczT8Lhxoc/7DozYeZJOsjP+8wSMgVmnpSDe+Fq
8039MPOkHay3fw936Ia5X8bhxQl7759tMPPkHII4L9670QQzT94hk3f5lNt1
ML6CQ1OuWe2/Kph7FBw8+zql7Mth9ik6zI5T8ZpdDDNPyeEk+3NjwQKY/UoO
D4NW28zPgZmn7HCKafNv50yYecoOTiU2Rv9SH9sDAOzA6p0=
      "]], 
     PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWV7qVYfX93C11D+Y/s6yd3apQEv7c+A
wRv7b7Xf5n9wfQGV/2x/5FpcT/Gu5/YQc37Y6+gv37El+zlU/R/7l6nKc3Ot
n9ufBfMZHLpXLXDzkX4O1c/s0HBWK8yO5bn9TDBgdVAJEymZ8ekZ1DwOh/J5
GfMinzyzTwMDLger9La46BvPoObzOMR8m7TwzdlnUPP4HTgs7nrMO/IMap+A
A8+R0Fvqe2DmCTkEVL5LjtgCUy/sUFn97xTvWpj5Ig6zgq7O01/2DOoeUYd5
/e9erJ4PM0/MoUR0qXrpTJh5Eg7MzHJ/GybDzJN00Hwq5ne8F2aelEOCz+/l
jh0w86Qd9G9WXX3VBHO/jMNSSaVJ+2ph5sk53P7FG7yzAmaevEORiqPcjWIY
X8HBaJV3jkQ+zD0KDlNSIgQrsmD2KTpcCZut/TUVZp6SAxfHdtG+RJj9Sg6v
XcRjHGNh5ik7zJ3fvoU3EmaesoOFat33jyHP7AGZi+bK
      "]]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox["\"\[Rho] = 0.15\"", 
     Directive[Large, FontFamily -> "Linux Libertine Display"], StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"dir", "<>", "\"\<data/individual_wf_dimensions.pdf\>\""}], ",", 
   "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.650868587335389*^9, 3.650868617964363*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/data/\
individual_wf_dimensions.pdf\"\>"], "Output",
 CellChangeTimes->{3.650868619634753*^9, 3.65087787000494*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Non averaged data", "Subsubsection",
 CellChangeTimes->{{3.6507780469393253`*^9, 3.6507780530350323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tol", "=", 
    SuperscriptBox["10", 
     RowBox[{"-", "14"}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "wavefunctions", " ", "and", " ", "energies"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"val", ",", "vec"}], "}"}], "=", 
    RowBox[{"Eigensystem", "[", 
     RowBox[{"hp", "[", 
      RowBox[{"n", ",", "\[Rho]", ",", "1."}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
    "energy"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vec", "=", 
   RowBox[{"vec", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6376637410535107`*^9, 3.6376637612913322`*^9}, {
   3.637663903594638*^9, 3.637663904074048*^9}, {3.637664044065216*^9, 
   3.6376640443671303`*^9}, {3.638781296946495*^9, 3.6387812971536083`*^9}, {
   3.638781345298437*^9, 3.63878134803356*^9}, {3.649671679506936*^9, 
   3.649671679809421*^9}, 3.649672746111318*^9, {3.650533554503845*^9, 
   3.6505335545986958`*^9}, {3.650719857989237*^9, 3.650719859419755*^9}, {
   3.650719916441803*^9, 3.6507199166696*^9}, {3.6507199788689747`*^9, 
   3.650719979052927*^9}, {3.6507780953059797`*^9, 3.650778126079351*^9}, {
   3.650778204254641*^9, 3.650778222365896*^9}, {3.650778263264227*^9, 
   3.650778263423543*^9}, {3.650779221697092*^9, 3.650779221840065*^9}, 
   3.650779517585662*^9, {3.6507796308333807`*^9, 3.65077963096668*^9}, 
   3.650786451749804*^9, {3.6507865399095573`*^9, 3.650786540180443*^9}, {
   3.650786573157386*^9, 3.650786573283986*^9}, {3.6508029962870903`*^9, 
   3.650802996718133*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"middle", " ", "of", " ", "the", " ", "energy", " ", "spectrum"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mid", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}], "+", "1"}], ")"}], "/", "2"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "fractal", " ", "dimensions", " ", "of", " ", "the", " ", "wavefunction", 
     " ", "at", " ", "the", " ", "center", " ", "of", " ", "the", " ", 
     "spectrum"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qlist", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0.", ",", "10", ",", ".3"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d0", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"WfD", "[", 
        RowBox[{
         RowBox[{"vec", "[", 
          RowBox[{"[", "mid", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      "qlist"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d0q", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"qlist", ",", "d0"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.650778102472867*^9, 3.650778106989212*^9}, {
  3.650778373741763*^9, 3.650778388990377*^9}, {3.650778429086762*^9, 
  3.650778522927538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wfdth", "[", 
     RowBox[{"\[Rho]", ",", "q", ",", "0", ",", 
      SuperscriptBox["10", "4"]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Point", "@", "d0q"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650778500775957*^9, 3.650778603327859*^9}, {
  3.650779289025511*^9, 3.650779312560617*^9}, {3.650779411202004*^9, 
  3.650779487216337*^9}, {3.650779558529374*^9, 3.6507796028656483`*^9}, {
  3.6507796684337463`*^9, 3.650779673504113*^9}, {3.6507799130737543`*^9, 
  3.650779996961499*^9}, {3.6507800637465773`*^9, 3.6507800638253613`*^9}, {
  3.650780904834978*^9, 3.650780932305645*^9}, {3.650780962547204*^9, 
  3.650780990401775*^9}, {3.650781037298661*^9, 3.650781059314354*^9}, {
  3.650786404277795*^9, 3.650786410532612*^9}, {3.650786474613081*^9, 
  3.650786561717279*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0.2},
  AxesStyle->Directive[Large, FontFamily -> "Linux Libertine Display"],
  DisplayFunction->Identity,
  Epilog->PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQjQo+2BuDwWX7hh9bfOe6vYbyH9u3fbJefo7ruf0Z
MHhjrx6sNWVT1WOo/Gf7H8ymXxzWPLCHmPPD3qcqWVRK/i5U/R/7I59XTFdj
vGV/FsxncJjQoHXt4JbrUP3MDs6GF9py/121nwkGrA7xcTKPj266AjWPw+HZ
/Nj3EZsv26eBAZeDc94ZJrbXl6Dm8zjc/DpFUMb7EtQ8fodDwopVvicvQu0T
cHif8niSV9xFqHlCDuv/LHW6yHIRql7YoeaKRzf3zgtQ80UcdtSaTFequAB1
j6hDvcD5eV/sL0DNE3NYK5vD+IjvAtQ8CYdZExmuBx8/DzVP0kE/aAXD4qrz
UPOkHM64vE1UMTsPNU/awXr/TZ5ZP85B3S/jkHCTYT/TwXNQ8+Qc9syUs+7p
Owc1T95hyX9l6c4EGF/B4fq5q0qZZueg7lFwkL+SlbqZ/xzUPkWHsqjgw4xv
zkLNU3I4nxOU8ffUWaj9Sg6hToVcMWvOQs1Tdsh8V7n7bv9ZqHnKDrunXdby
Lj1rDwD4EOZ3
    "]],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {0.23916459919725416`, 1.0001671231922462`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650786493055243*^9, 3.650786562244926*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"/", 
    RowBox[{"!", 
     RowBox[{
      RowBox[{"\\", " ", "to"}], " ", "have", " ", "a", " ", "completely", 
      " ", "bipartite", " ", "lattice", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"and", " ", "therefore", " ", "have"}], " ", "|", 
          RowBox[{"\[Psi]", 
           RowBox[{"(", "1", ")"}]}], "|"}], " ", "=", " ", 
         RowBox[{"|", 
          RowBox[{"\[Psi]", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}], "|"}]}], ",", " ", 
        RowBox[{"we", " ", "need", " ", 
         SubscriptBox["F", 
          RowBox[{"n", "+", "2"}]], " ", "to", " ", "be", " ", "even"}]}], 
       " "}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"vec", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{"vec", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650778690306499*^9, 3.6507787164151287`*^9}, {
  3.650778764351612*^9, 3.650778777230991*^9}, {3.6507791645263453`*^9, 
  3.650779218993454*^9}, {3.650786465526211*^9, 3.650786466037443*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxMfHlczN/3fwghhBBCCNlDyP60Z0sSQlKk0qI9rZr2vaZmmqWZCElIQihC
CHkLIYSQPVtCCOE3v8f33O7HPx6317zu6571nnvO89wBG93MN7dUU1PTaa+m
9v///79/9TM7p7c4pv4lYyb9AUfbjHDs3VJMYw08Dc24f70wk8ZaMN9osbLb
1mQaa8PNbvipFpZCGutg4P3hufM1dtNYF37To0pujJLQWA+KRTO63Oq1i8YD
Yb/76bLhxxNorA+R//0r7ROiaDwE5jf+fCqzSqOxAdq5uhz41yOaxsMhaMi4
Zu+aROORuDI7UvPiCvb90chvm9nKpl5KY0PM+Xhwt5ZsD43H4uObmcnh71No
PA6lq9sG3U1j4/GYLtBcKnjF5jOC1eoT4yRljJ4JuOLRpcflsYyeiVhulRL1
41U8jSfh/vPLdy8rwmlsjL9uMZJiXTb/ZNT592j18IuAxlNQselmQL4f+/1U
+HyvlJywZt+bhrdSuzbWyxm/psO2w1aPh0Hs+QzsKj31vVsRe38mljv1SxWG
hdIY8N/z9+fYGvq+AOju5HN/56EIej4Ljta9tmRdSKTns7CneHnII3tG/2zs
m+qxLWGrjJ7Phuj0nD33lmTR8zl4kOvnEf0plZ7PwcP5d0072Yno+Vwk/zof
kj9zLz2fi2WVDz7dUUun5/Pw69vWmJmfST6CeRibaCxPkzP9mo/hHh37Hd8S
S8/no/ztf/4/9jH5LsD5t+6vi/uz5wtQNM108BZ99r4JGjV/P9BbxOY3QUod
DH5ryen5QnjeHRX91InoESxErxfy3bMTiR61Rci89vzmvnrGv0XoJxnZJ0Sf
6dNi1F5Ovrq6geQhWIyuc0cF9DRm+rEEq6rXPPLcT/ohWIKTT7K1Ll8Io+dL
sWHXs6/Bl8m+BEvx7K3w4gKr7fTcFBWCH28dl5O+CExhEDtk7fzZbH3L8KSd
1RPTfLIfwTIsOD1gW1we0zczrL5qEKMYQfPBDH86Nb12e+RHvzdD0M8WM20X
xfzfuMQMS6K/LfipEUjvL4f2xt9LmmJovViOOUufysekM3qXY8OmcEX/EtKf
kuWQla15tSaK9EXNHBeTx+9zyKL1wRwjjj69OukwW685/Avev3mupN+XmMN9
tOyF1yuaT20FTL0Kg8vO0vewAj/369feO0LrEayAjmtSsac/rbdkBaojl50+
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
PpsU3P+5//jJMyQPuxRIru2yVV9P/HFMQfspA07dekXzu6Qg+8HGVk3LWD9J
Cl5cSu08n53vvFMwNeDKnckjST5+Knmu1O/2qYL0IygFQ57npGsuYfcTpMAt
6drQyytJPyJS0MLqP30vZ6I/JgWtvgTeN7lL/i5BRc+9X63CBQyvm4LdMdc6
72H5LHEKNo2y7CmPZ/FSCrbGydzkZfR9ZQpGuj2b9PQhq5+lwHRK26s9RtA4
SyWP415qs9bSfDkp0HU8F1cykvxJrkofTAqe5LP7CPJTYFM3LPB0BelvgUq+
42b63M0n+RSmwNYgZsoGe+J/cQrW7uqx+NZRwpeWpCDl+bzrIxeRvZemIKpV
ab+D6xgeJwVvx3jJf7uR/MtV/Bn9sPspOcNbquTVtt33mI7kjytTEDHsYIC5
vz3Zfwq0186c+iWV3q9Owbp5/SQuGeSva1TzJzuc+XaAvv9SZQ/BKem5o5j9
p6DXJN+//QcR/z+k4OfcC8ldskj+9SmwOPvu8tJvRG9DCk5MKe348gqNG1Nw
17R3lss8+n1TCsZffTdoTRT5U7VUfB65vbRRRPxXT8UFp73/la9geLBUqGdV
5Wle2kz2nwqdBF3nmeZkX1qpqD83sGd+6Cay/1Ssvj8qaZEB0aeTim12jpUa
daRfuqnYa51y9+IY2n/0UhFe1kWgG0ny009FosmWD+2cyb8bpOKfsG2Cpjnx
c2QqHsxwiPnN+lUNU3HF1zjj+ADCpxmlIj1B56Owktl/Kty/SVywi/R5Wiqc
t8R3PmnH9v9UzMramyM3JXuZmwqkXU44nED8NklF332iZyctaP1LUjEm2/xe
4Cc6L5qlotx318e/Z0hfLFKRK7FInDef5rNMRa/xw35YlJE/sErF9pUbW4zf
xfDhqQi+/jZUJ5bWY6dav9A3sfVReu6YiotxBWWZf+h9l1TMn1g7dGEqy2+k
4mrAoLq4Bvq+dypSr9XamphRftEvFYdV4ZDTCVp/kIrfMTMWZqjRWJCK217/
WtrdpfkiUmFQGWp36hSrh6eqzvPDLn0fTvackIqBmZ6KYlOK74Wp2O3XvbRR
jfRfnIp1H2N1AjqSfslSERZ98o6FLemDMhWKSQYPwn9QPJKZiuvtqzUiPWj/
zEqFxdavbUO2kf7mpEIyRdm3rjM9z03Fi+zbwRpD6f38VHxPfHa3hZD0syAV
vZ9cVSjEDG+ZCqdnAxoXxpE+FadihsWyx20XE39LVPOL4nuMnU3xSGkq7AKm
PBvXn+KVslRstvpj92Yh+Z/yVBw5+ThqyS6avyIVdetb2Ez+SuPKVGQmL/bO
amD1epX8vgxY2mYKrb86Fbf6xZ9qrhfXpOLeptGXkwVE78tUZFSetfR+Qvpc
m4oebeotf2Yx+09FH8uaN5veUXxUn4r/lj98+PkPxS8NqXgf6rqxkyHZe2Mq
TN6kD907kO3/qvX+bmPlNZHdPyHCyNxsR8Foshd1EaxeflausqT1aIigqT+1
Vz92/5SmCNc3zm+/dCbZn5YIEwWLSycwf6ktQtvdg51T8hheSIS4Fa1E8d/J
XnRFUAw4O33fODpf64lwLeFI5qjTLP4XoXTpvA0XdxD/DERo5bBg4TfWXz1S
hOBHy07oqlM8biiC768+I+/n03xGIkS45eh2O8nwpqr1+fXJXjST9HmaCP/6
timaeIHVn0UoayPMT1fQ87kijC531ot9xOJ/EVam5ev9WE7fX6KiZ+mVIrcx
rD4hgs2hg6cH6VE+ykIE/7pVUc9ZvctSBLuPyVg5icZWIgw7/fLcsh4MHy/C
XY/w4XNXED12IlQYFIbN3s3wDCJ0nTe5y46fbP8XocWIa709NRi+UTVf/uFw
t63k37xFyNP4euePAdmfnwh+fvvUh+aRfw0SQVacmRRVyu4vEWG/2cnTxT2J
XxEi9DvRv2/WC3YeFiHE9PPnnfX0foIIW2aYtlp3huYXihDW6d9kY2OiTyzC
Ccv1T4YOIn2XiVB11rPbwU80v1KE2cnJcstnlB/JFGHBZqPJ3UYRP7NE0I5c
13tBLPEzR4T3q4qNJikpPswV4dLq9DvKqQxfI4Lk/PJJ/ncpH1cgQuzAXsUT
WT2mUAS1daOn320ifher1l9u4tlszyUiiDMS3otvkP6WijB8p7hhHLufoEyE
d1nlWypE9LxcpV9Jr3sUJrN+S5V+LHL/a/KV9KNSRW8H76qcUKKnSoQ92a3L
zMKJnmoR8rUjZy97TfyqEaHj2MraKW1p/FIErdCZIfZHab5aEXY+3X5Lpkbr
+SDCUdPPDbPVSD/qRWi5zSysZi7pR4MIu7c/qJnQk9X7RUiZ0WF8RGdab5NK
/3Ojh+ew/IuaGKkVGy6lRtP+oi7GQw+jmz4jaD0aYkQPvaqeN53iJ00x6q02
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
l5NPrYzh4YxH5Ft7w3Bo+GjysZXzfBRWQr629wzxcUHkc/vIgJid5Hur4PH3
oAX54L7w9re594fJF/eNz/dJEvnkKilAbivyzZkpyG+8lnx05grc7swhX101
BUdKg8hnZ6Eg4nwN8t3VVDBm7kjy4dVSEPY+k3x5dRS0HtWefHqWCnq0XUe+
vfoK3If0Jh+flYIW+06Sr6+hgrGlDuTzs1ZQGOVAvr8mCvb67CMfoI2C2EnP
q5h8gc0UnCtqTj5BWwUTnCeQb7CFgnQrF/IR2il42jGMfIWtFUQe3Uw+w7YK
ujhuJd+hvQLmNJR8iB0UbBs9lnyJnRRcnFP6g09RwZXM/8i36KjgxDQ38jE6
KbCMsiZfYzd+fQ7FL00+R2fePlccyffYQ8Er43TyQfZSUDnl812TL7KPghn9
1pNPErz9rLuRb9JFweQ3O8hH6apgmeVi8lX2V7DkZSH5LAcquBkG8l26Kejc
KpN8mO4KTjnOIV+mh4KvmX3Ip+mlYODC9eTb9FEwqiKOfJy+CozmK8nXOVzB
nsyyXSaf5wgFM5tFk+/TT0FI3c/+Jh+ov4KeZl/IFxqgoP/JueQTDVSQ8HAX
+UaDFPzRvSf5SMcrqPHuU12TrzRYwclOv5HPNETBgwEnyXcaqmDVr9PJhxqm
4OjB2uRLnaLgXfel5FMNV+Af3o98qxEKfjXkkI91hoJL/5YeMvlaIxXcPf2D
zzVKQWZoPvleoxUc93YmH2yMAsdGueSLnadgU1Yi+WTnK1gZaSTf7AIFuy1/
cjP5aBcpSPqQT77aJQoKXniSzzZeQZ2CultNvtvlCu433UM+3AR+vV9rNzf5
clcpaPYsmHy6iQqcfvIh3+5aHp9X/yMfbxKP5xkLyNebrKDWXwPJ55uioOJ1
Nvl+U/l4uB5HPuA0BW2HHiNfsMTbZ+wg8gkzHk9Zi8k3rCoI3BZJPmKjgm61
apCveAvPJ11bkc84XcE6ezfyHW9T8NA1jnzIO3i8De1OvuSdClIC/yWfcoaC
nZ/NVpt8y5kKKjXxIh9zloJBtRqRr3mfgtuVqkomn/MBnn9cvcn3nK0g5lUY
+aBzFJx58IB80UcUVG/VmnzSuQrCO1ZuYvJNH1fw96oF5KPOU1Cl91XyVecr
mDLiPfmsCxQsrDyEfNenFZTGbycf9lme30peky/7vIKXmi/5tC8qeB27lnzb
lxW0P5NGPu5CPn58n5Gv+5qC+mlB5PO+oeB0+mTyfd/i8XVhL/nA7ygY2nML
+cKLFJT5MfKJ3+f5ansR+caLFfz1nzf5yB/x/u/zgnzlTxTkRS4ln3mpAldL
W/KdP1NwmLUiH/oLPt5iRpMv/SWff7reI596mYI71YaRb/0Nj8/oI+RjL1fQ
9ZEn+drfKzhfep187h8VbOnfjXzvFQqaPw8lH/wXBb8v+zjH5Iv/xudv41Py
yVdSkb57DvnmzVTE1MskH725imGDj5GvvpoKS/OfyWdvoWJ+4U/ku6+pojTh
tKf1PH2/kIqcXR4RjyeL8uuoWJZW3mXwavE9wFLFtX+6p1ysEPmgvoqWi33T
apzXvyeo6L3MeraDmzhuqMK4/+tEi1JxPmsVDf3HWDUvEOO3iYq0EPuBW3bp
641UzHvcIPv1CjGemqm4nZrq8N9U3V+kwre+96ld7UR7tVDRZv/rC7/ki3iy
U7Ft3fWsHnNFfmytYsS9spAxl0V/tFXh4/E242iJ6D97FZNnzRtqyNF5JSr+
qFrN5aiH+P9OKkIuZ271DxDnd1CRtWXPofVpov8cVfS08Xe32qbzDFWw6sFD
H97T538Vb8dMTVh8UcSHs4r7m5Zsj9Ofz3uouOpTMovp6wd7qQg8uXGX4iXq
10eFX/Po5t2O6P5yFd7t/d98LxDt6aJitF2ntefqifhwVXFqvV9IsP4+vr+K
CEf78JK5+vzP2+P6+/NPmop866Zif3aweUt9f7W7ijfrA0/5LhXjz0NF2yTn
ReNW6/wUfv2Nkp1+fyXq46PCfHPEk3XtRH18VZRM8qx5tpEof7iKXqebn66w
0L+v8vgq95x9aZCINz8VazOnXA1eps//KsbdvPaHcb24fwhQEW4ZH+4cIt7H
B6q4ubHevgHRIn6DVBzMa/fi2XExX45XMaokqfF6nU8QrGJV229tUiDe14ao
WPJibtzEQJFPQ1Wc/xpX/EbfDxWm4svBxKBmfvr8ryK394C6wwfo329UvBoY
9bp6c3F/HqGirKCJxWh9v+oMFU2sPDcebKI//6uIfhj5NqKBznfh8Tyk6+St
FqL8aBW7fl86t4++vjNGxeduQRdsAkT+msf7+3bYyrJz+vyvopbr3YZ5DUR9
F6j4e+DIkemFIp8tUtEqIfFAqJv4+yUqDNKa7n319YvxKv6dMCZ5ywpR3+V8
fDYrbjPdSeTfBBUnJvzy0myhuP9dxcfLk6WOXp/0538Vq4/Venaoqni+WKvi
0Mjvc2Z46+vJ+HjKX5G++7q4/mQVVfvNtb83TdQ3RUXySF+b6/3E/WCqig13
O8X97iTaL42Ph7Ky3NvfxfOOpMJskr3nDv15gamQN49eGT5APL+pKgYPjx+W
Mlbn0aloNKbL1/b698AtvD0+7t/h7iPur9NV/JNTM/R5TzEfbePxdeG3zKbJ
Oq9CRY8Frxrf6SfaayfvrwZnb95Q9O/XPJ76Dc3d6C3iK1PFyuBbMyPq6d+z
VNiYLb4S/Uzki30q3FtcsSmz1fe3qKiX+y7b2ElcTzYfX5veBfvaiN9zVMze
eNv7wW3x/0dUPPi68IKsv8/K5b8/LY9PdxHlH1dx5p8JBt+l4vryVKQe/ZRt
3UZcf76KkWdL3o6KFPUrUHGkcvibbw31+V+F4+Gkzx1a6utleD5p1V+O2CLa
77yK/iO127YQ7XtRRdeirecH6Ov5LvP55unJP11CRf8UqpjVr+/8FTpP5ZqK
vPdOJzadFPFxg4/XkT3/9zZbxMctng8y0rysrfX9tjweAgMS27iI34tUlA+1
lFbo76/vq8jIObdl1UzxvFnM85H1kMgHfjqPk/fvKFY5O1eU/0TFVO9tfU/X
0Pfn8P4s3fBmu76+75mKDqcXSt+WivZ5oWJN5Oi35yPFeHzJ59fdPrVv1tL5
zCqUzPru5f3E8Rven3dOx8U81tfzq2h8sMcR376i/d+rKO5x++CkhWK8feT1
fTv58M+bxHirUPHsROJY26eifb7w+jy36zTgq+j/byq2xr3b++B/Ov9Hg/e9
2k2axIr7PzMNzT68d8kfLOLBXEO/0bm22y1Ff1TTMOfcsZ1qfX1/kIas1nlX
jl8U5dfU8DgzZrbbcP39v4ZTlUdMXaDvf6qjYdTJkJdjF4r6WmowO3K78cZk
MT/U1xAWO87HrLt4HrXSUPdC/4Ds7/r8r6H9U62zoau+v0hDSFJ49jX9ebSJ
hssPrnhfyBbHNhoWvK28YOoWMR804+c7vPH1jiARr7Ya3j0Z9vbTanG+Fhpi
rnf//nKivh9Bw9b7jg1/yxLx01rD20vre23y1H2XGmoWXY0M6inyj72G4QEb
PjTUv0920JCa6dTgb31/TScNPXytq9dsLOY3B15fv8lBE9qL+c1Rw9kP/wwc
94fIt04aWq3sqG67LeKhm4Z0ZfO6nkPF/Y2zhvDlgcc+ZIr69NDg9bXYKyBI
1KeXhiPDXQ+Fhon276Phc8U7v/nmYj6BBvOTbfZMtxfnd9GQ3KVKP+f/if5x
1ZC06mOXhYro//68/fbvSOxzTtR/oIYZra94zvIT53fT8OZ7do7HXZ2XomFe
nahGhSfE/3touLsg9tKF7mK+8dLwfuTxDrK+3tBHw7NEy4cRyfp+Kg0t3FPr
9+wq+mO4hj5Nnw6w1u+PR2i4Nbab7611Il/5abiQkPHscH3Rnv4aMlPLs0rW
ifYM0ODvmPrOspa+/kLDIN/ZJ+1ri/ufIA22RysO/uso7ifH8/PfWuNyyqA/
/2twDV23vftn0b8hGtrO3HRlWJSI31Aeb+2qblkRr+/X0jBwn11FfgPx+xQe
DyfGVLzUeQThGh48Pe2Tki3qE8Hjd0qfEOmF/v5fw6/Tb6Tcei7Kj9RgaTR/
XVdfjxDFy1++rCC0uziO1tBtzK0uD2LF+WI0/Lmx9qQ9a0R/zNOw/GeXD7F/
i/uf+RoWrxs2sUOiuP9ZoMEl/Lx/u8/6fnANats2VQ4VifZfwtujMGVFpbo6
H1LDx2mB2ddaiOed5RrqLLBdkNJUXy+uIdfD8W6o/v52lYY9/o/Hb5+s+xU0
3B80RzUbLu6n1mqwG1zHwTNRzAdJGto1H3Ro9xWR/5I15HnNyYmYLfJViobs
CpfSa7tFvKZqWJG3YW7BEZEv0nj7zJYeTn8s6idpSLOsXFqcJtqDaSgvOXzq
910i3lQNsZ2G/TPRKI6NGg5Huz4euUT8/RYN10tjNjXPFedL11CDl9o5VZS3
TcO5kLvuX+L1/eoaHiVUH/jJQlzvTl5+zxp9x7rpPnten5MPnky9Le7nMjU4
dBoZv6m9yKdZGkYc/GnW8p0iXvZpOG4YXeSh7wc+wMfjeGe//i6iPbM1BE0s
ehrirc//PJ5HZJ8Y4C/Od4S3h9Ppt3PzxXjN5fmmCrPMPy6u97iGhOOLbkds
1Z//ef6o2iC6kbPIx/kafIKST/1VLupboCHuVK9fYu1EvjmtweJxwYV/yvT9
MhpKX+1VXVaK6zuvYX5Lm6X3QnW/hQY2rnfbz5ZivFzm+f2d1S1bN30/nYbo
D11aTbLTn/81DEld+iSnuc7X0vBCOTX7wz9i/dYtnm+qfmy6d5L4/Y6GL1uG
bly/Ufx/kYbitUPj+74W57/P833LoldXKonxVszzmXthbEZfMd4e8eOT+z3q
6OvTnmioPDhp2tJXoj6lGo62ctSuuYv6POPlnw2dlTBFxMsLDbtHT469HSzG
20ueP6Y8CzEeF/FTxvOhY+x1+V8xP7/R0KBRjYrf7uvreTR0ibRYm6i/T3iv
YdHOm+8bHNR9rhqCxw2bditG9EeFhg4+46sF6Psjv/D5efzL5H0B4vdvGjx2
Z0Rn6PypSkY0uWdf5dYbES9mRniy2OQcG1G+uRF3duRczde/R1QzIt14eMmH
x7ov1oj+Zz78nP+biI+aRpS3zHFMLhDl1TJi30ubIfMfi/rXMWLi+v/Nuap/
j7Y0orPVqNULn4vj+kb4Wm5SLVNE/1gZ0e3kpiqBZaJ/GxqRul+qdWKoOJ+1
Ecs6hZ0JnizuN5sYEYDYbd/19QI2RnQv/v6qwF/k+2ZGWK89frJmghg/tkZk
d6/jZb9XtFcLIxyS29S71FjUx86Iv+suyz3fUdSntRF9j/TY0d9ClN+Wt8/2
etmVR+jP/0Y8io0b1mCKGF8djIhas/r6uQNivXEnIz5WbRXSxEzMRw68PpM7
7zF/Y+j7f2NQDew=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
P3WOuDhpa5vTpX60/ybsfW4Z8GwNra+zCX+jS3el+/vQ/ptgGzI8L+Uyg38T
DpQvE46aw+7zTWhNybbU0iL9mr8JvS8sev/lNM2XbsK0eSMu5Vwl/NRtgkRn
kSDlONvfCWnGF+bNcSV66Djh6AXlzQVd2H3ghHvSow91wOB3woWCaVt9drH7
zQnVham/9IeTvZnvhNL60M9/+hK/ljphyIK7X2wDCD91TjCp0jijNYrh3xm2
1ba51gmkr3ScUSJ6n1g4h/gBzvjHU1q59TfJj70zlh24sezZQ0Z/Z2R9+e5k
rc3gd8bxO82nC8bTeUqd0XFzuXaTDs3XOWPsdll1yFtm37lgwsoKf58edF4d
F+SJFpfKl7H9XWA14v792m10PnsX3Ap40v/RbDq/wAXXRLOPDMpm9HfBukFt
XN/NZPC7YH/anv0Wy+k8dS7Qej+/dWwFk7/NmGoatkLmwOi/Gf5bVqd5LWD4
34yj/01cun8P0cd+MxY5Pit9+JfoJ9iMQY5zoqYZBtL+m/Gr3kz73mymfzaj
/+6AMU+9GfybUaWXW3j4HtM/rmjSaAr1W0b8oeMK++Zeb8908KX9XdG7KmaS
5Q9Gf1dc69v9Q9sY4keBK/4tbh3la0jylu+KQfetsnelMP3jivCU5OkmsYSv
OldkOSuKXRex+8sNg53MVxfWMPjdYFz+rm9ZL2YPuGFH+01pTTfo9/ZueCRe
Wam9jvG/GwJvZof/60DymO8GYf6YLXvUmb3hBmVJ0BefXmTP1bmh0MxSfmoA
e0+5Y3ddF/W1Iwh/Ou6Y3pL5qdMQkle44/OtWd1XLiB5tndHlDBxw+A1zD5z
R6NHyvPPOkz/umOOxCfK2Z7t747Kez30ZCB7qs4dvtfT+2cJ2f27BdnddBrf
XiR4dbag0n7siQUhZP9gC7pMCvMyciH7x34LfiZVzS3IYu+NLVirFXTHKYnu
g/wtyPWZHXxrIbN3tuDF8Qn//VQn/NVtwULjBV0q+tH9puaBmCynV+LRdL/p
eEDRstNw2kdmT3kg/YJ+7MYMBr8HpkVsumadwOwbD+S8c2w/XIPkI98DPXe9
uPlqEL3HSj3w58BMr9fhTP96YF7dYhenuWx/TwhtdDNv9KD3to4nnA45f/5b
TvYPPLFlh+uQqefI/rH3xEKXwkPbLGks8MTUtCeB+S9ovXxPxJwI3hclJXhK
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
mfynwcF5WPvLrD4yKA3DNCKlb/ay+qA02B7661q4i+YT0zDCU+vOxZPs/ZcG
k57zXB+FkXzI0nDPa+u6o8tJf+SnYWhRS+Sqb3S+wjScLRx7dNwT4uci1Xjv
Dc/ptsz/k4Ztl/WWuL9k/p80mF7t5ZCbzvw/aTCMTqnfweprqtIws9+u37/L
mf8nDd5W3ZZHWbN6gjQUXVt59P1YwldDGiRWuQtMLzH/fxpefLyec9iU5LMl
DZ47hoafcGT5X+lw8PTyefKT6KeeDt3GQ10+zKV5zXSMDTA+XviH6K2VjpSf
/oovI1l+WDrGzxbKrFcRv+ml48OcshcFY2g/g3RM+p6dIEih9Y3SMeRwUQ8/
b5Y/mI4g5d/Luy7RfmbpONhW5CteR/S0TMfG5FuTp9XT+jbp6DAib1qeKcuH
V+23POWniPkbXdJRpn5U1NCL5dul45Cp9qNBZwifQelYsnNOv4tTWP5ROsSv
PpVWDCF9k5gOSdcxlbP0yf4UpqN6ysk702NJfmTpeLHIU2eZCYvPp0N0Mrg4
35bgKUxH/w7vJf4DWbw+HXN+JdS0bKb9i1XrOUxa91DA3v/piBg9I2A0yz8p
T4fauJWTl3wk/3pVOoLVTEYZFpL+rk3HFd+fA/Y3kz+kLh3+zntm7xtK+qEh
HSOSiw4uGMb8f+lYe2apz41ldJ+0pGP+26ft+0aRvlTLwEnzq7bH95I/Tz0D
kvnhfTuvJ/g0MzB/dtqidrqkn7QyoF9/Ufmb1T/pZMCrnc0lDRaP1MtAhveV
58NiWPwnA3+Xr7o/wZf4xSgDj7ttM2zpzPLHMnBGZ4nGdJYvZZaBu+a53kNO
sXzaDHzMs6ybcp/d/xmIWDBg4LfnzP+fAe2y8OX1dqT/XDJgvbzixNAeNPbK
QHl+tyW957H4TwYC3my3P1jN9H8GLurc3u7tTfAkZmDc9M07rsSSPSzMwJJ7
fYpavlL8SZaBqN05B5ZtoPd3vgpfbT5ZPB9C+SyFGWgYXDje8x39vigDx4Oq
454raL/iDOR+n69u35/F/zIwvr9f26YSpv9V3+svChpvSPG0qgw8PZm8f+kk
io/WZkB9bkhNK8uXqstQvVfK1q8bS/GvhgxEX3p+xHor4bMpAwujEl6878P8
/xko61iS5sbqgdWEmCYxX6v5kPixvRCjbFPUj0nZe1CIyMB/05Z2JH7SEGLl
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
v4K5jzuZE35LM+Fbltt34hyyR8oysShp7LNJQ8heKc9EwZZmx9cLSf9UqOQh
8X28xTZavyoT/l0/rZ/+hcY1mRhsuMqvoJnF6zMhaum/uOMMOv8jlTxcCD/9
f/HiOpW8zceVDAHB+yITW+bus/F7QvzcoOKXC+9tfhQw+c+EduDr1xvfkn3U
lImhTjcffGol+6VZdd4fYRv+MSB5b8lEuVX6qJ3D2P2von/9H1vfqaz/hBgP
wk+4CMaTvLQXY5JLvXKlDZ1HXYz99+f2H8z6T2mI8XHSnC6LTUj+NMUw6Yqy
KUxf9hZDWm3kJjrI8oXEuDTvS2bKN5IXbTH8vxybtXsSva91xFitcyF/3Blm
/4tx2M5w/aU8wp+eGIrd1gu/svpqfTHqqxad0G5P9riBGGYPuunfK6L1DMX4
PqREu9dJlm8qRrJD912LTIifjcWIKu14aupFFn8Ww/l1ZpEih+ZNxXh10k4n
6SGz/8W42PmKzvdltL+FGI8jzp3ynMDiE2L803/bmeE65I+yVsG/zS3+OYt3
2ajmbcKwYhqN7cSYUf/p/NK+LD9ejKmtkWNMrQgeRzEOzS2MnrOd5TOIUXba
vEfeD3b/i5Fw7tQAH3WW3yhGtsueGE8P0m9+Yoh3/alu1SP5CxJj5EVx+1EH
Sb+GiRF96Hh6fBnrXyLGYqdDZ0r6Eb5ixbC4oTmooJ69h8XY1tT589Ym+j5V
jOfvZ7SzPUvrC8Ww3d5xhpERwScRQy/S9smo4cTvMjHykh177ftI6yvF2PR9
p9zmGflH8lX8M27s9F7jCJ8FYlzOshywIInwWShGB8dKw2lKsg/3q/h1bXy1
cibLrxGjvY39tOA75I87psLHs14lU1k8plgMb7XBs+78JnyXiCFYu97n/+S5
VIzftZHvJDeJf8vEsNonbp7E+hOUq/bfWbW5SkzzFSp+vnO3b3EGq7cU461P
3B+zL8QfNWL8snGrLYwieGrFiNT4ddUyhuB5JMYJI8Wcpa8IX3VidA0qbZjR
icYvxGhuNI90OkLrNYjhdzn0lkyNztMoBiKfNc9RI/5oEuPZaYfoOlPij2YV
v6T8VzelH4v3i7Evrd3k2O503t+q31dKxhQy/4uaBItPLr2cmUD3S3sJuu2e
U+k/ls6jLoG5y7n2B2eR/aQhwdyJy5vDlxG/aUqwElfLGlk/ld4SzKk/km7z
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
PrxlfDA+yH0gvjJuhzlwX4ifjN98BJ/ILBnbdnThvpEAGYMq/+Y+kjm0PdIF
X8k8GfuavuI+kyAZFaLvJFiGVeJo7kNZIMPUVPClLJJReF/wqYTIKFtQy30r
oTJ61lpwH0uYjOhBEdzXEi4jrnY097mskLF1meB7WSkje9JE7oOJpNfzzy/c
F7OG1oe/EffJRMm41F7wzayTMXiI4KPZIAP5gq9mk4wFp525zyZGhpGZ4LvZ
SvNP7cB9OHG0vroLvpx4erzmM7hPZwfNxzOB3Lezi/YvTwQfzx4aDzFPua8n
4f/jQfD5JNLtzoLvZ7+MPl/Ocx/QQRmGewVfkE6Gc7bgE5JlfBrQmPuGCM3H
tYKPSC+j3dWJ3FeULGMUsec+oxQaf91fcd9RqoyQgL3ch5QmI2uE4EtKl/Fe
vsN9Ssdl6L9mc9/SSVr+3oKP6ZSM8r5F3Nd0RsYyf8HnlCFj8iPB95Qpw+HG
WO6DypbxJlHwReXI0PW24j6pXBmX+wi+qTzaXw835z6qi3T/OHPuq8qX0XGW
4LMqoPneIPiurtD8rl7MfVjXZJQ0ieW+rELa//ge4z6tIhn3lwi+rVsymvwk
+LjuyOj3rA/3dd2V8SxW8Hndp9fn5cN9XyW0/q0EH9hDGu8Zgi+sjLbfojju
Eyun8bRR8I09kRHwoxv3kT2TMaHQkfvKXtDjiz6zlzJ8z5Zx39krGU9nCz60
ChkXLgu+tEo6Xj2L5D61Khk3AgXfWrWM4z8s5D62dzS/I+9zX9sHGdbTBJ/b
R5q/S45w31udjO43zbgPrl6G8fI67otroONBl13cJ9dIgdsmwTdnoCA9+AD3
0TVVYNmwkPvqmivwLxJ8doYKrs4QfHdGCpKOCz68VgoiPgi+vDYKao505z49
EwU/jRB8e+0UjH7pxH18pgqax5/mvj4zBYdrBJ+fuYJnbyy576+zgt6LBR9g
VwWn42u5L7C7gj9+EHyCPRXsGi74Bi0UdC525D5CSwWLH/tzX2FfBWax57nP
0EpBz2f7uO/QWsEy0Ydoo6AuZx73JdoqiLpcLPgUFXS0KuO+RTsFS1eC+xjt
FWzuI/gaHRR8b/yZ+xyHKbCt7MJ9jyMU5O4QfJBOCnKGfuS+yFEKznQVfJJQ
0NdL8E26KOhkL3Mf5VgFD68IvspxClq5PuY+y/E0fursuO/STcHCY4IP011B
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
Vv+bVGz4RGIbGWt8SBX5g6Zm3rVgzztb6f7fDliX2E2bL67izAjrR8Ha+9t4
FfGTSuccXaj5FVSkeCYSg+nsfmqXCuP6uu8m7WDjwR66vbV71onbrP9LoPGf
vDo7NIL1V4kq0o0dXt49weJ1P23PnNTVBTmsvziowuNx/NOlz1n5dLT/Sa79
+8lBVh8yLb/NjctDj7F4IypGvR5zOFDPfutVuAd5Pp+5if0/WcX/1GUHeuSy
46Wo6P307b7v9rPzpap41fiNe32Mtl5dRWX0e9dPhux60+n2Wc2c/d00nz2N
l4RXLxaXsvu5kyqu5Y+JOTCA9aenVASuMV++NZ3FyxkViZu8yjy09cAZtD5L
BnqPc2H1mUn781EV/wRN1sZ/Gj+zyQVXX3a8HNoe+XdrVuezfM2l7TUjySQ/
j11vnooXo0NLQ49oz/8qrK0tVnYcxvrjfFr/uVsu//iOlbdARW7kkC5rLVl/
c0XFuR+Lbxyu0tbLqCjYlUJctrHrK1TRMLHv5r+CNb8F7W/Shlh9NmH5cktF
45KWJT3dtPV0NB5+GdNnvqX2/K9iY33Yi+weGl9LRX/pckTtYTZ/q0TF4jv1
3U7PZ9sfqtg0ePy+vfvY/mUq5p2aHeP8lh2/XIXv66I3txuxfHuiYuu0a2uP
O7N8e0bzZ9sljzba/LQXtPzrNy7Z/IaV56WK5BpH9a47K88rFbqcucvjFrF4
qVBRMt9/bek8lm+VdDzJaTZfn8fip0rFFCn0nvQbG5+rVYS0blo3qFybz0Pj
I67trh3a+4QPtD9Kuvqh/VnN50rz7+rsJSWRrD3qVHhGzWzup62PrFeRE/s0
4Ywf295A+wfDvJXHNf5UIz38TnRrUlLN4sVAj8tWGxKyu7LzN9WjRV1Wcb72
PaK5HkVy6qba55ovVo+6A83N8gex+DDSI63umF1CATtfKz1mpneYGPWclb+N
HlGedauKte/RJnrkFU/cvv5f9rudHhv36IlJImsfUz182u1tMquKta+ZHs/L
d7e64MWOZ66HYeaWq/MWsvvNznoUlixK/arNF+iqx+6pDW8KfFl/312PW+YF
l4ziWP701COgd90k69Osviz0WPzAvu3NTqw8lnrsHb4mt/BbVp6+egypH5w2
zpCd30qPoLY9MhvP0J7/9diTHjSt/SKWXzZ6ODn8eu96BptvbKuHyfheQZ0N
2Hg0UI8/z3T5vWl1kvP/ATDIMlI=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 2584.}, {0, 0.052437323982692484`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650778695108264*^9, 3.650778717000136*^9}, {
   3.6507787673817053`*^9, 3.650778777619443*^9}, 3.650779226229619*^9, 
   3.650779643255351*^9, 3.650786466471334*^9, 
   3.650786582803713*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXWusXdVxvpyzz/ue+/S9vn6BgwM2BsIrbWMKSVPlpVSWQSQ1RFUbl2JM
jXkEx8LBSIgKY5w4BlxoMMgSFYJiHlUlV2DFyh+DaEP5URUJ3BiiCzGxoXJt
aszb7ln7nLO+veZ8M3ufe29IaRvFZnvttWZmzcyaNWtm1j6Ll61eccWqZauv
unzZ3K9/b9l1K666/Ia5X7v2e42m/Ak9PSes6OnpeX1uj3s+3nhs/XW88f/j
V7m/XEv680Xxf4ZOOHbs2Pd37tz5y7Vr1/5qzZo1O7Zs2TLn4MGD7u3wkSNH
nr7rrrv23Hzzzf9wzz339L377rta+5kxuJHjy5cvj59af7oBobYv7IQ9VWT3
zI8h5r/77LPPOvgfrVixoicf/z00VfQv0FFM1TSKgUzP37t37y/WrVs3/fDh
ww7Dtbt27frp5s2b3dufPPTQQzfv2LHDPf/oscce++Hjjz+utSsy7QaE2k5k
OlVkt2X62QMHDuxrMLX6/vvv90Rx2+CU0L6AwM9PLetbAv1W/J++GYcOHTqy
atUq969fr169+uS33nrLPZ/92muv/XsDm9auCLAbEGp7U4D5AHY0OXJbfL3x
qaee+tdbb731nEZzi6+DU0LyaQR+cXIkhwtvrCH1ex5++OGFb7zxhluWTpq7
N27cGH388cfHrrzyyvIHH3zgeo6+/fbb71x99dVaO5FbtyC0drbwporsFoNH
v/zyyy//2y233LLlkUceKXz00UdTRftCDn6qyA9l2fvee+8dXbly5XMbNmxw
b3+2adOmUxorPt8Y/XFi9Ehj9NvXXHON1k5k2S0IrZ3JcqrIbsN2DH5w27Zt
f9MwUlNG9+mdsKeM7pYUL26u9QM33HBDu0vLltSczXag3b/OHR8fdxupe6bt
TVLzf/rcc885uxGzumWTuoKjtS9Q4U+e9uY+OObWxSP3339/W0Xm/kfjf9df
f33XtCrtzSlULDR+KtEEphFK9Ofr16+fv3///iRX/rqx+u944oknco0d11mC
25988kn3hra3JPoHe/bseeDBBx9MSrQrOFr7AhX+5GlvSbT/6NGj/3ndddf9
3quvvuoW0eqGC/nPDdhd06q0tyRqofFTiSYwjUCig49u3brVLWXnErs/P96+
fXvbLj/VcHT3N/Zd5+gOvvPOO2r7GU2eOjR/14AX/yvXhN8VHK39NB3+lNDf
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
NyGX\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"edges", " ", "of", " ", "the", " ", "energy", " ", 
    RowBox[{"spectrum", " ", "/", 
     RowBox[{"!", 
      RowBox[{
       RowBox[{"\\", " ", 
        SubscriptBox["F", 
         RowBox[{"n", "+", "2"}]]}], " ", "needs", " ", "to", " ", "be", " ", 
       "even"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"edge", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "fractal", " ", "dimensions", " ", "of", " ", "the", " ", "wavefunction", 
     " ", "at", " ", "the", " ", "edges", " ", "of", " ", "the", " ", 
     "spectrum"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qlist", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0.", ",", "10", ",", ".3"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ded", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"WfD", "[", 
        RowBox[{
         RowBox[{"vec", "[", 
          RowBox[{"[", "edge", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
      "qlist"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dedq", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"qlist", ",", "ded"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "now", " ", "we", " ", "compute", " ", "the", " ", "max", " ", "value", 
     " ", "of", " ", "x"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"compute", " ", "x", " ", "for", " ", "each", " ", "site"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xlist", "=", 
     RowBox[{"tree", "[", 
      RowBox[{"n", "+", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"drop", " ", "the", " ", "site", " ", "labels"}], ",", " ", 
     RowBox[{
     "they", " ", "are", " ", "unecessary", " ", "as", " ", "x", " ", "is", 
      " ", "indexed", " ", "by", " ", "increasing", " ", "x", " ", 
      "label"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xlist", "=", 
     RowBox[{"Last", "@", 
      RowBox[{"(", 
       RowBox[{"Transpose", "[", "xlist", "]"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "list", " ", "all", " ", "possible", " ", "values", " ", "of", " ", "x"}],
     " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xvalues", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"DeleteDuplicates", "[", "xlist", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmax", "=", 
     RowBox[{"xvalues", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.650778102472867*^9, 3.650778106989212*^9}, {
  3.650778373741763*^9, 3.650778388990377*^9}, {3.650778429086762*^9, 
  3.650778522927538*^9}, {3.6507786547346888`*^9, 3.650778669408868*^9}, {
  3.6507792503341923`*^9, 3.6507792803993998`*^9}, {3.650779354624097*^9, 
  3.650779401856529*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"wfdth", "[", 
     RowBox[{"\[Rho]", ",", "q", ",", "xmax", ",", "n"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Point", "@", "dedq"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650778500775957*^9, 3.650778603327859*^9}, {
   3.650779289025511*^9, 3.650779312560617*^9}, {3.650779411202004*^9, 
   3.650779487216337*^9}, {3.650779558529374*^9, 3.6507796028656483`*^9}, {
   3.6507796684337463`*^9, 3.650779673504113*^9}, {3.6507799130737543`*^9, 
   3.650779996961499*^9}, {3.6507800637465773`*^9, 3.6507800638253613`*^9}, {
   3.650780904834978*^9, 3.650780932305645*^9}, {3.650780962547204*^9, 
   3.650780990401775*^9}, {3.650781037298661*^9, 3.650781059314354*^9}, {
   3.650786404277795*^9, 3.650786410532612*^9}, {3.650786601845405*^9, 
   3.650786655204216*^9}, {3.650787097750403*^9, 3.6507871197978487`*^9}, {
   3.650802982511197*^9, 3.650802982657402*^9}, {3.650803018271101*^9, 
   3.650803018462138*^9}, 3.650803050383156*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
r2Poq5tAB8P9Hwv/9s8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0.7000000000000001},
  AxesStyle->Directive[Large, FontFamily -> "Linux Libertine Display"],
  DisplayFunction->Identity,
  Epilog->PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLZnSk7rmtb1Gsp/bL/xIFd2k9ZL
+zNg8MZ+8bHUuXP4X0DlP9s/kGzmse9+bg8x7Yd9gXlj1GWP51D1f+z5jNL3
eqk8tz8L5jM4WIqsrzHiew7Vz+zAKblz+8z/z+xnggGrQ7Fs7gP9r8+g5nE4
9Mau+uTy9pl9GhhwOcg9yT397tkzqPk8Dut7Yu4ue/gMah6/Q7G350zpu8+g
9gk4KF4J0pC8CTNPyCGj+LVh7VWYemEHFsE4eYNLMPNFHCbdPmyleB7mHlGH
C8KTol3OwMwTc9B1dSiZcBJmnoRD7x+7Jf+OwcyTdJDlzJ3VeQRmnpSD3DZB
Ld1DMPOkHa51FTM82w9zv4zD8Xy2go17YebJOQQftfTq3Q0zT94hkTX5cPlO
GF/BgWfm8dj87TD3KDgoTTtws2grzD5Fh1fOUzQbN8PMU3KIEefJmLkRZr+S
w5rXohd3rYeZp+wwf8OH3U/WwsxTduiwaZ8mtuaZPQBhle59
    "]],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 3}, {0.7159458043780647, 1.1024193394380135`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650778526543234*^9, 3.650778554122921*^9}, 
   3.6507786038724823`*^9, {3.650779296104377*^9, 3.650779313354301*^9}, {
   3.6507794148479137`*^9, 3.650779487997682*^9}, 3.6507795225278683`*^9, {
   3.650779566417025*^9, 3.650779603227543*^9}, {3.65077965547705*^9, 
   3.650779674162058*^9}, {3.650779921580859*^9, 3.650779998043417*^9}, 
   3.650780064625599*^9, {3.65078037421954*^9, 3.650780400796521*^9}, {
   3.65078080836873*^9, 3.650780863610257*^9}, {3.650780906304796*^9, 
   3.650780990936616*^9}, {3.650781039657382*^9, 3.650781059638322*^9}, {
   3.6507864050825872`*^9, 3.650786410885579*^9}, {3.650786588146055*^9, 
   3.65078665572735*^9}, {3.650787098682789*^9, 3.650787120213595*^9}, 
   3.650802917749737*^9, 3.650802983045279*^9, {3.6508030130867043`*^9, 
   3.6508030192890463`*^9}, 3.650803051062154*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dthtest", "[", 
     RowBox[{"\[Rho]", ",", "q", ",", "xmax", ",", "0", ",", "n"}], "]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Point", "@", "dedq"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "st"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)(x)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650778500775957*^9, 3.650778603327859*^9}, {
  3.650779289025511*^9, 3.650779312560617*^9}, {3.650779411202004*^9, 
  3.650779487216337*^9}, {3.650779558529374*^9, 3.6507796028656483`*^9}, {
  3.6507796684337463`*^9, 3.650779673504113*^9}, {3.6507799130737543`*^9, 
  3.650779996961499*^9}, {3.6507800637465773`*^9, 3.6507800638253613`*^9}, {
  3.650780904834978*^9, 3.650780932305645*^9}, {3.650780962547204*^9, 
  3.650780990401775*^9}, {3.650781037298661*^9, 3.650781059314354*^9}, {
  3.650786404277795*^9, 3.650786410532612*^9}, {3.650786601845405*^9, 
  3.650786655204216*^9}, {3.650787097750403*^9, 3.6507871197978487`*^9}, {
  3.650802924238203*^9, 3.650802943967598*^9}, {3.650802975039426*^9, 
  3.650802975185238*^9}, {3.6508030261270523`*^9, 3.6508030430712547`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1Xk4lU8bB3Bbz1iSJZSthShFpdJCzHSoVJQ2KnVIUlSULIWsSUqSKCJZ
IknJEr0oP6JCkiVCsnY2jg7Kvrz3+etcn+s7z9zzzNzPnKV2LgdOCwkICCgL
Cgjwf8f2OD+2cLloFL7RrVKlh4ePUoHzazX34vTS2mF2Bw8nRmDLO5p0vLra
vavgJw9/OJzgeV7TGc+t1pG2bOLhw2/NRY9r+mLTCsHpuEoeTnBM/XZQMxyf
uvZb2uI1D9NodXn7NBNwokfcxBlfHo5azUwz13yFTc3zjr5T5WFx+sAgy6kE
y68cuu5VOIBDVBzc31h+wgNL3gRXBHCxcMXuz6l1X7HVuqcNG7z78UIL/TKl
oa/49KuAJlXPfqzdplV8V7YW0zn1jWKX+7HloOjrqwdrsXfXzfccp36crvrp
ofn3WuzkxVry7Vg/1ixKyvU6/w0PB0kPLjfox1XzFwWpXazDNZuW9QnO9OH5
FQpqrp4NuPE/dtTcsD6cw2XRH95owC/EKse6b/ZhC4WiuOLoBvxzh3FKUXAf
Dj9jI4/yGrBuXsfHy359WFQ8XTSe14DVRkKWzbr24am9W/5UODZikQLVBQHH
+nDvD+tixePf8WfFF/9bsaoP5/cnWpaSZpySeejRu3oODpepWLNqfzO+GiQt
3FPLwQ4b2aLRJ5ux/JbCN+I1HKzgr1t0NrAZb6vZPGT7iYPd55ctli5vxl+/
P45dUczBG/R7WPSdP3Bm69Ba9TQOzg7R8J4yb8H7ggQkC705OFMt48km6zas
l1N5Uk6HgyfWeTcfOteGpVJ66VUrOdjU2EzK1bsN/xhRXh24goN7Tg34Zsa1
4R13lQ1H1TlYKXUdfenPNhzQqfFvRImDQ5cXqUic+IlbTNrv7BGD9Wp/if1F
b8f9CcdvYSYbL944cD/YrgPbaXnaUulsHPg89vadSx04oypKf0caG/eqbA+K
9u/A82nCNiFP2ThdON41NaEDY7fSQMkkNl5bt2t/RWsHLvU5r6j1iI2X5B8I
CdTqxGPKzcnxYZDvf2VSltSJP27/sM3ZlY33h5wu2RbZhddsDkm6sY2NF2F7
sbOPuvCeEGWRIczG/SN2B8OTu3CBjMlTuhEb33SwZbbmdOG91GCMgQEbv99u
LeXW0IWbbLbrieixsbbIfps0uW68RkFsV+0KNkYBW2fFH3ZjH4vBoO0ybPzO
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
Yb0q
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0.7000000000000001},
  AxesStyle->Directive[Large, FontFamily -> "Linux Libertine Display"],
  DisplayFunction->Identity,
  Epilog->PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQP/weC9vTEYXLZnSk7rmtb1Gsp/bL/xIFd2k9ZL
+zNg8MZ+8bHUuXP4X0DlP9s/kGzmse9+bg8x7Yd9gXlj1GWP51D1f+z5jNL3
eqk8tz8L5jM4WIqsrzHiew7Vz+zAKblz+8z/z+xnggGrQ7Fs7gP9r8+g5nE4
9Mau+uTy9pl9GhhwOcg9yT397tkzqPk8Dut7Yu4ue/gMah6/Q7G350zpu8+g
9gk4KF4J0pC8CTNPyCGj+LVh7VWYemEHFsE4eYNLMPNFHCbdPmyleB7mHlGH
C8KTol3OwMwTc9B1dSiZcBJmnoRD7x+7Jf+OwcyTdJDlzJ3VeQRmnpSD3DZB
Ld1DMPOkHa51FTM82w9zv4zD8Xy2go17YebJOQQftfTq3Q0zT94hkTX5cPlO
GF/BgWfm8dj87TD3KDgoTTtws2grzD5Fh1fOUzQbN8PMU3KIEefJmLkRZr+S
w5rXohd3rYeZp+wwf8OH3U/WwsxTduiwaZ8mtuaZPQBhle59
    "]],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 3}, {0.7159139043062996, 1.0554473752303326`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650802930971486*^9, 3.6508029446697273`*^9}, 
   3.650802975697588*^9, {3.6508030279632483`*^9, 3.650803043801159*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 CellChangeTimes->{{3.650777953595093*^9, 3.650777954043025*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["D", "1"], " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Rho]", " ", "Log", " ", "\[Rho]", " ", 
       FractionBox["d", 
        RowBox[{"d", " ", "\[Rho]"}]]}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", " ", "Log", " ", "\[Lambda]"}], " ", "+", " ", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"2", "x"}]}], "3"], "Log", " ", "lb"}]}], " ", ")"}]}]}], 
  TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.650723946127346*^9, 3.650723978597384*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "=", "10"}], ",", 
     RowBox[{"\[Rho]", "=", "12."}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"lambda", "[", 
         RowBox[{"\[Rho]", ",", "1"}], "]"}], "]"}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"2", "x"}]}], "3"], 
       RowBox[{"Log", "[", 
        RowBox[{"lb", "[", "\[Rho]", "]"}], "]"}]}], "-", 
      RowBox[{"x", " ", "\[Rho]", " ", 
       RowBox[{"Log", "[", "\[Rho]", "]"}], 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "[", "lambda", "]"}], "[", 
         RowBox[{"\[Rho]", ",", "1"}], "]"}], 
        RowBox[{"lambda", "[", 
         RowBox[{"\[Rho]", ",", "1"}], "]"}]]}], "-", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"2", "x"}]}], "3"], "\[Rho]", " ", 
       RowBox[{"Log", "[", "\[Rho]", "]"}], 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", "1", "]"}], "[", "lb", "]"}], "[", 
         "\[Rho]", "]"}], 
        RowBox[{"lb", "[", "\[Rho]", "]"}]]}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "\[Omega]", "]"}], 
      RowBox[{"dth", "[", 
       RowBox[{"\[Rho]", ",", "0.999999", ",", "x"}], "]"}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.650723265764867*^9, 3.6507233483368*^9}, {
  3.650723506298774*^9, 3.650723711730349*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.412742510087561`"}], ",", 
   RowBox[{"-", "5.412732824461093`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.650723348858259*^9, {3.650723562637055*^9, 3.650723583983691*^9}, {
   3.6507236183174467`*^9, 3.650723712151079*^9}, 3.65077782759768*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  SuperscriptBox["\[Lambda]", "ll"], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.650801714280854*^9, 3.650801716762652*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "s"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", " ", "r"}], " ", ")"}]}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["s", "2"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], "2"]}], "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", "c"}], 
          RowBox[{"(", 
           RowBox[{"1", "+", "r"}], ")"}]}], "+", 
         RowBox[{"s", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]}]]}], 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}]}], "-", 
      RowBox[{"s", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "\[Rule]", "1"}], ",", 
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.650793044057288*^9, 3.650793287321713*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["3", "2"], "-", 
  FractionBox[
   SqrtBox["5"], "2"]}]], "Output",
 CellChangeTimes->{{3.6507930544229794`*^9, 3.650793069101947*^9}, {
   3.650793104334138*^9, 3.6507932112785273`*^9}, 3.650793245601375*^9, 
   3.650793289616272*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "s"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", " ", "r"}], " ", ")"}]}], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{
        SuperscriptBox["s", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "r"}], ")"}], "2"]}], "-", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", " ", "c"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", "r"}], ")"}]}], "+", 
          RowBox[{"s", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]}]]}], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"c", 
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}]}], "-", 
       RowBox[{"s", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]], "/.", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"\[Gamma]", " ", 
      SuperscriptBox["r", "2"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "\[Rule]", 
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["r", "2"], "/", "2"}]}]}], ",", 
     RowBox[{"c", "\[Rule]", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["r", "2"], "/", "2"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Series", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.650793393783947*^9, 3.650793438855825*^9}, {
  3.650793596503955*^9, 3.6507936290317717`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "2"], "-", 
   FractionBox[
    RowBox[{"\[Gamma]", " ", 
     SuperscriptBox["r", "2"]}], "4"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "r", "]"}], "5"],
    SeriesData[$CellContext`r, 0, {}, 0, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`r, 0, {
    Rational[1, 2], 0, Rational[-1, 4] $CellContext`\[Gamma]}, 0, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.650793428572075*^9, {3.650793611331892*^9, 3.6507936296492968`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"generate", " ", 
    SuperscriptBox["\[Lambda]", "ll"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "s"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", " ", "r"}], " ", ")"}]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{
          SuperscriptBox["s", "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "r"}], ")"}], "2"]}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", " ", "c"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", "r"}], ")"}]}], "+", 
            RowBox[{"s", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]}]]}], 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", 
          RowBox[{"(", 
           RowBox[{"1", "+", "r"}], ")"}]}], "-", 
         RowBox[{"s", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", "r"}]}], ")"}]}]}], ")"}]}]], "/.", 
     RowBox[{"{", 
      RowBox[{"r", "\[Rule]", 
       RowBox[{
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"r", ",", "q"}], "]"}], " ", 
        SuperscriptBox["r", "2"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"%", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", "\[Rule]", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox["r", "2"], "/", "2"}]}]}], ",", 
       RowBox[{"c", "\[Rule]", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox["r", "2"], "/", "2"}]}]}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6508018647641993`*^9, 3.650801954013679*^9}, {
  3.6508019857590723`*^9, 3.650801996798781*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]ll", "[", 
   RowBox[{"r_", ",", "q_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         SuperscriptBox["r", "2"], "2"]}], ")"}]}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        SuperscriptBox["r", "2"], 
        RowBox[{"1", "+", 
         SuperscriptBox["r", "q"]}]]}], ")"}]}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["r", "2"], "2"]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           SuperscriptBox["r", "2"], 
           RowBox[{"1", "+", 
            SuperscriptBox["r", "q"]}]]}], ")"}], "2"]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              SuperscriptBox["r", "2"], "2"]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             SuperscriptBox["r", "2"], 
             RowBox[{"1", "+", 
              SuperscriptBox["r", "q"]}]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             SuperscriptBox["r", "2"], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"]}], 
             RowBox[{"1", "+", 
              SuperscriptBox["r", "q"]}]]}], ")"}]}]}], ")"}]}]}]]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox["r", "2"], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox["r", "2"], 
          RowBox[{"1", "+", 
           SuperscriptBox["r", "q"]}]]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["r", "2"], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["r", "q"]}]]}], ")"}]}]}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.650801977077053*^9, 3.650801981206396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"\[Lambda]ll", "[", 
    RowBox[{"r", ",", "10"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6508025601239967`*^9, 3.65080256033156*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "2"], "-", 
   FractionBox[
    SuperscriptBox["r", "2"], "4"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "r", "]"}], "5"],
    SeriesData[$CellContext`r, 0, {}, 0, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`r, 0, {
    Rational[1, 2], 0, 
    Rational[-1, 4]}, 0, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.650802560707993*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  SuperscriptBox["\[Lambda]", "lc"], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.6508023885850763`*^9, 3.650802390300971*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["r", "2"], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{
     SuperscriptBox["r", "2"], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]lc", "[", 
   RowBox[{"r_", ",", "q_"}], "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", "r", "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["r", "2"]}], ")"}]}], "+", 
     RowBox[{"s", "[", "r", "]"}], "+", 
     RowBox[{
      RowBox[{"lb", "[", "r", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"s", "[", "r", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", 
            SuperscriptBox["r", "2"]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"c", "[", "r", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["r", "2"]}], ")"}]}]}], ")"}]}]}], ")"}], 
   RowBox[{"-", "1"}]]}]}], "Input",
 CellChangeTimes->{{3.65080239972957*^9, 3.650802495534398*^9}}],

Cell[TextData[{
 "Interestingly, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Lambda]", "ll"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Lambda]", "lc"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " have different corrections at order 4 in \[Rho]"
}], "Text",
 CellChangeTimes->{{3.6508025725534897`*^9, 3.65080259540135*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"\[Lambda]lc", "[", 
    RowBox[{"r", ",", "10"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65080249919963*^9, 3.650802547611807*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "2"], "-", 
   FractionBox[
    SuperscriptBox["r", "2"], "4"], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["r", "4"]}], "8"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "r", "]"}], "5"],
    SeriesData[$CellContext`r, 0, {}, 0, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`r, 0, {
    Rational[1, 2], 0, 
    Rational[-1, 4], 0, 
    Rational[3, 8]}, 0, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.650802505062044*^9, 3.650802547992568*^9}}]
}, Open  ]],

Cell["Fractal dimensions", "Text",
 CellChangeTimes->{{3.650802728089134*^9, 3.6508027323452377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dthtest", "[", 
    RowBox[{"\[Rho]_", ",", "q_", ",", "x_", ",", "y_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"n", "+", "2"}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "y"}], ")"}], " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"\[Lambda]ll", "[", 
            RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], 
          RowBox[{"\[Lambda]ll", "[", 
           RowBox[{
            SuperscriptBox["\[Rho]", "q"], ",", "q"}], "]"}]], "]"}]}], "+", 
       RowBox[{"y", " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"\[Lambda]lc", "[", 
            RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], 
          RowBox[{"\[Lambda]lc", "[", 
           RowBox[{
            SuperscriptBox["\[Rho]", "q"], ",", "q"}], "]"}]], "]"}]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"2", "x"}]}], "3"], " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"lb", "[", "\[Rho]", "]"}], "q"], 
          RowBox[{"lb", "[", 
           SuperscriptBox["\[Rho]", "q"], "]"}]], "]"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"q", "-", "1"}], ")"}], 
       RowBox[{"Log", "[", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}], "]"}]}], ")"}]}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.650802738975987*^9, 3.6508027648475847`*^9}, {
  3.650802825024201*^9, 3.650802851856612*^9}}]
}, Closed]]
}, Open  ]]
},
WindowSize->{1280, 965},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[697, 27, 299, 5, 32, "Input"],
Cell[999, 34, 998, 15, 32, "Output"]
}, Open  ]],
Cell[2012, 52, 223, 5, 55, "Input"],
Cell[2238, 59, 654, 18, 77, "Input"],
Cell[2895, 79, 351, 8, 55, "Input"],
Cell[CellGroupData[{
Cell[3271, 91, 200, 5, 32, "Input"],
Cell[3474, 98, 724, 15, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[4247, 119, 146, 2, 57, "Section"],
Cell[CellGroupData[{
Cell[4418, 125, 150, 2, 49, "Subsection"],
Cell[4571, 129, 2524, 66, 1401, "Input"],
Cell[7098, 197, 2808, 74, 1585, "Input"],
Cell[9909, 273, 3023, 79, 1603, "Input"],
Cell[12935, 354, 2900, 82, 2362, "Input"],
Cell[15838, 438, 1930, 52, 1401, "Input"],
Cell[17771, 492, 3327, 88, 2141, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21147, 586, 100, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[21272, 591, 165, 2, 49, "Subsection"],
Cell[21440, 595, 255, 5, 51, "Text"],
Cell[21698, 602, 1377, 41, 117, "Text"],
Cell[23078, 645, 1378, 35, 116, "Input"],
Cell[24459, 682, 1135, 34, 55, "Input"],
Cell[25597, 718, 1826, 55, 146, "Text"],
Cell[27426, 775, 2339, 61, 297, "Input"],
Cell[CellGroupData[{
Cell[29790, 840, 158, 2, 40, "Subsubsection"],
Cell[29951, 844, 933, 21, 325487, "Text"],
Cell[30887, 867, 6141, 148, 847168, "Input"],
Cell[37031, 1017, 322, 9, 68588, "Input"],
Cell[CellGroupData[{
Cell[37378, 1030, 269, 6, 65502, "Input"],
Cell[37650, 1038, 1626, 35, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[39337, 1080, 117, 1, 41, "Subsection"],
Cell[39457, 1083, 487, 14, 51, "Text"],
Cell[39947, 1099, 2394, 61, 231, "Input"],
Cell[42344, 1162, 3594, 95, 429, "Input"],
Cell[45941, 1259, 979, 26, 99, "Input"],
Cell[CellGroupData[{
Cell[46945, 1289, 1408, 37, 65, "Input"],
Cell[48356, 1328, 34829, 701, 300, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83234, 2035, 181, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[83440, 2041, 111, 1, 40, "Subsubsection"],
Cell[83554, 2044, 6978, 206, 510, "Input"],
Cell[CellGroupData[{
Cell[90557, 2254, 784, 24, 83, "Input"],
Cell[91344, 2280, 1788, 53, 61, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[93181, 2339, 121, 1, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[93327, 2344, 1983, 46, 86, "Input"],
Cell[95313, 2392, 19122, 331, 292, 7061, 134, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114472, 2728, 3430, 83, 161, "Input"],
Cell[117905, 2813, 71157, 1355, 294, "Output"]
}, Open  ]],
Cell[189077, 4171, 36004, 637, 292, "Input"],
Cell[CellGroupData[{
Cell[225106, 4812, 219, 5, 32, "Input"],
Cell[225328, 4819, 184, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225561, 4827, 112, 1, 40, "Subsubsection"],
Cell[225676, 4830, 1966, 44, 165, "Input"],
Cell[227645, 4876, 1512, 44, 143, "Input"],
Cell[CellGroupData[{
Cell[229182, 4924, 1254, 27, 38, "Input"],
Cell[230439, 4953, 5539, 105, 274, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236015, 5063, 1383, 37, 56, "Input"],
Cell[237401, 5102, 77373, 1282, 242, 67521, 1119, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[314789, 6387, 3182, 85, 341, "Input"],
Cell[CellGroupData[{
Cell[317996, 6476, 1406, 28, 38, "Input"],
Cell[319405, 6506, 5853, 108, 272, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325295, 6619, 1441, 29, 38, "Input"],
Cell[326739, 6650, 7449, 136, 268, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[334249, 6793, 93, 1, 49, "Subsection"],
Cell[334345, 6796, 685, 20, 66, "Text"],
Cell[CellGroupData[{
Cell[335055, 6820, 1614, 47, 140, "Input"],
Cell[336672, 6869, 309, 7, 32, "Output"]
}, Open  ]],
Cell[336996, 6879, 242, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[337263, 6888, 1187, 42, 83, "Input"],
Cell[338453, 6932, 273, 7, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338763, 6944, 1729, 59, 136, "Input"],
Cell[340495, 7005, 553, 16, 49, "Output"]
}, Open  ]],
Cell[341063, 7024, 1911, 62, 141, "Input"],
Cell[342977, 7088, 2608, 86, 117, "Input"],
Cell[CellGroupData[{
Cell[345610, 7178, 273, 7, 32, "Input"],
Cell[345886, 7187, 452, 15, 49, "Output"]
}, Open  ]],
Cell[346353, 7205, 244, 5, 51, "Text"],
Cell[346600, 7212, 1245, 41, 90, "Input"],
Cell[347848, 7255, 451, 14, 51, "Text"],
Cell[CellGroupData[{
Cell[348324, 7273, 271, 7, 32, "Input"],
Cell[348598, 7282, 584, 19, 49, "Output"]
}, Open  ]],
Cell[349197, 7304, 102, 1, 35, "Text"],
Cell[349302, 7307, 1715, 51, 66, "Input"]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
