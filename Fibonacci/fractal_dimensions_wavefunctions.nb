(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    255250,       5835]
NotebookOptionsPosition[    249158,       5640]
NotebookOutlinePosition[    249493,       5655]
CellTagsIndexPosition[    249450,       5652]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hamiltonians", "Section",
 CellChangeTimes->{{3.629712555829027*^9, 3.629712557652924*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.632041721549465*^9, 3.632041723101447*^9}, {
  3.6358312356676207`*^9, 3.635831252179337*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"glue", "[", 
    RowBox[{"l1_", ",", "l2_"}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"l1", ",", "l2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.638791487960203*^9, 3.638791513106632*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hp", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
   3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
   3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
   3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
   3.629711744441989*^9}, {3.629712260739542*^9, 3.6297122613888474`*^9}, {
   3.629712372304244*^9, 3.629712372429983*^9}, 3.6313353026608963`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "antiperiodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ha", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{"-", "tw"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", 
     SuperscriptBox["e", "ik"], " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hk", "[", 
    RowBox[{"k_", ",", "n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "k"}], "]"}], "tw"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"ConjugateTranspose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}, {3.6342799382942677`*^9, 3.6342799433882017`*^9}, {
  3.634279999836821*^9, 3.6342800047344503`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "free", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Omega]", "=", 
     RowBox[{"N", " ", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Sqrt", "[", "5", "]"}], "-", "1"}], "2"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rot", "=", "28"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "rotate", " ", "the", " ", "sequence", " ", "of", " ", "couplings"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fib", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", 
        RowBox[{"(", " ", 
         RowBox[{"n", "+", "1", "+", "rot"}], ")"}]}], "]"}], "-", 
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "rot"}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"jump", "[", 
      RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fib", "[", 
         RowBox[{"n", "-", "1"}], "]"}], "<", "1"}], ",", "ts", ",", "tw"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hf", "[", 
     RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F2", "=", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"jump", "[", 
            RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ar", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"ar", "+", 
         RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hpn", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tbl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
          RowBox[{"jump", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"tbl", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "F2"}], "}"}], "\[Rule]", "tw"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"tbl", ",", 
         RowBox[{"{", 
          RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}, {
  3.6313347078403673`*^9, 3.631334724799961*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Harper", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hharp", "[", 
     RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hopping", ",", "pot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"hopping", " ", "subdiagonal", " ", "part"}], "*)"}], 
      RowBox[{
       RowBox[{"hopping", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"q", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"periodic", " ", "boundary", " ", "conditions"}], "*)"}], 
       RowBox[{"AppendTo", "[", 
        RowBox[{"hopping", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "q"}], "}"}], "\[Rule]", 
          RowBox[{"-", "1."}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"convert", " ", "to", " ", "matrix"}], "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"hopping", ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "symmetrize", "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"hopping", "+", 
         RowBox[{"Transpose", "[", "hopping", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"diagonal", " ", "part"}], "*)"}], 
       RowBox[{"pot", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "i"}], "}"}], "\[Rule]", 
             RowBox[{"2.", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Pi]", " ", "p", " ", 
                RowBox[{"i", "/", "q"}]}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "q"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"pot", "+", "hopping"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Harper", " ", "antiperiodic"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hharpa", "[", 
     RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hopping", ",", "pot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"hopping", " ", "subdiagonal", " ", "part"}], "*)"}], 
      RowBox[{
       RowBox[{"hopping", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"q", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"antiperiodic", " ", "boundary", " ", "conditions"}], "*)"}], 
       
       RowBox[{"AppendTo", "[", 
        RowBox[{"hopping", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "q"}], "}"}], "\[Rule]", "1."}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"convert", " ", "to", " ", "matrix"}], "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"hopping", ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "symmetrize", "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"hopping", "+", 
         RowBox[{"Transpose", "[", "hopping", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"diagonal", " ", "part"}], "*)"}], 
       RowBox[{"pot", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "i"}], "}"}], "\[Rule]", 
             RowBox[{"2.", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Pi]", " ", "p", " ", 
                RowBox[{"i", "/", "q"}]}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "q"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"pot", "+", "hopping"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "choosing", " ", "Fibonacci", " ", "numbers", " ", "as", " ", 
     "approximants"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"hfib", "[", "n_", "]"}], ":=", 
     RowBox[{"hharp", "[", 
      RowBox[{
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ",", 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"hfiba", "[", "n_", "]"}], ":=", 
     RowBox[{"hharpa", "[", 
      RowBox[{
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ",", 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.638249400809607*^9, 3.638249432782072*^9}, {
  3.638249651446948*^9, 3.6382496950248528`*^9}, {3.638792520044005*^9, 
  3.638792555268008*^9}, {3.638792634394656*^9, 3.6387926459809427`*^9}, {
  3.6387926847528143`*^9, 3.6387927036844*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Average exponents", "Section",
 CellChangeTimes->{{3.6387835848909187`*^9, 3.638783600107369*^9}}],

Cell[CellGroupData[{

Cell["Typical x, typical eigenfunction", "Subsection",
 CellChangeTimes->{{3.638785617804412*^9, 3.6387856277885103`*^9}}],

Cell[TextData[{
 "Let us note ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalOmega]", "n"], TraditionalForm]]],
 "(x) the number of states having a given value of x at step n. One has\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "n"], "(", "x", ")"}], " ", "=", " ", 
    RowBox[{"\[CapitalOmega]", "(", 
     RowBox[{
      SubscriptBox["n", "m"], ",", 
      SubscriptBox["n", "a"]}], ")"}]}], TraditionalForm]]],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "m"], "=", 
    RowBox[{"n", " ", "x"}]}], TraditionalForm]]],
 " the number of molecular renormalizations, and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "a"], "=", 
    RowBox[{"n", " ", 
     FractionBox[
      RowBox[{"1", "-", 
       RowBox[{"2", "x"}]}], "3"]}]}], TraditionalForm]]],
 " the number of atomic renormalizations, and\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalOmega]", 
     RowBox[{"(", 
      RowBox[{"p", ",", "q"}], ")"}]}], "=", 
    RowBox[{
     SuperscriptBox["2", "p"], 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "+", "q"}], ")"}], "!"}], 
      RowBox[{
       RowBox[{"p", "!"}], " ", 
       RowBox[{"q", "!"}]}]]}]}], TraditionalForm]]],
 ".\nWhen n becomes large, we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Log", "(", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "n"], "(", "x", ")"}], ")"}], " ", 
     "~", " ", 
     RowBox[{"f", "(", "x", ")"}]}], " ", 
    RowBox[{
     RowBox[{"Log", "(", 
      SubscriptBox["F", "n"], ")"}], " ", "~", " ", "n"}], " ", 
    RowBox[{
     RowBox[{"Log", "(", "\[Phi]", ")"}], "\[Cross]", 
     RowBox[{"f", "(", "x", ")"}]}]}], TraditionalForm]]],
 " with Log(\[Phi])\[Cross]f(x) = -x Log(3x/2) + ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "3"], TraditionalForm]]],
 "Log(1+x) - ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"2", "x"}]}], "3"], TraditionalForm]]],
 "Log(1-2x)\nThe Log erases a constant factor ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". To recover it we simply note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", 
    SuperscriptBox[
     SubscriptBox["F", "n"], 
     RowBox[{
      RowBox[{"f", "(", "x", ")"}], "-", "1"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " should be the probability density of x. Thus by the steepest descent \
method we get\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "=", " ", 
    SqrtBox[
     FractionBox[
      RowBox[{"n", " ", "\[Sigma]"}], 
      RowBox[{"2", " ", "\[Pi]"}]]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with \[Sigma] = Log(\[Phi]) |",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "|.\nThe final thing to do to compare asymptotic result for the probability \
density with ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox["\[CapitalOmega]", "n"], 
    SubscriptBox["F", "n"]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is to take the continuous limit. Since there are approximately n/3 values \
of x at step n, we simply multiply by n/3."
}], "Text",
 CellChangeTimes->{{3.638783642907102*^9, 3.6387840264917507`*^9}, {
  3.6387841181557693`*^9, 3.638784154475835*^9}, {3.6387841971156397`*^9, 
  3.6387843127158957`*^9}, {3.6387844249723377`*^9, 3.638784433563871*^9}, {
  3.63885319136224*^9, 3.638853210017619*^9}, {3.6388532477459373`*^9, 
  3.638853260545871*^9}, {3.6388547699626637`*^9, 3.638855075835269*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"3", 
        RowBox[{"x", "/", "2"}]}], "]"}]}], " ", "+", " ", 
     RowBox[{
      FormBox[
       FractionBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "x"}], ")"}], "3"],
       TraditionalForm], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "x"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      FormBox[
       FractionBox[
        RowBox[{"1", " ", "-", " ", 
         RowBox[{"2", "x"}]}], "3"],
       TraditionalForm], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", 
        RowBox[{"2", "x"}]}], "]"}]}]}], 
    RowBox[{"Log", "[", 
     RowBox[{"\[Omega]", "^", 
      RowBox[{"-", "1"}]}], "]"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.638784337235059*^9, 3.63878436219147*^9}, {
  3.63878443688055*^9, 3.638784441215188*^9}, {3.638854663888339*^9, 
  3.638854668094747*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"step", "=", "80"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "number", " ", "of", " ", "states", " ", "having", " ", "value", " ", "x",
      " ", "when", " ", "n"}], " ", "=", " ", "step"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compt", "[", "x_", "]"}], ":=", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"step", " ", "x"}]], 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"step", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "x"}], ")"}], "/", "3"}]}], ")"}], "!"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"step", " ", "x"}], ")"}], "!"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"step", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", "x"}]}], ")"}], "/", "3"}]}], ")"}], "!"}]}]]}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"exact", " ", "probability", " ", "density", " ", "of", " ", "x"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"exactfreq", "[", "x_", "]"}], ":=", 
    RowBox[{
     FractionBox["step", "3"], 
     FractionBox[
      RowBox[{" ", 
       RowBox[{"compt", "[", "x", "]"}]}], 
      RowBox[{"Fibonacci", "[", "step", "]"}]]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "variance"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x0", "=", 
    FormBox[
     RowBox[{"2", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "\[Omega]"}], "-", "1"}], ")"}], "/", "5"}]}],
     TraditionalForm]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "the", " ", "value", " ", "of", " ", "x", " ", 
    "that", " ", "makes", " ", "f", " ", "stationnary"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"f", "''"}], "[", "x0", "]"}]}], "*", 
     RowBox[{"Log", "[", 
      RowBox[{"\[Omega]", "^", 
       RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "asymptotic", " ", "probability", " ", "density", " ", "of", " ", "x"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"freq", "[", "x_", "]"}], ":=", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"step", " ", "\[Sigma]"}], 
      RowBox[{"2", " ", "\[Pi]"}]]], 
    SuperscriptBox[
     RowBox[{"Fibonacci", "[", "step", "]"}], 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], "-", "1"}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"exactfreq", "[", "x", "]"}], ",", 
     RowBox[{"freq", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"1", "/", "2"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.638784365139797*^9, 3.638784389502637*^9}, {
   3.638784482143703*^9, 3.638784489998226*^9}, {3.6387845538168573`*^9, 
   3.638784763664557*^9}, {3.638784811649939*^9, 3.638784844128883*^9}, {
   3.63878584864167*^9, 3.638785857025633*^9}, 3.63885191774343*^9, {
   3.6388522270735292`*^9, 3.638852237247794*^9}, {3.638852285197522*^9, 
   3.6388524288614264`*^9}, {3.638852484763895*^9, 3.638852515311448*^9}, {
   3.63885263843143*^9, 3.638852771087302*^9}, {3.638853022110984*^9, 
   3.638853041710161*^9}, {3.638853157230781*^9, 3.6388531587980967`*^9}, {
   3.638853293007835*^9, 3.638853340402598*^9}, {3.63885339342268*^9, 
   3.638853427854576*^9}, {3.638853458257043*^9, 3.638853483409279*^9}, {
   3.638853704256863*^9, 3.63885373024017*^9}, {3.638853806992846*^9, 
   3.6388538077410917`*^9}, 3.638853874369492*^9, {3.638853956464325*^9, 
   3.6388539760639772`*^9}, {3.6388542586889753`*^9, 3.638854296688943*^9}, 
   3.638854343618617*^9, {3.6388544579213*^9, 3.638854520401705*^9}, {
   3.638854594626376*^9, 3.638854651473197*^9}, {3.638854710928803*^9, 
   3.638854757297799*^9}, {3.6388550939537888`*^9, 3.6388552541155357`*^9}, {
   3.638855498326974*^9, 3.638855507129644*^9}, {3.638855538503229*^9, 
   3.638855543333881*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
j1Owhw==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVl3c8Vv8XwEUDTTTs8ZC9spN7z6UipZKVJNlkhWSLhOzs7L333nvv/dge
21cllRkpP7+/7uv9Op97PueeeQ+L7mslA2IiIiLSk0RE/3/eN1gbavxyF42k
wp7HDNVK/ZevpjtHwwa67HE9gcyNUlfP4gNLaETgq4Rl9tvGJin+m5fT4mju
gMbn31USHG1SRFRfQo+Y5MFJ7iyJ5n671NB6nbsO+yMQdxJh5V/ulJIcFC4M
oVGBoFnTd1Ln+6TOZZMmbDM9AwVip4/Tk4NSsx9mA9TYtYCqRYn2hs2I1Dj/
M1QzQge4eHUalLXGpBpjWkQDaPSB3D9pNChpUiqLlJ+vPtYQEGQd25eblQp5
G8n2g+kVxP6TFJbOn5dyXCSmZ04xhaOo7xXBO4tSeo/NqZ6wW0DWV6s5e7cV
KXaC6akmFUsIrLH5yai2JhV9meX9swgr8Mzt/qL+7pvUhQdjh7/GrcGFqy2w
8sQPqQ/v/ex9aWxgdIOoo9/ml1Q9vWG5WrUNyO3664p92JT6XYFt456/Bb6r
OjusiVtSZhs7r2tibcGlzWb1LemuVLrPYN5HxA6yn5v36KjuSc2z5XxTJtgB
GwmH+VLJbymV59pG60wOwPeYOJ4u649U4K5kWmWjA5DSNf6XKv1XqjP4ypKH
jiPsVcbcNPnxTwrp7NZiSHGCAp1Ub125E4i9Xlrsl9vOwM/3Z1dGmhgp/uc6
VbbsDInS/VLf5UgQdlFRtUfs7+A9XdrrS+9OIdqDF8NoO96Bf2QZbiT/NBJj
+nVo1cgV6um5urc2ziCkQwPpDSpukDijayuSSI6kMda1XU9zg2//fMymKc8h
MmbZy347bnBO5mBh4/N5xPmMJ0494j2cNGNK0re4hNCoWkvXr74HA9pbxgKP
KZDy5JfabOLucJV+/s2RJCXyE5GM/znuDqFxtyXKRS8jAX4cdWqcH+D8GWWx
/LtXEO7JyzO19h9g1/+9Tb/uVUTf5geND40HRKUY735rp0aESUIciy09gGJO
XsOZhxYhDhGZnu7wAL1x5qt+yXRIQoFDLL+tJzR6OEs29jAiFij936d9nsCq
vRT5HzAjUn31L96zecHiS2Ppa9dZkKmvJEyjw14g9Oqf/FUqViTTId31L9dH
MEUnakgZ2BA7Uvl59vcfQbXImsRE5DpymT0wyUHAG+jG88jJAjmQpVJB4hQv
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
s8Qd2QThfzGk8es=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638784375023015*^9, 3.6387843900141687`*^9}, 
   3.6387844432076483`*^9, {3.6387845849385643`*^9, 3.638784764316794*^9}, {
   3.63878584955514*^9, 3.63878585753655*^9}, 3.638795698253481*^9, 
   3.638851416057928*^9, 3.638851930096963*^9, {3.6388522989570217`*^9, 
   3.638852328653894*^9}, {3.638852358748344*^9, 3.638852429682807*^9}, {
   3.638852487982975*^9, 3.638852515861109*^9}, {3.6388526557952337`*^9, 
   3.6388526806529903`*^9}, {3.638852728387805*^9, 3.638852771600533*^9}, 
   3.638853042541519*^9, 3.638853159567964*^9, 3.638853299955646*^9, 
   3.638853341200922*^9, {3.6388534294833727`*^9, 3.638853489077834*^9}, {
   3.6388537109726257`*^9, 3.6388537312344427`*^9}, 3.63885380846132*^9, 
   3.6388538749156103`*^9, {3.638853968212799*^9, 3.638853976993931*^9}, {
   3.6388542607024803`*^9, 3.638854298140304*^9}, 3.638854344282189*^9, {
   3.6388544691717777`*^9, 3.638854520930078*^9}, {3.638854702089624*^9, 
   3.638854725716618*^9}, 3.638854767168589*^9, {3.6388551783308372`*^9, 
   3.638855192637237*^9}, {3.6388552400018797`*^9, 3.6388552553225403`*^9}, {
   3.6388554989552402`*^9, 3.638855508080331*^9}, {3.638855539423462*^9, 
   3.638855543784656*^9}, 3.639124110677561*^9, 3.63912477231357*^9}]
}, Open  ]],

Cell[TextData[{
 "So, the typical value of x is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " such that\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", 
      SubscriptBox["x", "0"], ")"}]}], " ", "=", " ", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638783642907102*^9, 3.6387840264917507`*^9}, {
  3.6387841181557693`*^9, 3.638784154475835*^9}, {3.6387841971156397`*^9, 
  3.6387843127158957`*^9}, {3.6387844249723377`*^9, 3.638784433563871*^9}, {
  3.638784873516917*^9, 3.638784895872274*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], "[", "x", "]"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6387849018292837`*^9, 3.638784906894401*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ratnz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Solve was unable to solve the system with inexact \
coefficients. The answer was obtained by solving a corresponding exact system \
and numericizing the result. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::ratnz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6388553654047956`*^9, 3.639124111710307*^9, 
  3.639124772708631*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.34164078649987384`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6387849077291307`*^9, 3.638795698375495*^9, 
  3.638851416432148*^9, 3.63885536540606*^9, 3.639124111712367*^9, 
  3.6391247727106247`*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Omega]", "4"]}], ")"}], "/", "5"}]}], "=", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "2", "+", 
          RowBox[{"3", "\[Omega]"}]}], ")"}], "/", "5"}]}], "=", 
      RowBox[{"2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "\[Omega]"}], "-", "1"}], ")"}], "/", "5"}]}]}]}]}], 
   TraditionalForm]]],
 "\nWe have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["x", "0"], ")"}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
  3.6387854809595346`*^9, 3.63878552089725*^9}, {3.638852579881732*^9, 
  3.638852591278611*^9}, {3.638855378768705*^9, 3.638855380543936*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Closed]],

Cell[CellGroupData[{

Cell["Typical exponent", "Subsection",
 CellChangeTimes->{{3.638785617804412*^9, 3.6387856277885103`*^9}, {
  3.638785699124238*^9, 3.638785702492312*^9}}],

Cell[TextData[{
 "In the large size limit, almost all wavefunctions have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    SubscriptBox["x", "0"]}], TraditionalForm]]],
 ". Therefore they have the exponent ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], "(", 
    SubscriptBox["x", "0"], ")"}], TraditionalForm]]],
 ". We also compute the average exponent\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SubscriptBox["F", "n"]], 
      SubscriptBox["\[CapitalSigma]", "a"], 
      RowBox[{
       SubscriptBox["\[Chi]", "q"], "(", "a", ")"}]}], " ", "=", " ", 
     RowBox[{
      FractionBox["1", 
       SubscriptBox["F", "n"]], 
      SubscriptBox["\[CapitalSigma]", "x"], 
      RowBox[{"\[CapitalOmega]", "(", "x", ")"}], " ", 
      RowBox[{
       SubscriptBox["\[Chi]", "q"], "(", "x", ")"}]}]}]}], 
   TraditionalForm]]],
 ".\nThus, we obtain that the average exponent is the exponent of the typical \
wavefunction:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Tau]", "q"], "(", 
       SubscriptBox["x", "0"], ")"}], "+", "1", "-", 
      RowBox[{"f", "(", 
       SubscriptBox["x", "0"], ")"}]}], " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "q"], "(", 
      SubscriptBox["x", "0"], ")"}]}]}], TraditionalForm]]],
 ".\n\nThis is perhaps too crude a reasoning, since we neglect completely the \
variance of the probability density of x. More rigorously we write\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], " ", "=", " ", 
    RowBox[{"N", 
     RowBox[{"\[Integral]", 
      RowBox[{"dx", " ", 
       SuperscriptBox[
        SubscriptBox["F", "n"], 
        RowBox[{
         RowBox[{"f", "(", "x", ")"}], "-", "1"}]], 
       SuperscriptBox[
        SubscriptBox["F", "n"], 
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["\[Tau]", "q"], "(", "x", ")"}]}]]}]}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nWe let g(x) = - log(\[Phi])(f(x)-1) ~ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[Sigma]", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SubscriptBox["x", "0"]}], ")"}], "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nand ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["t", "q"], " ", "\[Cross]", " ", "x"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"log", "(", "\[Phi]", ")"}], " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "q"], "(", "x", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". (At leading order in \[Rho] \[Tau] is linear in x. At second order it is \
affine in x).\nThen [computation to be checked]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], "~", " ", 
    SuperscriptBox["e", 
     RowBox[{"-", 
      RowBox[{"n", "(", 
       RowBox[{
        RowBox[{"t", " ", 
         SubscriptBox["x", "0"]}], "-", 
        RowBox[{
         SuperscriptBox["\[Sigma]t", "2"], "/", "2"}]}], ")"}]}]]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and thus\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Tau]", "q"], "(", 
      SubscriptBox["x", "0"], ")"}], "-", 
     FractionBox[
      RowBox[{"\[Sigma]", " ", 
       SuperscriptBox[
        SubscriptBox["t", "q"], "2"]}], 
      RowBox[{"2", " ", 
       RowBox[{"log", "(", "\[Phi]", ")"}]}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
   3.6387854809595346`*^9, 3.63878552089725*^9}, {3.6387857125111732`*^9, 
   3.638785735244388*^9}, 3.6387863849251623`*^9, {3.638787217085743*^9, 
   3.6387874299972982`*^9}, {3.638789863215384*^9, 3.6387898769593678`*^9}, {
   3.638855784610023*^9, 3.638855790706057*^9}, {3.638855893819655*^9, 
   3.638855900059226*^9}, {3.638855993099423*^9, 3.638855993152772*^9}, {
   3.638857196732266*^9, 3.638857419923415*^9}, {3.638857463516534*^9, 
   3.63885754264712*^9}, {3.638857633836708*^9, 3.638857649884869*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "return", " ", "bands", " ", "and", " ", "intensities", " ", "ordered", 
    " ", "by", " ", "increasing", " ", "energy"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IntBands", "[", 
    RowBox[{"n_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"IntBands", "[", 
     RowBox[{"n", ",", "\[Rho]"}], "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ts", "=", "1."}], ",", 
        RowBox[{"tw", "=", "\[Rho]"}], ",", "vpp", ",", "vpa", ",", "wfp", 
        ",", "wfa", ",", "o", ",", "intensities", ",", "intp", ",", "inta", 
        ",", "bands"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpp", ",", "wfp"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hp", "[", 
          RowBox[{
           RowBox[{"n", "-", "2"}], ",", "tw", ",", "ts"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpa", ",", "wfa"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"ha", "[", 
          RowBox[{
           RowBox[{"n", "-", "2"}], ",", "tw", ",", "ts"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpp", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpp", "=", 
        RowBox[{"vpp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfp", "=", 
        RowBox[{"wfp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "intensity", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"intp", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfp", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpa", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpa", "=", 
        RowBox[{"vpa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfa", "=", 
        RowBox[{"wfa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inta", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfa", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"intensities", "=", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{"intp", "+", "inta"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
         SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
         " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
         " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
         "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"bands", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"intensities", ",", "bands"}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.633857622837657*^9, 3.633857636360725*^9}, {
   3.633857697432269*^9, 3.633857736618175*^9}, {3.633857875244348*^9, 
   3.633857880154935*^9}, {3.633857983696754*^9, 3.633858012847005*^9}, {
   3.633858113513686*^9, 3.63385817326226*^9}, {3.6338582191389923`*^9, 
   3.633858247882305*^9}, {3.6338584245242987`*^9, 3.633858441933634*^9}, {
   3.6338588071014423`*^9, 3.633858831973674*^9}, {3.633860127767949*^9, 
   3.633860127878072*^9}, {3.633860351256763*^9, 3.633860351463883*^9}, {
   3.633860667887651*^9, 3.6338606714718103`*^9}, {3.633862354799317*^9, 
   3.633862354917128*^9}, {3.6338625592436666`*^9, 3.633862559419834*^9}, {
   3.633864977426675*^9, 3.633865033792412*^9}, {3.633865157785954*^9, 
   3.633865170565158*^9}, {3.633865213101501*^9, 3.6338652143434143`*^9}, {
   3.6338652773363457`*^9, 3.6338654482999268`*^9}, {3.633865502113283*^9, 
   3.6338656219671173`*^9}, {3.633868107793435*^9, 3.6338681310708113`*^9}, 
   3.634029627471177*^9, {3.6387899522056437`*^9, 3.638790019803317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"IntBands", "[", 
    RowBox[{"19", ",", "0.1"}], "]"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.6387900446858387`*^9, 3.6387901090412893`*^9}, {
  3.638790309874659*^9, 3.638790314497367*^9}, {3.638790673699335*^9, 
  3.638790673858129*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"278.83664`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.6387900634503593`*^9, 3.6387901161600113`*^9}, {
   3.6387903119967012`*^9, 3.6387903375934353`*^9}, 3.638790774026194*^9, 
   3.638851524480652*^9, 3.642237886703383*^9, 3.642304647877743*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "averaged", " ", "q", " ", "moment", " ", "of", " ", "the", " ", 
    "intensity"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"avqInt", "[", 
     RowBox[{"q_", ",", "n_", ",", "\[Rho]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"avqInt", "[", 
      RowBox[{"q", ",", "n", ",", "\[Rho]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IntBands", "[", 
           RowBox[{"n", ",", "\[Rho]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "^", "q"}], ",", "2"}], "]"}], "/", 
      
      RowBox[{"Fibonacci", "[", "n", "]"}]}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6387903168578157`*^9, 3.6387904975080957`*^9}}],

Cell[TextData[{
 "We expect ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Log", " ", 
    RowBox[{
     SubscriptBox[
      SuperscriptBox["\[Chi]", "n"], "q"], " ", "~", " ", 
     RowBox[{"-", 
      SubscriptBox["\[Tau]", "q"]}]}], " ", "Log", " ", 
    SubscriptBox["F", "n"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and indeed, Log ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox["\[Chi]", "n"], "q"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is a linear function of n ~ Log ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":"
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
   3.6387854809595346`*^9, 3.63878552089725*^9}, {3.6387857125111732`*^9, 
   3.638785735244388*^9}, 3.6387863849251623`*^9, {3.638787217085743*^9, 
   3.6387874299972982`*^9}, {3.638789863215384*^9, 3.6387898769593678`*^9}, {
   3.638790749617064*^9, 3.63879076400309*^9}, {3.6387909075233727`*^9, 
   3.6387909837752733`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "19", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avIntN", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"avqInt", "[", 
       RowBox[{".8", ",", "#", ",", "0.1"}], "]"}], "&"}], ",", "nValues"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Log", "@", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.638790563885058*^9, 3.6387906077785273`*^9}, {
   3.6387907799234743`*^9, 3.638790780082123*^9}, {3.638790991634129*^9, 
   3.638791068978476*^9}, {3.6387911202921457`*^9, 3.6387911701149406`*^9}, {
   3.638791215428357*^9, 3.638791308179717*^9}, {3.638791354820362*^9, 
   3.638791400499333*^9}, {3.638791577172716*^9, 3.638791581379018*^9}, {
   3.638793284598233*^9, 3.6387933166129427`*^9}, {3.638793376277965*^9, 
   3.638793377205214*^9}, 3.638793482806005*^9, 3.638851382497431*^9, {
   3.639128252490878*^9, 3.639128252890016*^9}, {3.639128305131393*^9, 
   3.639128332729555*^9}, {3.639128382203203*^9, 3.639128385210931*^9}, {
   3.639128487434729*^9, 3.639128510345064*^9}, {3.639128700603148*^9, 
   3.639128743562126*^9}, {3.639131452828783*^9, 3.639131461931829*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0.6931471805599453, 0.13862943611198894`}, {
      1.0986122886681098`, 0.11357678762026249`}, {1.6094379124341003`, 
      0.2386941604788886}, {2.0794415416798357`, 0.24080848508260916`}, {
      2.5649493574615367`, 0.3354296648502254}, {3.044522437723423, 
      0.36218128182314036`}, {3.5263605246161616`, 0.43756093167725807`}, {
      4.007333185232471, 0.4783223235009538}, {4.48863636973214, 
      0.5435173404453367}, {4.969813299576001, 0.5915024402328131}, {
      5.4510384535657, 0.6515701546035508}, {5.932245187448011, 
      0.7031583966620224}, {6.413458957167357, 0.7606902978195487}, {
      6.894670039433482, 0.8140559630942782}, {7.3758821482150125`, 
      0.8703405834585796}, {7.857093864902493, 0.9245799775919001}, {
      8.338305731356565, 0.9802521210734262}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 8.338305731356565}, {0, 0.9802521210734262}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.639128385674492*^9, {3.639128488218371*^9, 3.639128510768248*^9}, {
   3.639128703436467*^9, 3.639128744260952*^9}, {3.639131450018265*^9, 
   3.639131462460709*^9}, 3.642237888334412*^9, 3.64230468550543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"glue", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1.1486983549970349`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1.1202779090643658`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1.2695901863458385`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1.2722773518825243`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "1.3985411601253945`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "1.436459322323343`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "1.5489246743372227`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "1.6133654251765528`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", "1.722053269929265`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"144", ",", "1.8067008372883324`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"233", ",", "1.918550886774474`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"377", ",", "2.020122991946956`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"610", ",", "2.1397527774828213`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"987", ",", "2.2570439335168784`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1597", ",", "2.3877239343311683`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2584", ",", "2.5208092415998955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4181", ",", "2.6651280921874747`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.639128356321512*^9, 3.642237888510112*^9, 
  3.642304685792419*^9}]
}, Open  ]],

Cell[TextData[{
 "For large values of q, the 3-periodic behaviour of the Fibonacci numbers \
(odd, odd, even...) is clearly visible.\nIt turns out that when ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]]],
 " is even, there is a gap at E=0, while there is a band when ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]]],
 " is odd. Since there is an energy level at E=0 for the quasicrystalline \
chain, we guess that choosing odd approximant is a better idea. If ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]]],
 " is odd and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", 
    RowBox[{"n", "-", "2"}]], TraditionalForm]]],
 " as well, then the 2 lateral clusters have also a band in their center. \
This is perhaps even better."
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
   3.6387854809595346`*^9, 3.63878552089725*^9}, {3.6387857125111732`*^9, 
   3.638785735244388*^9}, 3.6387863849251623`*^9, {3.638787217085743*^9, 
   3.6387874299972982`*^9}, {3.638789863215384*^9, 3.6387898769593678`*^9}, {
   3.638790749617064*^9, 3.63879076400309*^9}, {3.6387909075233727`*^9, 
   3.6387909837752733`*^9}, {3.638791416320141*^9, 3.6387914635681458`*^9}, {
   3.638792148912303*^9, 3.638792351792663*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "19", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avIntN", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"avqInt", "[", 
       RowBox[{"10.", ",", "#", ",", "0.1"}], "]"}], "&"}], ",", "nValues"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Log", "@", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.638790563885058*^9, 3.6387906077785273`*^9}, {
   3.6387907799234743`*^9, 3.638790780082123*^9}, {3.638790991634129*^9, 
   3.638791068978476*^9}, {3.6387911202921457`*^9, 3.6387911701149406`*^9}, {
   3.638791215428357*^9, 3.638791308179717*^9}, {3.638791354820362*^9, 
   3.638791400499333*^9}, {3.638791526162737*^9, 3.638791554131571*^9}, {
   3.6387915928524446`*^9, 3.6387916451232243`*^9}, 3.638851386123867*^9, {
   3.6388714553365927`*^9, 3.638871500711956*^9}, {3.639128760730237*^9, 
   3.639128765721752*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0.6931471805599453, -6.23832462503951}, {
      1.0986122886681098`, -1.2848746022911515`}, {
      1.6094379124341003`, -1.8092528237138148`}, {
      2.0794415416798357`, -7.170655978752368}, {
      2.5649493574615367`, -2.946906123378745}, {
      3.044522437723423, -3.444269628778972}, {
      3.5263605246161616`, -8.424187905530601}, {
      4.007333185232471, -4.585003009661572}, {
      4.48863636973214, -5.088300124840333}, {
      4.969813299576001, -9.78499182304022}, {
      5.4510384535657, -6.224439133748406}, {
      5.932245187448011, -6.731809723563897}, {
      6.413458957167357, -11.207675399566467`}, {
      6.894670039433482, -7.863819157886625}, {
      7.3758821482150125`, -8.375331618643646}, {
      7.857093864902493, -12.669736221601545`}, {
      8.338305731356565, -9.503221471113013}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 8.338305731356565}, {-12.669736221601545`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638791536379951*^9, 3.6387915547642307`*^9}, {
   3.638791593354684*^9, 3.638791645588832*^9}, 3.638793720109568*^9, 
   3.6388515609879923`*^9, {3.6388714567827597`*^9, 3.638871501461339*^9}, {
   3.639128756602191*^9, 3.639128766086338*^9}, 3.642237891391409*^9, 
   3.6423046887908993`*^9}]
}, Open  ]],

Cell[TextData[{
 "For q into the range [0,1) it is safe to disregard the 3-periodicity \
dependance. Below we compute the slope ie ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    SubscriptBox["\[Tau]", "q"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for n=13, 16, 19 for different values of q between 0 and 1."
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638793401569675*^9, 3.638793517316625*^9}, {3.638793622481604*^9, 
  3.63879362593719*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "0.9", ",", "0.05"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"{", 
    RowBox[{"13", ",", "16", ",", "19"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avIntN", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"avqInt", "[", 
        RowBox[{"0.2", ",", "#", ",", "0.1"}], "]"}], "&"}], ",", "nValues"}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"Fibonacci", "[", "nValues", "]"}], "]"}], ",", 
     RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"dat", ",", "n", ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "dat", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fit", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"fit", "[", "\"\<FitResiduals\>\"", "]"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.638793532816143*^9, 3.6387935726130323`*^9}, {
   3.638793630900609*^9, 3.638793663204536*^9}, {3.638793732054772*^9, 
   3.638793733861661*^9}, {3.6387938453818703`*^9, 3.638793886678442*^9}, {
   3.638793924036399*^9, 3.638793989935809*^9}, {3.638794032839847*^9, 
   3.6387940978147383`*^9}, {3.638794139942824*^9, 3.638794224181072*^9}, {
   3.638794270056518*^9, 3.638794297205297*^9}, {3.638795382778778*^9, 
   3.638795383179003*^9}, 3.638851388910232*^9, {3.638871397563298*^9, 
   3.638871445291191*^9}, 3.6388715080275106`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{5.4510384535657, 3.6055356886873207`}, {6.894670039433482, 
       4.544782127765326}, {8.338305731356565, 
       5.489856458007559}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVkGs4lHkAR0djKKkMYzKvwfBK7ZCoFLX8fyISpVQrKhqXlgjR1nbZVG65
VZs2lXSxalVMqbSU1ZSkGZdHdNmKVYRC24y7aWjbD+c5n88xDYr2CZ3AYDBW
fON/5+4P0rANSXfyslYmZHILyDn/3kW+gnDCOPGDzQf+FfJqRVqsQLCblIze
bF5CXyW73P2msgSpxLgqwm5kTiFxe4SNwyanyWhRVFyx+Q1SdGh+gtzkCql1
fWvOd7pN3onE3E8mZSQ2tjJFEVNO9q6O2NxjIiWtnY8sVkY8JpNGc6SR1q9J
UrLQT5P3jGx/GJ/RG9tOEsuDTpwLbSbW+VlPb4s/kvp1UYGurm2kY2UYv9Ve
TnQkRp3jRZ0km0o2uri5n1QvTupaW9tNHGJLrzNrh8gCYaC/fMlnUvkyZ1X0
TCU5pYzM829UENuMcScDjzHSEKbxPK2ln7h3Lmq18WUgRMdP0sIZIl2z7ywd
6FVDsUQzfL/FCNmrSp1XvocJ19bkuluzlUST/SF8rZCFuQvvd08WqQirjuU+
+S8NNGevqSqOGidf6osij2+fCPmpVVaOaxno8BXzjI21wM1tbeqJUIPz4aht
T4om4/Qlvv+DmAn4bbx0kkvgFEiX3/m+IJ2JDfxKr+b+qVg/MDZWkqUObYll
r9k6HWQtyjN8XsxCqF3eoJ8VG31/WmdXyDSwa//PPoJBNsQO4Yr6Bk0kdWc1
1dfrwmA9o0DeOxFewmkF2mf00LpnqaPD0CRkFi2QeIk4kD2LtfFSakG25nfV
Dgd9BNWo4mM42pDURWdYMbnwfTxffM9wCm5uPYjaFi6+bJLaGzhMhbEnsY+6
PR0PrNxMyeppcPm6MeH8PgP0xdvvcLPUQciL+32l63h4s1DFGirVgdPBQyUi
AYU+BVfTwZGN49GKe9pdFHKqZyx8V8FG24FLnecrDJHTE6R/3FMXPaFlIQ9T
+JCxh4NefOuQb9PVrBMZwTu5LIDepAexR41qy2xjMMcapcw2PXSG2SxgDhrD
4+jbYI8QDqhrr7NS6kzQEc0vzFZwkLA5Nq/OU4AbPteDd/+kj2EVL9OzTICn
CTHSYHUuZt3LPi0zN0Viw4yAW8e4sAuu8manmiLUZG7QSb3pkJzVN6gdNEVu
eSTn0MXpmCXRT1u5wQzqG8ft1CwMsILVa9RYYYYxbmJyxx8GkL95XykV0vAS
2Cc1zuch+mymXupRGjJLl36fUh5q1cw/L/+VRn7TsOm5uzwIf7wr086icWBv
4aqP5Ty8t+06eOwkDbsafXH8Ax7WV0OenUvj/NYPYYUyHpb09ddevkZj55XM
f1gtPHCX+Sc/qqZhPvNvaakahbgiuShZSmO8PmOEqU6hQTfFcVkNjVc7nWd6
a1BIb7k1UFNP4+jjq4kdWhQYcVOCm57T+BL6C9HlUOjOlZC2dhqN+WYlERYU
3Jm+hvkdNAq9XrbfmUUhP+zTUGgXjZSBdN0JlhQC51Hij900HF0Ho0/NofDs
SRxfoaBR0F4trLKnYGutNXKzn0ZC+j4/ncUUjmRdaNoxSCNgnu3hDY4UPALq
0kZGaHASznQonClcrgzecldJ41+hN8fRlYL6d0rnfapv/xqZLofdKIiOHDNy
GqdxaU/p9qZlFCr6LUa/fqURb7btgrEnhf8AFpkltw==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.405924902350218, 3.511319650221309},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{5.4510384535657, 8.338305731356565}, {3.6055356886873207`, 
   5.489856458007559}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638793703510494*^9, {3.638793831218244*^9, 3.6387938578098917`*^9}, {
   3.638793980799843*^9, 3.638793990633048*^9}, {3.6387940412908583`*^9, 
   3.638794098348785*^9}, {3.638794150287819*^9, 3.638794233275392*^9}, {
   3.6387942705643187`*^9, 3.638794298019896*^9}, 3.638795384749449*^9, 
   3.6388515627131023`*^9, {3.638871394124557*^9, 3.638871445774756*^9}, 
   3.6388715096993856`*^9, 3.6391287835783253`*^9, 3.642237892630571*^9, 
   3.6423046908322773`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 0.0009708699514212604}, {
    2., -0.001941737141446076}, {3., 0.0009708671900243715}, {1., 0.}, {2., 
    0.}, {3., 0.}, {1., 0.0009708699514212604}, {2., -0.001941737141446076}, {
    3., 0.0009708671900243715}}, {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{5, 2}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{4, 1}], 
       LineBox[{6, 3}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{7, 8, 9}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 3.}, {-0.001941737141446076, 0.0009708699514212604}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638793703510494*^9, {3.638793831218244*^9, 3.6387938578098917`*^9}, {
   3.638793980799843*^9, 3.638793990633048*^9}, {3.6387940412908583`*^9, 
   3.638794098348785*^9}, {3.638794150287819*^9, 3.638794233275392*^9}, {
   3.6387942705643187`*^9, 3.638794298019896*^9}, 3.638795384749449*^9, 
   3.6388515627131023`*^9, {3.638871394124557*^9, 3.638871445774756*^9}, 
   3.6388715096993856`*^9, 3.6391287835783253`*^9, 3.642237892630571*^9, 
   3.642304691083398*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"linFit", "[", 
   RowBox[{"q_", ",", "\[Rho]_", ",", "nv_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"avIntN", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avIntN", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"avqInt", "[", 
          RowBox[{"q", ",", "#", ",", "\[Rho]"}], "]"}], "&"}], ",", "nv"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"glue", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", "nv", "]"}], "]"}], ",", 
        RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"data", ",", "n", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6387943612061357`*^9, 3.638794483189991*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"linFit", "[", 
      RowBox[{"#", ",", "0.1", ",", "nValues"}], "]"}], "&"}], "/@", 
    "qValues"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.638794486975334*^9, 3.6387945321143713`*^9}, {
   3.638794563124834*^9, 3.6387945633640614`*^9}, 3.6387947892358313`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"extract", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "q"], "'"}], "s", " ", "from", " ", "the", " ", 
    "fits"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tauqs", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
      "fits"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["D", "q"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        FractionBox["#1", 
         RowBox[{"#2", "-", "1"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["\[CapitalDelta]", "q"]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]qs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", "-", 
          RowBox[{"(", 
           RowBox[{"#2", "-", "1"}], ")"}]}], ")"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6387945939297028`*^9, 3.638794594275021*^9}, {
  3.638794633620426*^9, 3.638794876943446*^9}, {3.638795119798197*^9, 
  3.6387952198642263`*^9}, {3.638795307222921*^9, 3.638795339608634*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FittedModel", "::", "varzero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The estimated variance is zero. Properties requiring \
division by the variance or standard error will not be computed. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FittedModel\\\", ButtonNote -> \
\\\"FittedModel::varzero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6387948384494534`*^9, 3.638794877698139*^9, 3.638795122100992*^9, {
   3.63879519399751*^9, 3.638795220236808*^9}, 3.638795341427099*^9, 
   3.638795432269437*^9, 3.638851584368726*^9, 3.639128789451413*^9, 
   3.6391288237222*^9, 3.642237964224798*^9, 3.642304711565391*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"glue", "[", 
    RowBox[{"qValues", ",", "\[CapitalDelta]qs"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63879534528953*^9, 3.638795370182397*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQ5mzQSBlfYMr/OPhTqstIfwd9r/MFrBsFpou72J
MQgctn9Q7qQsmbwfKn/S/gHr7he/7hyyh5hywf7HzLzmcOWjUPWX7Wv2pi4K
m3vMPj0NBK7Ze7nH7AhKPg7Vf9Peaj3T/sye4/Znz4DAHXsltXe273WPQ817
YN9TJaIpH30Mqv6hPUe+0ScGVZj5j+0NLPUv5Mw6DNX/xN5UyXSH+omDUPue
2TM1X3gkWbQfat4L+39XZv6tebMLat5L+5Pf9vuu59sGNe+1vWhpB7ft0w1Q
897YiyXHOJ7+ssweAB73hnw=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 0.9}, {0, 0.18397256685909175`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638795356448955*^9, 3.638795370600136*^9}, 
   3.638795433312377*^9, 3.638851584511702*^9, 3.6391288252964373`*^9, 
   3.642237964397438*^9, 3.64230471184597*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"glue", "[", 
    RowBox[{"qValues", ",", "dqs"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6388672000991087`*^9, 3.6388672128680058`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQo+2M+aCQIr7b/e4Pm7LewdlL/TvvpOmfLC02/s
TYxB4LD9To9W/bik11D5k/Zafa7TP0q9soeYc8F+7ZlWTYsvL6DqL9vPOafC
n/jmuX16Gghcs+d21/6ix/gcqv+m/YqH+1w1DZ7Znz0DAnfsFQ5MPnOw7CnU
vAf2uw6VZhdcegJV/9De5PfjqcccnkDNf2zvWPPob/X+x1D9T+y3Gii/KvV5
DLXvmf0+Oc2eU08fQc17Yd8oatx4sPMR1LyX9gdZM/IvmT2CmvfaPmdectmi
1w+h5r2xF3RS+86w/KE9ADf0jv0=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5292180126661767},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 0.9}, {0.551636202539216, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.638867213257455*^9, 3.6391288273352957`*^9, 
  3.642237964489317*^9, 3.6423047119413033`*^9}]
}, Open  ]],

Cell[TextData[{
 "It is also possible to derive recursion relations on ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["\[Chi]", "q"], "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " using the second-order perturbation theory on wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Chi]", "q"], "n"], "=", 
    RowBox[{
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\[Lambda]", "2"], ")"}], "q"], 
      SuperscriptBox["\[Omega]", "2"], 
      SuperscriptBox[
       SubscriptBox["\[Chi]", "q"], 
       RowBox[{"n", "-", "2"}]]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Lambda]", "'"}], ")"}], "q"], 
      SuperscriptBox["\[Omega]", "3"], 
      SuperscriptBox[
       SubscriptBox["\[Chi]", "q"], 
       RowBox[{"n", "-", "3"}]]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nwith \[Lambda] = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox["\[Rho]", "2"], "/", "2"}]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Lambda]", "'"}], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["\[Rho]", "2"]}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nUsing that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], "~", 
    SuperscriptBox[
     SubscriptBox["F", "n"], 
     RowBox[{"-", 
      SubscriptBox["\[Tau]", "q"]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we arrive at an implicit equation on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], ":"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638867467730092*^9, 3.6388674710259113`*^9}, {3.6388675179860086`*^9, 
  3.638867641799417*^9}, {3.6388677347913218`*^9, 3.638867756321891*^9}, {
  3.6388678316498957`*^9, 3.638867853912799*^9}, {3.638867951122116*^9, 
  3.638867961577031*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox["5"], "-", "1"}], "2"], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.642339138730516*^9, 3.642339149540248*^9}}],

Cell[BoxData["0.6180339887498949`"], "Output",
 CellChangeTimes->{3.642339150915593*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lamb", "[", 
   RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
  RowBox[{"2", "+", 
   SuperscriptBox["\[Rho]", 
    RowBox[{"2", "q"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barlamb", "[", 
   RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
  RowBox[{"1", "+", 
   RowBox[{"2", 
    SuperscriptBox["\[Rho]", 
     RowBox[{"2", "q"}]]}]}]}], "\n", 
 RowBox[{
  RowBox[{"gam", "[", "\[Rho]_", "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    SuperscriptBox["\[Rho]", 
     RowBox[{"1.", "+", "0.035"}]], "/", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gam", "[", 
     RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[Rho]", 
       RowBox[{"q", " "}]]}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"gam", "[", "\[Rho]_", "]"}], ":=", "1"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gam", "[", "\[Rho]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Rho]", "2"]}], ")"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lambp", "[", "\[Rho]_", "]"}], ":=", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"gam", "[", 
         RowBox[{"\[Rho]", ",", "1"}], "]"}], 
        SuperscriptBox["\[Rho]", "2"]}], "-", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"gam", "[", 
             RowBox[{"\[Rho]", ",", "1"}], "]"}], 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"]}]]}], 
      RowBox[{"2", 
       RowBox[{"gam", "[", 
        RowBox[{"\[Rho]", ",", "1"}], "]"}], 
       SuperscriptBox["\[Rho]", "2"]}]], ")"}], 
    RowBox[{"-", "1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"barlambp", "[", "\[Rho]_", "]"}], ":=", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], "4"], "+", 
         RowBox[{"4", 
          SuperscriptBox["\[Rho]", "4"]}]}]], "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"]}], 
      RowBox[{"2", 
       SuperscriptBox["\[Rho]", "4"]}]], ")"}], 
    RowBox[{"-", "1"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6422393298880663`*^9, 3.6422393888860073`*^9}, {
   3.642239444566168*^9, 3.642239458133951*^9}, 3.642239508422871*^9, {
   3.642241949079645*^9, 3.642242163689555*^9}, {3.6422422145717278`*^9, 
   3.642242271052162*^9}, 3.642242344555901*^9, {3.642242459132806*^9, 
   3.642242463769923*^9}, 3.6422438899873953`*^9, {3.642305312473152*^9, 
   3.642305316168498*^9}, {3.642305368532114*^9, 3.642305389271244*^9}, {
   3.64230645520813*^9, 3.642306498582717*^9}, {3.642321025872902*^9, 
   3.642321038240449*^9}, {3.642321104048305*^9, 3.642321106032776*^9}, {
   3.6423218952501173`*^9, 3.6423218957873898`*^9}, {3.642321964177926*^9, 
   3.64232196878554*^9}, {3.642322006353135*^9, 3.642322008241644*^9}, {
   3.642322099642376*^9, 3.64232212716366*^9}, {3.642322215754745*^9, 
   3.642322216385675*^9}, {3.642322275874754*^9, 3.6423223018891172`*^9}, {
   3.642322339441791*^9, 3.6423223815697412`*^9}, {3.642322416450615*^9, 
   3.642322512668605*^9}, {3.6425099293184834`*^9, 3.642509942662324*^9}, {
   3.6425099879245787`*^9, 3.642510048849806*^9}, {3.64251109576607*^9, 
   3.642511274198983*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eq", "[", 
     RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"2", "+", " ", 
          SuperscriptBox["\[Rho]", 
           RowBox[{"2", "q"}]]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"lamb", "[", 
         RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"]], 
      SuperscriptBox["\[Omega]", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"barlamb", "[", 
        RowBox[{"\[Rho]", ",", "q"}], "]"}], 
       SuperscriptBox[
        RowBox[{"barlamb", "[", 
         RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"]], 
      SuperscriptBox["\[Omega]", 
       RowBox[{"3", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "-", "1"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"on", " ", "prend", " ", 
      SubscriptBox["\[Gamma]", "q"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"1", " ", "mais", " ", 
       SubscriptBox["\[Gamma]", "1"]}], "=", 
      RowBox[{"1", "-", 
       RowBox[{"\[Rho]", "/", "2"}]}]}]}], " ", ";", " ", 
    RowBox[{
     RowBox[{"il", " ", "faudrait", " ", "aussi", " ", 
      SubscriptBox["\[Gamma]", "0"]}], "=", "0"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqp", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"2", "+", " ", 
        SuperscriptBox["\[Rho]", 
         RowBox[{"2", "q"}]]}], ")"}], 
      SuperscriptBox[
       RowBox[{"lambp", "[", "\[Rho]", "]"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"barlamb", "[", 
       RowBox[{"\[Rho]", ",", "q"}], "]"}], 
      SuperscriptBox[
       RowBox[{"barlambp", "[", "\[Rho]", "]"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cm", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"2", "\[Omega]"}]}], ")"}], 
        RowBox[{"gam", "[", 
         RowBox[{"\[Rho]", ",", "q"}], "]"}], 
        SuperscriptBox["\[Rho]", 
         RowBox[{"2", "q"}]]}]}], ")"}], 
     SuperscriptBox["\[Omega]", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Tau]q"}]]}], "+", 
    RowBox[{
     RowBox[{"gam", "[", 
      RowBox[{"\[Rho]", ",", "q"}], "]"}], 
     SuperscriptBox["\[Rho]", 
      RowBox[{"2", "q"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Omega]", "3"], 
         SuperscriptBox[
          RowBox[{"barlambp", "[", "\[Rho]", "]"}], "q"]], 
        SuperscriptBox["\[Omega]", 
         RowBox[{
          RowBox[{"-", "5"}], "\[Tau]q"}]]}], "-", 
       RowBox[{
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox[
          RowBox[{"lambp", "[", "\[Rho]", "]"}], "q"]], 
        SuperscriptBox["\[Omega]", 
         RowBox[{
          RowBox[{"-", "4"}], "\[Tau]q"}]]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ca", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        SuperscriptBox["\[Rho]", 
         RowBox[{"2", "q"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"2", "\[Omega]"}]}], ")"}], 
        SuperscriptBox["\[Rho]", 
         RowBox[{"4", "q"}]]}]}], ")"}], 
     SuperscriptBox["\[Omega]", 
      RowBox[{
       RowBox[{"-", "3"}], "\[Tau]q"}]]}], "+", 
    RowBox[{
     SuperscriptBox["\[Rho]", 
      RowBox[{"4", "q"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Omega]", "3"], 
         SuperscriptBox[
          RowBox[{"barlambp", "[", "\[Rho]", "]"}], "q"]], 
        SuperscriptBox["\[Omega]", 
         RowBox[{
          RowBox[{"-", "6"}], "\[Tau]q"}]]}], "-", 
       RowBox[{
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox[
          RowBox[{"lambp", "[", "\[Rho]", "]"}], "q"]], 
        SuperscriptBox["\[Omega]", 
         RowBox[{
          RowBox[{"-", "5"}], "\[Tau]q"}]]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqtest", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", 
       SuperscriptBox["\[Omega]", "2"]}], 
      SuperscriptBox[
       RowBox[{"lambp", "[", "\[Rho]", "]"}], "q"]], 
     RowBox[{"Cm", "[", 
      RowBox[{"q", ",", "\[Tau]q", ",", "\[Rho]"}], "]"}]}], "+", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[Omega]", "3"], 
      SuperscriptBox[
       RowBox[{"barlambp", "[", "\[Rho]", "]"}], "q"]], 
     RowBox[{"Ca", "[", 
      RowBox[{"q", ",", "\[Tau]q", ",", "\[Rho]"}], "]"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqref", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["2", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["\[Rho]", "2"]}], ")"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", 
          SuperscriptBox["\[Rho]", "2"]}]}], ")"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "-", "1"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.638867969725889*^9, 3.6388680660065603`*^9}, {
   3.6388688884558153`*^9, 3.6388688948391027`*^9}, {3.642238461927454*^9, 
   3.642238478295353*^9}, {3.642238516839521*^9, 3.6422385260246696`*^9}, {
   3.642239402217071*^9, 3.642239495096859*^9}, {3.642242499899906*^9, 
   3.6422425093096123`*^9}, {3.642246637136801*^9, 3.6422466397920322`*^9}, {
   3.642249890479804*^9, 3.642249911294969*^9}, 3.642249963104288*^9, {
   3.6422519710913277`*^9, 3.642251986770997*^9}, {3.642252042516474*^9, 
   3.6422521325137243`*^9}, 3.642305211913117*^9, {3.642305248840691*^9, 
   3.6423053198001738`*^9}, {3.642305626149872*^9, 3.642305705464843*^9}, {
   3.642305764169845*^9, 3.642305778344928*^9}, {3.642305814152947*^9, 
   3.642305823080777*^9}, {3.64230608013612*^9, 3.6423061216453657`*^9}, {
   3.642306167000168*^9, 3.64230621934931*^9}, {3.642306419897398*^9, 
   3.642306430617032*^9}, {3.642306504356833*^9, 3.642306539413962*^9}, {
   3.6423065930776052`*^9, 3.642306593236971*^9}, {3.64230665514177*^9, 
   3.642306657108635*^9}, {3.64230690603798*^9, 3.6423069061843157`*^9}, {
   3.642321192449141*^9, 3.642321208623987*^9}, {3.6423213507692747`*^9, 
   3.642321359167994*^9}, {3.642321522896913*^9, 3.6423215426557837`*^9}, {
   3.6423215859501247`*^9, 3.6423217059231977`*^9}, {3.642321792515224*^9, 
   3.642321796480528*^9}, {3.642321831652783*^9, 3.6423218492392*^9}, {
   3.642321942132619*^9, 3.6423219563235273`*^9}, {3.6423219866289663`*^9, 
   3.6423219872488937`*^9}, {3.6423220232158413`*^9, 3.642322069891445*^9}, {
   3.642322194660466*^9, 3.642322209990391*^9}, {3.6423222457635403`*^9, 
   3.64232224859836*^9}, {3.642338997226899*^9, 3.642339109484791*^9}, {
   3.6423391727512703`*^9, 3.642339183392261*^9}, {3.642510057874157*^9, 
   3.642510090878544*^9}, {3.642510133495887*^9, 3.6425102506780767`*^9}, {
   3.6425103608711863`*^9, 3.6425105420437927`*^9}, {3.642510586834497*^9, 
   3.642510590930904*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"implicitTau", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0."}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"implicitTaup", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eqp", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0."}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"implicitTauRef", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eqref", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0."}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"implicitTauTest", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eqtest", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0."}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6388680736087217`*^9, 3.6388681099086533`*^9}, {
  3.642238528981819*^9, 3.642238534119101*^9}, {3.642242527768409*^9, 
  3.6422425321545897`*^9}, {3.642321718028646*^9, 3.64232172698848*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"implicitTaup", "[", 
       RowBox[{"q", ",", "0.5"}], "]"}], 
      RowBox[{"q", "-", "1"}]], ",", 
     FractionBox[
      RowBox[{"implicitTau", "[", 
       RowBox[{"q", ",", "0.5"}], "]"}], 
      RowBox[{"q", "-", "1"}]], ",", 
     FractionBox[
      RowBox[{"implicitTauTest", "[", 
       RowBox[{"q", ",", "0.5"}], "]"}], 
      RowBox[{"q", "-", "1"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.", ",", "5."}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63886811350142*^9, 3.638868176916999*^9}, {
   3.638868304326674*^9, 3.638868327590094*^9}, {3.63886837102986*^9, 
   3.63886839629733*^9}, {3.6422421804577017`*^9, 3.642242200648493*^9}, {
   3.64224252002591*^9, 3.642242535848483*^9}, {3.642246656571487*^9, 
   3.6422466643308563`*^9}, {3.642306138323987*^9, 3.642306138450886*^9}, {
   3.642321758750486*^9, 3.642321777500889*^9}, 3.642321874749658*^9, {
   3.6423226595509567`*^9, 3.64232269374146*^9}, 3.642325374335298*^9, 
   3.642339124602716*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[{{1.0011000191386281`, 1.4118315320051003`}, {
     1.0011676691915488`, -0.18122696350849915`}}]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVjn0803kcwMeMaNT8jvKwEF21K5cjrx5e8/lK15T0LKdIC6UuifWqLuqa
hzkiaT2ch0lyulrUyV2s0uSZ/YZNdkIeaoipn1gWY9f98X69X+//3g6HIneF
6ZNIJN+v/G/BhUOGLqExHq1BClFgAQG5+1Tr/O0DYISWqyTfJqDDNyXa3v4o
LKndaPBAQMAZVoAZxf4X6MmJs9XdIGBTNQqctEuGVbGjjx8lE1AU5xZP2GWC
6bVMf89IAvrYxZajdvdAIKK6L1hPQMzOnw+O2JWD/pYKsBR+BOMv2Q3HnRuB
f7ey+MjcDxD18tdUVbQcRDNlzahABc4F/NbS4g5o+8xITQkaAeW2cNueNb3g
xV2cw7UYhpvWPPrtg2/hvtmKAsbUEKyNLntIlgzAD4z8N5LuQahSZO+IXDoM
uU1E6bnOAXBJnfVYuHkUGja4aYKnlcAaWNezyp+ATsPA+eqFShhc+c+PE6ox
oOwzW3939zuI0Sa7Pjs3DtsFdXmOuW/BiDZ0dA9DDaqTeaWeyn6g4BTW3Oef
oSu4j6Xv1Q/T0qLjV6M0sIGobfEW9IHSv9hq0aIpEDI5GwlyH3j+diKivmga
6IJNbumxvXB9tszYK3gGuDJPt8r+HthvW7W1a3wWWDLSAnfVG6CKv1Mt9iOh
O9MjIs6Hbghbna8OWKGHPPb7Riv1uuHMhbO77NV6yMYr8djD77sgcZgvl0r1
ES8dj4ja2wlbGfP+pGaRkZ+HA1Xv+mtIK3IXb2UboEMX99Jv93RA4+472lNr
KchrKLPqimMHiPHI1BVkQ6TvEFcujvkXSo5xkaTbEAUF1cRW4gpY5ANrTpQa
ISE/XHaSoQAvXWD8rdg5yJ2oZ0b83g6h7S8+lfkZo+CQLCc+qR08uHF/s+1N
kLC+XH3t7Cu4Gjn2lDpogjTDnbwDmjbov/jHwK2KuciK8kxbGN0GI2HloS+T
qCi95OS9kik5EBHmRjjbFC3JDovKPS+H4s1N2sMrzZBZOtOaaSqHgfBV7mS1
GYrYSd8zky8Da+FrfhI+D/nKbJ1HXGUQfzA6H/eZj9wnXy/XNrfCpNYqzad8
Pmow2qhIO9IKy57ezGx0oiGVyRldhUErrA6p2U5LpqHkuFsOz4UtIM6xWChR
0xDPquZJwrYWWCa2SNm23xyRuFJV70Qz+FJUdFmFOQpQZaXs8GsGovNdVQMD
Q1uWPvirq0gKkTlpWHI6hh7pnng9tpSCRM/p45YMDC3dMeho840UGEdEjVQ+
huhD79nxNCm8cxnkXrmBocuHHSf3UKXwUx0ibgowpOvgJmj1pLDh07ikUIih
2jqJTdAoDpbe+3jVdRh6+PxCdUg1Dpwigs1rwNDeSRFTUYlDi3kS07sJQ06c
QnOfFzhc6n480STFUB7OanYV4UDimIbIX2HIDbozjB/hMCwQQ/9bDMV4319Z
m40Di+xvU6DEkChrJgAycSgIH/0cNoih1PiJ3rIbOAS7Whe/H/7aFSmzDzJw
aKvn2I6NYciPlXw6MwkHF2cTTck4hhJyl5+2SMThMj9PfkqNoU+e75sz4nDY
fABP0WgwVHM9IePSeRwKq0IOi6YwFBIKX+bE4GCwfMozVouh8qcKEe8sDuzL
V+gesxiirGa2G5zGoWL82y863dffiGCfeA4O/wE7QFuk
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV1nk4V9kfB3AxFSWkkraxRJpIm0TibRJKoYySNVLGUlmnTUUyRiWTJW2S
raKytMuWoSSVsiSKUnz5fr/33HvJF40Jv/P74z7neT33PM+5n3M+n8+5GjsD
HXZLS0lJZdDn/+OVYzsnLNsVbrbpLgbHxnikuZDVTurOUA+1qaoa4dFqeypE
Xd0PdkzsxNj/eBywdlYYr34ITfEvBqYO8bB6au42pHYSdiNB/rocj7wogxO9
ahfh6NpQGtbG44tXvgqrlovbT75Zej3mEb4lwJNRe4yHNvcfZ4XxkPv38os9
+rUoDejq/LmbQ3BlRBwJaYSpq8Tc1I+DfnZS/f38VuhYzwioGmQhsPOd+9mo
Ax+vz12PaBbTq/doHbPsgD0xLcmJYrHWNFhvnkMHWtaJG5WPs0jXPbzGNaAD
JTPcvguPsnCTjXN7f6UD8T171a4cYNHwT0HqG+kvIGVZR7QDWJQbDM2tePUF
7xW+3C9xYHF+dsy8DM9OaHeN/LpCi8VgZ90Nu32dMF0q25mvycIxb+byH+Gd
0BB8SNLVYKFsnmvldL4Tyq4bFi/8mUXc7leBU+o6EWx56oi+KovIQuXKQyZd
CHP/dDFYnoWv1VUfBxUBLh2tq+oaIKhWFPaOzRdgsVh1818SAu3WpeF5ywTY
+nq3tW4/wdeAyr9lbQUoaL4Qc6CXwC1BUFR+QgCZusEiDYZgc5vuZN0+AcZZ
PH9a0UFgHFJUIPOqG76hM+7ZviZ4O2biEdzajSjpUXe9VwQ+Z57If+7uhmd4
qNKUlwSJOdV+xeN6IJ34PLephkD8qWl+8Koe/C2OjD36lCB1Y9/5T5k9uOge
GmRaSrC8NcxqU2EP1FUVD5qXENT4fJc8LutBwvp3M6yKCSTHx7aca+mBw0A3
nIsIbIumyG9SECKwqSQx/T7BqNaiyMeHhJAzsvMvzyNIvpunr/OXEMLGvdd7
bxMsMl/WnpwsxMD3fPsF1NtcjVYHFQgx9qfH4tSbBAUJVpIFAiGkOG35+zcI
rNRqM5O/CfFk4Gu2DHXbbdst0lIilOePwuk6gWyNY377bBF85w81TLpG4Dm6
0zd5swgOXhaia5kEg6e7VaQ9RFi4RlNBlTpulv+zwAARLi6f3B+fQfDYIFhz
Y4wIJUtK/E+n0/2ulLwtShKhRinTcCp1t/3BiAUZIngXCwxSrxIoB0S0jSsV
wSgz3LIyjSDnu/TpwBci5OTwF9ypzWJijNubReieMydj9ApB07RJQpsuESqO
+x2/Ru2fcSalqE+EHSePezhQSy2ZarlgTIT2Nw4e46lTSpP7k+TFMNihlVOe
SqBno5o5brYYxv1Zu45RV72/vDlQR4wJUwfL1lEn79wqGVghhktX9rQZ1D6s
woUj5mLIOPFhzGUCo4M1JjK2YiS9ejmxhnqSTNTnk850/syo/pvUbWdMTij5
iNFpUOyZTJ2nOrDgfIgYOg2nD0VTH8vKr50XIUZdVrxfOPVmfd992afFWHqV
cT9ErflYQ1n3ghjr5wf+eYxaYvHxwZ1sMdTVU5VOU1fXJTsb3RGjwLZi2VXq
8852I+VldP4JuXkl1L5dEzMsa2l8Fqmyn6lXB/6z7lWzGFHxt/Qm03jkhw8L
HTrFmDMzsQrUn6IN4lp5Md70ELmj1IWK3BLPH2L8nPrIrIo66tKNxm5ZBpK1
/lnKdD8dtb0O7J3BQCg360gAtXbh7DkSDQYRDecU66gHVzeVH9ZnYNaQdGM1
Pb+aZ2d2jjNh4Lrr9dk71Hs+St1UcGSQPdR/8Qk9fzOfYttzngxyq3lvJ5of
Sn2hfXP2MuCPZTYOU38NX3wu8xCDgiWHrW/S/Lo3ocfolxgGXn0TNH1o/kUn
pLcVJDK467ayVj+L5v9cl0jDqww4Lu7WT9kEw8teP7coYnB2TVBHK83nV6Ux
AbVPGfSuiNT6QPM9zdpccUs9gxHvHSdEtB5+db+3zUPMYHi2271VtH6UhXuG
uwYZaMr1Xjtwi6ArZEFagAyB7hSloRpab7GxFwUH5xKUpL/fkFlA4DLtt5Nj
CwmcnMbd0r1D8y1NfnHMSoL41vpFL+4SvLkXEZZkR3Ddemu+xUOCdDNj1dmu
BEsF6l6atP5DXnwrSf+d4Mhrs0RV2h9UPu+WyY8kuL08d6t9OYHQT+2GwRmC
Fp+jowkVBMWSFpuSiwSG3mWOvZUE7pM2JdbQdb6TMNFPtD/pnxtvaP+E1p1L
S3VZLa0P9Set72gfkw53TzxP+132yuUanV0E3hsK1e83EuyvYJ769dE4XFYa
DzcTWG+85ts7QlDx3Jf//QPtd56qhSMqLNi4g9qVXwhKmfrfouezGLI9I7kr
oHHuPz00aSmLn7Jfj28SESyLGzVT3UD7uHbO5jvfaD/0+7ErbxuLBHZ+RtsQ
gYHV8Km1u1jsFRl729F1DKUGm/dEsKhrHpg+U46FUXv/j3FnWHj5BwsPKLIw
Lu7TPH+JxaPt8yavoN+xJozd988D+v4Pq3X19P4x28Ikb6tisfLkc+dKPRbQ
FxUzb+n82IAvv6xkYT65pyPyE4uFn8LzlczofSjsmqBCWNiPyYZHWrNY9+yr
3q1/WbxX1ZkQvYWFZWaHg/lEDj2x8qt03Fisd2tL89fkUPjQlUSFsrAx/vB0
bAmHNKY81SWSxUaVFnGyKQebl5XPlOJZbOp/p7RoI4dT+W3qxaks7N42Gj7Z
zuF4f5zSvtssNufVuzn6cGC2Wk61LmOx5dSbKFEoB9Phk796v6H357qXddP+
5jAr0L+lf4jFNo0XkpxUDqHmlQZlChycRqtnm93kcHMB0/yHDoftH5+aNz6i
o0KkgetaDi5FlT6+zzg012zzfLCDg9u5iriRBg7ps+IDWyM4uIeU303s4LDE
bV+cXhYHD/vSFh2OQ1HK/n6dWg6eesWjpf9xmGSiudRjgMNOuSItBzkeqhWZ
06O0eXh3P7DpUeER6b5aI8iVx66qe0FHtHjUCR39TC7w8Em/kzJ1OY/LNdJJ
aOfhe7Sg9Dp4BEfbmMxT6YWfS95XE1seRl52D4sseuG/6pZsvQuPSV3PjksO
9mLP9Fx9H18e3WcHfmt/1It9fdcd//uDx5XtFkF2Mn0IrMs+fPYEj8yUTq+d
O/oQdCszXTuBx/qr0SmGDX0IiU2vLk7j0Wjx7oPD7m8I3Z1G7G/z0Fk8KNy3
sB9ha1OVBfS/qzu5pC5olQT71S4ZHX7Ow+HNh1zFFwOQXaL/vPQlj5Rqldy2
lEH8DxQxTAM=
     "]], LineBox[CompressedData["
1:eJwV1Xk4FfsfB/Bjl52TSKWoJC10RV3kPQgV7eSGQkSbpdKibkmbpVSiheoS
QrdrSXIlRbayXkWWZMnhOHNazJlxJInf/P6YZ57X83yf73xmvu/PZ/R2BW/Z
LcnhcGrZ6//3b7bp+3epUPigVjh88LfXpcQNez1HLgW9wzsa9OeXoOzc6gJ1
HQrSUtpvBPuaYXPIzvHjHAqr1T9qL8j+gHJv2w8ZCygs/2hV3nKwB7YbbQIP
LqVg/a173+Y9n1CxiuBYmVG4lPrAa/XDPqxejHhZKwrOFu8bifs8VOlYG7y1
pbAuWeR40b8fDlNWPbuzloJw4oK/rtwAqr9bOvtvohCZLh/vcnkAjnyLHhM3
Cg0BOZ+ujA/Av7nlS+QOCmnPPVIPbOPjfFnQWLcvBY7WnD8K0vlIzZaXN9/H
vo/ibbMwko9XSamasSEUNPenlGwzGERvpNXc/qMUlDMNs655DmIitNXE8hSF
bTnb5y2MHcTMXSHW189RCJi3MIkqGoTlRgVnMprCZpmE2XG9g3C3St9OXKMQ
5pPBuyktwPGF1gG3blLwK+0LOzpfgJvT2kO/3aWw8bJKcpydAE+lDp21T6NQ
9uPqJwsvAVooxWt3H1KgNGuPFR0XgO56cI/JpWDiEhzmcE0A46KOovslFLKG
4oo8igXY8OBw9Wg5Ba9qjcfmDQIcuK7csrGGwlyT9bfqugWICc/8lPEfu55z
fcPKIQEeHrAZ+vWewoG0QONbEwK82d457vKRQr2BbsykEgm+wxGFf/ooPPCd
x72oQ2Ku3sP57kMU0mfqx5iZkrBVsTN9LKYg/2Zf+SlrEt4/PxLy4xRalLhm
c9eSuPdezbNQXgRPG/fUAk8SJeV/71VWFWGscKrz090kPuSuPuanKYJL7rlG
qyASWjHHr2voiyB7c70p5zQJ82MaKXsNRahoLnVed4GEi98/2WVLRfAvufl2
xWUScda9b4IsRcgs+zucm0gib9GJ1iob9nmVJaWKySQataf2z1wjwvO4nJzn
6SQUGcfJWhcRLDY3127JJWHU+0lJ30ME1xPRW20KSKxpOKkT5iNC7JvijSNF
JC5k5potCBLBri0wrfQVifSEtXanQ0VwSkw63lFFojyCt+n9CRFao7ZXVdaQ
mPTQOnAuUgQpjlOn9lsSumsfh32IZetxefzuQgsJK3OnyGUJIhR1fUqrbyMR
phae2pMiQtjd2S3fukjc/qWdZ54pwh4bx5CGXhKFwvwXsdkiiCv9/C7zSDCV
/HbLYhGwz7gpT0BCI/8M/3qZCN51Wi3an0mYJOsMk9UiaF8wcfL/SiIwbIPq
7WYReixefn0qInHZXzBzqEPE5mu9XjFD4u+tZ40cekU4+MTyQ6aYxOCSQvvh
LyKsmvLc0+4HCf1TgbsXMSLMqPI5JRwj4Vk/78KuHyLMHXI2DB8n0bQvvrJJ
hkZF8bSGw5MkFIrX9csp0XDp+EvhPUcI+ymS0tCgoeb7xN1AUojizBC7bF0a
3fyfe+9ICzE8ssC3fx6N9fEflpfJCLHUoefsjEU0LrluNWqTFSKtf3159Aoa
q8+YBnbJC9FtKtNXtopGjHpvYsMUIbTPlUiM2tFQDV6V91hBiMt6i2z8N7H7
H5ExcFMSojqkz/veNhqPr86zma4sBKcs8UyLJ42fcTUvmlhbqG5OUfSlcSb4
MHVKRYgjO+XLbPfS+LLidyM9VSHyskt7woJpPIwVFxWzFo4fncw7QmN2VPDg
OjUhdt4ZsJ59lsaDaktik7oQt4V3d26LolHQN4WuYt38u8vp2Cs0wv79b4up
hhAq0Yp/VSbQmBY6JeU26zXt5S9+JtFI/TE4dYT12QUnun67T8Pj+36hE1eI
kqPLfu3NpPEuJtwtifVIlWDm/WwanJMqcZ9YL9NMsWp/QsNw/qxavalCHPBz
81QtZusx7jb1YJ3xROVPhzIau7Re/4pl3StZfedUNY2ArDTXYtY6W049L6in
UXg4K6CXtcv95Z2f39EY2nR+J0dTiKvU5zH9DhppYyG+Oqxrkabj3kPjfrPt
X0tZS191t4gboJHUe8xsFWvrbnX3N5/Z9ZIOGxxYH19SEzYpomF6OktpHev8
P88kmo/SCGk7EL+G9de6Fc8CJ2gkq0DalrXhjKH2dGkGZfZPw81Z79qXMdqp
wOBGq/t8A9Z3n+3Q5qozqO8r5qqzbpXXXLlOi8GE774939n61f6od4uYxeBu
hTrRwXpd5rljRXMZXOIcLSxkfX7E4tbQQga390bwr7IutacLDUwYSIqchH6s
xxIetu4wZ6A8Z26nGevl/d4jCVYMjuTEvZVknXX2PzOptQzqeCVL4tjv3/f2
oqvFRgZEPOfVFtaz9KyPHHRlcO3hSIEa6+ul/xT0+DDgLv2scZY933oVv5Zp
exisX7HrgRlr2Z0zhtcHMVhcEkkOsHk5OR5tWnKCgaAt660V68ZQ34QTEQw0
kxx7O9m8zflqJV4ZxUBNZaPPMdaVXUOFT28wyP+SqprO5lOp1NUiN4/BftXY
Da1svneuML4T+C8Dr0I3Aw/Webny44teMngwekCxi+0P15TnL7LqGDhsfUe0
KwrxV4SeTSqfQUBoyLQctr+oH2P3vb8yWKv8a/os1raHWiRnDzMYCJuVEc32
4+CuyMo7EsNoaZx9xUNOCJPVXx1vzByGl2S7VD/b369kn22I2jIM59UlT+LY
+TA1/Hquw/ZhPOy0FHZPkPD/vl9NxnsYET2RO4xYKwh030UEDmOncaBuCTtf
ttScdz0ZNYwnMROjdew86r+0yTPo5TCYG51f0tj5Jacu2OtiJIaW78hyXz6J
kUhP+2QTMTpqhQMJA+z/a6JpjtBcDGf9mldV/SSqvzxrC7cTw6flpvx8dp5e
fHPJ/pGnGDUHJUw/9JCQPWOsJ3lVjHKj/XV6HayHjrbnMmKYRHf/+3sdCZkG
GUfFFyPIjKbaZHNI/GzMPnD94CjsmjJHbfaTGHDLma6rO4bz5kMlSoYkbKKC
At9k/4STrv+MAFKAGxNFU+y8fqFKabhkVYYAHjMrnD8yE1h4cvH9lD0CKJUt
+qLvyiEWWFgsWbFAgN1mqeLtiyWIBVGqcSGCQRw7fXzLHLEEIZ2T1W2cO4gL
wvjmxkZJIkR+90DUoUE4G6lmKSVJERW80G8rLAcRm21e5uwjTTS6ab8ykR1E
7da08dDfZYhbctEyPxr4KGsIvrxYSpYQOCdGFCTxkb8vgqjvkiWeXBhaHuDH
h64TVgYVyBFR+X+XupjwYTfpeS75T3niZnZ01nsOH36tpXSR6xTCOTpy8dHG
AVhHnH3qM0eBePlNYB+WMoDrwaLnSoMKhHPt+SDX0AH0nXnAT36pSGjYWWUd
tR/A593P/MojlQiL1JyLj3QGQAVqyDX4KBNzVuarOnztR87aunH/JSpEoiFH
u66iH/w9JuZSYhXCQeIPZfGdfug8+hAf2aBKZM3Iuph5sB/nvA+lNjipESvU
KxQlnPrxfXx6rNMzNSJXa42MhH4/DJ/fSqydp07UNj2qSh7jwcy3aqN6tDqR
cPxjbEYrD2V3NbXrxepERmPxP6F5PBiWacZs8NAgPLS6XsXE8rBe5susdy81
iLmzea6T+3mgOvsraoy4xOuaefzta3gIvhvLjb7KJUInDGOrF/BQLzFvaF0c
l3jsYJJgztoooLhWKZ5LbFttkJVhwEP/ssGIaze5RGJ4x8jF+Tz88Zqgbt3j
Euc+WhivmcuDLc3UZzziEqa97QoNujxMW+N+sfI1l4Cd3O5eTR4OZ1M+F2u4
RKD3JbktrJs0IletqeMSF463FVZM5eFS15PhukYu8a6u3DKTywPnsLJv83su
cSSgsjtInQfhvTL08bhE8tKAKI4yD45SbjPSB7hE0+LOkUNKPKTv+Tqye5BL
tE1KHRpQ5MHLVCeHFHKJOq/gK7UKPLS8OTxTJOISopxLXjfkeVi2VGE0n+ES
h8fOm8qzvhKf0hwq5hLmNxZOPSnHw9qdDTGjo1xi82jwT29ZHjIqfP2Lx7iE
2FtVskWGB+mFYzZ/jnMJv+2umo6sfa5cm2U9wSWm5xNmxdI8vGQMfkxOcok8
yyafJaz/B1m4T+E=
     "]], 
    LineBox[{{1.00106348186095, 1.4118315320051003`}, {
     1.0012329087365353`, -0.18122696350849915`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{857., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 5.}, {-0.18122696350849915`, 1.4118315320051003`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.642339130356464*^9, 3.642339176346013*^9}, 
   3.642339222895537*^9, 3.642509883863984*^9, {3.642510554108176*^9, 
   3.6425105650842237`*^9}, 3.6425105956527843`*^9, {3.642511102969614*^9, 
   3.642511278069983*^9}}]
}, Open  ]],

Cell["\<\
The point (q=1,\[Rho]=0) is singular: the function implicitTau has a \
different value depending on how we approach this point. \
\>", "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638868693379499*^9, 3.638868793202427*^9}, {3.638868830578557*^9, 
  3.6388688330584087`*^9}, {3.638870454643436*^9, 3.638870464054179*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "For q into the range [0,20] we compute the slope ie ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    SubscriptBox["\[Tau]", "q"]}], TraditionalForm]]],
 " using the points n=13, 16, 19."
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638793401569675*^9, 3.638793517316625*^9}, {3.638793622481604*^9, 
  3.63879362593719*^9}, {3.638870503411724*^9, 3.6388705210917673`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"linFit", "[", 
   RowBox[{"q_", ",", "\[Rho]_", ",", "nv_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"avIntN", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avIntN", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"avqInt", "[", 
          RowBox[{"q", ",", "#", ",", "\[Rho]"}], "]"}], "&"}], ",", "nv"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"glue", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", "nv", "]"}], "]"}], ",", 
        RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"data", ",", "n", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6387943612061357`*^9, 3.638794483189991*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValues", "=", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"0.", ",", "0.99", ",", "0.05"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"1.01", ",", "2.", ",", "0.1"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"2.", ",", "20.", ",", "0.5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"{", 
    RowBox[{"13", ",", "16", ",", "19"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"linFit", "[", 
      RowBox[{"#", ",", "0.5", ",", "nValues"}], "]"}], "&"}], "/@", 
    "qValues"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.638794486975334*^9, 3.6387945321143713`*^9}, {
   3.638794563124834*^9, 3.6387945633640614`*^9}, 3.6387947892358313`*^9, {
   3.6388705966455927`*^9, 3.638870611526979*^9}, {3.63887117637542*^9, 
   3.638871189655429*^9}, {3.6388715168259277`*^9, 3.638871518168088*^9}, {
   3.639129271883354*^9, 3.639129313099586*^9}, 3.642242826760816*^9, {
   3.642243457226706*^9, 3.642243459625375*^9}, 3.642247240987359*^9, 
   3.642247769035482*^9, 3.642248038203887*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"extract", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "q"], "'"}], "s", " ", "from", " ", "the", " ", 
    "fits"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tauqs", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
      "fits"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["D", "q"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        FractionBox["#1", 
         RowBox[{"#2", "-", "1"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["\[CapitalDelta]", "q"]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]qs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", "-", 
          RowBox[{"(", 
           RowBox[{"#2", "-", "1"}], ")"}]}], ")"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6387945939297028`*^9, 3.638794594275021*^9}, {
  3.638794633620426*^9, 3.638794876943446*^9}, {3.638795119798197*^9, 
  3.6387952198642263`*^9}, {3.638795307222921*^9, 3.638795339608634*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FittedModel", "::", "varzero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The estimated variance is zero. Properties requiring \
division by the variance or standard error will not be computed. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FittedModel\\\", ButtonNote -> \
\\\"FittedModel::varzero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.638871196176108*^9, 3.638871755244742*^9, 
  3.6391291480590067`*^9, 3.639129523527707*^9, 3.6422383478260098`*^9, 
  3.6422433892808847`*^9, 3.642243774921939*^9, 3.6422477317868233`*^9, 
  3.642248003365591*^9, 3.642248210698373*^9, 3.64230504863531*^9, 
  3.642511047372859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"implicitTaup", "[", 
       RowBox[{"q", ",", "0.5"}], "]"}], 
      RowBox[{"q", "-", "1"}]], ",", 
     FractionBox[
      RowBox[{"implicitTau", "[", 
       RowBox[{"q", ",", "0.5"}], "]"}], 
      RowBox[{"q", "-", "1"}]], ",", 
     FractionBox[
      RowBox[{"implicitTauTest", "[", 
       RowBox[{"q", ",", "0.5"}], "]"}], 
      RowBox[{"q", "-", "1"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.", ",", "20."}], "}"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"Line", "@", 
       RowBox[{"glue", "[", 
        RowBox[{"qValues", ",", "dqs"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.638871099478119*^9, 3.638871112695342*^9}, {
   3.638871203352187*^9, 3.63887126328948*^9}, {3.6388717651453753`*^9, 
   3.6388718315447817`*^9}, {3.638872635498169*^9, 3.638872686297875*^9}, {
   3.638873074153907*^9, 3.638873084169547*^9}, {3.63887337775386*^9, 
   3.638873430746499*^9}, {3.638876952701202*^9, 3.6388770164290953`*^9}, {
   3.638877124028881*^9, 3.6388772183809834`*^9}, {3.639128885451253*^9, 
   3.639128885691019*^9}, {3.639129178876523*^9, 3.6391292553405647`*^9}, {
   3.639129530029345*^9, 3.6391295879483356`*^9}, {3.639129652317589*^9, 
   3.63912965543666*^9}, {3.642238491241188*^9, 3.6422384913678102`*^9}, {
   3.642238539673977*^9, 3.642238542535811*^9}, {3.642243402363649*^9, 
   3.642243447628086*^9}, {3.6422438380593567`*^9, 3.642243846315618*^9}, {
   3.6422439250834417`*^9, 3.642243930635468*^9}, {3.6422466766208563`*^9, 
   3.642246694828352*^9}, {3.6422471518211823`*^9, 3.6422471674556093`*^9}, {
   3.64224774103861*^9, 3.642247746236792*^9}, {3.6422480079660473`*^9, 
   3.642248012380981*^9}, {3.6422482129901867`*^9, 3.642248214748995*^9}, {
   3.6422499285111933`*^9, 3.642249928896014*^9}, {3.642249970142859*^9, 
   3.6422499708463793`*^9}, {3.642305149270755*^9, 3.642305175605987*^9}, {
   3.642305442326518*^9, 3.642305457609371*^9}, {3.6423217334075937`*^9, 
   3.6423217364143047`*^9}, 3.642322114639234*^9, {3.642511060356391*^9, 
   3.642511063071179*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwdUmk01XkAZWwtY0Io1UFjaSo7IeQOFdk64bV4kXVoniklM7yno9U6tkwG
bcQsSaOsHTIpRSRkSVkKPd573vJ7/4fERObN3HPuued+uPfDPXdjSJTPd1/I
yMh4S/mfXk8IUTQPu+oY0P+qxv83CjfoQruDukysOkFfNVJIYcArLVpXNxXc
Y9WssKsUYl39vlLQLUBlZ3lBXA4Fl6ff+n/UKUX9vfgzLWcp/HXe6gKlUwev
gFT6YgCFseByTZFOG3L7KsuX1lHglyyFCnlt0Fxy4RNNClMT+yoEFc/BK7JY
GFOjIM+Y9uDvfIHY6EfNvSsoGEbbnuNGdGGyzn2044MY1k5jH6jXPTBKWvi6
9L4Y8d6RQQKdAXQr+RXvcxbj8wVrrZH0ATy6XfW5wU6Ms7WyPT3zA0ggtfes
LcW4uD5/Z33vIHxDwtf56ouROfHUMDV5GPmGHr02SmIUMbVFhuIRHLnt9eBT
F4Fq/4yPsskofI9opoa2EfhE0U2Tw0YRm5uR9a6J4NVNAx6rexRJ6dkXVGoJ
BhUb/ELKxmAnsM/58TrB+qKN1sNjY+j/KvVcSh6B//ZktQNr34PVaa5ZfYng
XaRPu1vie2SnLf59KImA/ZLnYB7IRuuhXZ4zJwj0GXu1ynLZYLuqHOZFEoTL
VX/Qf8FG0OV8zmI4AW/bmfK128cxtGP+1C8BBJu7xtNyosbRYTrYoOlHwDjq
HvHlH+Ow8n6r0UQjEF7R0JVZPYETHg8+5XsSGFvFLzDdJkCvyaJa9xAc7xh9
M31mAnm5zR2bdxPcC3epOVY7gfZSI6eHTgSSpbJLXOEEqu5UWaQ6ElgUqB4P
1uOgobL8eYY9QYxFrPuQHweFqlNxXbYENe3DhvuzOQgJZC94WxPMhjnLdbVw
cMX11nEtKwKbz3+O7FnkICq22G2LBUFcnnJDkyUXMoon41LNCOrNTuU7MLi4
JqoPcTAl+NT2Jqa2iIuV3NWLe0wIHEIdvc1eczErCRiqMSZIWCgxvq3Mw+tR
bZc0qW/MXb5CfxcP/MTDvp1SL2MaxbnO4sFOs0zuZ2neqbWvaU0FDwacI2HP
pf3ng+0KL3F5mE3pup9nTvDkn8L4ldqTuN+p9/uSJYH8ZYVDibRJjKjuOKli
Q7DbONJqKW0STZJx50E7gqSWlyrMx5NQGRDERIGgNdBaNPVxEjqVpfPjuwiW
z19t+8GEj0klWp+PB4Ft8gDLPZiP9LuJWz19CI5qrDH65jIfSsUay/bRCfJK
aG8VnvFx1yHL43QoQYt5TiZ7ng+GlnLO9DHpno1deGwkwKkg5tZ3TAKDvcqS
G4ECCJnL9kcmE9CG3YtP5whAlNc/6/mV4CIjxZfeLAAzza3qwC2C6rlmeds5
AcLU9vq5NEj/lyRXq7FViDh69veyvQRqGk4R0wFCxMoqX1wQEjiXJKztzhYi
SPLY5dkKMaLNG9rKnwjR2uqfp24sxs3GeVb6rBDq2i+MW2hivPSyMWJsFiFo
09DHhfNiyAzHvHX1F2G/fTvbrE4MM0ZlpkGWCJm2jW60eTEC58SQaxLBRP6O
uoIehcwkY8nojAjaAhPFBG8KD9Ujix9ukv6yYEtNVRoFUfEt32vSnfq7s+tS
eihsMOfIszIIHIc8+mRNJfBs1Ks9+IiAybJnzZVKEO8VHLFtmmBGp+JpPW0K
xXIZP23QFcPyf0zjX1ennws=
     "]], LineBox[CompressedData["
1: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
qBAZTH7/TpGp9xe9vaT+L/8fbvY=
     "]], 
    LineBox[{{1.0023868359179047`, 1.2}, {1.003908775440247, -0.5}}]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwdUwtMk2cUrVJU3JgKMjFspRNkI1AVQR7GcVZfTB1kPDaQoDy1E+cYWKNQ
BR8g4gAHPmBCQaiPaZVQQ0AJPgBFijoBFSjgKGJpab+vfxHl4RT2bze5uTnJ
vbkn5577RUxC0LbpHA5nA5v/VWlqzAy3uCLf7crJrqkpBiXhZGUoPxl/m5d1
zRtjoPI/nsTnZ2Ffb5S/i5HBXr/Nn5jz/wB30UipuJfB+nvfRIzZX8bya3uc
o28yuHbY44jJ/iaCb72XysQM+qMrPqX2SuQ0Ndr1mIzQy6ZiiU4JC65zRZ/O
iNea7xUGRQu25V8eNaiN4MaPbNKveYTZyVer7NqMcEryPqQVPUGN1syrS2GE
p7D/ramzHaGVsXuaxUZIAndGGexVePzOEHCVY8TkEc+Ffdkq9M86xLGboDhY
Pa29fUIF4pd69+QwRbpd4Zrap92QB47VyF5S5GruOWVl9iJHsLYP9ynOJfOo
E9OH2brChwezKeZ1vAmyXKLGmcqegOIMiqCE8KWZcWqEueYoG1Mpnpct1qW0
qVG7rHqXVyJF94y6zTHyfpRSi6s1P1IMtOpWuUUOoIfnbR/hSOEYH7BQfnoA
MYukXqE8iu1mVW8dHw0gYcPurFhbCt2KtApbn1fwWODncP1jCnLWhs+x1qCV
l/fcZ5RA4CF5n7xBg9zQRMc2E8Evj9VdI2ka1CpyStIMBMNT8jwt0cBXtC7M
qZ9gNG612ZOmQTh4RoluPybwmrzU9+2HQRQUXOYvVxLsK7Csa3DXQsgtPtF8
j+AfZZe4+pwWmRfaA7bXEayK9Q1c1qlFQtnmk0k3CFLfywRXLHUQmxsy5FUE
nKUJg9IUHQQWF2WV1wiEzc8aFih0YMYMW9KvEByOXlmap9XBoXvp9FOXCBrf
lUo+4g1hLK+g4NV5Au4p87CMkCG4zklvkZQTrBPs9Jg6PoSZO1pmRp0jONrU
Oje5fghC5oC0sISgOdKTvh4bwqbP5S8FUgKLiSLlz0v0qAxqETkXE3hnqlI2
RuuRcYa6FxcR/GSzwPWrU3pYdfxgvZ/FBbKQF+YP9PANzmaesbjJLT93YEKP
XP8Dp6vY+dE7T1DvakB2wwdbF3bf4gDL4ZJIA9K3jgZuYvmE9G4s359vQM2g
UOIiI0iPPxYcft8An/SQSc1Fgqrx+1zvcQOeiviSs3KCgaNm1TYuBPPzbBYl
KAisbISikS0EPjflafmsnqtlqbZtvxNMMyVqv64nSHKrU1Y0EqxJ9my88ZCg
7M5ESjZ7947GW0u2dBG0+nu5xjuzPmrhHCnRsvr3il/4RVA01c/psHpHsCz+
eu7iExQR6nreobkUkeMMzBpYn+bMeDHqwvr9qGBY/YbCemtnnN6f4vb8neW3
vzRCMe1k0O59FLT8z+DicCNqc0tfyisoPnMb5KbkGHHF3WpvzFuK7+44VIfe
NWIoa3qROIT9P/9o0YoRI/x4PbOqVGxfT4mttRODwvXCvapSBt07epWmMAbS
X8+nz080wWJ8oeSv3xg8uPB0bWfZMHjVuzK6LzBw/z9G8C/RjmrX
     "]], 
    LineBox[CompressedData["
1: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
wwV/P5n/B0t945A=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{946., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 20}, {-0.5, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Thickness[Large], 
    LineBox[CompressedData["
1:eJxVz30s1HEcB/BjlB5EEhKKcJLnu5byx+dTqqX+wlS3lKQ4ImvVzENTqqU1
O5WN1FJ6co2xYrgpy62nIUzYoUO4jnvweCfcWq4+3z/6bN/99vq+v9/3dz/X
U6kRZ0w5HE7o0jJ+/59JKL5vHDHwnBv0n2smyPWw3Z/n8ippAvg840hh5fKK
6ixXln+BLTFOir29WvjX0w6B/pq00QItne+EmFlOdGi4FhLijdMNc4WPuvZb
aem+DOJye+Z6v2qgtcU4/aC1P+unEWmobxDaU77JkyM0dH4Iakq+bDxkp6H+
YbhrJYzP6FPT/RGIHi9P1z5R03sKKOF2Oz9MVFOfEpIECybpQWrqG4OOiqfF
mQYV9alAnFdg9uCTivrUAJecVF/vqahPC1O/889bxapga7SoSec1CScTXkqv
eqhAqvNa2pkCpbdAfurDOPyNo2eA/2pnJydxHPTGWDcLVe+nS7ysxyHfGIv0
EOxodVAsGaO+X/CkQJodKRyjvnnYoRMXzTuMUd8ihNR1yFNblNRnAM9bJ5bl
5Sip7zeY76mq9w5R0v9ysNZk+vm04SfZDJvepR+rbFKQLbBh5pmeWzdKXo22
1XK3j7IRsjUGz7k3H3ZjtkHxsHQx6+Yw2RZTGo+79Bh+kO0wLLL0ztl0ZgcU
11betVwYIjui5ec2ydtsZicMtebrJKuZXfA6CjxflA6SN6NCeGR+1R5mV7wc
nz0U1jVAdsNrIauaz+1g3oJvBB5R78vkZHcM32nTmsVl9sDHUevLTF9/J3ui
z9qFi4r9zFw8HDZzQzPST/bChIGixhW3mbeicHdcQGQwszfui+o2mKj7yNvQ
MfGke+JzZh+0F732m45j9kX9VPiLDVxmP4xwn9yVrO0l+6M+tlZ4vZ45ALsz
1+Va5JKvBOD85IS/WMDyQFQU18k2+bE8ED0WMyS+5iwPwg3lOZ+K5TLKgzD1
tF7Ol5A5PDxgKVrTVshyHpZVlM9gGsv5yL+gCYg/KoM/nAmaIQ==
     "]]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6423210790937033`*^9, 3.642321110099225*^9, 3.642321213665904*^9, 
   3.6423213660477057`*^9, 3.64232173788405*^9, {3.642322111448941*^9, 
   3.642322137944241*^9}, {3.642322201738028*^9, 3.642322220587813*^9}, 
   3.642322260025221*^9, {3.642322292753666*^9, 3.6423223488728724`*^9}, 
   3.6423225207683153`*^9, {3.642511049385166*^9, 
   3.6425110648192167`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfQVcFVnf/10a7HW7293VXVd3Xbu7uxXFTlJKaaS7kZRQEaRDUAxAsbsV
UUARAemu+c/3nBnu5T7IBfZ543n/fj5778rM3HN+59d1zsxV2bNt826VPds3
qnwzXVNFfdv2jVrfTFPTZC9JvycQSMcJBFLzvhHg34xAwH8x7H8iX4n4wr32
riqQ/8n2r6qqOuXo6Fi/Y8cO/P999m+BFLknw2zZskXA/QofKXJBukxNTS3R
1dX126KiIvHB/dsMbnfs2DG/oKAgDIr/27J/c/ek+1ZXV1tGR0en29nZvWUU
gfSwZ8+eWUdGRuIjkCLfCqqnTp3iIXpkaGj486tXr/DvX/Lz8/G3Ih2/d21t
beXu3bvpo23H9+PHx2+3paWl4SOQIt8KS65du8aPX8UOoNjQ0IB/4//4m4P/
o4qKCofw8HAgrWMstDeIQI7eA0ZL1dXV32hoaER6eXl9UVJSIpDBPVkBe2sA
nUumqbnl9S77k2ctD14Qn2tHm7naQwg3l3QbcnLXBKLXfqHX+tTUNTLKponP
NZxPdzybrRh9bUCg/7LZMEsqi+06llXx/34sB9GRCafK/qM5vpD86/u6Hmnd
/7XnwcQ7Xf+1LEv5pZfu5Q99ll/WhV//Sq8d8oq84XQo+V57MrBd4tw8110z
8sno/rrzdzuk/mf+OmuP65n/LHr7BMTf/mf0ztZ0OfOO3u/o/Z9BsXf0bp/e
5MfvqPx/nMrvpPodvd/R+x29/9Mo9o7e/xX0FrX5/xvo9I7K76T6Hb3f0fsd
vf999C7Y5XCy+79+s932xP/Ur3M0nE/9J9FbCuTu8ow8lR/puJ39r8N0e5b+
HW27IsuQYxC4+7J8Z69X2n8tlf/3/vr/X3q7/4P6T+FOu3+gu/8nf/30H9lq
q/DUh92n9295ryve0fsdvf9/p3d7Nv8dlf+vUfmdVL+j9zt6k7+i8d1ew9kj
3CB9U7RLrf0Otvttn2pvoHutjwjke9bV1eHPdsdS6hqvxdFrbfrbntBrbXqi
OPDb7ZF72M7zMu2MS7MR0vsSExMfGBkZfVJeXs491/64kpfShvni6bU2rXSP
376UdpvP2luKbDvjcktRS01NbV2KdAfjdnEpHFXadO11QJV2e/Y6oEqbcR/Q
a5syMjLumpiYfFBZWdnhuF1cSgwdqt3WwX/HkqQ6GJ8+r2iYkJBw2NfXl//N
P1wW0VUx7YDy9N/AbFLtXKNMrAjZgE7gr/9DRiNKs4vLaLeFsrPLoIwmG37g
wIFBL1++VKqvr9+TkpJyh2W6DseXvKQ2mpwsifRYErwRGDgt025P5v22T5Ff
3qfPL7169eo9Y2Pj6l27dqWxGgxg86C2O5Y87r2HEd4j/3o75J3wGra0O5jk
TmhF8U7odp+VeTs6O3JGNtLpYZMuW1paQnTQ6EymlGoDYbsqXa6Dex1A1JGT
wUEU5+7ubh4TE9OLVdOwOO1A1EG7cfv3/hlEkFXYP/yF/7cDUUfN1u3ek6GT
sCMJv2zxpfBfPOfbsYDrRCUOfDubS7z2T377v+na/9Q65NoKQe//PiHAdWJK
3pH/f5z8ndDKHWyCaP9eB+SH2cV1Ynbfkf9/bh292pD47TtP3nKvPRK355/E
tfNcdjvXnnXyOQ7sd2mR/2NpEWzkodfb/rrzabB8Vcd/ULQr32qd8p/56zx1
p39Z9yQqub2bGyr7NdeV8Z9Pm6oLOd0uN6Ch7Omf9UV38JlYm39hSu3L8yPq
Xt/gbuPSyuqs+C2VD47go1FxJ2BD5aMILkjbVvngcCtAvf8Rd31EJ+zV3FDF
/+zjppqi7xorcn9sLH8mBQAFMkPqi+/xt0fWvb4utbQ6O0kgvb7qcSTAI39x
oK+uyoq1Kr1iZ1162da29JL1gTfnDEzKrrlwoJuVXXOKLTyx9eTrJGWBFPmW
OVR8RoMf/WjRKVWppy+PThRIv3pxaGRJXsif5wvil/HhaUZB/Aomx+8HfARS
5Fvmdn7kbP7nuC/Tpct9OyVe0eFpFqqXHiaKoO8NuasoirnPmqpfA3O/NZQ8
BOLG1BVcAVUFImQFrniygo5CssrhT6DN8815I6ANeHEqubCfu41/nnmduPrq
q5gF+NzJj5yVyiKQQ01CYcomoKshN+BnHjVPXoZP5oE7/TpxDYeD7JdHJ/CX
0woSVnKXn78MG89fxkT0slzOy7Bx/OWkwuSNmKQwL/RvSiaZE6+Pr+NvA3JK
VOnIotQd4UWndnu8OW/MU29P+W1fLBAfgRT5ltlY+Sic//mCmucnpIAYyl+y
02pfZPD3/qovuj227tUVAWVJ2R8ay59/0VT1ir9P6NABMTltxzjFDnnsGq0p
pu0uUpHt01xfAVH9qrHyJQhJJuDQDwAgprNqcs8AvBXVT+OXVz9N6IDv95de
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
hyIicA0DRROYbQeXuGGtDVNj8MV0cOh2oBu1OVSpqEZpO3i/LjH3gPziqoVC
tBCRYyNFxPPtQd6/a5xNR5aGSgaiIT7t717sNEfPp7AirwGlz3N0e1Lewcgc
Rz/zEeFoWvaVRWQCVw0jo76k1DYVQ74+7jJb08HJNgyEPMgBiA/6aZfZeRaF
GOEa37GGdGJ7uPisS+z899MXpXTLmQwqJAgtoT7a0XRfdImTxzzKKaF1SRkk
WuBdAhskamg77pddYuK/sl+WTaPIQCSDjRQgHzIHYjGZiFaS7l1eXt6vpKTk
Exy+IXkPaRvGpm0hJNZHSg3Gpm0dnPrd30g1NzdjDny+fv78+XdPnz4dePfu
3b+uXr0y5+y506vjk+O2RCVGGwce8dsQFhGkEhAQoOfq6XfUxtM0ydRlb6qp
q/Zlffvd1/c67ozcY6B8gAUsZf12vVeadmsK9zisLdN0WFau5bC0Wsd1Yfbi
dUOvDR06tGjk9NWNup5zm/f5zJJqMfCbIZBlTIOnMJMXf8zgFbB/TFrDWEeM
68SS20jeVLpkFGX48lnbFChN0//8XktLC7/kb7Ozs7HkP27cuPHn1atXF6Wc
SsaS9xyODjYOOOzr7BXsss/Tz26bl5eXvZmVU6qpm+7lvQ67r+113PVI235z
lrbdxrO7dBaGL1269NJiZbUyTftlVexSa/e4LKjTdluEZRbNXTXg9UcffVTz
56SVrGs8nax1/6HJjFXYeMY6fCyzcPMXZN3DZ+9gHGP+lAERBTLMSrWv6eU5
OxiH6GH0sjSzWuNb/jKLN1zryazV+oZc+2v6Rsbu2CjGkh0Zo1scnkBmm778
k/LevXvXDJ24vFnfe7YoYgleOXXz1C9lEdTNIGzypxupSF4ehRoYfPSnCNFJ
GzZ/kq+rqwMqP83PzwcqB925cwfcszjl1HGgUickIgCo1PUJdNpy4MABG3Nr
5yRT530X9jqqX95rv/uRjv0WoDFtp84CgsaFq3eUqtutqNZ2WQA0Nuh5zgEa
y5Zs+qWkX79+tUMmLGeMAmaySmZiKwrtIkcyK1QpYoZOVWHso0byaFyn/T25
PGzmFiEahZf/mr6JsY8eIUUuf8c4xg4lgy3fTQcbNGYJYxI0k2DRMGA6uLVF
/8Cs0gXKPz/97rvv8kZNXVqj6bikWtNxPmhfomG7pEDTdvX5LRpzDq5bty52
0y79W1pWOyAimXvtVSEy8aYu+uYuXvuBDFVv30Aj/8O+egePBCrHJEaviD+e
MC49PV0KzCgFdAqkIf5AcK+KigrBh53S7KWuVLNDn02kegfJq5NcPxGyu2Ld
GDSz9p1SdXU15voqJycHsw+5fv36uMyLl+ckn0icnpycvCH0SISDV7Crv+MB
62hrT6NkUze9iwZOaiH7zLd7bt++PX7T7r0vNWzWFe6xXw18VGq7LgYRX67c
PhT4ejNs0tIWfe85jHHg1DZysGTbNx0Rb+iU9cLLPzLrddpcJurbMQaUG0Wo
t3QHpd6vIxcQVjFqpdxssNKbBesG3hw8eHDWhNmry9VsVpRp2C8vUrdZBaWV
o2apkqiuv9J769at/lr6Zhm6NhrHTZz1YsycDYLsPC28HH3sdgcGey0NDw9f
diwqenX88bi5KamJAkIygez3WVlZwNzHBQUFwGQPHKs2okumc+zDnDe0h46E
N3BMIH3Y8yLmCdL8xVfgDMyFeQc8fPhw+OXLl5ay4rc1KinCKDDMf9ehcB9w
m6mtkxcregaZex00runZqz7Wtt2Yo2m3EdwaP2fOnOtzlm6q1nAgFAOemvS9
ZwFvjfM3UHwOHL2YsTgyheDYPmq4FEelDXt/+FcqyTAqeu1c/p5R0f+RitbY
pYx5KBsohkym4uU/FZNVLtwwoFW01O2XVajbLQWBCjVsV4NAqbv1lsLKBKrr
GGfq2aqdNHbWTmBFKtTOy8zP6YC1ZkCIO4izODo2bmV8cvzEM2fTQJrBN2/e
BIJg5YCsvqWlpYKVXXI7Zt98/JoSRhqpZlQvaN9zK0HWk7tfgujvv3nzBvP9
/ODBA8w//8SpVFbEY6ALHT2DXIw8/Wy17O3t7UwtHS6xxLija7/tyR67Tfla
dmsLNe3X3l+vOi597NixTyfOUW7Y47qoSc9rPvDDMvMMxjRkCms2qH34ffwK
ML6AR/smgwHk+uCJq1ljMJaXmS0mA1oftzk2AZaG0NEmYiyRwGU7iUw1/DJ8
douO54Imlv6N2u5z6/Y4L6jRcpz/YL3q+JRp06adWb5+9zPV/RsA6k1tm+2X
WBWeauSo5WbjpLfT3d1dx83Lz9jvkJ920JHANXHHY1nNcRzLhyYRRX9PnCiq
2yXvDOinO6tlEH7xj7atPlOf8wver/kiLy/vx8ePHwOEeSdPn9gUFX8MFNDx
C3KBUbc2t3I8tc9O+4qe3S6IQ66mrTKrwFc9UFGbkDly5Min42aubNR0Xsz6
KjNaDP2o8TYPncSs0qBc/OuohSwKJ/DI32b6iyiW6eVvmZ37fyWXfxu3nBWg
6Ywti3ggff/hiYxJ8OSGpdt+gm17/ee4+fVq9sR9qNR0WFiqab/kNQvNpW3a
c8HzoTvUdM/r2qidMHLSTjBz0Yca9nL2ddx6KDxwblxc3KzklJOjMi9cHHrt
2jUgG2q8VQm5dcllnXj/WfEYoQsABxKpTDSeCZE9nDzwqVx9fT3vTcF5HJt5
8dK8lBMJC6Kjo7cFBh/xtz9gH2/mYpBu4KhzTd9BDYg+t0tvUeSiRYuuzl68
vkrddnn9Htf50Dkt+3xZFg+cxqzYTXX8LyPnMxZhU1vZe6fFr63qoxXxX7di
+JcR7OOHWQxHjCIYNmO1i/HBaXUrdv2a/e23374YMWlRtZrdiiot5yXwTaFR
cjVt1qVqGa101NDQOLBH3yTO1Nkw3MLNGNi18A72Ngg47D8/+UT8uLQ0okmg
YoHdVsxGdto3L3SPnyegaJVFCoyPBLDLUywl9j1VJQq1tbX9i4uLMSFU2OzT
6ae2HkuIBBP7OPvZHbX2NPWxctKx1tXVPbpNVe+ZhvUm1vqugvWtYV2oeh23
eWWrdg4GezX9OGQKs893HkEMZB86AMKlav1rq720Cudx/RWjbj+olQaWR2ew
z/9Ffmd1FKw7iVmjOQDjFv82fGqDqt1ywrYa9ktKWHoCsed2710KO+qjpW+a
us9eP5H1flik2jh4BLoaBhwhSB197tw5nl3hQkItS96vwjv+jwNOLhaMFno4
qIsAn6h2ieUe3idPfcx7N7/eu3dvfXDIQV1ra+stgcGHWDFyirZ0Nzpr5LTn
hp79Dla/bby2XXfO8RkzZtydNHtFrardClYnziEq2OTgVFYJTGY2G1G8DRg2
G/hp5VENx9/o9b/JdbJzSfAp4xA1nNltTVH61S+jmD3uS1r2+c2Eqq3f4zK/
do/zwicbtSbFzps3L2nlum33NSy3X9ez25lh4KAJxzHA4YC1TmCo++Jjx47N
TDlxcvT5zAu/37p1C6gDiyjW1NRw7WkdJRWe+J9YVOkYPWd41otSwSh6DY2r
SCWTPXTimdNP+5SVlQFncO3nnEo7vTM8Jkwt5MgB+BSW5lYO5/Rste5p227J
YQWpUMNuVTnLewUqe0Y9/vHHH0t+Gz6tZY/bYsaMVZzgO1vCd38xum6/E0T8
9NcMViXO4nD3OaPrPphc/57lVbPQBSSewe/gJhgHTqtX0R0M9+DpiAlzy7eb
rS1Rt2N5zXZNlqa1yl1t263R+6y2gKa6Tq4eNu7+HjqsZw0fbWRmZiaPLPAA
dJagvFPe9Gv3hLkgI+wP9eRk+MIneAzbxchv6GgfwLLB7ABbC1PPpqofiT5s
5xnkYevqY6lnZWXltUfP+K66xa58Lfu1JVqOK6q1nBezUrqgaoPen5Am5suf
RzL7/BYTSXOKHcp7WfpeFDHfDZ4IL5Hi62PGwIde/nLAcEbXezkbrRA3CrwK
pqpZtHnQm/fffz9t9oIVD1RNt9/Usd2Wts9eM8bMZZ+vwwEb1dAw31mJiYlj
MjIyeBepFT+dSxYLjTSHJGoWpJEfRc5fmOLIIzfeh7/KY2jxidMp2ocjQ9w9
Dro4Onub7du/f7+vurbhA3WLHa+1HFaWazktrtNmbYO+1+z6zQZ/NMrIyJC1
GgUu5sXN0PcPgoKvfx3NmIYupeL2IaI9lpvorU+/H9Ki6rCSiJqW88Iq1sst
0bBbcWu3wXwYVk9NnX0xRnbGh609zVzcA511g8MPrkpIjvvrypUrUPefv3jx
AukYQVczYSYhK4CRv+lllKpQAkLbWWthhTZdvo/QC0j57fbt20uOpybrBUcE
mR046Kjp4ODgpG9odlvdQh0sU6rluLxmj8vCRl2PufWbDYc2SUtLM599P5Qx
CFiBIEiaQ4pZ0BCy8i9+GsZCsVKKQwpEz/bYGEbblSCm9vPvf2/cbrmmXtt1
XqW6/ZJiddsVLzRslDO0zFbDpJibWdgcsPNwtPQO8toRFnl0xqkzp5EsgakH
m8DPEt090imk6PmqASl0T74M9k3AtUAtDx2l5DcXyL1+sAY/PHnyZPz5zMxV
sYkRq0NDQ/UdnN1T9tka3NW1356rZbe+RNNhRbW28+KK7SajXn3yyScNn//w
B6PjtZazcEMFvABZHKIY+fS7PxijoLUUUf0Z+8jhzD5vcqvm8+8GNW61UGZZ
ZAHFhs3KXHXrdRl7zJUt9fX1Daxs7J2dvN33Bh4OZEP1xL8vXbr006NHjz56
/fq1UGAk7vBoxUSdYYAGHC26KUUGxRVYL5TKkYomv6Fdix9CuYMLocOmpZ46
bRxwJCDMzmd/mrHrnnv6jtteaDuuf65mNuPc6NGjs4cMn9C8y3Y9qzOnMNas
rWZjNYJ42wiKgY++GsgYHlzP6dz3WcwMJdff/+S7lm0Wys26HrPrNJ3nV7Ao
KGRRcF3DdLGTurq6pbHpfm9rdzvzAyFeGyJjI0ZlZp6HdGD5sg0NtLjS+RMI
iDNEmUAanQLI6QsbC2mT4PsYF37BiOs3r22JPR7t5B3iHm3tZZpo6rzDfefO
nXHLV6u82Wq8qV7Pc16zge8s1kGfxliGTWDX9CdZU//PfmRFY7Mst1Rc6vfx
N4y6y0ZWVU5p2eszvVHbbU6NptOCF7vNph9euXKlz45dakm6lobhlu7GDu7+
zjuPRIZOTEs7A3UFEoAUBMRVnfJTXhw4Ppf4KUPpNdgObB4R7vqn/X29oRaR
PpiakXl2dkJCwha/gKBYU+f9d/Y6b3+h46hcpuOyrFbPYwEbko0q7/d+H7IO
PZ9tdGkfMLJyUkyfD79k9P12MPbRw1nKjyNW09BvWoOqzYi7v/0+8Pz4SVOz
NurufqBhuSlD10b96H4XIxsPP5cN4VGHxqanp8N7R74JzExA2ybRnUDuFe7E
pHvZxYI/hBEDCshgZmz/Iz84ICToZy9fvpyXcems8aGYgyEugTZp+720Lxk5
rwtZr7L25Ox5i6q3mO1oRpwLJwsBKlQ5GFhBSZrp1e8TaBAqvn3Jrf2hw5ge
vWWaFXv2bVDW3Vir7jC/TNVq6Qs1yzW3tCy3RBvbqqq7uDqvPnTo0LzE4ymI
ReHPwFIT0HQ65QfkeyYsgIlblXnn5WDqc6LDij8iCEffCZsYaR9ZL9B04IOH
d8ecO5exOCo6JtTaw/mqkZvGcz2XjSW6bitq9b0W1Om5jy754qsPGYUefVjF
pcmldfsx738kx8gr9WLUnLVIStfk4JQWfe+ZjVrOc0p3mk8+OW/B9NC1yutO
qhrsjTK232vn4uuy4eixozDlyDp8gFfEEGDMu2TCsb7f6fpQMsU+LqwPvdFC
n5o2VPVF9ndA9rPs9UmnE538jnqHOvkbWpiaGfhs27Hz1RZj9fp9B+a1GAdO
Z128CZxDM4T54FN5RlpWjtnjaUCp2IdEIhaHhmHJDbJy8nXL1LdU77Za9HqX
+YpHqmYq6XssVP0sHA03+Qf4zomPjx9+8eJFUFCJnGoPUJy6ZJOFSyTHR6Ad
DDuXRbe+90SdAFm8WecuXbAOivKPcgy0uGzqqfVMz3XLCz3n+Zkz5oy7P3DQ
b83brDRZkzpahqPaVz8qMe+99x6j4WZCVmzBxvhGAdOaddxnVu3cP+nitFlj
ji1evPjUTj29eEM7HVdHb9uth8NDIX6gGvJGFA7fLllULGkQvSzax4HGEPIP
uoWnJ3z53+7euzMtJSXlgKOP91Ujd/UX+q4q5Xpuyxr2+c5tMvAd3fTVjz2J
olR1NqG82Jv5aXAvcmm5liqj6zGjQc1ubvkuy8V5u8zWnNcy22hlar4X4cCi
mNg4WEV4Mq1K5LDEhXxdUtFqEOddf1jAnZkN9kM7O9QlxQnt1ekt09jYOOH2
g1u7E06Fr42IDFV1cXG5pGlhVrbPa0W9od+8ZrPgGYxN+DjW8v3JDPiDgr7Z
0pSyWy+Qiw0mRjHf/doTznHxHOX1r7eZLLu700jlxB5zVTdrF8ttAcFBE0+f
Po1AUUgTiU3o0gPzi4tardtAoT5EiA8xwlka5Ae0g0WpT0VlxeLz19PtDsX5
H3MJNnKwsNX32LFjR56Krl6TycFZbPAzAUpOimOvIWP6kdWsNzQmOW/biDHE
zut6zWjeYTkxe8ykX09NmjTp9Podasl6lppO9m62q49GhI06f/78l7m5ufLk
NVGYWvLhFb1r6+parZfI7mA06GMp2F8qYgiVelXXVi2+dOu8Y2i8/0mHYOOb
5j7bwvbsU0FAW7ZSU5dV5WOELmofZuS0/mQpi1T1iX4z9J/WouE0s377/rmF
m/Tnp6xSnuu6e/fu/futbDcGBQdNOnXq1C/3798nhRAy7/lOW6dZNx8X8swG
SQf46JtqPTWFdgIoQujH3n1yz+hYytEo11CrW+Y+6i8MvdekbVGbc37UqFH1
S1T1BbxM8AXLics2MXreM1p2286q2WoyL3/z3qVXdxmoOBib6yLHiMwc8kYw
rBifzCfx1DuZHnUNDbzJ2X7qSg5HFHS0YEeMcHcETXkqKtQ3NKzKvJVxICjW
K9M2SD/HxHdzqZHPkntrt49GxNw8Q0W7tWI4e+1nXJJ4IbPTakbdBoPZBSo6
i29s1l4XoW2koeXi6ojsHeIfeHdkHon9wjI87/MgD+BWwm3ywKe1u5TuQlbs
WVvfuPri7cwDwfG+5+2C9+WyUFcYByy5t3nPuAc///xz8+RVezg/tRex9TNX
fUog/2HIlMZNxnNL12svfLRxz+pEVf2dVpa2+1exNh4GEHlmWfLSEszzvPOg
s9YBoNMN9NLYYo++smHkRB5co2fKKinVNzStuHL/gndoku85x0MGOWb+mytM
ApY92Gkw4e7AgQMbxyzYjWBLmkO4Q9TfzPwNX/Khev2aPXMLVqsuuLxBbW2g
9r49Ozw8PBCGQ9vAqJGpXnceatYAAOof6WVE3midxlF02EVAfkNjUMUh+cW5
uicvJcT4RNs8sAreVWp6cMV9bavpl/7+++/aUXO2sTZrtICHGgW15btoIvaT
bwfXr1Sb9Xr17nlXVFRXB2jpa+xyc3ODOYbbiEyoSBqkE68kkhF/JVF7r7h7
+5smWhcPo7E68/ZLel6ADBqcYNCxjxapB/Ib6q8p9q2tr579IPe2Y/TZQ2fd
IoxzLYI3XzLzWB6xZMmSl9OWqTLWEZNbFw9u22w0kI+YGhbvmF24bMe8q2u3
rwpU26Oh5uzsDNFGwA6VROapb7P4dt9oRO+1fQleB+/TaGNPuCUiTMYOXiwT
HZXkB/R5hc/Lq8rWXnt8OfDwCZ/rjmE6J52Ct9rt2bPn+tINOozlkdlUlnow
Wk40b/TBFwOYRdtn1y3aOunZ4g2zEzdsVTY1MjJcExISMuLChQtCJ1IkI9jh
a2MUeeMh8mY86U4aGbo+ckweWnFRbRCIZMPlP6yuqVh6J/u6W3R6iNfRFOsN
/v7+RzT2WjcbBa7itETP1sxH/89+YFZqLmKWq0+smq088f6C1bMPbdi8fq+F
hcWyo0ePQrchvyBcnGKbxbX72iOOeG3elUeIJ4u10YMdpS+HnlkHo7P84t18
wbfcMpsbKvkNm3RJ9NAQ+T419TXz7j+/s+rO89NIdew4FJFQYuC7q8Xu2BgB
76/YRw1hpKTeY/p+9DWz0Xgds8VsBku0iaWzVk28tmDlPN+t27bq2NjYLIqM
jESCQOgWk6++ktdFk3ztvzCvAxGEjcrzTiI2Si/+XBZ3UgZsE2wUdvS2Knx6
iMVH35ZVE375/kVBcbrTEacKq8NLm20iJiLVyRXyhzDyClJMz34fM7scdjH7
fGYwOyxnMEt3TaybvGTE/SlzxoasWbMaZEQmHFE5nBrhcj+WzKN0uW3fRCfX
ObsmXKY08X9YR8Kg7AbXCEvbDz+Ub2xqVk+7eeGMX4JFvu2RDfWs3JHsPztG
wYBfv2DkFHsye7z00OaE8JzZaT2DWaY6mfl7yg/Pv//xWxRaXVRVVbd7enrC
60G8LELPr9ossIOX93R9gaz1wwK/ppdRFsACcVZ2a3MdPYTjo08qayrXXX9y
0SfmfNAl73jDItujayrsIyYfUtfZkDZh4iQ2/jHk6PkniYF0PGYwqzSHM736
ylT16NHj1p/Dhh9ZsWKFsYmJyfKwsDAE5a2ZFfL1Q5tlvv0FNsSOyHbOSGJx
FH0yMO38lunW1mB5KpQfV9aWr7/2+GJgZEZAwuEzpovTLsSr+PsHNKq77G+1
D8iqGfiOYb78XolLzA+t/G34rxnjJ4xHL8xu1oQhyoIn0ur2dTJVKmratBPP
P6UgS8O0odFR2KfKnU/Ru7a+dtajvJsfV9cVI+xKswsJbrKNmMgr+yFjadAw
YvZCZuH2CcyI6X/UfD3gq8vDhg3z37BhA3LMAFWMz4ZIgrPVOJW7xk0V0J5I
aaGW4zWd4IMl1x89TQtIMXvlcGxdo23EZBK5sL/LX7rxtwZZWVlm+no1xsB/
OrPDagazcOsE5s+JvzX2/7j/rd9//x0pOX1LS8t5sbGxqE60xeXfEmHkDUz+
geQZ/HOgN+iOYExAbfaHPxeWvdI/e+t4Ukiqw3OX6G3V9sdmhfmEq9praWkV
rdSwJiwEmhsHTmN22cxkFu+YyHz8hQIS8Kh0oZptxioXNJ/AjUOMKoLMMW8H
lItVzoelr691jJ688ez1XMHn9Bp/gjA5WYZuwZGXa2xunPsg95Zr4sVDM5+9
Poc0VpRtYJJIsrsnyfObBU9mRs/8iFAeWbPPvvsE0W7q5MmTsShlVlmg9NpW
6iZJZE4o/ec+x0nfA973Qnt3yVkmABU7qQSllC9lm2nL9riHz9/c9YjVrbaN
mM/6VX9zUNZo2Q9tlpKSIpWbNbqzmVnKo5kBQ79rkZGVyfr+++/hlqEghGwo
0j1CKCWeHiSUehZK27CTD2jRhrSHoq8eOXZwKt0n9sFfuYV5VilXozL8j5u/
copSabI9NjnbNWqulZ6e3t2F67QY88PzSbOapvNMZpXWFGbU7CGsNe5ZLycn
h55WSBEEHlkcFIqEkM7tPKRmoYs9DybeoZBKYw8/9vuR41HyKT7/zinMsUq5
EmNw/gE5lGB33OmbjGnoEqlWf30kYxgwg1mygxamZWTlGRk5udK+ffuemTBh
ApL46w4ePIhCX2vCnnwt6jyUrBYFlBzV+eNCyYfub5T5pKyyLiL05MHXjlHK
zfaRYznoWhyjh5Z+9PH7TM++HzOzNy5mJi8bwXz50+fsvO+9/Oyzz5AmYF1P
o4VRUVGoLwmhW9ElhWkWeeYR9QGkcW5+69Ef9G1j/f/KK8qxOHktOi0g2fy1
U9TaCre4Cctj4iIc9xlbMDree0hyaO+BGcwGg+nMpCUjmU++/gDIRA9v0syZ
MyHj8PvFlKXkY4nbKEsOQBylgeY+tGRyr/SV/bSipmzVnWfpvesbqxBmVuzz
NeaMTg9Su9NyHs30/0SeULh3f5KDAIVPTpkyBVUqeEUwOiLAbeiUlnzqk7yk
2CtpsoDuTJDBzjWUKrF7D53kdDfy++OevswJiszwe+geq1Znd2wW77mlb1ab
9eybb75hZm3YwqzfN42ZuORv5tPvSLhe0atXr7Pjx49HJLLiyJEj8HSF4G2V
qBvDEq/qNjjFjtKPz8gSfEDBQ+4GXibfl0TfR9f/91fFLyHK8WFnLce8fHMD
BbpiDSfPVmcELUFwuKavHgZnBOBVKykpoXIGp2ttcHAwErHC0qZI5lGSXrwe
lKrS4hA9Em87o2BKg/+gF8nJfnRDuvTGc7cePXeN2dJoFzmRJ23NAhXaZfnl
z38xQycOYhR7Etty+7fffvPZvHkzYh0492J2Rb3zksvBRXuIyRk7fKO8gJ4m
8P7A1yUFNsmXo657J+iXOxxbFBJxRg9O6ON1Wi4s641ljFgbvdlkBiHtx19/
CHhRc4XowiFHwrQ1FiZf2p0Gr8Xi8HyARxt1pNHOQ0/OYPgTdmQ/qKknhgW5
7jrrowtELJ4SG9tOYOas/46gUF6xFyMlLV0nLy+PLj7ovZWHDx/+5tmzZ0LQ
JB401Qpa014/dYBGty6RHCjCU7wnAnJBz5J4X6apuYkNTm9EhJ3xyHWJ3gzV
V+QQMRld7cVDxsxhNFxWMdvMpzNTlg9nPvycKBUk5uDgIIGNokZrzpx8GXUa
wmrjQE334KS7/draYuLf0KM0ZPvU1tdMfl5IEo+zLt/ObjIOVuaQJ01yHYYs
bRduHsReYwETyGLHAFyF/fv27YO++7CwsFCE7yTWlFr1XZ1L3GgBhzpkK7Cl
Eltf4ISlksv9PmNVntHpGwnn/Y6bVNmGLyTuCxsIZv0+5CdGXqk3s1JnMxvL
T2KGjPu1WU5e7s6gQYPQtwFjBl9LTFatOqXu7gacXNfC6i5uo4kMjgdEEwK2
/GBvWQrF24dVNVVrbj87+1Vh8YsFcQnHW/Z47OPwpkiq6xpOM5mZq0lxEmoO
ahhmbMbx48dRbRGBy16invM8dcsSQzuHJt8T0D1+0oALxy+RU4PIyTWCvnD4
d2feS7vkEWVYY3lkIV8hbRk6lta4R81dzMxkvanPvv8UPMZGzGuQY4Tll25q
ahLCJPG0c6LXMkPPbMf4CQ6Hr5yjeFFoaGxQvv4ofdXJtEh0XFVsMrPm8KJA
NmWoO7B4WTOyvv9HSkidw+WEaUcaXDi9R+fVF0zM/sALdFslOf4I29XIbjJ6
AFEfqZaW5o3nb5294nBIt9o8eCEpg+OnS7Z9RZvKBk9k5m+ZUDZ4xCCoLIAN
j01YFCFfEk/KaoWp0Tp8dsb+wEwOJrRzwpqTA7JoV2ivndFJERa+IRZQ4cXT
Vmi2bliAr6brNZNZuntS9siJRMWDnWGuRGCReJq7UAUYBWoCFhqfS+MoB6gA
nBYgoCcU0bJZ5uUL8Raehqg+MxaHJtDuam8uGfj5T81zN87NWrRurr22jg5C
LnQWCsEJ7jQ4pWYhe466R1ynm9lk4MXy7xPAPmra8yCHrDGMhpuZtc6JqVOn
Vn89YChjfJBrV5IjrdabTaY/W6g8Ab1zIBY6YoUASa4tivKPTHNLE7e7DuV6
tDySrdJ0Wb2x1vkxMTE+mjqa+WtU5zO7bWcQVkZOqnc/WdaXVqxdrb0zS81i
vambjys09nus6hGCEy4RHGiem4EnNwKcPnUNlfxmv+aGSv6wdO40o16oPiOa
dN+1a+edwYN/a3mPDZWUDXa29u2y5q/ZPHT6UwP3tRuPhAeKeaTRndY2ER6R
mXzeFhsU+fdHCPwoIOh6QesVmnmz/xo1lJmxZiSj4TidsQ77mxk6rh/cpxJl
PfM3JgFroz2P2g3OyRf1PuNFABE5i6ONYnmi55HMQYBDzNA3SBIJ9A10vWC5
Ea8GqKioIDLk2pUnko1EwszhX9WWh+ZpJZ7xEZZ+yNfxLnFJnqZrEpfohZPE
lzoFVFf1xn6CTb6+vsFr167N+eqrrxgpGSlm2NRBzBbTqcyUJZ/CF3+8dKtJ
k8Xhuc8cjm63Sr4S9XFljYhTdKLT4NTbRszJ1XRJoXkpGRAH+zkRF4JjqPJW
QkoEZhCuGnJq+Z9+SotkLL+SEEbTZTqrd7hdbjI3fBKUYQQQXEi1yaac6pJ4
52g4n6aAtb7UB693ENDeFxkUDsE1QcrKygieqF+hyMZTHzIjZ3xR8PHHH6ct
X6/GGB1UhvkqdoxcE370rNfo56+eiZAurdMgvbY8pHPNyCeDy3NiYzQ2SpPX
HNJjl5TgXiGhitbG60OGDGlBowYQ9d57Ambg8J/qNxvPYck2nUPUt2XVL5DL
3ZF+8/ZnFdUiUf25LjEU5JxDFHbh8q+UEVA/RQbRBqpJibNmzYIoUUTJIONf
1advz7h58xdUansYcUA12kZOuekVr7f90oPT0i0tIsrnQqeUz6Wg1B08UFzW
FMeXtabt6JmhMuh5QF7Wd9OmTXlffPGFNKVes7S01ItFG6YXmfivbnCMHrP9
xlOi83yDjmceDz7pMP/eM9HThq9I1EFW5+67Apyz1sFn+FIDdonDucY5UwJ6
ZqosbBd2YCD8Rt4SoZGAAqWAECRBZfvuPKtQlWb7qNEc3odW2B9bsvTRi1NC
eCSfOQaldPrIWQ3iTamYR3IgIREH007OeTWmjyKIhcjFzJ8/H94yhUapVkFB
4dTUaVPizd31TJLOeUI698WmP2EtydRy+4hlUYdPeQ7LfS1y3uitLnETs9Hy
MFdQw0EZgIq8YtWAPgrVh2Su17Zt26AqZShUKKa7amiq+ftGOD3wiNvN46nU
I2ESApoPKqrrfygsFeHxu5KgUuKhqrGLnMuo7I/oXVPXekIDzpiAJ41XU9BT
m2TgZsGlwM5YdLpTfPVATvLosmXLdvj6eZH9WgVvqqpNg7fzOr3UPmLVkaNn
fAcWlIievfZAEniKPHgvbI7o4uXUfTjwcIgbSlM4UYvbgyaDkhkSJ4dWrVol
pGUPBBpw5kdevHhh18X7J+97xavWO8eN/L2o/DFU5zmHsPAjYWf8B70qFoWt
g9PPKGyyPGzP7cL17ut5pBHUcUfxoUO0NTKnfVsyiKohjkiJQkdwvAYlZmBu
bg4VMvRFUf65wBTDRvuoCbx78Mo5WvmvglKRI3yyJYEmL8prX1XUkMoZYg9y
LiEHDgqnsMfwosHvVGX1hD6FcGrb2toiV/9DSUX+H4VlpHPkuFNYGshZx5q0
pKATzn/niIqAxA4NeeiujNDTRDC/Ka9+iaOvkPqBZApoFkQG1WqYZuTpkJrl
wEKOGXsp1Z2cnJBH7l9dV+GaeCmk0Dl6JfQECrYY4M9n+WVz72Q/FoKVJ0l/
yeldfhwAkG5YBB07nxe7BodGoOmOFr5lEO2gCQiRNFQWBxH+iTYtbJlEezMe
/rykovaad7wBi6S/abEhcnSWS5T66ltPzwshypeEKDlosPiIdAMyhrWzPuwy
DrvbKTTLsDZACBBDIeqFMgzqjkAf0IhYavWt7PNH4i6aKjU21X75pry2Rdtb
v9AuYqNb7PkINiwWrTEXSASrjQpL8xtZnBsyHD4MbTGWQQgPtYVsCWDhwAJz
gckQGmHDAR4em/P6wYmQU+b1DlGTiJp2iv1zSk4hSRKR86yEYEl8Y2arIFY4
R89mkr1nWD/N9BfQhKQ0HGpDMzMzZDW5tIgMYEP/JhqNkOmnmlguPCApll9d
o03EzAzfJJupD3NFDuyUeOZbKyiPnSL3Ql+NeZTzRkAP0JKBv4YsDHAh5CPp
Rz/99BOEDUTl1IfCzCcvr2cGntAxufCQeM9GMWmP77hFm+w6d/sCzkEWgiTx
rLhWkLI8ozRvGnhn4OQVAc0mS8MnhzVG7p7DTg9k3EJXr149/uzZs7B7eLJ/
TV2pZ+Ilv3Kn6Lm8ZT4dlqYpQqZqiQZw/MuXD3n8Iqu7XmjslkRERCRPnz5d
yMzSUNvgcdK4yVHo5/yiymqLw+sJx9geG3/bPcZo6c0nIqpR8tFxfoXp+5i4
sIEYY0Je0RVl+ihidhsdHR14uRwmpFHjDly/fj02nvGU+aqi+nVo9HnnfO+k
2d+XVeXh7ePXrEPD/CLSjn5UUSVShat7Oyi0yYQcgUgyaTeSlgKcO9aHfBde
ffBqldDWwvlG2QdamaMPalVwWWhiirXUrJRvvZaV/NgrcRM5/AL5OvvIGWNf
FF8XoU+TRHBQ9Wt57v9jbGKaEaHTLidHdKTR0o00ujSc1dTUYOt5DMHMIolH
Dk7gMAR48C+3I6mZpEjMBgYlVmGbnWPPJbHmW6Ri1cFRdLTtUBomFI7R8efJ
21oTnSxYOgnn6QGi9EQsaQQFsGXIFHMeZc8LI0aM2Ojn50e2qTN0o9/iB7nn
7h9I2poQfYGYmwVXHxSkHIg/OOXhc5HKJPl6T6JgDcoveg2QilzjFjBbbALQ
mCCgp2hJIymi4ejoCLebRxb8Jbddu3ah24xDlnyv+sYqq9M3g0qdY+dwCf5h
5w+e3IMsh/iZQjJvh4i2OirgXTX8+1p4sWfNkRE0Ecq83FlZECkjU1PT4v79
+/PAwQtB2YTsQOXETbG+semZ3VFDvgZ7zynSfOHNJ9licHWwu5CDC68Gxnli
2CLEw3XZJ9H4qZbrmV0nLz+fL9TVSDEiBcvB1TNt3LhxSMPyQ4KKCx7np18J
PrUZlXNcO+EUlhobkBT8/euSSjHYFN4OG220lEWjZWuencMbz2qrHuQltT4/
h1IMEQMSfVCTABGSiZM3sAuaf6dwz4bGasNz90PeuMXNolSNGbYv80GIGHA9
JQGngONe0AXKnxXat6auJizynCMG3XzneSQHE7bzhS1fvpxsJGRhwv9RkkCq
mCOm/K8vCiuqnGKmUWIem/DcJsx4/YW7D6WIiu80YFx7H481vEGIm0Fm6Ouy
Bxj9ltMxe+ujqQ/p8V590cqLsJgP1IE4ZKGwTwpPwEuZl/Uq43DCZUP8e3BO
QXmjlsf+s54x/n9n578Rg62DU/M42HC4Os5LJi023Jtm+tTU1zqmXA0CfCWG
AfuRBBfQ87ykYeTQuJsxZswYnu3AgmBFmo9jGBRyDTMfBL1xiycUbXSOHTG4
sJxIWr+qWvFDCUUPyCMwcswm2kaNz4jc1894Zis0CbQ4bRVE62STOf3Hugyo
euGoG15SIbXwaIhh5Bhu3oPc6/XOsTRqto6YnGcZar4p49ZjMbA+eDvuaHem
NP+2Ve4JAjSAJG1v7vELnxkHHDhnHpDJnS0lDRu11dvbG1Eq70BA50H3kYMV
2Kd+KK3KHZ9XfBX/PugTe40xDlpz3vVY4NhHz4vFOa+DA/W+o9dG1xVcBefh
/a9csqEVwky/JJPzLHS393qlC7hjXhB14ZAWURcHvT6oxdINnwwDSqaEZ2ih
lPTyQPJMmLCvi8pqyClaYhB+IhFClDSwRRi19/YgPOgTcyvO6cgVAT0JRRoq
Fy0yIoaVBIXocKVVMTaseV16PzP0zDZi4JEzNg5WNk+8eEYMuM/fDhzXxIrq
HdIN7iWZJgKaO5LhgcMHuRzaHy+NudcHBgYiQcpjTlQdQ1jlmpobWPlhrjuE
e8J2NRoGbg8IPn4WgZA45jo4yI8DDu+7wgnO5H1sHHD9q2ur3BIuhgI4+7S7
jrQJq8+EM2fOAEkk9cd+8G9UIYhBYoFafy839plvygKdK08O4ppp1NlHbkdO
XhILLshXB+/+49pEYbhwVi+6KLluRtKXdyYkde9FU7/zPWvrm+i5Ar2wvSVq
4cKFPGDAHkQYWgZ2QfNaVmiRZ+JUgnDWh3U4cTVYHKDvJGIKNWv+rXUcpuSg
43TSb50goaxPkgas/sdlVXW0v64PIkLsSiLb71nA4LuB7YjFZ5+AJ3sr8MQm
qkPCp1TpHzA3jM14SFMunQbwa05z8ckPfGjiVE6Uz64FpKgCQLj0dO90H1SF
IKlIvgNAAAqAAfiXFTUFtun3nPvX1pf1ra5tqNRw8y7TO2CvnZSZBeSLA/iD
RADR8YuzRoiVEAMQmg7tMQBw9OPckqFCQwFSigiEEkw/8vafVdUWHki9ub/R
OY5UcVXu5pCNZsOyX5bBjxKD76e3w8f1tqIrC107eK0XnB4xEKFIECsARHix
tNGzF/r94fiKigVEBV18wF+9Szwtp5qErMjdeyAYKQFx3P0iCTZpvLMGOpic
la/wr4CNyMorvbXPO33qnadFdNtGb7hNEAveCwAOiQpubCQq+KdXxVWVthHL
GbPQJQV63oEq6Tfy2hY2yFcHfbe0d5Wc64HTRPF6RzSuK/yrjss4mqHCgYUk
GOw8Mk0Aq7Jnz54Qig8qKt/svfTY79WBlKngPdRZ7u31TtVKysxuh5yDJIEl
jaoKUIYDGLk6HVFtDkmXwrP9T8y/FXJmGX3DZm9YJcgBDD0vB3CYvs178ZzV
HiFvPBMnkiDPJmLenwU0MwcdLAbT7xJhQikKb+0hh2JzRd6TkZnbsgJS58LI
W4afekgR3gtV/yc//PADz1c4UwdsjwpEgXcy1WaWYTMa1d3sPYIS7/RuR2n8
8XaAfmmrwW4En15dcCB5StFOu5NRLkev/ixkbhggUeaemZxyHGE8nsBxOE17
/VQZNRfLox7Hrv1Q8OZfDvse+nYguGs4tpl/v5BA6V81V6V74mg4GJdM/M5T
Me6FvhpkxHnmRvFuo7+/n/K93PgnASfnNznH/TmgpPIZVCysPw6TFQesg7ea
co3E8CdgHWElOXK1AlbkHj/Pm1U/J2xDLqGmR/VfT5jwzT4+PnAtABjY3MTE
xHjdzayYB0GnFpLOKLtjE8v2+Vqwer5WDKbhEmFCRxzYmrwRgMIkL6oJcCXA
N/ZWg4p5Eok0qOXohRgYHSU8KdFxgxTM96WVeU3OsX81OUSNY7Q8DLK03VOx
B+c9ogk6DR3X2YqCGN73iEqBoGf70KknX8xGzwXhWGrue8GrNTcwMOC1AnxH
zUPhHnuuZpHXNs289aQQaYhXao7Ht56+mgO6ikM3UiJ0eKsCcEfeJkCha/UT
n3olrIc3+ltR+RPO5vdE58TDAQPIGYBIlPmqamz1Sblq1ugS9xfMDhL9wBOa
z9vRUR2cacIBhDe6wySS3gEOIF5HuZ68TtovR798c4MzoT2QgUIozLP9vcF/
DHKLPGVW5pk0Ds82m4asrlB1OkxeDyMGzbi3Q0N3XMvOe/rqLEZZfS8nFXlL
g9j0J9zzPbBj8cXnn3/Ox5PIZnxfVJZX7xw3otEqbD6zw8H9jGXQxSHPX5WL
zzz+7TNzbdsIbslLyQkzULbhVdOOq4+TANXGuznRVZstk4+5hl/j8NcDERk6
CnimvjF/+eiAmAxyGMG4h8/fIEn0RNvtNOy2OFQT3w4VjTikUbvBweykOb93
W2a+7pOojf/vu/TID/VzlKO41fTAjjJUVwFR9Vff9bvifHgxWKvWJX4UQjM8
BYjkGpv+5Yj6DnYScFDxb30jRVUKlQIP1UW/JEP/EzdMZmcXpEMJNK03S4Ih
pUGeEmoBaGoj6FJQks7ZZTyywSVuGGoBLYaBm6p22JFypBhMU98OE+3IJi4A
zD9aB+A6UbCk20g+V6dDfpPL05dwJ/MqIb7hmQspYB0Pb+dq1/gx9RaHV7Ak
DDxud+jyry8KxVNN0yTBJY13pPHnqXCdgQri6gj9sTh4HQkK2DO6HU0JsTQS
rUTUfhvRt1DT+q/vs7KeDH2WX9ay2erwPX3PtBm3nxSKwdTBHgsOJnTFIAdN
KoN92iohwISu7WKv4xN45OBkCITPzJc/KDXvthqA58rdEiYhF44nptx9WgR1
KAbITImAgGj8q0U4QBR55bPo7rNbiP0wWb+6BrI9GTsUFBoam/ln0VyAtEhT
777y5DRtx5ghTU6xfzfr+2rUbbaKaS/wm/N2qKhHJ7f2fl4CZkX+AksDC6+4
cPclZSlF7HHgzVhzzz696u0ixjQZB6kwGy3D4Lh8U1T6Lyf7d7CbhAoGeWk8
4RH8RTtbFXn9Mynr5WOUYwEUnEHo1tJtNifSLA5e4HSVwrLw8KPVY2d+zuyy
+DH3m2+/WhOTeKpxk2UUWi/hmosBNP/tAHF95nzOBa8l5dqAlUSZBNlquEWR
8ZdJcdnhcMp9SNX4B8/fUA9KAVFmvLreCmaP0y+07fLo6GHPX5K2CcSAYjAt
FIGJgMRBgtcloOUPL1HiIOkhLkKw0guf5JNUAKhettU65aGu+1moHi5akR99
4/bFSk172nSGHWHa3jqP9TxOtmeqFr8dP9z+ANRAkd8mW0Deb0fbcE066zJu
5sETmnYnq4jby6nQo6GpBseuNHz3+xjWg57O7PXflr3HNRoN8u0EQB28dZwD
Zlvlg8MgFnmpUnvAcClRhNL6lx/780fNfP+6pJq718MoOu3x2nO3Xqy8cOel
XXR6+nPnqO31tkeHkwOqlHr3f66i7zP32v2X7bllyyRCiOMW8Yob8jaQt0Mo
bXjxkQ+ukSooTUYqQuyZdWZxjKqLHU4KJBUmJMV224yv+viz3iiYiUMk8Yho
aVFFw83eG1kkREOA4EJYurLluftufBpzyf3c86S3zylmeONarYHMB58pomCJ
Hg6xyTs4YYzqdunZNbln+HdQc0a7p0Jjc71Z5gPPQu/jpD4OVOCObEND/XFD
21WMvCJJQCDqaD1sQvjVwRviOXzDx8NbgPA6L54uojqGY0952KO+dQ0VCHHQ
7YBJUT9HJ7o4njvYP8XNym+kQQKBn7UN5WmWQxZWhvRlcsEUKa6IzaYscTZs
8EAvB3mHXXuzcVvmkYfgyznQ5mJNuORr3dtn4zZsoEaD8Ax9/rzibDMbTQXL
IaePOirvJaLJq+2eEfK1XuKE6DWGLsTbFtudkMvfw89CYzZPOvSyiC+vg91l
HDLR/Y2z0kQFuT21gkQPnyko+uCDD5B9Ep9toySBbGP5cQVFJIyGUbGjGIZX
fNRNbx+1L6dQyq67451z5IU7VNJkcUoGT3zs/6VVi7Yjb377yNwGDyhR9MXf
zo+czXk0rSHDIX0zPT5EwuY5sZ0u5GuLxBnQJwjR0Su/6c3NIDvuSd4j2k5o
NB1ZovYo28Hxf9zIcAFREiD55I+EPHNz1qIZJEGwxXTWzKSkJPGRt799ZM7j
Br/gkBO8JI0fGdsa7/3666/YyozRb7pG6oiPvEPiyLC4OAQKISvH+3Lo/UPd
Dnh+OmbyKJ4zOz84rdLJIwBojWl/+eWXqXezbgsdjE6Pxu0oQSIXu0mItaOC
o4AWSrRFYYbcL7/8sld5ebkoy3d5kgU1z0+AO8gbH6ldkcWLfviKMA7hao/v
VCWOjHATu62xmY/TBTI4bIBHEHxurpW1jf3o/BK43S6IuHEaDukY5iay2Lt3
L5/uAHPLtKN3ujwR3hzfiiuqGWSR2kcemM+3EjdC9t8xG05aQ4BF3n/bRzgb
zpfgU3LYsMKf7fHPZoNZ/5scdNUqK7IwOGhjYrhdsngLDGdouzvbF8KR0W2L
kSF5aBnjz9fp5sjcXhq8q5GeydLKiaR9HL2zmK2sT58+pC2L23DS1l50ejYl
Ieuh0fn46+QN7c2G9ClpcRIbuYOXX3Aj44QS8BpyfXxKTXxkHODAn6c1sLgi
S+tqVvCB1Jvmzmfv2Mn+I8lSaivCZNMCRbACSIeWkTZAsHeQSz93NEOF7miW
zvU7MaN1OOl/RFlFIYdCzPHaew4YWWgmeLI8ZUXayWRRwC33SBxjl37XCR0m
pL2M6576sbQqZ9utZxH8HJ2FjADGwYPmdsBCtAFFGNmMIwoPNomRdpvsgnQ8
odjYVIc8BKWO/NHEKzrNznF/8tm0biKImjEFTI5UDy+uM86mn4iKv6yJEVOP
nd/KRbBoX8clh7S7Dv9gUk5aRV9az2FBAQdnAIgaRUXFLQkngp8GnJyDxKFj
2l17BEcUgXLXDp1d+SQwdZ44EF2GAR4OusHJJlk6uDyOxOK15M6oBP9qt4SR
ZZ5JY5Ec5msgppkPvfiO8u4ZUQ4Ah5KLlhDWb+AIcWhGaA5TB0OKjXxgP7fT
t61/eVORzSvd6c9fZ9a5xg/H/8VRv1virHAbsdOCzkeZHjNhxhYp6feSPI9u
+qKypoAaDylyHguxg6JKofNr5RQ/ziHCWsmrt7na8uTU1FRS8pBTkHrocIg0
OhmzsXd7IXqXJ4TvjQlxaD4fXEKuwOKMUk/pVzah4zE6qElSEn2F8h9w4obx
P5sdW4zJXhEyJl0uIpXCDz/8ECdIlFoEjQBvq11/eoguVzYw5bpxLUvVkTkF
2d2YmBpfOcTNfDiUMXPOhAcHUxco38+N53w0nndnP35xvRuTcD4Djs5ANEhc
TC7MRFbg4vDhw5mefWQujRgxHH9DaqkHKrv19rNjmHD9rezU7k+MhBeUOZmY
CzdhWdDizvTtL9toGjj4cNwFXd75n5/16gxmW/kg90Q3zDVnDVGvRoMVzuPl
G6yIO8UutdngwCAUEYiC4PKpwwpK774+kDx58ZP8VPHZdkmcjXetyQtVuTXi
rAeULFp0XH9pYtlm0ZP8U3w4hXIlygp4pzPPft203xwEPm8y9kExEhecM4uI
IJqwh2C31Y9gXPAUpxAVP6yorrcJO/kAnUnvcRnEVOvgi0jJ1m3Yf5w0Kv8z
d5NCpgi9da4gfjl/HWVd9BWB24MsnHZuuf08kjMnPWWbmltwEFr5VusUQIJs
NCDFXezQHPfw+RtksXHPIuLUQ0pYGZg+p9O33LpuViiMCuhEwnYx/AVpzP7h
x++YHwb1xB4H2FoKniw61q4Y+57D9CihIXfN96ChNJZsF3q5ZZ1pIoozXMMr
3JLkY5lqXQeNU/NI+2SMGTOaWaP5dYtD9B+jcgv4KroMstWAA/VpFFQ4TkL+
kxxKSQclj77wTZl+Lix9c9fhoDiWx0H/8LjxF7ZnMws2fo7BAhMu8oeBygIG
HN1DsugM6f5r4Vhe5n7Q6UU3Q86u6joAdAUKkGjUNrERDDu8yLnM7GBng0+o
wOJyTTyoBqbYhl4CjYAXrt6BPhVkrPlRLx5JX3sn5PTSrjsCXK80L/Iml+Pt
mr8f2Au1pDseUfOxiYo/zBCEQFkasJgfO/2ICBoFSA6C91LV8RQvfNFxlzTP
RJzf3Hndw3Xg+77J2AvPvejbLz/CBucT5i6r0HLD4QMvlUYPPapSG9Ju5HEa
CJVygPVHzqtyPpfeTQ3E9RfDIGPTelWs9S9Mv4/ksDkPTjvnQ/+eW1BRsNs+
lRS2uVwbKTSxQOw+cekZD0Q3lQ2n8vC+09zjDsMZq8CBjWZBgz8rKn7FN2Py
igQfVAVpilQBglu70eJ4iHcUObZp183ssMuHzq7vOqNy8dnGgAB/ZpvpD+AI
/eRznpwPh571wp12JzWPX8jmz7ZKsj902ScgnhxphVMauDZvvkpFP23nb5Or
U2gzP/vB8ZpNymrfYJwo7/Dt3NJ/eVlUiblR5kLFmCuC85uyO7PUNlOhq6No
wSpS2S3xDBoubD6UQU90nrrTqepNlsnoi6Q9ADKoz3R2KnnRqUgUvGBMbyb+
yK/KJY+iOL0og+6VJ9puZ+pZY4WqK7Xj8ih239nrlY5+R37Ppl/sBR+JXkTr
pDoe3vaMjJxUveOmzxtYi0oqAxwNwah4cQH5i84oB9yCiWG3UApGCIRGLrHJ
uIPFyEDkAF7KLYrip2O3e5I2568BxNGXLp9v0Xb+BUa9NMv/D+RNOTsNtUvb
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
oJOv\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.642320922012107*^9, 3.6423209220439987`*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<data/average_wf_dimension_\[Rho]_10.pdf\>\""}], ",", "%"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.639129341680035*^9, 3.639129396282734*^9}, {
  3.639129631579259*^9, 3.6391296353862543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwdkX0s1HEAxs9ra3mZ9zPprhlFx7pKrJpHaWzVJaw4Y94SeYmZMi+zQkS6
yqqFkrcWkiSzsSJv6SwvYXSc0W5Kd9/fi4Sjlq6e7dnzx2d7nj+enZFJ/tHa
HA7HSeN/+Tg7Ul94vtzD59dUa0gti4pgciiQnw6PLWt5tU9YyERFKXx+IZ4a
1XfSZSzSfMRGevxSvKxrTS26y8K7zzNkjVeP7itNZnPZLF7kHMhlee04Xu0t
+iNm8SWiyZLiSWH8sN/Z1pRFpl98uIonQ7Hb6yiBOYM/uQet54plWBtLKwvY
xuBqm9bY2LoMQWeS7K9pM8izeejVMT6NHtcf3gxLQ7LQ51BYIEfyZoYTd5hG
ZfoOyoGZQ9T3wfbKQhqK0cUjwjAFZk5WsN16NLaul0sTXJRI7RCX23EpuBfI
Mk5EKBHLacwyMaUQa2El2H1PCRJ+YY+lAYX3whKJYl2J676SmwkcCqtdI+gW
qPBRX/tS7waB/WnDpYowFVzrDZ8dXiHIi7sRENyvwsrZVlGlkqBV3a/rrlbB
Kn1i/MECgSJfp81iD0GP9fjJ3nkCU4ujMcuhBJKBRyPOcoJjNdncT3cIAi+3
iOenCFKEb6RNvQTGI+1B38YJqrrWM4pXCSZ/b2T5jxKMitwEcY4UHqtd5K5D
BBx56qxPCAUTtXXp80GCvXEtEvvbFN7yDIInPxCEqRno9FBItKkyWhjQ7OY7
L83/pJA5Sy1yNbzTPL66cxeN5kjlvhEpAVVdF/AomEa0Dc+rRNO/XfhVN+MW
jS635lj3CYJTXXZtge9oJK8GhPLnCDJFETGuyzRWXmmJW1iChpkKrpkDgyBP
jvK+IYXpi3IpG8TAzzf+s60nha1q68zhmwwShwwamms1f+QHCho7GeTE5Do4
NtPYHDhXE0cY7P+vZfwFulVeDQ==
     "]], LineBox[CompressedData["
1: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
b1vU4ktClcpscnZW3R/0CwlW+1/4OxOb
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVzH881Accx3HNj2QXcuMhcXckpPw4XwrNfT5lJT8upc4lxvlxRVOKtvTL
iuXXMGXiQkrqsRLbGpuUH480+b2a+Z5fN79/dC53F1eR2O2P9+P1eP7zNg2L
8eN/oqKiwlbu/xYlhGkwIwpYH6vMKoNKZXDjkMSVyzgDudFu4rPFMuhlp8cy
GGngrEOPL7gug9MeAdrqDAHUnLMtHs2Wwa5nGPSOfg9KmgSO2RdkUJ7omCSj
PwLbFTpOgVwZDIdWGLymt4BuyovuJxQZnNv3FW+a3gvJWxVm33ycgVXzBS3R
tmKokrKPaJMSOPn02wxJ7CyYzgsOaK6bBtvSnJeVFfNwZzxEp/nmKxjfE2k8
6KyCRJVieIPLFOQZJZvc4qkix9W3bk5nElxiq39WbdfAK7m6ll/IxqFRWLA3
xlILE7yKu3fOjgEzY4ll6LkaX4h251vRxsBjwnXQnquLeXd6PAn2KEza/L5z
TrIGg6tohe2FI3BuMY14cpaKYorr0r3lYVi5ZirqgLU+zunWT1jyh0G9Q93j
01oDDJYfLU8dGYIPneXRV08aYuVMxM6tYUMwzq1YS6MZYcvlX+1zhwZhe+rx
Y83l6/AzMb80kD4IuUvVq9xDTHBhkt0m4P0LgcaNPgOzNNTTTTgRVicCSsMm
iRmHgSfOimvVaCLgO5UoAjabompTztVvswbgdEK8H0NhihY7nhjWUAfgsjin
q7PTDNMX3lLjBf3gY63zE+X6ehRFreTG2/dDZvmWBp9Qc3zzeRCd9bIPWvff
XjzlsgFp5q3JVSf7oKEjJmOzqgXqaVc4mNP74OHRS9gussAHdpmptPZeoHmD
8/FKS9S00fn43cVecF8OSio+b4VTUk2t56xeiCDr31RzNqKLm+4rYrEHWJcS
q0IZ1mgvdO42eNoDV2PkjymT1ujIcXO8ktEDIxfvTBTXbcIgf/mMmn8PTPMf
RTxN2YxtWfo3rCx6QHZMb2VHqA2y8v8IYSuEUOHZtnjYxhaNR8UKr1YhTETa
b1FV2OI4f8kytEQIRmV9OSkddiiSmnKjzgghiRdb0uFtjx88+y8wOUJ4t7g2
0/uRPbqV6TXO2wnB6nGeoNWcif6F0wH+q4XgFP6n75o0JpbxJqMFMyQ0FOob
tiuYGKnxl7OokwSrBv30PYEOyJOdir71kAS2usTk7zoHrJ0q69qUT4Ksf6yx
xZrA4oua0bXnSYgpzKSm/UCgaMQp2T2ChPYV5lKvKwQm3tyR2xNOgvWRmlZK
DoF+Oheqjyk9xpy8lH2NwBq/iG35YSQcfI6yvCLl34ZghxkeCTvezLbfLSMw
62vqUNGXJBjsPpT87DmB8qQfqRQuCXHlstDkFgLj2IlFt/1JeKGX4ra7jUDf
XRLXbUp/L/ptrq2TQIYJ/ZejHBJU4laHd3UTGGYXldS6nwRxUQOMjBK4vr+/
OXMvCR6q3HWl4wSmD2ukWihdGvn6LX+SwEDuwUP1viSEEEYVr8QE7uMHOMv3
kPBPc5yxXE6gmjv2ctgkMG213j+cJfCaVIsp9SEhK+dm1ykFgQ/GXxakKu0Z
3JH+/j2BVfVw/7E3CXcbww/XLBBIZQ6wOUqrbVzYfn6RwCYNnprUi4TQrGwT
1hKBbpSmjlSl62Yt5peXCWzTXnXfTOn/AOdmSJc=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{Automatic, 429.3195735773652},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 20}, {-0.5, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Thickness[Large], 
    LineBox[CompressedData["
1:eJxVz30s1HEcB/BjlB5EEhKKcJLnu5byx+dTqqX+wlS3lKQ4ImvVzENTqqU1
O5WN1FJ6co2xYrgpy62nIUzYoUO4jnvweCfcWq4+3z/6bN/99vq+v9/3dz/X
U6kRZ0w5HE7o0jJ+/59JKL5vHDHwnBv0n2smyPWw3Z/n8ippAvg840hh5fKK
6ixXln+BLTFOir29WvjX0w6B/pq00QItne+EmFlOdGi4FhLijdMNc4WPuvZb
aem+DOJye+Z6v2qgtcU4/aC1P+unEWmobxDaU77JkyM0dH4Iakq+bDxkp6H+
YbhrJYzP6FPT/RGIHi9P1z5R03sKKOF2Oz9MVFOfEpIECybpQWrqG4OOiqfF
mQYV9alAnFdg9uCTivrUAJecVF/vqahPC1O/889bxapga7SoSec1CScTXkqv
eqhAqvNa2pkCpbdAfurDOPyNo2eA/2pnJydxHPTGWDcLVe+nS7ysxyHfGIv0
EOxodVAsGaO+X/CkQJodKRyjvnnYoRMXzTuMUd8ihNR1yFNblNRnAM9bJ5bl
5Sip7zeY76mq9w5R0v9ysNZk+vm04SfZDJvepR+rbFKQLbBh5pmeWzdKXo22
1XK3j7IRsjUGz7k3H3ZjtkHxsHQx6+Yw2RZTGo+79Bh+kO0wLLL0ztl0ZgcU
11betVwYIjui5ec2ydtsZicMtebrJKuZXfA6CjxflA6SN6NCeGR+1R5mV7wc
nz0U1jVAdsNrIauaz+1g3oJvBB5R78vkZHcM32nTmsVl9sDHUevLTF9/J3ui
z9qFi4r9zFw8HDZzQzPST/bChIGixhW3mbeicHdcQGQwszfui+o2mKj7yNvQ
MfGke+JzZh+0F732m45j9kX9VPiLDVxmP4xwn9yVrO0l+6M+tlZ4vZ45ALsz
1+Va5JKvBOD85IS/WMDyQFQU18k2+bE8ED0WMyS+5iwPwg3lOZ+K5TLKgzD1
tF7Ol5A5PDxgKVrTVshyHpZVlM9gGsv5yL+gCYg/KoM/nAmaIQ==
     "]]},
  Ticks->{Automatic, Automatic}]], "Input"],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/data/\
average_wf_dimension_\[Rho]_10.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.639129604628786*^9, {3.639129636395177*^9, 3.639129660435381*^9}, 
   3.642238348405334*^9, 3.642238502611719*^9, 3.64223854831107*^9, 
   3.64230504989719*^9}]
}, Open  ]],

Cell["\<\
The 3-periodicity is also visible (although much less apparent) for the \
Harper model using the golden ratio as the irrational (see subsection below).\
\
\>", "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.642328501598403*^9, 3.642328532175137*^9}, {
  3.6423285700160627`*^9, 3.64232857900681*^9}, {3.642329652640565*^9, 
  3.64232965276752*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], "2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.642328510292632*^9, 3.642328532528442*^9}, 
   3.6423285792354307`*^9, 3.642329653196012*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"Inverse", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.642328901084405*^9, 3.642328920394483*^9}, 
   3.6423296787524643`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "2"},
     {"2", 
      RowBox[{"-", "3"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6423289098339157`*^9, 3.6423289207054977`*^9}, 
   3.642329679183267*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"Fibonacci", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"p", " ", 
       RowBox[{"Fibonacci", "[", "n", "]"}]}], "+", 
      RowBox[{"q", " ", 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", 
       RowBox[{"L", "-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "0", ",", 
       RowBox[{"L", "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"t", ",", 
   RowBox[{"MaxPlotPoints", "\[Rule]", "Infinity"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.642335104743649*^9, 3.642335196019775*^9}, {
   3.642335233271698*^9, 3.642335322068363*^9}, {3.642335373909217*^9, 
   3.642335377753634*^9}, {3.642335412133112*^9, 3.642335430836862*^9}, {
   3.642335544723839*^9, 3.6423355504534903`*^9}, {3.6423356175754023`*^9, 
   3.6423356176445637`*^9}, {3.64233572584585*^9, 3.642335734836773*^9}, {
   3.642335865062269*^9, 3.642336203318309*^9}, 3.642336254390235*^9, 
   3.642336298598214*^9, 3.642336339750358*^9}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.8688568909375637, 0.5965006245484981, 0.08103781418603667}, {
   0.9318685987628024, 0.48767997714004574`, 0.0033920718408563203`}, {1., 
   0.42, 0.}}, {{0.9209692690650763, 0.8198075749162996, 
   0.5386887702710812}, {0.8867475, 0.6747384999999999, 0.234897555}, {
   0.8847007055985888, 0.5345353459293081, 0.005740429269141459}}, {{1., 1., 
   1.}, {0.9358524035976143, 0.8760471123744494, 0.6849726554066216}, {
   0.9046381090624362, 0.7529763754515018, 0.38875729581396334`}}}, {{0, 0}, {
   3, 3}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{2.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {0.5, 
       FormBox["3", TraditionalForm]}}, {{2.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {0.5, 
       FormBox["3", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.642335192053447*^9, 3.642335196973424*^9}, {
   3.642335234221591*^9, 3.6423352922037563`*^9}, 3.6423353225603733`*^9, 
   3.6423353781614113`*^9, {3.642335418068692*^9, 3.6423354313491707`*^9}, 
   3.642335551127246*^9, 3.642335618206316*^9, 3.6423357354448357`*^9, {
   3.642335865663404*^9, 3.6423362035748043`*^9}, 3.642336254910563*^9, 
   3.642336299045745*^9, 3.642336340255959*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DuplicateFreeQ", "[", 
  RowBox[{"Flatten", "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6423359439643097`*^9, 3.642335967026836*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6423359474678097`*^9, 3.642336205498082*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M0inv", "=", 
  RowBox[{"Inverse", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642336747440344*^9, 3.642336765251596*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.642336767060689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigensystem", "[", "M0inv", "]"}]], "Input",
 CellChangeTimes->{{3.642336778589172*^9, 3.64233679981136*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["5"]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SqrtBox["5"]}], ")"}]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"]}], ")"}]}], ",", "1"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.642336794225621*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Eigensystem", "[", "M0inv", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Diag", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     RowBox[{"Eigensystem", "[", "M0inv", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.642336886307329*^9, 3.642336960756052*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.642337297770116*^9, 3.642337299603092*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P", ".", 
    SuperscriptBox["Diag", "n"], ".", 
    RowBox[{"Inverse", "[", "P", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "//", "Expand"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"%", ",", 
   RowBox[{"n", ">", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"n", "\[Rule]", "6."}]}], "//", "Chop"}]}], "Input",
 CellChangeTimes->{{3.642336930930478*^9, 3.6423369472401648`*^9}, {
  3.642337293268752*^9, 3.642337389316402*^9}, {3.6423374429971333`*^9, 
  3.642337456821188*^9}, {3.642337499381406*^9, 3.642337524037195*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "5"], " ", 
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          SqrtBox["5"]}], ")"}]}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}], "n"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}], "n"], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         SqrtBox["5"]}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}], "n"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"3", " ", 
          SqrtBox["5"]}]}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}], "n"], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"3", " ", 
          SqrtBox["5"]}]}], ")"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6423369410263*^9, 3.642336962097336*^9}, {
  3.642337301110812*^9, 3.6423373902227497`*^9}, {3.642337448974489*^9, 
  3.6423374574158783`*^9}, {3.64233750044561*^9, 3.642337524555717*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13.000000000000004`", ",", 
   RowBox[{"-", "21.000000000000007`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6423369410263*^9, 3.642336962097336*^9}, {
  3.642337301110812*^9, 3.6423373902227497`*^9}, {3.642337448974489*^9, 
  3.6423374574158783`*^9}, {3.64233750044561*^9, 3.642337524560861*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"13", "-", 
  RowBox[{"21", "\[Omega]"}]}]], "Input",
 CellChangeTimes->{{3.6423375430834513`*^9, 3.642337546550494*^9}}],

Cell[BoxData["0.021286236252207047`"], "Output",
 CellChangeTimes->{3.64233754713151*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Fibonacci", "[", "n", "]"}], 
    RowBox[{"Fibonacci", "[", 
     RowBox[{"n", "-", "2"}], "]"}]}], "-", 
   SuperscriptBox[
    RowBox[{"Fibonacci", "[", 
     RowBox[{"n", "-", "1"}], "]"}], "2"]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.6423376366706944`*^9, 3.642337669076511*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", 
   RowBox[{"n", " ", "\[Pi]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.642337655668445*^9, 3.642337669618966*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.642337053834744*^9, 3.642337084212082*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SqrtBox["5"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox["5"]}], ")"}]}]},
     {"1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.642337057909122*^9, 3.642337084600731*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Inverse", "[", "P", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "//", "Expand"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.642337194208127*^9, 3.6423372092214813`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "10"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "5"}], "-", 
      RowBox[{"3", " ", 
       SqrtBox["5"]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "10"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "5"}], "+", 
      RowBox[{"3", " ", 
       SqrtBox["5"]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.642337202065474*^9, 3.642337209496204*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Harper model", "Subsection",
 CellChangeTimes->{{3.638792576064698*^9, 3.638792577600327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "return", " ", "bands", " ", "and", " ", "intensities", " ", "ordered", 
    " ", "by", " ", "increasing", " ", "energy"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IntBandsHarp", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"IntBandsHarp", "[", "n", "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vpp", ",", "vpa", ",", "wfp", ",", "wfa", ",", "o", ",", 
        "intensities", ",", "intp", ",", "inta", ",", "bands"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpp", ",", "wfp"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hfib", "[", "n", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpa", ",", "wfa"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hfiba", "[", "n", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpp", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpp", "=", 
        RowBox[{"vpp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfp", "=", 
        RowBox[{"wfp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "intensity", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"intp", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfp", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpa", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpa", "=", 
        RowBox[{"vpa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfa", "=", 
        RowBox[{"wfa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inta", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfa", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"intensities", "=", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{"intp", "+", "inta"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
         SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
         " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
         " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
         "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"bands", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"intensities", ",", "bands"}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.633857622837657*^9, 3.633857636360725*^9}, {
   3.633857697432269*^9, 3.633857736618175*^9}, {3.633857875244348*^9, 
   3.633857880154935*^9}, {3.633857983696754*^9, 3.633858012847005*^9}, {
   3.633858113513686*^9, 3.63385817326226*^9}, {3.6338582191389923`*^9, 
   3.633858247882305*^9}, {3.6338584245242987`*^9, 3.633858441933634*^9}, {
   3.6338588071014423`*^9, 3.633858831973674*^9}, {3.633860127767949*^9, 
   3.633860127878072*^9}, {3.633860351256763*^9, 3.633860351463883*^9}, {
   3.633860667887651*^9, 3.6338606714718103`*^9}, {3.633862354799317*^9, 
   3.633862354917128*^9}, {3.6338625592436666`*^9, 3.633862559419834*^9}, {
   3.633864977426675*^9, 3.633865033792412*^9}, {3.633865157785954*^9, 
   3.633865170565158*^9}, {3.633865213101501*^9, 3.6338652143434143`*^9}, {
   3.6338652773363457`*^9, 3.6338654482999268`*^9}, {3.633865502113283*^9, 
   3.6338656219671173`*^9}, {3.633868107793435*^9, 3.6338681310708113`*^9}, 
   3.634029627471177*^9, {3.6387899522056437`*^9, 3.638790019803317*^9}, {
   3.638792583181432*^9, 3.638792586460359*^9}, {3.638792712620565*^9, 
   3.638792731963705*^9}, 3.6392022075139637`*^9, {3.6409401930344477`*^9, 
   3.64094019655385*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "averaged", " ", "q", " ", "moment", " ", "of", " ", "the", " ", 
    "intensity"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"avqIntHarp", "[", 
     RowBox[{"q_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"avqIntHarp", "[", 
      RowBox[{"q", ",", "n"}], "]"}], "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IntBandsHarp", "[", "n", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "^", "q"}], ",", "2"}], "]"}], "/", 
      
      RowBox[{"Fibonacci", "[", "n", "]"}]}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6387903168578157`*^9, 3.6387904975080957`*^9}, {
  3.638792773348711*^9, 3.6387927792366753`*^9}, {3.64094020155462*^9, 
  3.640940208834527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "19", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avIntN", "=", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"avqIntHarp", "[", 
       RowBox[{"15.", ",", "#"}], "]"}], "&"}], ",", "nValues"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Log", "@", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.638790563885058*^9, 3.6387906077785273`*^9}, {
  3.6387907799234743`*^9, 3.638790780082123*^9}, {3.638790991634129*^9, 
  3.638791068978476*^9}, {3.6387911202921457`*^9, 3.6387911701149406`*^9}, {
  3.638791215428357*^9, 3.638791308179717*^9}, {3.638791354820362*^9, 
  3.638791400499333*^9}, {3.638791526162737*^9, 3.638791554131571*^9}, {
  3.6387915928524446`*^9, 3.6387916451232243`*^9}, {3.638792749236163*^9, 
  3.638792766436413*^9}, {3.6387930951900387`*^9, 3.63879314770403*^9}, {
  3.639129803130342*^9, 3.6391298067943153`*^9}, {3.639129868284979*^9, 
  3.63912986842732*^9}, {3.6391303283485823`*^9, 3.639130335580117*^9}, {
  3.640940215282299*^9, 3.640940215490097*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0.6931471805599453, -0.6931471805599453}, {
      1.0986122886681098`, -1.2189250320809446`}, {
      1.6094379124341003`, -4.073903397916114}, {
      2.0794415416798357`, -5.524621255609219}, {
      2.5649493574615367`, -6.668168026750781}, {
      3.044522437723423, -8.961797931742332}, {
      3.5263605246161616`, -10.712026963472645`}, {
      4.007333185232471, -11.687320130646965`}, {
      4.48863636973214, -14.093576938595413`}, {
      4.969813299576001, -15.78267764222023}, {
      5.4510384535657, -16.793284532187585`}, {
      5.932245187448011, -19.180650638683154`}, {
      6.413458957167357, -20.879827440037996`}, {
      6.894670039433482, -21.885431853376076`}, {
      7.3758821482150125`, -24.275304297331}, {
      7.857093864902493, -25.973022840317178`}, {
      8.338305731356565, -26.979675508712326`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 8.338305731356565}, {-26.979675508712326`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638792795896812*^9, {3.6387930958408957`*^9, 3.638793148130229*^9}, 
   3.638851595467684*^9, 3.639129827442865*^9, 3.639129893188744*^9, {
   3.639130328944179*^9, 3.6391303372934933`*^9}, 3.640940225581086*^9}]
}, Open  ]],

Cell[TextData[{
 "For q into the range [0,20] we compute the slope ie ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    SubscriptBox["\[Tau]", "q"]}], TraditionalForm]]],
 " using the points n=10, 13, 16, 19."
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638793401569675*^9, 3.638793517316625*^9}, {3.638793622481604*^9, 
  3.63879362593719*^9}, {3.638870503411724*^9, 3.6388705210917673`*^9}, {
  3.639129991287359*^9, 3.639129991879635*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"linFitHarp", "[", 
   RowBox[{"q_", ",", "nv_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"avIntN", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avIntN", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"avqIntHarp", "[", 
          RowBox[{"q", ",", "#"}], "]"}], "&"}], ",", "nv"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"glue", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", "nv", "]"}], "]"}], ",", 
        RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"data", ",", "n", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6387943612061357`*^9, 3.638794483189991*^9}, {
  3.6391300219807453`*^9, 3.639130036731717*^9}, {3.640940231939519*^9, 
  3.640940234066831*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValuesHarp", "=", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"0.", ",", "0.99", ",", "0.05"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"1.01", ",", "2.", ",", "0.1"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"2.", ",", "20.", ",", "0.5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nValuesHarp", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "13", ",", "16", ",", "19"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitsHarp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"linFitHarp", "[", 
      RowBox[{"#", ",", "nValuesHarp"}], "]"}], "&"}], "/@", 
    "qValuesHarp"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.638794486975334*^9, 3.6387945321143713`*^9}, {
   3.638794563124834*^9, 3.6387945633640614`*^9}, 3.6387947892358313`*^9, {
   3.6388705966455927`*^9, 3.638870611526979*^9}, {3.63887117637542*^9, 
   3.638871189655429*^9}, {3.6388715168259277`*^9, 3.638871518168088*^9}, {
   3.639129271883354*^9, 3.639129313099586*^9}, {3.63913000378795*^9, 
   3.639130046698415*^9}, {3.639130165276963*^9, 3.639130182650362*^9}, {
   3.639130256621193*^9, 3.639130257547888*^9}, {3.640940130577168*^9, 
   3.6409401310411654`*^9}, {3.640940240194318*^9, 3.640940240433539*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6409403276727457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"extract", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "q"], "'"}], "s", " ", "from", " ", "the", " ", 
    "fits"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tauqsHarp", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
      "fitsHarp"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["D", "q"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqsHarp", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        FractionBox["#1", 
         RowBox[{"#2", "-", "1"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqsHarp", ",", "qValuesHarp"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6387945939297028`*^9, 3.638794594275021*^9}, {
  3.638794633620426*^9, 3.638794876943446*^9}, {3.638795119798197*^9, 
  3.6387952198642263`*^9}, {3.638795307222921*^9, 3.638795339608634*^9}, {
  3.639130187694229*^9, 3.639130192926097*^9}, {3.63913022476505*^9, 
  3.6391302419957247`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(\\(\\(linFitHarp[\
\\(\\(0.`, 0.1`, \\(\\({10, 13, 16, 19}\\)\\)\\)\\)]\\)\\)[\\\"ParameterTable\
\\\"]\\)\\) \[LeftDoubleBracket] \\(\\(1, 3, 2\\)\\) \[RightDoubleBracket]\\)\
\[NoBreak] is longer than depth of object. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136338945*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(\\(\\(linFitHarp[\
\\(\\(0.05`, 0.1`, \\(\\({10, 13, 16, \
19}\\)\\)\\)\\)]\\)\\)[\\\"ParameterTable\\\"]\\)\\) \[LeftDoubleBracket] \\(\
\\(1, 3, 2\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is longer than depth of \
object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136412695*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(\\(\\(linFitHarp[\
\\(\\(0.1`, 0.1`, \\(\\({10, 13, 16, \
19}\\)\\)\\)\\)]\\)\\)[\\\"ParameterTable\\\"]\\)\\) \[LeftDoubleBracket] \\(\
\\(1, 3, 2\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is longer than depth of \
object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136475226*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136537437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "1.1", ",", "20."}], "}"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"Line", "@", 
       RowBox[{"glue", "[", 
        RowBox[{"qValuesHarp", ",", "dqsHarp"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.638871099478119*^9, 3.638871112695342*^9}, {
   3.638871203352187*^9, 3.63887126328948*^9}, {3.6388717651453753`*^9, 
   3.6388718315447817`*^9}, {3.638872635498169*^9, 3.638872686297875*^9}, {
   3.638873074153907*^9, 3.638873084169547*^9}, {3.63887337775386*^9, 
   3.638873430746499*^9}, {3.638876952701202*^9, 3.6388770164290953`*^9}, {
   3.638877124028881*^9, 3.6388772183809834`*^9}, {3.639128885451253*^9, 
   3.639128885691019*^9}, {3.639129178876523*^9, 3.6391292553405647`*^9}, {
   3.639129530029345*^9, 3.6391295879483356`*^9}, {3.639129652317589*^9, 
   3.63912965543666*^9}, {3.639130217934422*^9, 3.6391302474375267`*^9}, 
   3.63913029584098*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.1, 20}, {-0.5, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Thickness[Large], 
    LineBox[CompressedData["
1:eJw1zw0s1GEcB/Bbneg9dqkM4ZS7Uh0nva1+P9JQTMWUMQ2hVitba6J5WVMq
t7y0UVdSpLByldNqaMZUlkPez1vn7dx5f0l60dvV7/ltz/77PN/n+T77Wwaf
PRw6j8Ph7P27dF826aNGt8S/x0F6Wzf58HDt8kUhp5hfg0zhJKyrGgMHsW4q
oWG8LOuI9Rjl1RA4fX0qK3EU/rfVQ/6dFc+ujY/Q+UZYYJdrNes/AuFhumkB
fo1ZRX3NMN1XQvZNbtp852FQ1OimE6ZkwoS4kiHqU4EmcbeZ444hOt8D9crF
h9aUaKm/D9bFKBJMnLR0vx+MZHelwg8aek8N1VH8GrGfhvo0cDA1qNpyeJD6
tCA473O1MX6Q+oYhQ5pkyDMZpL4RGFJzVSdeqqlvDK7biD3LvNUgDEiumBFM
QO2Bpq1lxmqonBH83ZkE1/Lvb4ZcB+BfHDAN0RIL8+K8fviii2c+g5VI/qzN
uB9SdHHyF1AIQ+qep/RR31dYtdbluPPKPur7BrEiq++FOb3U9wMg/P4Z2129
1DcH7p7uh+bae6jvF4RKDtifvtRD/8vBB9IAvxfbmbkolxv4Bqk/kQ1QNrt/
q9ymm7wE3c6VvzAd6CSvwAm9EFmUpoNshIXidmfTJcw8/LUD4oK3tZONcSqu
pNc/UElejWOxLcuc4tvIJijt4HK5Oa1kU4y+EBGmX9tCNsekc+4ebxcwW2Cu
3jufn17NZEs0SH+fubOgiWyFlR3+l0t5zHyM6NqbaXmjkWyN00pv+2Ye8zrc
rHqa5/a4gbweVSZmkqUuzDbIv5J+r1v7kSzAJ4qbkfczmIVY4HkxJNCDeQMK
ima0+/SZN+LvmCf87Hf1ZFu0MD4a3Cph3oQplY7+x3yZN+OrPQmdVXzmLXgn
yXaRh7aOLMIgXnSXVyo5XoRFkpPnf+5huR02KAdUislayu3QYW7EaX8+mWOP
pcuzLy8MZbk96qWYRRdas1yMoli5nXpQQbkYayd9H4UVkjkOWOxnmDYaqYA/
j7+TPw==
     "]]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.63913020312774*^9, {3.639130249329356*^9, 3.6391302642410097`*^9}, 
   3.63913029831077*^9, 3.6391303916183453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<../Harper/data/average_wf_dimension.pdf\>\""}], ",", "%"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.639129341680035*^9, 3.639129396282734*^9}, {
  3.639129631579259*^9, 3.6391296353862543`*^9}, {3.639130361690815*^9, 
  3.63913037916223*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/../\
Harper/data/average_wf_dimension.pdf\"\>"], "Output",
 CellChangeTimes->{{3.6391303799374447`*^9, 3.639130393141842*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1680, 1018},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 97, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[702, 27, 150, 2, 44, "Subsection"],
Cell[855, 31, 390, 12, 32, "Input"],
Cell[1248, 45, 2524, 66, 165, "Input"],
Cell[3775, 113, 2808, 74, 187, "Input"],
Cell[6586, 189, 3023, 79, 187, "Input"],
Cell[9612, 270, 2900, 82, 288, "Input"],
Cell[12515, 354, 1930, 52, 165, "Input"],
Cell[14448, 408, 5991, 163, 429, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20488, 577, 104, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[20617, 582, 122, 1, 44, "Subsection"],
Cell[20742, 585, 3823, 121, 300, "Text"],
Cell[24568, 708, 1008, 33, 81, "Input"],
Cell[CellGroupData[{
Cell[25601, 745, 4407, 121, 390, "Input"],
Cell[30011, 868, 45170, 751, 239, "Output"]
}, Open  ]],
Cell[75196, 1622, 704, 20, 66, "Text"],
Cell[CellGroupData[{
Cell[75925, 1646, 234, 7, 32, "Input"],
Cell[76162, 1655, 572, 12, 23, "Message"],
Cell[76737, 1669, 283, 6, 32, "Output"]
}, Open  ]],
Cell[77035, 1678, 1045, 34, 75, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[78117, 1717, 155, 2, 36, "Subsection"],
Cell[78275, 1721, 4314, 130, 336, "Text"],
Cell[82592, 1853, 4868, 107, 547, "Input"],
Cell[CellGroupData[{
Cell[87485, 1964, 309, 7, 32, "Input"],
Cell[87797, 1973, 301, 5, 32, "Output"]
}, Open  ]],
Cell[88113, 1981, 805, 23, 55, "Input"],
Cell[88921, 2006, 1093, 31, 51, "Text"],
Cell[CellGroupData[{
Cell[90039, 2041, 1384, 29, 77, "Input"],
Cell[91426, 2072, 1863, 39, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93326, 2116, 131, 4, 32, "Input"],
Cell[93460, 2122, 1532, 40, 55, "Output"]
}, Open  ]],
Cell[95007, 2165, 1357, 30, 87, "Text"],
Cell[CellGroupData[{
Cell[96389, 2199, 1125, 26, 77, "Input"],
Cell[97517, 2227, 1978, 45, 229, "Output"]
}, Open  ]],
Cell[99510, 2275, 544, 13, 50, "Text"],
Cell[CellGroupData[{
Cell[100079, 2292, 2057, 54, 209, "Input"],
Cell[102139, 2348, 3326, 66, 240, "Output"],
Cell[105468, 2416, 1784, 39, 211, "Output"]
}, Open  ]],
Cell[107267, 2458, 963, 26, 121, "Input"],
Cell[108233, 2486, 351, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[108609, 2499, 1735, 50, 180, "Input"],
Cell[110347, 2551, 762, 14, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111146, 2570, 266, 6, 32, "Input"],
Cell[111415, 2578, 1348, 33, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112800, 2616, 257, 6, 32, "Input"],
Cell[113060, 2624, 1297, 32, 243, "Output"]
}, Open  ]],
Cell[114372, 2659, 2211, 71, 162, "Text"],
Cell[CellGroupData[{
Cell[116608, 2734, 208, 6, 72, "Input"],
Cell[116819, 2742, 88, 1, 32, "Output"]
}, Open  ]],
Cell[116922, 2746, 3767, 104, 374, "Input"],
Cell[120692, 2852, 8320, 236, 410, "Input"],
Cell[129015, 3090, 1639, 46, 99, "Input"],
Cell[CellGroupData[{
Cell[130679, 3140, 1156, 27, 66, "Input"],
Cell[131838, 3169, 19445, 334, 549, "Output"]
}, Open  ]],
Cell[151298, 3506, 405, 7, 47, "Text"],
Cell[151706, 3515, 469, 11, 50, "Text"],
Cell[152178, 3528, 963, 26, 121, "Input"],
Cell[153144, 3556, 1198, 29, 77, "Input"],
Cell[CellGroupData[{
Cell[154367, 3589, 1735, 50, 180, "Input"],
Cell[156105, 3641, 765, 14, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156907, 3660, 2699, 59, 104, "Input"],
Cell[159609, 3721, 47576, 800, 605, 14368, 254, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[207200, 4524, 94, 1, 32, "Input"],
Cell[207297, 4527, 319, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[207641, 4539, 7080, 131, 444, "Input"],
Cell[214724, 4672, 312, 5, 32, "Output"]
}, Open  ]],
Cell[215051, 4680, 284, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[215360, 4690, 415, 12, 32, "Input"],
Cell[215778, 4704, 745, 21, 44, "Output"]
}, Open  ]],
Cell[216538, 4728, 414, 13, 32, "Input"],
Cell[216955, 4743, 725, 21, 44, "Output"],
Cell[CellGroupData[{
Cell[217705, 4768, 1325, 32, 99, "Input"],
Cell[219033, 4802, 1855, 36, 384, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220925, 4843, 169, 3, 32, "Input"],
Cell[221097, 4848, 99, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221233, 4854, 308, 9, 32, "Input"],
Cell[221544, 4865, 234, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221815, 4878, 133, 2, 32, "Input"],
Cell[221951, 4882, 886, 34, 47, "Output"]
}, Open  ]],
Cell[222852, 4919, 487, 13, 55, "Input"],
Cell[223342, 4934, 124, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[223491, 4940, 692, 18, 77, "Input"],
Cell[224186, 4960, 1735, 60, 47, "Output"],
Cell[225924, 5022, 339, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226300, 5033, 144, 3, 32, "Input"],
Cell[226447, 5038, 89, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226573, 5044, 364, 11, 32, "Input"],
Cell[226940, 5057, 169, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227146, 5066, 125, 2, 32, "Input"],
Cell[227274, 5070, 909, 28, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228220, 5103, 290, 9, 32, "Input"],
Cell[228513, 5114, 469, 17, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229031, 5137, 100, 1, 44, "Subsection"],
Cell[229134, 5140, 4749, 101, 547, "Input"],
Cell[233886, 5243, 848, 24, 55, "Input"],
Cell[CellGroupData[{
Cell[234759, 5271, 1286, 28, 77, "Input"],
Cell[236048, 5301, 1912, 44, 229, "Output"]
}, Open  ]],
Cell[237975, 5348, 522, 12, 50, "Text"],
Cell[238500, 5362, 1038, 28, 121, "Input"],
Cell[CellGroupData[{
Cell[239563, 5394, 1322, 30, 77, "Input"],
Cell[240888, 5426, 79, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241004, 5432, 1333, 36, 133, "Input"],
Cell[242340, 5470, 637, 12, 23, "Message"],
Cell[242980, 5484, 641, 13, 23, "Message"],
Cell[243624, 5499, 640, 13, 23, "Message"],
Cell[244267, 5514, 528, 11, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244832, 5530, 1567, 37, 65, "Input"],
Cell[246402, 5569, 2114, 48, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248553, 5622, 367, 9, 32, "Input"],
Cell[248923, 5633, 195, 2, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
