(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    370041,       8051]
NotebookOptionsPosition[    362413,       7807]
NotebookOutlinePosition[    362988,       7830]
CellTagsIndexPosition[    362901,       7825]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hamiltonians", "Section",
 CellChangeTimes->{{3.629712555829027*^9, 3.629712557652924*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.632041721549465*^9, 3.632041723101447*^9}, {
  3.6358312356676207`*^9, 3.635831252179337*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"glue", "[", 
    RowBox[{"l1_", ",", "l2_"}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"l1", ",", "l2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.638791487960203*^9, 3.638791513106632*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hp", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
   3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
   3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
   3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
   3.629711744441989*^9}, {3.629712260739542*^9, 3.6297122613888474`*^9}, {
   3.629712372304244*^9, 3.629712372429983*^9}, 3.6313353026608963`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "antiperiodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ha", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{"-", "tw"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", 
     SuperscriptBox["e", "ik"], " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hk", "[", 
    RowBox[{"k_", ",", "n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "k"}], "]"}], "tw"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"ConjugateTranspose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}, {3.6342799382942677`*^9, 3.6342799433882017`*^9}, {
  3.634279999836821*^9, 3.6342800047344503`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "free", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Omega]", "=", 
     RowBox[{"N", " ", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Sqrt", "[", "5", "]"}], "-", "1"}], "2"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rot", "=", "28"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "rotate", " ", "the", " ", "sequence", " ", "of", " ", "couplings"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fib", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", 
        RowBox[{"(", " ", 
         RowBox[{"n", "+", "1", "+", "rot"}], ")"}]}], "]"}], "-", 
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "rot"}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"jump", "[", 
      RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fib", "[", 
         RowBox[{"n", "-", "1"}], "]"}], "<", "1"}], ",", "ts", ",", "tw"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hf", "[", 
     RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F2", "=", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"jump", "[", 
            RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ar", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"ar", "+", 
         RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hpn", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tbl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
          RowBox[{"jump", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"tbl", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "F2"}], "}"}], "\[Rule]", "tw"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"tbl", ",", 
         RowBox[{"{", 
          RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}, {
  3.6313347078403673`*^9, 3.631334724799961*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Harper", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hharp", "[", 
     RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hopping", ",", "pot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"hopping", " ", "subdiagonal", " ", "part"}], "*)"}], 
      RowBox[{
       RowBox[{"hopping", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"q", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"periodic", " ", "boundary", " ", "conditions"}], "*)"}], 
       RowBox[{"AppendTo", "[", 
        RowBox[{"hopping", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "q"}], "}"}], "\[Rule]", 
          RowBox[{"-", "1."}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"convert", " ", "to", " ", "matrix"}], "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"hopping", ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "symmetrize", "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"hopping", "+", 
         RowBox[{"Transpose", "[", "hopping", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"diagonal", " ", "part"}], "*)"}], 
       RowBox[{"pot", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "i"}], "}"}], "\[Rule]", 
             RowBox[{"2.", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Pi]", " ", "p", " ", 
                RowBox[{"i", "/", "q"}]}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "q"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"pot", "+", "hopping"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Harper", " ", "antiperiodic"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hharpa", "[", 
     RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hopping", ",", "pot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"hopping", " ", "subdiagonal", " ", "part"}], "*)"}], 
      RowBox[{
       RowBox[{"hopping", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"q", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"antiperiodic", " ", "boundary", " ", "conditions"}], "*)"}], 
       
       RowBox[{"AppendTo", "[", 
        RowBox[{"hopping", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "q"}], "}"}], "\[Rule]", "1."}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"convert", " ", "to", " ", "matrix"}], "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"hopping", ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "symmetrize", "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"hopping", "+", 
         RowBox[{"Transpose", "[", "hopping", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"diagonal", " ", "part"}], "*)"}], 
       RowBox[{"pot", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "i"}], "}"}], "\[Rule]", 
             RowBox[{"2.", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Pi]", " ", "p", " ", 
                RowBox[{"i", "/", "q"}]}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "q"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"pot", "+", "hopping"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "choosing", " ", "Fibonacci", " ", "numbers", " ", "as", " ", 
     "approximants"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"hfib", "[", "n_", "]"}], ":=", 
     RowBox[{"hharp", "[", 
      RowBox[{
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ",", 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"hfiba", "[", "n_", "]"}], ":=", 
     RowBox[{"hharpa", "[", 
      RowBox[{
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ",", 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.638249400809607*^9, 3.638249432782072*^9}, {
  3.638249651446948*^9, 3.6382496950248528`*^9}, {3.638792520044005*^9, 
  3.638792555268008*^9}, {3.638792634394656*^9, 3.6387926459809427`*^9}, {
  3.6387926847528143`*^9, 3.6387927036844*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Average exponents", "Section",
 CellChangeTimes->{{3.6387835848909187`*^9, 3.638783600107369*^9}}],

Cell[CellGroupData[{

Cell["Typical x, typical eigenfunction", "Subsection",
 CellChangeTimes->{{3.638785617804412*^9, 3.6387856277885103`*^9}}],

Cell[TextData[{
 "Let us note ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalOmega]", "n"], TraditionalForm]]],
 "(x) the number of states having a given value of x at step n. One has\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "n"], "(", "x", ")"}], " ", "=", " ", 
    RowBox[{"\[CapitalOmega]", "(", 
     RowBox[{
      SubscriptBox["n", "m"], ",", 
      SubscriptBox["n", "a"]}], ")"}]}], TraditionalForm]]],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "m"], "=", 
    RowBox[{"n", " ", "x"}]}], TraditionalForm]]],
 " the number of molecular renormalizations, and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "a"], "=", 
    RowBox[{"n", " ", 
     FractionBox[
      RowBox[{"1", "-", 
       RowBox[{"2", "x"}]}], "3"]}]}], TraditionalForm]]],
 " the number of atomic renormalizations, and\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalOmega]", 
     RowBox[{"(", 
      RowBox[{"p", ",", "q"}], ")"}]}], "=", 
    RowBox[{
     SuperscriptBox["2", "p"], 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "+", "q"}], ")"}], "!"}], 
      RowBox[{
       RowBox[{"p", "!"}], " ", 
       RowBox[{"q", "!"}]}]]}]}], TraditionalForm]]],
 ".\nWhen n becomes large, we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Log", "(", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "n"], "(", "x", ")"}], ")"}], " ", 
     "~", " ", 
     RowBox[{"f", "(", "x", ")"}]}], " ", 
    RowBox[{
     RowBox[{"Log", "(", 
      SubscriptBox["F", "n"], ")"}], " ", "~", " ", "n"}], " ", 
    RowBox[{
     RowBox[{"Log", "(", "\[Phi]", ")"}], "\[Cross]", 
     RowBox[{"f", "(", "x", ")"}]}]}], TraditionalForm]]],
 " with Log(\[Phi])\[Cross]f(x) = -x Log(3x/2) + ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "3"], TraditionalForm]]],
 "Log(1+x) - ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"2", "x"}]}], "3"], TraditionalForm]]],
 "Log(1-2x)\nThe Log erases a constant factor ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". To recover it we simply note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", 
    SuperscriptBox[
     SubscriptBox["F", "n"], 
     RowBox[{
      RowBox[{"f", "(", "x", ")"}], "-", "1"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " should be the probability density of x. Thus by the steepest descent \
method we get\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "=", " ", 
    SqrtBox[
     FractionBox[
      RowBox[{"n", " ", "\[Sigma]"}], 
      RowBox[{"2", " ", "\[Pi]"}]]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with \[Sigma] = Log(\[Phi]) |",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "|.\nThe final thing to do to compare asymptotic result for the probability \
density with ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox["\[CapitalOmega]", "n"], 
    SubscriptBox["F", "n"]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is to take the continuous limit. Since there are approximately n/3 values \
of x at step n, we simply multiply by n/3."
}], "Text",
 CellChangeTimes->{{3.638783642907102*^9, 3.6387840264917507`*^9}, {
  3.6387841181557693`*^9, 3.638784154475835*^9}, {3.6387841971156397`*^9, 
  3.6387843127158957`*^9}, {3.6387844249723377`*^9, 3.638784433563871*^9}, {
  3.63885319136224*^9, 3.638853210017619*^9}, {3.6388532477459373`*^9, 
  3.638853260545871*^9}, {3.6388547699626637`*^9, 3.638855075835269*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"3", 
        RowBox[{"x", "/", "2"}]}], "]"}]}], " ", "+", " ", 
     RowBox[{
      FormBox[
       FractionBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "x"}], ")"}], "3"],
       TraditionalForm], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "x"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      FormBox[
       FractionBox[
        RowBox[{"1", " ", "-", " ", 
         RowBox[{"2", "x"}]}], "3"],
       TraditionalForm], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", 
        RowBox[{"2", "x"}]}], "]"}]}]}], 
    RowBox[{"Log", "[", 
     RowBox[{"\[Omega]", "^", 
      RowBox[{"-", "1"}]}], "]"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.638784337235059*^9, 3.63878436219147*^9}, {
  3.63878443688055*^9, 3.638784441215188*^9}, {3.638854663888339*^9, 
  3.638854668094747*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"step", "=", "80"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "number", " ", "of", " ", "states", " ", "having", " ", "value", " ", "x",
      " ", "when", " ", "n"}], " ", "=", " ", "step"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compt", "[", "x_", "]"}], ":=", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"step", " ", "x"}]], 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"step", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "x"}], ")"}], "/", "3"}]}], ")"}], "!"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"step", " ", "x"}], ")"}], "!"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"step", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", "x"}]}], ")"}], "/", "3"}]}], ")"}], "!"}]}]]}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"exact", " ", "probability", " ", "density", " ", "of", " ", "x"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"exactfreq", "[", "x_", "]"}], ":=", 
    RowBox[{
     FractionBox["step", "3"], 
     FractionBox[
      RowBox[{" ", 
       RowBox[{"compt", "[", "x", "]"}]}], 
      RowBox[{"Fibonacci", "[", "step", "]"}]]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "variance"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x0", "=", 
    FormBox[
     RowBox[{"2", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "\[Omega]"}], "-", "1"}], ")"}], "/", "5"}]}],
     TraditionalForm]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "the", " ", "value", " ", "of", " ", "x", " ", 
    "that", " ", "makes", " ", "f", " ", "stationnary"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"f", "''"}], "[", "x0", "]"}]}], "*", 
     RowBox[{"Log", "[", 
      RowBox[{"\[Omega]", "^", 
       RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "asymptotic", " ", "probability", " ", "density", " ", "of", " ", "x"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"freq", "[", "x_", "]"}], ":=", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"step", " ", "\[Sigma]"}], 
      RowBox[{"2", " ", "\[Pi]"}]]], 
    SuperscriptBox[
     RowBox[{"Fibonacci", "[", "step", "]"}], 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], "-", "1"}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"exactfreq", "[", "x", "]"}], ",", 
     RowBox[{"freq", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"1", "/", "2"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.638784365139797*^9, 3.638784389502637*^9}, {
   3.638784482143703*^9, 3.638784489998226*^9}, {3.6387845538168573`*^9, 
   3.638784763664557*^9}, {3.638784811649939*^9, 3.638784844128883*^9}, {
   3.63878584864167*^9, 3.638785857025633*^9}, 3.63885191774343*^9, {
   3.6388522270735292`*^9, 3.638852237247794*^9}, {3.638852285197522*^9, 
   3.6388524288614264`*^9}, {3.638852484763895*^9, 3.638852515311448*^9}, {
   3.63885263843143*^9, 3.638852771087302*^9}, {3.638853022110984*^9, 
   3.638853041710161*^9}, {3.638853157230781*^9, 3.6388531587980967`*^9}, {
   3.638853293007835*^9, 3.638853340402598*^9}, {3.63885339342268*^9, 
   3.638853427854576*^9}, {3.638853458257043*^9, 3.638853483409279*^9}, {
   3.638853704256863*^9, 3.63885373024017*^9}, {3.638853806992846*^9, 
   3.6388538077410917`*^9}, 3.638853874369492*^9, {3.638853956464325*^9, 
   3.6388539760639772`*^9}, {3.6388542586889753`*^9, 3.638854296688943*^9}, 
   3.638854343618617*^9, {3.6388544579213*^9, 3.638854520401705*^9}, {
   3.638854594626376*^9, 3.638854651473197*^9}, {3.638854710928803*^9, 
   3.638854757297799*^9}, {3.6388550939537888`*^9, 3.6388552541155357`*^9}, {
   3.638855498326974*^9, 3.638855507129644*^9}, {3.638855538503229*^9, 
   3.638855543333881*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
j1Owhw==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVl3c8Vv8XwEUDTTTs8ZC9spN7z6UipZKVJNlkhWSLhOzs7L333nvv/dge
21cllRkpP7+/7uv9Op97PueeeQ+L7mslA2IiIiLSk0RE/3/eN1gbavxyF42k
wp7HDNVK/ZevpjtHwwa67HE9gcyNUlfP4gNLaETgq4Rl9tvGJin+m5fT4mju
gMbn31USHG1SRFRfQo+Y5MFJ7iyJ5n671NB6nbsO+yMQdxJh5V/ulJIcFC4M
oVGBoFnTd1Ln+6TOZZMmbDM9AwVip4/Tk4NSsx9mA9TYtYCqRYn2hs2I1Dj/
M1QzQge4eHUalLXGpBpjWkQDaPSB3D9pNChpUiqLlJ+vPtYQEGQd25eblQp5
G8n2g+kVxP6TFJbOn5dyXCSmZ04xhaOo7xXBO4tSeo/NqZ6wW0DWV6s5e7cV
KXaC6akmFUsIrLH5yai2JhV9meX9swgr8Mzt/qL+7pvUhQdjh7/GrcGFqy2w
8sQPqQ/v/ex9aWxgdIOoo9/ml1Q9vWG5WrUNyO3664p92JT6XYFt456/Bb6r
OjusiVtSZhs7r2tibcGlzWb1LemuVLrPYN5HxA6yn5v36KjuSc2z5XxTJtgB
GwmH+VLJbymV59pG60wOwPeYOJ4u649U4K5kWmWjA5DSNf6XKv1XqjP4ypKH
jiPsVcbcNPnxTwrp7NZiSHGCAp1Ub125E4i9Xlrsl9vOwM/3Z1dGmhgp/uc6
VbbsDInS/VLf5UgQdlFRtUfs7+A9XdrrS+9OIdqDF8NoO96Bf2QZbiT/NBJj
+nVo1cgV6um5urc2ziCkQwPpDSpukDijayuSSI6kMda1XU9zg2//fMymKc8h
MmbZy347bnBO5mBh4/N5xPmMJ0494j2cNGNK0re4hNCoWkvXr74HA9pbxgKP
KZDy5JfabOLucJV+/s2RJCXyE5GM/znuDqFxtyXKRS8jAX4cdWqcH+D8GWWx
/LtXEO7JyzO19h9g1/+9Tb/uVUTf5geND40HRKUY735rp0aESUIciy09gGJO
XsOZhxYhDhGZnu7wAL1x5qt+yXRIQoFDLL+tJzR6OEs29jAiFij936d9nsCq
vRT5HzAjUn31L96zecHiS2Ppa9dZkKmvJEyjw14g9Oqf/FUqViTTId31L9dH
MEUnakgZ2BA7Uvl59vcfQbXImsRE5DpymT0wyUHAG+jG88jJAjmQpVJB4hQv
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
s8Qd2QThfzGk8es=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638784375023015*^9, 3.6387843900141687`*^9}, 
   3.6387844432076483`*^9, {3.6387845849385643`*^9, 3.638784764316794*^9}, {
   3.63878584955514*^9, 3.63878585753655*^9}, 3.638795698253481*^9, 
   3.638851416057928*^9, 3.638851930096963*^9, {3.6388522989570217`*^9, 
   3.638852328653894*^9}, {3.638852358748344*^9, 3.638852429682807*^9}, {
   3.638852487982975*^9, 3.638852515861109*^9}, {3.6388526557952337`*^9, 
   3.6388526806529903`*^9}, {3.638852728387805*^9, 3.638852771600533*^9}, 
   3.638853042541519*^9, 3.638853159567964*^9, 3.638853299955646*^9, 
   3.638853341200922*^9, {3.6388534294833727`*^9, 3.638853489077834*^9}, {
   3.6388537109726257`*^9, 3.6388537312344427`*^9}, 3.63885380846132*^9, 
   3.6388538749156103`*^9, {3.638853968212799*^9, 3.638853976993931*^9}, {
   3.6388542607024803`*^9, 3.638854298140304*^9}, 3.638854344282189*^9, {
   3.6388544691717777`*^9, 3.638854520930078*^9}, {3.638854702089624*^9, 
   3.638854725716618*^9}, 3.638854767168589*^9, {3.6388551783308372`*^9, 
   3.638855192637237*^9}, {3.6388552400018797`*^9, 3.6388552553225403`*^9}, {
   3.6388554989552402`*^9, 3.638855508080331*^9}, {3.638855539423462*^9, 
   3.638855543784656*^9}, 3.639124110677561*^9, 3.63912477231357*^9}]
}, Open  ]],

Cell[TextData[{
 "So, the typical value of x is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " such that\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", 
      SubscriptBox["x", "0"], ")"}]}], " ", "=", " ", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638783642907102*^9, 3.6387840264917507`*^9}, {
  3.6387841181557693`*^9, 3.638784154475835*^9}, {3.6387841971156397`*^9, 
  3.6387843127158957`*^9}, {3.6387844249723377`*^9, 3.638784433563871*^9}, {
  3.638784873516917*^9, 3.638784895872274*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], "[", "x", "]"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6387849018292837`*^9, 3.638784906894401*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ratnz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Solve was unable to solve the system with inexact \
coefficients. The answer was obtained by solving a corresponding exact system \
and numericizing the result. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::ratnz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6388553654047956`*^9, 3.639124111710307*^9, 
  3.639124772708631*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.34164078649987384`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6387849077291307`*^9, 3.638795698375495*^9, 
  3.638851416432148*^9, 3.63885536540606*^9, 3.639124111712367*^9, 
  3.6391247727106247`*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Omega]", "4"]}], ")"}], "/", "5"}]}], "=", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "2", "+", 
          RowBox[{"3", "\[Omega]"}]}], ")"}], "/", "5"}]}], "=", 
      RowBox[{"2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "\[Omega]"}], "-", "1"}], ")"}], "/", "5"}]}]}]}]}], 
   TraditionalForm]]],
 "\nWe have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["x", "0"], ")"}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
  3.6387854809595346`*^9, 3.63878552089725*^9}, {3.638852579881732*^9, 
  3.638852591278611*^9}, {3.638855378768705*^9, 3.638855380543936*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Closed]],

Cell[CellGroupData[{

Cell["Typical exponent", "Subsection",
 CellChangeTimes->{{3.638785617804412*^9, 3.6387856277885103`*^9}, {
  3.638785699124238*^9, 3.638785702492312*^9}}],

Cell[TextData[{
 "In the large size limit, almost all wavefunctions have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    SubscriptBox["x", "0"]}], TraditionalForm]]],
 ". Therefore they have the exponent ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], "(", 
    SubscriptBox["x", "0"], ")"}], TraditionalForm]]],
 ". We also compute the average exponent\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SubscriptBox["F", "n"]], 
      SubscriptBox["\[CapitalSigma]", "a"], 
      RowBox[{
       SubscriptBox["\[Chi]", "q"], "(", "a", ")"}]}], " ", "=", " ", 
     RowBox[{
      FractionBox["1", 
       SubscriptBox["F", "n"]], 
      SubscriptBox["\[CapitalSigma]", "x"], 
      RowBox[{"\[CapitalOmega]", "(", "x", ")"}], " ", 
      RowBox[{
       SubscriptBox["\[Chi]", "q"], "(", "x", ")"}]}]}]}], 
   TraditionalForm]]],
 ".\nThus, we obtain that the average exponent is the exponent of the typical \
wavefunction:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Tau]", "q"], "(", 
       SubscriptBox["x", "0"], ")"}], "+", "1", "-", 
      RowBox[{"f", "(", 
       SubscriptBox["x", "0"], ")"}]}], " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "q"], "(", 
      SubscriptBox["x", "0"], ")"}]}]}], TraditionalForm]]],
 ".\n\nThis is perhaps too crude a reasoning, since we neglect completely the \
variance of the probability density of x. More rigorously we write\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], " ", "=", " ", 
    RowBox[{"N", 
     RowBox[{"\[Integral]", 
      RowBox[{"dx", " ", 
       SuperscriptBox[
        SubscriptBox["F", "n"], 
        RowBox[{
         RowBox[{"f", "(", "x", ")"}], "-", "1"}]], 
       SuperscriptBox[
        SubscriptBox["F", "n"], 
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["\[Tau]", "q"], "(", "x", ")"}]}]]}]}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nWe let g(x) = - log(\[Phi])(f(x)-1) ~ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[Sigma]", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SubscriptBox["x", "0"]}], ")"}], "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nand ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["t", "q"], " ", "\[Cross]", " ", "x"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"log", "(", "\[Phi]", ")"}], " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "q"], "(", "x", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". (At leading order in \[Rho] \[Tau] is linear in x. At second order it is \
affine in x).\nThen [computation to be checked]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], "~", " ", 
    SuperscriptBox["e", 
     RowBox[{"-", 
      RowBox[{"n", "(", 
       RowBox[{
        RowBox[{"t", " ", 
         SubscriptBox["x", "0"]}], "-", 
        RowBox[{
         SuperscriptBox["\[Sigma]t", "2"], "/", "2"}]}], ")"}]}]]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and thus\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Tau]", "q"], "(", 
      SubscriptBox["x", "0"], ")"}], "-", 
     FractionBox[
      RowBox[{"\[Sigma]", " ", 
       SuperscriptBox[
        SubscriptBox["t", "q"], "2"]}], 
      RowBox[{"2", " ", 
       RowBox[{"log", "(", "\[Phi]", ")"}]}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
   3.6387854809595346`*^9, 3.63878552089725*^9}, {3.6387857125111732`*^9, 
   3.638785735244388*^9}, 3.6387863849251623`*^9, {3.638787217085743*^9, 
   3.6387874299972982`*^9}, {3.638789863215384*^9, 3.6387898769593678`*^9}, {
   3.638855784610023*^9, 3.638855790706057*^9}, {3.638855893819655*^9, 
   3.638855900059226*^9}, {3.638855993099423*^9, 3.638855993152772*^9}, {
   3.638857196732266*^9, 3.638857419923415*^9}, {3.638857463516534*^9, 
   3.63885754264712*^9}, {3.638857633836708*^9, 3.638857649884869*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "return", " ", "bands", " ", "and", " ", "intensities", " ", "ordered", 
    " ", "by", " ", "increasing", " ", "energy"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IntBands", "[", 
    RowBox[{"n_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"IntBands", "[", 
     RowBox[{"n", ",", "\[Rho]"}], "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ts", "=", "1."}], ",", 
        RowBox[{"tw", "=", "\[Rho]"}], ",", "vpp", ",", "vpa", ",", "wfp", 
        ",", "wfa", ",", "o", ",", "intensities", ",", "intp", ",", "inta", 
        ",", "bands"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpp", ",", "wfp"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hp", "[", 
          RowBox[{
           RowBox[{"n", "-", "2"}], ",", "tw", ",", "ts"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpa", ",", "wfa"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"ha", "[", 
          RowBox[{
           RowBox[{"n", "-", "2"}], ",", "tw", ",", "ts"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpp", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpp", "=", 
        RowBox[{"vpp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfp", "=", 
        RowBox[{"wfp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "intensity", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"intp", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfp", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpa", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpa", "=", 
        RowBox[{"vpa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfa", "=", 
        RowBox[{"wfa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inta", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfa", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"intensities", "=", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{"intp", "+", "inta"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
         SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
         " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
         " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
         "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"bands", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"intensities", ",", "bands"}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.633857622837657*^9, 3.633857636360725*^9}, {
   3.633857697432269*^9, 3.633857736618175*^9}, {3.633857875244348*^9, 
   3.633857880154935*^9}, {3.633857983696754*^9, 3.633858012847005*^9}, {
   3.633858113513686*^9, 3.63385817326226*^9}, {3.6338582191389923`*^9, 
   3.633858247882305*^9}, {3.6338584245242987`*^9, 3.633858441933634*^9}, {
   3.6338588071014423`*^9, 3.633858831973674*^9}, {3.633860127767949*^9, 
   3.633860127878072*^9}, {3.633860351256763*^9, 3.633860351463883*^9}, {
   3.633860667887651*^9, 3.6338606714718103`*^9}, {3.633862354799317*^9, 
   3.633862354917128*^9}, {3.6338625592436666`*^9, 3.633862559419834*^9}, {
   3.633864977426675*^9, 3.633865033792412*^9}, {3.633865157785954*^9, 
   3.633865170565158*^9}, {3.633865213101501*^9, 3.6338652143434143`*^9}, {
   3.6338652773363457`*^9, 3.6338654482999268`*^9}, {3.633865502113283*^9, 
   3.6338656219671173`*^9}, {3.633868107793435*^9, 3.6338681310708113`*^9}, 
   3.634029627471177*^9, {3.6387899522056437`*^9, 3.638790019803317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"IntBands", "[", 
    RowBox[{"19", ",", "0.1"}], "]"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.6387900446858387`*^9, 3.6387901090412893`*^9}, {
  3.638790309874659*^9, 3.638790314497367*^9}, {3.638790673699335*^9, 
  3.638790673858129*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"278.83664`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.6387900634503593`*^9, 3.6387901161600113`*^9}, {
   3.6387903119967012`*^9, 3.6387903375934353`*^9}, 3.638790774026194*^9, 
   3.638851524480652*^9, 3.642237886703383*^9, 3.642304647877743*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "averaged", " ", "q", " ", "moment", " ", "of", " ", "the", " ", 
    "intensity"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"avqInt", "[", 
     RowBox[{"q_", ",", "n_", ",", "\[Rho]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"avqInt", "[", 
      RowBox[{"q", ",", "n", ",", "\[Rho]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IntBands", "[", 
           RowBox[{"n", ",", "\[Rho]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "^", "q"}], ",", "2"}], "]"}], "/", 
      
      RowBox[{"Fibonacci", "[", "n", "]"}]}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6387903168578157`*^9, 3.6387904975080957`*^9}}],

Cell[TextData[{
 "We expect ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Log", " ", 
    RowBox[{
     SubscriptBox[
      SuperscriptBox["\[Chi]", "n"], "q"], " ", "~", " ", 
     RowBox[{"-", 
      SubscriptBox["\[Tau]", "q"]}]}], " ", "Log", " ", 
    SubscriptBox["F", "n"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and indeed, Log ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox["\[Chi]", "n"], "q"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is a linear function of n ~ Log ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":"
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
   3.6387854809595346`*^9, 3.63878552089725*^9}, {3.6387857125111732`*^9, 
   3.638785735244388*^9}, 3.6387863849251623`*^9, {3.638787217085743*^9, 
   3.6387874299972982`*^9}, {3.638789863215384*^9, 3.6387898769593678`*^9}, {
   3.638790749617064*^9, 3.63879076400309*^9}, {3.6387909075233727`*^9, 
   3.6387909837752733`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "19", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avIntN", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"avqInt", "[", 
       RowBox[{".8", ",", "#", ",", "0.1"}], "]"}], "&"}], ",", "nValues"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Log", "@", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.638790563885058*^9, 3.6387906077785273`*^9}, {
   3.6387907799234743`*^9, 3.638790780082123*^9}, {3.638790991634129*^9, 
   3.638791068978476*^9}, {3.6387911202921457`*^9, 3.6387911701149406`*^9}, {
   3.638791215428357*^9, 3.638791308179717*^9}, {3.638791354820362*^9, 
   3.638791400499333*^9}, {3.638791577172716*^9, 3.638791581379018*^9}, {
   3.638793284598233*^9, 3.6387933166129427`*^9}, {3.638793376277965*^9, 
   3.638793377205214*^9}, 3.638793482806005*^9, 3.638851382497431*^9, {
   3.639128252490878*^9, 3.639128252890016*^9}, {3.639128305131393*^9, 
   3.639128332729555*^9}, {3.639128382203203*^9, 3.639128385210931*^9}, {
   3.639128487434729*^9, 3.639128510345064*^9}, {3.639128700603148*^9, 
   3.639128743562126*^9}, {3.639131452828783*^9, 3.639131461931829*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0.6931471805599453, 0.13862943611198894`}, {
      1.0986122886681098`, 0.11357678762026249`}, {1.6094379124341003`, 
      0.2386941604788886}, {2.0794415416798357`, 0.24080848508260916`}, {
      2.5649493574615367`, 0.3354296648502254}, {3.044522437723423, 
      0.36218128182314036`}, {3.5263605246161616`, 0.43756093167725807`}, {
      4.007333185232471, 0.4783223235009538}, {4.48863636973214, 
      0.5435173404453367}, {4.969813299576001, 0.5915024402328131}, {
      5.4510384535657, 0.6515701546035508}, {5.932245187448011, 
      0.7031583966620224}, {6.413458957167357, 0.7606902978195487}, {
      6.894670039433482, 0.8140559630942782}, {7.3758821482150125`, 
      0.8703405834585796}, {7.857093864902493, 0.9245799775919001}, {
      8.338305731356565, 0.9802521210734262}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 8.338305731356565}, {0, 0.9802521210734262}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.639128385674492*^9, {3.639128488218371*^9, 3.639128510768248*^9}, {
   3.639128703436467*^9, 3.639128744260952*^9}, {3.639131450018265*^9, 
   3.639131462460709*^9}, 3.642237888334412*^9, 3.64230468550543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"glue", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1.1486983549970349`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1.1202779090643658`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1.2695901863458385`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1.2722773518825243`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "1.3985411601253945`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "1.436459322323343`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "1.5489246743372227`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "1.6133654251765528`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", "1.722053269929265`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"144", ",", "1.8067008372883324`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"233", ",", "1.918550886774474`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"377", ",", "2.020122991946956`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"610", ",", "2.1397527774828213`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"987", ",", "2.2570439335168784`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1597", ",", "2.3877239343311683`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2584", ",", "2.5208092415998955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4181", ",", "2.6651280921874747`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.639128356321512*^9, 3.642237888510112*^9, 
  3.642304685792419*^9}]
}, Open  ]],

Cell[TextData[{
 "For large values of q, the 3-periodic behaviour of the Fibonacci numbers \
(odd, odd, even...) is clearly visible.\nIt turns out that when ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]]],
 " is even, there is a gap at E=0, while there is a band when ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]]],
 " is odd. Since there is an energy level at E=0 for the quasicrystalline \
chain, we guess that choosing odd approximant is a better idea. If ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]]],
 " is odd and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", 
    RowBox[{"n", "-", "2"}]], TraditionalForm]]],
 " as well, then the 2 lateral clusters have also a band in their center. \
This is perhaps even better."
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
   3.6387854809595346`*^9, 3.63878552089725*^9}, {3.6387857125111732`*^9, 
   3.638785735244388*^9}, 3.6387863849251623`*^9, {3.638787217085743*^9, 
   3.6387874299972982`*^9}, {3.638789863215384*^9, 3.6387898769593678`*^9}, {
   3.638790749617064*^9, 3.63879076400309*^9}, {3.6387909075233727`*^9, 
   3.6387909837752733`*^9}, {3.638791416320141*^9, 3.6387914635681458`*^9}, {
   3.638792148912303*^9, 3.638792351792663*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "19", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avIntN", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"avqInt", "[", 
       RowBox[{"10.", ",", "#", ",", "0.1"}], "]"}], "&"}], ",", "nValues"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Log", "@", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.638790563885058*^9, 3.6387906077785273`*^9}, {
   3.6387907799234743`*^9, 3.638790780082123*^9}, {3.638790991634129*^9, 
   3.638791068978476*^9}, {3.6387911202921457`*^9, 3.6387911701149406`*^9}, {
   3.638791215428357*^9, 3.638791308179717*^9}, {3.638791354820362*^9, 
   3.638791400499333*^9}, {3.638791526162737*^9, 3.638791554131571*^9}, {
   3.6387915928524446`*^9, 3.6387916451232243`*^9}, 3.638851386123867*^9, {
   3.6388714553365927`*^9, 3.638871500711956*^9}, {3.639128760730237*^9, 
   3.639128765721752*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0.6931471805599453, -6.23832462503951}, {
      1.0986122886681098`, -1.2848746022911515`}, {
      1.6094379124341003`, -1.8092528237138148`}, {
      2.0794415416798357`, -7.170655978752368}, {
      2.5649493574615367`, -2.946906123378745}, {
      3.044522437723423, -3.444269628778972}, {
      3.5263605246161616`, -8.424187905530601}, {
      4.007333185232471, -4.585003009661572}, {
      4.48863636973214, -5.088300124840333}, {
      4.969813299576001, -9.78499182304022}, {
      5.4510384535657, -6.224439133748406}, {
      5.932245187448011, -6.731809723563897}, {
      6.413458957167357, -11.207675399566467`}, {
      6.894670039433482, -7.863819157886625}, {
      7.3758821482150125`, -8.375331618643646}, {
      7.857093864902493, -12.669736221601545`}, {
      8.338305731356565, -9.503221471113013}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 8.338305731356565}, {-12.669736221601545`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638791536379951*^9, 3.6387915547642307`*^9}, {
   3.638791593354684*^9, 3.638791645588832*^9}, 3.638793720109568*^9, 
   3.6388515609879923`*^9, {3.6388714567827597`*^9, 3.638871501461339*^9}, {
   3.639128756602191*^9, 3.639128766086338*^9}, 3.642237891391409*^9, 
   3.6423046887908993`*^9}]
}, Open  ]],

Cell[TextData[{
 "For q into the range [0,1) it is safe to disregard the 3-periodicity \
dependance. Below we compute the slope ie ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    SubscriptBox["\[Tau]", "q"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for n=13, 16, 19 for different values of q between 0 and 1."
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638793401569675*^9, 3.638793517316625*^9}, {3.638793622481604*^9, 
  3.63879362593719*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "0.9", ",", "0.05"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"{", 
    RowBox[{"13", ",", "16", ",", "19"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avIntN", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"avqInt", "[", 
        RowBox[{"0.2", ",", "#", ",", "0.1"}], "]"}], "&"}], ",", "nValues"}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"Fibonacci", "[", "nValues", "]"}], "]"}], ",", 
     RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"dat", ",", "n", ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "dat", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fit", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"fit", "[", "\"\<FitResiduals\>\"", "]"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.638793532816143*^9, 3.6387935726130323`*^9}, {
   3.638793630900609*^9, 3.638793663204536*^9}, {3.638793732054772*^9, 
   3.638793733861661*^9}, {3.6387938453818703`*^9, 3.638793886678442*^9}, {
   3.638793924036399*^9, 3.638793989935809*^9}, {3.638794032839847*^9, 
   3.6387940978147383`*^9}, {3.638794139942824*^9, 3.638794224181072*^9}, {
   3.638794270056518*^9, 3.638794297205297*^9}, {3.638795382778778*^9, 
   3.638795383179003*^9}, 3.638851388910232*^9, {3.638871397563298*^9, 
   3.638871445291191*^9}, 3.6388715080275106`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{5.4510384535657, 3.6055356886873207`}, {6.894670039433482, 
       4.544782127765326}, {8.338305731356565, 
       5.489856458007559}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVkGs4lHkAR0djKKkMYzKvwfBK7ZCoFLX8fyISpVQrKhqXlgjR1nbZVG65
VZs2lXSxalVMqbSU1ZSkGZdHdNmKVYRC24y7aWjbD+c5n88xDYr2CZ3AYDBW
fON/5+4P0rANSXfyslYmZHILyDn/3kW+gnDCOPGDzQf+FfJqRVqsQLCblIze
bF5CXyW73P2msgSpxLgqwm5kTiFxe4SNwyanyWhRVFyx+Q1SdGh+gtzkCql1
fWvOd7pN3onE3E8mZSQ2tjJFEVNO9q6O2NxjIiWtnY8sVkY8JpNGc6SR1q9J
UrLQT5P3jGx/GJ/RG9tOEsuDTpwLbSbW+VlPb4s/kvp1UYGurm2kY2UYv9Ve
TnQkRp3jRZ0km0o2uri5n1QvTupaW9tNHGJLrzNrh8gCYaC/fMlnUvkyZ1X0
TCU5pYzM829UENuMcScDjzHSEKbxPK2ln7h3Lmq18WUgRMdP0sIZIl2z7ywd
6FVDsUQzfL/FCNmrSp1XvocJ19bkuluzlUST/SF8rZCFuQvvd08WqQirjuU+
+S8NNGevqSqOGidf6osij2+fCPmpVVaOaxno8BXzjI21wM1tbeqJUIPz4aht
T4om4/Qlvv+DmAn4bbx0kkvgFEiX3/m+IJ2JDfxKr+b+qVg/MDZWkqUObYll
r9k6HWQtyjN8XsxCqF3eoJ8VG31/WmdXyDSwa//PPoJBNsQO4Yr6Bk0kdWc1
1dfrwmA9o0DeOxFewmkF2mf00LpnqaPD0CRkFi2QeIk4kD2LtfFSakG25nfV
Dgd9BNWo4mM42pDURWdYMbnwfTxffM9wCm5uPYjaFi6+bJLaGzhMhbEnsY+6
PR0PrNxMyeppcPm6MeH8PgP0xdvvcLPUQciL+32l63h4s1DFGirVgdPBQyUi
AYU+BVfTwZGN49GKe9pdFHKqZyx8V8FG24FLnecrDJHTE6R/3FMXPaFlIQ9T
+JCxh4NefOuQb9PVrBMZwTu5LIDepAexR41qy2xjMMcapcw2PXSG2SxgDhrD
4+jbYI8QDqhrr7NS6kzQEc0vzFZwkLA5Nq/OU4AbPteDd/+kj2EVL9OzTICn
CTHSYHUuZt3LPi0zN0Viw4yAW8e4sAuu8manmiLUZG7QSb3pkJzVN6gdNEVu
eSTn0MXpmCXRT1u5wQzqG8ft1CwMsILVa9RYYYYxbmJyxx8GkL95XykV0vAS
2Cc1zuch+mymXupRGjJLl36fUh5q1cw/L/+VRn7TsOm5uzwIf7wr086icWBv
4aqP5Ty8t+06eOwkDbsafXH8Ax7WV0OenUvj/NYPYYUyHpb09ddevkZj55XM
f1gtPHCX+Sc/qqZhPvNvaakahbgiuShZSmO8PmOEqU6hQTfFcVkNjVc7nWd6
a1BIb7k1UFNP4+jjq4kdWhQYcVOCm57T+BL6C9HlUOjOlZC2dhqN+WYlERYU
3Jm+hvkdNAq9XrbfmUUhP+zTUGgXjZSBdN0JlhQC51Hij900HF0Ho0/NofDs
SRxfoaBR0F4trLKnYGutNXKzn0ZC+j4/ncUUjmRdaNoxSCNgnu3hDY4UPALq
0kZGaHASznQonClcrgzecldJ41+hN8fRlYL6d0rnfapv/xqZLofdKIiOHDNy
GqdxaU/p9qZlFCr6LUa/fqURb7btgrEnhf8AFpkltw==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.405924902350218, 3.511319650221309},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{5.4510384535657, 8.338305731356565}, {3.6055356886873207`, 
   5.489856458007559}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638793703510494*^9, {3.638793831218244*^9, 3.6387938578098917`*^9}, {
   3.638793980799843*^9, 3.638793990633048*^9}, {3.6387940412908583`*^9, 
   3.638794098348785*^9}, {3.638794150287819*^9, 3.638794233275392*^9}, {
   3.6387942705643187`*^9, 3.638794298019896*^9}, 3.638795384749449*^9, 
   3.6388515627131023`*^9, {3.638871394124557*^9, 3.638871445774756*^9}, 
   3.6388715096993856`*^9, 3.6391287835783253`*^9, 3.642237892630571*^9, 
   3.6423046908322773`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 0.0009708699514212604}, {
    2., -0.001941737141446076}, {3., 0.0009708671900243715}, {1., 0.}, {2., 
    0.}, {3., 0.}, {1., 0.0009708699514212604}, {2., -0.001941737141446076}, {
    3., 0.0009708671900243715}}, {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{5, 2}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{4, 1}], 
       LineBox[{6, 3}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{7, 8, 9}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 3.}, {-0.001941737141446076, 0.0009708699514212604}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638793703510494*^9, {3.638793831218244*^9, 3.6387938578098917`*^9}, {
   3.638793980799843*^9, 3.638793990633048*^9}, {3.6387940412908583`*^9, 
   3.638794098348785*^9}, {3.638794150287819*^9, 3.638794233275392*^9}, {
   3.6387942705643187`*^9, 3.638794298019896*^9}, 3.638795384749449*^9, 
   3.6388515627131023`*^9, {3.638871394124557*^9, 3.638871445774756*^9}, 
   3.6388715096993856`*^9, 3.6391287835783253`*^9, 3.642237892630571*^9, 
   3.642304691083398*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"linFit", "[", 
   RowBox[{"q_", ",", "\[Rho]_", ",", "nv_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"avIntN", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avIntN", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"avqInt", "[", 
          RowBox[{"q", ",", "#", ",", "\[Rho]"}], "]"}], "&"}], ",", "nv"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"glue", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", "nv", "]"}], "]"}], ",", 
        RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"data", ",", "n", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6387943612061357`*^9, 3.638794483189991*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"linFit", "[", 
      RowBox[{"#", ",", "0.1", ",", "nValues"}], "]"}], "&"}], "/@", 
    "qValues"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.638794486975334*^9, 3.6387945321143713`*^9}, {
   3.638794563124834*^9, 3.6387945633640614`*^9}, 3.6387947892358313`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"extract", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "q"], "'"}], "s", " ", "from", " ", "the", " ", 
    "fits"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tauqs", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
      "fits"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["D", "q"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        FractionBox["#1", 
         RowBox[{"#2", "-", "1"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["\[CapitalDelta]", "q"]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]qs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", "-", 
          RowBox[{"(", 
           RowBox[{"#2", "-", "1"}], ")"}]}], ")"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6387945939297028`*^9, 3.638794594275021*^9}, {
  3.638794633620426*^9, 3.638794876943446*^9}, {3.638795119798197*^9, 
  3.6387952198642263`*^9}, {3.638795307222921*^9, 3.638795339608634*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FittedModel", "::", "varzero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The estimated variance is zero. Properties requiring \
division by the variance or standard error will not be computed. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FittedModel\\\", ButtonNote -> \
\\\"FittedModel::varzero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6387948384494534`*^9, 3.638794877698139*^9, 3.638795122100992*^9, {
   3.63879519399751*^9, 3.638795220236808*^9}, 3.638795341427099*^9, 
   3.638795432269437*^9, 3.638851584368726*^9, 3.639128789451413*^9, 
   3.6391288237222*^9, 3.642237964224798*^9, 3.642304711565391*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"glue", "[", 
    RowBox[{"qValues", ",", "\[CapitalDelta]qs"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63879534528953*^9, 3.638795370182397*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQ5mzQSBlfYMr/OPhTqstIfwd9r/MFrBsFpou72J
MQgctn9Q7qQsmbwfKn/S/gHr7he/7hyyh5hywf7HzLzmcOWjUPWX7Wv2pi4K
m3vMPj0NBK7Ze7nH7AhKPg7Vf9Peaj3T/sye4/Znz4DAHXsltXe273WPQ817
YN9TJaIpH30Mqv6hPUe+0ScGVZj5j+0NLPUv5Mw6DNX/xN5UyXSH+omDUPue
2TM1X3gkWbQfat4L+39XZv6tebMLat5L+5Pf9vuu59sGNe+1vWhpB7ft0w1Q
897YiyXHOJ7+ssweAB73hnw=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 0.9}, {0, 0.18397256685909175`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638795356448955*^9, 3.638795370600136*^9}, 
   3.638795433312377*^9, 3.638851584511702*^9, 3.6391288252964373`*^9, 
   3.642237964397438*^9, 3.64230471184597*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"glue", "[", 
    RowBox[{"qValues", ",", "dqs"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6388672000991087`*^9, 3.6388672128680058`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQo+2M+aCQIr7b/e4Pm7LewdlL/TvvpOmfLC02/s
TYxB4LD9To9W/bik11D5k/Zafa7TP0q9soeYc8F+7ZlWTYsvL6DqL9vPOafC
n/jmuX16Gghcs+d21/6ix/gcqv+m/YqH+1w1DZ7Znz0DAnfsFQ5MPnOw7CnU
vAf2uw6VZhdcegJV/9De5PfjqcccnkDNf2zvWPPob/X+x1D9T+y3Gii/KvV5
DLXvmf0+Oc2eU08fQc17Yd8oatx4sPMR1LyX9gdZM/IvmT2CmvfaPmdectmi
1w+h5r2xF3RS+86w/KE9ADf0jv0=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5292180126661767},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 0.9}, {0.551636202539216, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.638867213257455*^9, 3.6391288273352957`*^9, 
  3.642237964489317*^9, 3.6423047119413033`*^9}]
}, Open  ]],

Cell[TextData[{
 "It is also possible to derive recursion relations on ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["\[Chi]", "q"], "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " using the second-order perturbation theory on wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Chi]", "q"], "n"], "=", 
    RowBox[{
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\[Lambda]", "2"], ")"}], "q"], 
      SuperscriptBox["\[Omega]", "2"], 
      SuperscriptBox[
       SubscriptBox["\[Chi]", "q"], 
       RowBox[{"n", "-", "2"}]]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Lambda]", "'"}], ")"}], "q"], 
      SuperscriptBox["\[Omega]", "3"], 
      SuperscriptBox[
       SubscriptBox["\[Chi]", "q"], 
       RowBox[{"n", "-", "3"}]]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nwith \[Lambda] = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox["\[Rho]", "2"], "/", "2"}]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Lambda]", "'"}], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["\[Rho]", "2"]}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nUsing that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], "~", 
    SuperscriptBox[
     SubscriptBox["F", "n"], 
     RowBox[{"-", 
      SubscriptBox["\[Tau]", "q"]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we arrive at an implicit equation on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], ":"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638867467730092*^9, 3.6388674710259113`*^9}, {3.6388675179860086`*^9, 
  3.638867641799417*^9}, {3.6388677347913218`*^9, 3.638867756321891*^9}, {
  3.6388678316498957`*^9, 3.638867853912799*^9}, {3.638867951122116*^9, 
  3.638867961577031*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox["5"], "-", "1"}], "2"], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.642339138730516*^9, 3.642339149540248*^9}}],

Cell[BoxData["0.6180339887498949`"], "Output",
 CellChangeTimes->{3.642339150915593*^9, 3.642939688337592*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lamb", "[", 
   RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
  RowBox[{"2", "+", 
   SuperscriptBox["\[Rho]", 
    RowBox[{"2", "q"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"barlamb", "[", 
   RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
  RowBox[{"1", "+", 
   RowBox[{"2", 
    SuperscriptBox["\[Rho]", 
     RowBox[{"2", "q"}]]}]}]}], "\n", 
 RowBox[{
  RowBox[{"gam", "[", "\[Rho]_", "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    SuperscriptBox["\[Rho]", 
     RowBox[{"1.", "+", "0.035"}]], "/", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gam", "[", 
     RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[Rho]", 
       RowBox[{"q", " "}]]}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"gam", "[", "\[Rho]_", "]"}], ":=", "1"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gam", "[", "\[Rho]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Rho]", "2"]}], ")"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lambp", "[", "\[Rho]_", "]"}], ":=", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"gam", "[", 
         RowBox[{"\[Rho]", ",", "1."}], "]"}], 
        SuperscriptBox["\[Rho]", "2"]}], "-", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"gam", "[", 
             RowBox[{"\[Rho]", ",", "1."}], "]"}], 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"]}]]}], 
      RowBox[{"2", 
       RowBox[{"gam", "[", 
        RowBox[{"\[Rho]", ",", "1."}], "]"}], 
       SuperscriptBox["\[Rho]", "2"]}]], ")"}], 
    RowBox[{"-", "1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"barlambp", "[", "\[Rho]_", "]"}], ":=", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["\[Rho]", "2"]}], ")"}], "4"], "+", 
         RowBox[{"4", 
          SuperscriptBox["\[Rho]", "4"]}]}]], "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"]}], 
      RowBox[{"2", 
       SuperscriptBox["\[Rho]", "4"]}]], ")"}], 
    RowBox[{"-", "1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"lambp", "[", "\[Rho]_", "]"}], ":=", 
     RowBox[{"2", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", "\[Omega]"}]}], ")"}], 
       RowBox[{"gam", "[", 
        RowBox[{"\[Rho]", ",", "1."}], "]"}], 
       SuperscriptBox["\[Rho]", "2"]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"barlambp", "[", "\[Rho]_", "]"}], ":=", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["\[Rho]", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", "\[Omega]"}]}], ")"}], 
       SuperscriptBox["\[Rho]", "4"]}]}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6422393298880663`*^9, 3.6422393888860073`*^9}, {
   3.642239444566168*^9, 3.642239458133951*^9}, 3.642239508422871*^9, {
   3.642241949079645*^9, 3.642242163689555*^9}, {3.6422422145717278`*^9, 
   3.642242271052162*^9}, 3.642242344555901*^9, {3.642242459132806*^9, 
   3.642242463769923*^9}, 3.6422438899873953`*^9, {3.642305312473152*^9, 
   3.642305316168498*^9}, {3.642305368532114*^9, 3.642305389271244*^9}, {
   3.64230645520813*^9, 3.642306498582717*^9}, {3.642321025872902*^9, 
   3.642321038240449*^9}, {3.642321104048305*^9, 3.642321106032776*^9}, {
   3.6423218952501173`*^9, 3.6423218957873898`*^9}, {3.642321964177926*^9, 
   3.64232196878554*^9}, {3.642322006353135*^9, 3.642322008241644*^9}, {
   3.642322099642376*^9, 3.64232212716366*^9}, {3.642322215754745*^9, 
   3.642322216385675*^9}, {3.642322275874754*^9, 3.6423223018891172`*^9}, {
   3.642322339441791*^9, 3.6423223815697412`*^9}, {3.642322416450615*^9, 
   3.642322512668605*^9}, {3.6425099293184834`*^9, 3.642509942662324*^9}, {
   3.6425099879245787`*^9, 3.642510048849806*^9}, {3.64251109576607*^9, 
   3.642511274198983*^9}, {3.6427444507110043`*^9, 3.6427444919095287`*^9}, {
   3.642744594633088*^9, 3.642744596805193*^9}, {3.642851706405497*^9, 
   3.642851713113356*^9}, {3.642851775013575*^9, 3.642851785414632*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"2", "+", " ", 
         SuperscriptBox["\[Rho]", 
          RowBox[{"2", "q"}]]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"lamb", "[", 
        RowBox[{"\[Rho]", ",", "1."}], "]"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"barlamb", "[", 
       RowBox[{"\[Rho]", ",", "q"}], "]"}], 
      SuperscriptBox[
       RowBox[{"barlamb", "[", 
        RowBox[{"\[Rho]", ",", "1."}], "]"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqp", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"2", "+", " ", 
        SuperscriptBox["\[Rho]", 
         RowBox[{"2", "q"}]]}], ")"}], 
      SuperscriptBox[
       RowBox[{"lambp", "[", "\[Rho]", "]"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"barlamb", "[", 
       RowBox[{"\[Rho]", ",", "q"}], "]"}], 
      SuperscriptBox[
       RowBox[{"barlambp", "[", "\[Rho]", "]"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cm", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"2", "\[Omega]"}]}], ")"}], 
        RowBox[{"gam", "[", 
         RowBox[{"\[Rho]", ",", "q"}], "]"}], 
        SuperscriptBox["\[Rho]", 
         RowBox[{"2", "q"}]]}]}], ")"}], 
     SuperscriptBox["\[Omega]", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Tau]q"}]]}], "+", 
    RowBox[{
     RowBox[{"gam", "[", 
      RowBox[{"\[Rho]", ",", "q"}], "]"}], 
     SuperscriptBox["\[Rho]", 
      RowBox[{"2", "q"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Omega]", "3"], 
         SuperscriptBox[
          RowBox[{"barlambp", "[", "\[Rho]", "]"}], "q"]], 
        SuperscriptBox["\[Omega]", 
         RowBox[{
          RowBox[{"-", "5"}], "\[Tau]q"}]]}], "-", 
       RowBox[{
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox[
          RowBox[{"lambp", "[", "\[Rho]", "]"}], "q"]], 
        SuperscriptBox["\[Omega]", 
         RowBox[{
          RowBox[{"-", "4"}], "\[Tau]q"}]]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ca", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        SuperscriptBox["\[Rho]", 
         RowBox[{"2", "q"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"2", "\[Omega]"}]}], ")"}], 
        SuperscriptBox["\[Rho]", 
         RowBox[{"4", "q"}]]}]}], ")"}], 
     SuperscriptBox["\[Omega]", 
      RowBox[{
       RowBox[{"-", "3"}], "\[Tau]q"}]]}], "+", 
    RowBox[{
     SuperscriptBox["\[Rho]", 
      RowBox[{"4", "q"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Omega]", "3"], 
         SuperscriptBox[
          RowBox[{"barlambp", "[", "\[Rho]", "]"}], "q"]], 
        SuperscriptBox["\[Omega]", 
         RowBox[{
          RowBox[{"-", "6"}], "\[Tau]q"}]]}], "-", 
       RowBox[{
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["\[Omega]", "2"]}], 
         SuperscriptBox[
          RowBox[{"lambp", "[", "\[Rho]", "]"}], "q"]], 
        SuperscriptBox["\[Omega]", 
         RowBox[{
          RowBox[{"-", "5"}], "\[Tau]q"}]]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqtest", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", 
       SuperscriptBox["\[Omega]", "2"]}], 
      SuperscriptBox[
       RowBox[{"lambp", "[", "\[Rho]", "]"}], "q"]], 
     RowBox[{"Cm", "[", 
      RowBox[{"q", ",", "\[Tau]q", ",", "\[Rho]"}], "]"}]}], "+", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[Omega]", "3"], 
      SuperscriptBox[
       RowBox[{"barlambp", "[", "\[Rho]", "]"}], "q"]], 
     RowBox[{"Ca", "[", 
      RowBox[{"q", ",", "\[Tau]q", ",", "\[Rho]"}], "]"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqref", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["2", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["\[Rho]", "2"]}], ")"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", 
          SuperscriptBox["\[Rho]", "2"]}]}], ")"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "-", "1"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.638867969725889*^9, 3.6388680660065603`*^9}, {
   3.6388688884558153`*^9, 3.6388688948391027`*^9}, {3.642238461927454*^9, 
   3.642238478295353*^9}, {3.642238516839521*^9, 3.6422385260246696`*^9}, {
   3.642239402217071*^9, 3.642239495096859*^9}, {3.642242499899906*^9, 
   3.6422425093096123`*^9}, {3.642246637136801*^9, 3.6422466397920322`*^9}, {
   3.642249890479804*^9, 3.642249911294969*^9}, 3.642249963104288*^9, {
   3.6422519710913277`*^9, 3.642251986770997*^9}, {3.642252042516474*^9, 
   3.6422521325137243`*^9}, 3.642305211913117*^9, {3.642305248840691*^9, 
   3.6423053198001738`*^9}, {3.642305626149872*^9, 3.642305705464843*^9}, {
   3.642305764169845*^9, 3.642305778344928*^9}, {3.642305814152947*^9, 
   3.642305823080777*^9}, {3.64230608013612*^9, 3.6423061216453657`*^9}, {
   3.642306167000168*^9, 3.64230621934931*^9}, {3.642306419897398*^9, 
   3.642306430617032*^9}, {3.642306504356833*^9, 3.642306539413962*^9}, {
   3.6423065930776052`*^9, 3.642306593236971*^9}, {3.64230665514177*^9, 
   3.642306657108635*^9}, {3.64230690603798*^9, 3.6423069061843157`*^9}, {
   3.642321192449141*^9, 3.642321208623987*^9}, {3.6423213507692747`*^9, 
   3.642321359167994*^9}, {3.642321522896913*^9, 3.6423215426557837`*^9}, {
   3.6423215859501247`*^9, 3.6423217059231977`*^9}, {3.642321792515224*^9, 
   3.642321796480528*^9}, {3.642321831652783*^9, 3.6423218492392*^9}, {
   3.642321942132619*^9, 3.6423219563235273`*^9}, {3.6423219866289663`*^9, 
   3.6423219872488937`*^9}, {3.6423220232158413`*^9, 3.642322069891445*^9}, {
   3.642322194660466*^9, 3.642322209990391*^9}, {3.6423222457635403`*^9, 
   3.64232224859836*^9}, {3.642338997226899*^9, 3.642339109484791*^9}, {
   3.6423391727512703`*^9, 3.642339183392261*^9}, {3.642510057874157*^9, 
   3.642510090878544*^9}, {3.642510133495887*^9, 3.6425102506780767`*^9}, {
   3.6425103608711863`*^9, 3.6425105420437927`*^9}, {3.642510586834497*^9, 
   3.642510590930904*^9}, {3.642739357589437*^9, 3.642739364276903*^9}, {
   3.64274451502008*^9, 3.642744517502441*^9}, {3.642744567484312*^9, 
   3.642744568155998*^9}, 3.642744643798568*^9, {3.642851426440157*^9, 
   3.6428514363285723`*^9}, {3.642851959993875*^9, 3.642851960312954*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gamM", "[", 
    RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[Rho]", 
       RowBox[{"1.27", "q"}]]}], ")"}], 
    RowBox[{"-", "1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gamA", "[", 
    RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{"2", " ", 
    RowBox[{"gamM", "[", 
     RowBox[{"q", ",", "\[Rho]"}], "]"}], " ", 
    FractionBox[
     RowBox[{"1", "-", " ", 
      SuperscriptBox[
       RowBox[{"lambp", "[", 
        SuperscriptBox["\[Rho]", "q"], "]"}], 
       RowBox[{"-", "1"}]]}], 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"barlambp", "[", 
        SuperscriptBox["\[Rho]", "q"], "]"}], 
       RowBox[{"-", "1"}]]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cma", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"gamA", "[", 
         RowBox[{"q", ",", "\[Rho]"}], "]"}], 
        SuperscriptBox["\[Rho]", 
         RowBox[{"2", "q"}]]}]}], ")"}], 
     SuperscriptBox["\[Omega]", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Tau]q"}]]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"gamA", "[", 
        RowBox[{"q", ",", "\[Rho]"}], "]"}], 
       SuperscriptBox["\[Rho]", 
        RowBox[{"2", "q"}]]}], 
      SuperscriptBox[
       RowBox[{"barlambp", "[", "\[Rho]", "]"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{
       RowBox[{"-", "5"}], "\[Tau]q"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cmm", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", 
        RowBox[{"gamM", "[", 
         RowBox[{"q", ",", "\[Rho]"}], "]"}], 
        SuperscriptBox["\[Rho]", 
         RowBox[{"2", "q"}]]}]}], ")"}], 
     SuperscriptBox["\[Omega]", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Tau]q"}]]}], "-", 
    RowBox[{"2", 
     FractionBox[
      RowBox[{
       RowBox[{"gamM", "[", 
        RowBox[{"q", ",", "\[Rho]"}], "]"}], 
       SuperscriptBox["\[Rho]", 
        RowBox[{"2", "q"}]]}], 
      SuperscriptBox[
       RowBox[{"lambp", "[", "\[Rho]", "]"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{
       RowBox[{"-", "4"}], "\[Tau]q"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CmNew", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Omega]", "3"], 
     RowBox[{"Cma", "[", 
      RowBox[{"q", ",", "\[Tau]q", ",", "\[Rho]"}], "]"}]}], "+", 
    RowBox[{"2", 
     SuperscriptBox["\[Omega]", "2"], 
     RowBox[{"Cmm", "[", 
      RowBox[{"q", ",", "\[Tau]q", ",", "\[Rho]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqNew", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", 
       SuperscriptBox["\[Omega]", "2"]}], 
      SuperscriptBox[
       RowBox[{"lambp", "[", "\[Rho]", "]"}], "q"]], 
     RowBox[{"CmNew", "[", 
      RowBox[{"q", ",", "\[Tau]q", ",", "\[Rho]"}], "]"}]}], "+", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[Omega]", "3"], 
      SuperscriptBox[
       RowBox[{"barlambp", "[", "\[Rho]", "]"}], "q"]], 
     RowBox[{"Ca", "[", 
      RowBox[{"q", ",", "\[Tau]q", ",", "\[Rho]"}], "]"}]}], "-", "1"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6428510155186996`*^9, 3.642851243574543*^9}, {
  3.642851369781067*^9, 3.6428514162775803`*^9}, {3.642851637190016*^9, 
  3.6428516433174143`*^9}, {3.642851808534646*^9, 3.64285181323532*^9}, {
  3.642851962582589*^9, 3.642851965156851*^9}, {3.642852702702491*^9, 
  3.642852703124219*^9}, {3.642852738808099*^9, 3.642852780966548*^9}, {
  3.642853194327503*^9, 3.6428532312390423`*^9}, {3.64285347415084*^9, 
  3.642853479364694*^9}, {3.642853514517125*^9, 3.6428536186598597`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"implicitTau", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0."}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"implicitTaup", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eqp", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0."}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"implicitTauRef", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eqref", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0."}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"implicitTauTest", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eqtest", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"q", "-", "1"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"implicitTauNew", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eqNew", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0."}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6388680736087217`*^9, 3.6388681099086533`*^9}, {
  3.642238528981819*^9, 3.642238534119101*^9}, {3.642242527768409*^9, 
  3.6422425321545897`*^9}, {3.642321718028646*^9, 3.64232172698848*^9}, {
  3.642851449426622*^9, 3.642851458882633*^9}, {3.642929359500071*^9, 
  3.642929377405704*^9}, {3.6429294251328382`*^9, 3.642929430796007*^9}, {
  3.642933726783386*^9, 3.642933741326226*^9}, {3.642933784319557*^9, 
  3.642933786094118*^9}, {3.642939751122386*^9, 3.6429397513294697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Rho]", "=", ".5"}], "}"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"implicitTaup", "[", 
         RowBox[{"q", ",", "\[Rho]"}], "]"}], 
        RowBox[{"q", "-", "1"}]], ",", 
       FractionBox[
        RowBox[{"implicitTauNew", "[", 
         RowBox[{"q", ",", "\[Rho]"}], "]"}], 
        RowBox[{"q", "-", "1"}]], ",", 
       FractionBox[
        RowBox[{"implicitTauTest", "[", 
         RowBox[{"q", ",", "\[Rho]"}], "]"}], 
        RowBox[{"q", "-", "1"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "0", ",", "5."}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63886811350142*^9, 3.638868176916999*^9}, {
   3.638868304326674*^9, 3.638868327590094*^9}, {3.63886837102986*^9, 
   3.63886839629733*^9}, {3.6422421804577017`*^9, 3.642242200648493*^9}, {
   3.64224252002591*^9, 3.642242535848483*^9}, {3.642246656571487*^9, 
   3.6422466643308563`*^9}, {3.642306138323987*^9, 3.642306138450886*^9}, {
   3.642321758750486*^9, 3.642321777500889*^9}, 3.642321874749658*^9, {
   3.6423226595509567`*^9, 3.64232269374146*^9}, 3.642325374335298*^9, 
   3.642339124602716*^9, {3.642739121892514*^9, 3.642739142357308*^9}, 
   3.642739414196773*^9, {3.642739444308691*^9, 3.642739525715242*^9}, {
   3.642744585223415*^9, 3.642744605190298*^9}, {3.6427518924596987`*^9, 
   3.6427518981717663`*^9}, {3.6428273714145203`*^9, 3.6428273715575113`*^9}, 
   3.642827409798627*^9, 3.6428289110154333`*^9, {3.642843439471634*^9, 
   3.642843447998679*^9}, 3.6428452886570063`*^9, {3.642851470132696*^9, 
   3.6428514705157557`*^9}, {3.64285197942848*^9, 3.6428520062924757`*^9}, {
   3.642852804933074*^9, 3.642852813109212*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1:eJwV1nk0VusXB3BFCHnxNpFEVEKlCal8jySkNMjVIBmiyVQUyU2G0KDBkG7R
VRqoRCoZMpRSxgYNhkS941Fu73BeCfF7fn+cddZnPWfts5/n7L3XMfAJ3ug3
Wk5O7gu5/n+PCttsucBKhLmnYw4Z3W3CSjOkKi4TwaOtfmJT2lu80LGZ+XaF
CG4uf4uHwz5g1djlpZedRJiSYLH4cFYran8tXeO/XoQP78ZZ1y/rgAPfusvc
XYTvzs9YIwc64d/y/kfidhFWmleN/2HVhfjqoIEvviLonwv8uMunG9fylZUt
9oowZlyYc6LGVzy9dG1CcghZT2sZ03H7K7oTlxlyD4kw4KXQmLzoG4bDPpov
/VuEnf2Bi2YWfoOuT4hNShx5X1/IonvTOFi6TmUNfUIEOE2ofR3PwdZl17dQ
50TIXf58hO7mIGK2za6MCyLcujyqVX8xFxcmtob9lynC9PSvE/fEcvFI/kCs
fY4IPXeMos/XcfFepHouM0+EljmetJMqD5LOG1nSAhFKlF5/MHbkYV5JW8nV
JyKUF7NU1z3iweVGaG3/M5I//6bSbj4PASnj3q+rE6E9j8VaP56Pk9G3vt58
LcKW6N+DG8BHXoDtzz8fRIjO164v2MXHqy0dQ5s+k/1xBJ9zkvngrzqocveb
CDrxx1k+9/kwNMibsfUnybdf/FIk4WOFut3C+zIRArXv32FpCuA1+JlSHhLh
UIfphQtzBMj6oOFRrCzGOYOilg0+Ajx5dnvPOJYYhUXRTGmkAO0FK8N3ThDD
3cBgs+S8AJNORqRoTRfDpDIkx7BCAItwrew9xmJ4GwTMoN4KsGnn3fzquWKc
j7SLDOMKcN6m+1XQUjH8ip3ueigLUWga+fGFrRiH63Y2z9YWonnyeK6uoxiJ
Ea1xtrOFUJU6jNRvEuMuhiwPOwhh0v1Vbfo2MYLcTK7fcRPCsemIzmFvss4p
zF7rK8TxWwWLZwWJMZi2cttwlBAj2yYFxCWKoW65VLH+thB6TvcPtyeLsTyG
t33RIyGWWTgnzk8TQ1gp32lTJcRhjehrXdliPHHY02H/ToiLfyYXWtwS42Fq
UPjqDiGKe4oqkvPFMN224egIRwjpc37r0jIxVlQ+SkpihNAqOsZPqRYjUH+o
12dICPN/dRi6VozXeReSBuRpBB52YV1sESN2n/OqAC0agjnF9swPMYaDv/le
MaMx/e9AP1OpGEdKKuadXEDDo9HouM9vMXQ0OOEOVjTe7E19/maMBHMSR6yW
29FQKVvNVVKTYD/vzecIRxr2Y0crQEuCQ/sV3U6vpVF2K8QuX08CdY/N6yl3
GkzfLF+ukQRfXDQPcLbRmLuqK3aKqQRztRff8vWikcNd++yEpQQninN7RnbT
OG1gauu/XgLDW+fDX0TQqA355pX1lwRd2jusg6NoyFX/c+y9hwQlq5L1hqNp
HPRUrl6xR4LG3RHnmxNoeF7m2UyLlWABLXZYl0rjYk+m519JEgQMmfxteYFG
y5JNR5PPSKA28Puiyj80HFufVQxekiDii5Ig9AqN+ROyl7U+kCCsfZOHTy6N
gJ3uHqwyCUL2We+/f5vGzQfqUauqJVj8/Oztn3dp6Gz8u/xhowTPpjdtWHqf
hsLZrdbneRJMOX+DNaWUhs0Xza2vvktQXj1b/mcZjYg5dYdHxBIU8tSdHz2h
0dtgWRo4LEH8yIoFOtU0PipPsFo9SYrbdzuXu9TS0Njc6B4zVQq/uKV1FS9p
rL4VF15iKAU1i689vY5Glb2keKa5FGdrjSfVN9AYSMv7uN1Cil1dRSvVm2gs
4nr1pS2Toqo3bYljM43c2NeL5Z2kOJqU6n/lDY1vbxPcrNeR59v/0yh/S2Oq
gc3B/W5SuBlRu5rf0Uipuvuwy1uKdwr7e9re0zgydGLhk0gprrVsLz/RSqM5
zDctMkYKn4q5FqFtNPR7l8mskqRYeLX8qGs7jeedP4sfpUtxfXmay+8OGhP/
qpsUlinFrC1Vy6o+09jdfC1iQY4Uw1Nja6M6aahVuVkXFEqx3CZjb9cX8j0t
510OfCxFPB3cHd9Fo7BAeci0Uort08fkTe+m4ZZdXpHbIIVK0tUOh69kf5PT
9Xa9kyLOflvGa+KBc0HRM9qkmGzi7LT+G40rMQa21/hSrLo8f9ZyDg3R74Gr
Xr1SLHNbl5lHvOLA+9HTGClm94y+xOLSSOvJ9+0ckGLowJEVwcQCn8Tnl0cx
8IkY9fgVsXWH14ytygyuRA5P0uWR+nW1TpjMYuA1V+H4HuIvDWzBxwkMqva3
6N4nNl/Z65Cuy+DHkM8fCXHsk9pcV0MGnW94dvP4NN4vyh6rZcJAbu9bNX/i
mfmH974xZzCriBOaQRwxw7XhjCWDXZXGaTXE9VlmZmttGBxzlUvqIdadqJis
as+gycJwj5qARtCZrt46Zwaf1+Sun038VLHUJWkjg4ikse62xOOjUwpWbWFg
ccc4bROx/699GmO8GDxud53mS1wSbL+/xp+Bq+pqViCxilDvXUwgg7QViDxA
7OHVv4AKY8Ar6j4YSnyv9W3qcCSDA0WbJ4UQy224wzyJYTCYvDF0N/HGuni3
I0kMepcMZ3kQX7f1LF5ylsGJb+w7a4j7Si0n9aczOOrxKd+K2HGBZkRxJoPX
4VNK9Ykv3+5pDcsh8RbZdykQ/zf9+ZKFtxmM7XJZwCP7py5nXRIXMghXaah5
SpzCDh8seEzOK1Jw/RIx99R6j6BKBtG9wfxgYgsFkwqzFwx83725aEucFCWv
972BgRFfu5FFPCewuGtXG4Nsc470Kvlex3hnqZnd5Pxe1Sn6E7/bvucql89A
MLDn00ziQy66vt4Mg3TVKd+vkPp4VSurmTbIoMRSdfVfxDp4bfRllAwvi8Kv
qBBXzovlb2XJMMXD3WMvqT8lTeGeTSYy5NtpJyuReu1L9LD/11wGp73eB++R
euYPv9HvsZDByOKNmitx7Y/ST9F2MiSz/ALTST8kvDplf8dDhoeeAnqE9I/i
sXkGo8/KoCYqEx8g/dfXlzO0Jl0G9cTQkn7Sn/zAya0Zl2U47pmaH0Vcu23U
2Tm5MuhlTbSJJv2cYNkytPmpDHkipYLgTyTez0OtBVIZdocsNJNvIfH8vj8Y
+E3ya/apDyLzgv95x1l7uT54fyntayXzpLbecVWHWh/k2aHqeWTeJNzUeag4
sw9RGeEvrMg8UvSsPLt9cx8yXibv0yHzbEzTGAfVij7o23e8kK8k8yAw07ez
pg+fz51hW1eQeh238FhBfR9iV252DCbz02itV6lrax+udLPCP5L5urKpzDRT
2ofaHU83XXxM+qspWGOOyS8kZ/cu7y0k9djc1uaS8Qu7jhcdlFyjMdicH5Cy
vx8tL3OYoXgaPPd72np6A+CHOiT52dOwTQoKfJU/iO5zkWXblWikD5eMtdvx
B4UWp7moEWKbbs2az9JhsPqoP9/jhFCrNv0x3U2O4mQqf7aghPBbfE22xWwU
daWaLa8wIkD40YiN+rJR1LS2rt/RNQIc70ltaW4eTZlmzE2NihdgjQkrV+2S
PFVtUBSn4yxAcr5F9RpvBSolhq+7aLwA9a45Q2FLxlCND8R3Ddv5qG4KPm0m
r0g5G/ZkbLzBR9HeGKqxU5Ga2PsoISGQDz1nWAU9VKJmeWqbzbbiw27EI+7f
KGWq7WPqqUtKfOz8WCUpcRtL1T8OjlvyngebmNhH3voq1NQ//Yn7bvCQEiwu
VxOoUPE/3VXSI3j4duwG/99KVepgRMdVdScevvuV7nyWqEa5Rn9pfzKVB1Gg
llKT9zhKIdd4UftPLu45NQz5z1GnXuua+w6+4IK/29xCXqZOaenP2fY2iwud
O+2piU0sKvXHcUuLUC7ivA5ca3LWoOBvZ7NxDRe/hrSTnUs1KINmaZO2IRfG
5Rn/1BtpUiUSXYWTgxws9n2xTvOEJtVsnKkX8ImD6swJkxtlmpTVTJeSyfc5
MK6ecNJlmxblHbI9ZvwZDtaO+TH1XaUWNbUrwTE0gANRB7emzoRNfWru/13q
yEFwZjL7xFk2pWtnO3mSMQeNo4x+rj7Pptq3NHQlzOLAZFdZvVoqm3r8Nuxh
30wOuPMFMecusCnjg/rHP87gYPNLSpSRxaZ2nnpYc8GQgxUSaePNO2xK9iL7
oTb5/5/ouDXh+Us2ZXpD12P2RA5C80XeCXVsSt9P9vzSBA7eaCUud2wg8aKf
WasRn+p8wDQ0s6mAkEVrf7I5kAsd59vygU1VTN04rliTg56sanzjsCmNCWt+
24/jwEHefcp1HpsKP9BgXqLGwfXdvX1+AjZ1U87koAnxjoU69+geNjU2MNqI
pcrB+1ehumIxmzJ/5j+1TZmD+XNV+oukbCqlu6zcmfhManZLmIxN/Sjk+Fcq
ceDk2XSyv59NeZvd4+QocnCzxte/bIBNBVmvfTSRWGH2gG3UEJsKqS5PPTGG
A+8z56baDLOpwJD+o0MKHFRKZ/4eGSH5DI0KDyb+H0ROJQA=
     "]], 
    LineBox[{{1.0011051245967788`, 1.2916055583474577`}, {1.001150129113997, 
     0.2318158701556014}}]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVx3k41AkYwPHRGDc1fqunECOVslKzpSd2d95XyrGoViEh5IgSa9hsSI4i
NNWapIOyUlRLrVSOpXkcT4WxtdOxrcqu3xyMGTMaVxpm7R/f5/t8bPYn+kUv
oFAovvP9//LM/TrMqHTWqRrbSY1GAVf3ylwCGUEgyQhzb51VwFvfQjaDEQfu
5kuUaZ8VkOoRZEJjHIVTGQ47pyYV4N6JIVPWBdAfaLZ1XK6A2pyNuUrrS9DZ
YKet6VfAvxF1i+XWt2BSdWPNnkYFpH9/KHzEuglKwusE5mwF6H+68izesRuK
OI+oTR9GIan9+GkZWwBjnS1J64NHwbGK+6Kh7i04+/vkDgzIQbQ91nJg8z9w
rx0WuoXLodQ8b9kv4SQc0OPebhuVgTO78S61Vwyzjn8V5x+VQcebKzsT7aTA
+iPLWsdIBszTc6wlXnIYylTeLL89Ah5il4H1gUooqTxkV7N1BCRrH24bl42B
y/PkCuaIFNLVBRt+T1OB/7o9JzgXpKBLH4rbbT8BDFXrYzZLCjQ+zcOwdRIo
7x7N5SiG4XNfbXxx0jSkMPursHwYRIF1S62sZsCi3mC0dMcwuJ5KOPy09jO8
Tkg43qw/DCVzjfpuYbPQ4cyOLOINQbBlh8871RyEpmbvysocAiPel7Ll/hS0
8mIf/8Z5CKKdKieCHLTQ88RByoEpCaRm/uTHmNDC/YqNj3pbJHBSyhX09S1A
+j4nLf1jEvCxX1hjdJmKqW9KJ4mtEuDUbuL5RGgjXxZqUm8sge5d19UpzjQ8
1rg7hfVSDDx+4mkHqg5ebTT0WVAhhvqD2dj7XgfP20+FCGLFYOUNmxMadHGx
V0ax7kYxuGlCcq9l6OGqhr6Hk1QxRL1+/LHRXx/fae5pmb4QASs750EEwwCD
0+p//LVSBMWJYy1GEgOcTb9dwzwigsGsG+JrbYZ4KNopkOohgpHopqj2fCO8
bJzX9clCBMrDprr8CGOMywn7IXhUCHVePeqYtSYYo+s6fr9TCOLY9ZuoEybo
V52/qKlMCOZ3/ubm8xei5RHhnBdbCLnh7Eq+9yK0gQrfAm8hTKmXcrybFqFb
yWB+0nIhrG4pvdS9go5RAfIR9QwJTpFdO+gFdLRtd7k8/poEXpnZkt4JOlpk
5xk/uEfCap5Z4fZgU+yR7M3mcUjwpcmW/dlmijYeowEO8SQo+4Udz+wJLAua
ns30JCGxjEMUnCVwJe1ulsiOhF6tFYrvfiaw8sRvCf7ztj/Q3G3EJdDm4sO4
rlUkCJmS7HMXCNQL7ci7sZKEPU9QWVpO4LqLHSExtiRs+ajqvXmHwFvomiq1
ImGx5968zicENndtD1WbkZBcq4zIe0bgA6HD8OF5PzfN/9azh8Agmih74AsS
it7fH+/pI9DE/cPbdoIESrJxpOAVgV9Vv7AtpJMgLefBIElgMve6lYUxCR7U
QIsqEYGvcopSOUYkVMXKJ6MlBG5gO7/XGJIQtsG8blhKYEPAYJ/QgISXT5Mt
x8YIjD+4zfuuHglMR4PpehWB1UUuBsvnfYZbIUiZIHB368ir87okeO3jF05P
E5gWeoybpkPCzY7ImOYZAl39gk/KaSRor5lxzVATOBSpzA2fd8SZc8tYcwTq
B3x9VqBNQptq1SeNhsBImUu1+7z/AyDmVg4=
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
     "]], 
    LineBox[CompressedData["
1:eJwV1Xk0Vev/B/CTOTMnkUopIQ30E7rIe0tR0SRyww0RJVOlQd0GTYZSiSbV
JYRuGZJcSZHpmq8iQzLkcJx9GuyztyNJfPfvj72e9VrrWXt/1rPfn8+juzvU
eY8Eh8OpZZ//X1+olPpe0aSw/HLkEb0njSg7t7ZATZuClKRWjSCwBbYH7Rw+
zqewVu2jlkH2B5R7r/mQYUBh5Ufr8tYDvVizxTb4wHIKNt96Arft/YSK1QTH
2ozCpdSHXmsf9WPtUiTIWFNwsnzfRDzgoUrbRv/tGgobk0UOF/0HYD999Yu7
GygIJy/468gOovq7lZP/VgpR6XIJLpcH4cC37DVxo9AYkPPpysQg/Ftav0T9
QSHtpUdq0A4+zpeFjPf4UuBozv+9IJ2P1Gw5OfNACroKt80iSD7eJKVqxIVR
0NifUrJDfwh9UdYLB45QUMo0zLrmOYTJ8DYTq5MUduTs1FscN4Q5u8Nsrp+j
EKC3OIkqGoLVFnknMobCNunEefF9Q3C3Tt9JXKMQ4ZPBuyklwLHFNgG3blLw
K+2POLJIgJszO8K/3aOw5bJycrydAM8lD55dl0ah7MfVT5ZeArRSCtfuPaJA
adQdLTomAN398D6TS8HEJTTC/poAxkWdRQ9KKGQNxxd5FAuw+eGh6rFyCl7V
6k/NGwUIuq7UuqWWwkKTTbfqewSIPZ35KeM/dj/n+uZVwwI8CrId/vWeQlBa
sPGtSQFqdnZNuHyk0KCvEzulSIJvf1j+ST+Fh7563IvaJBbqPlrkPkwhfc6C
WDNTEmuU7UyfiinI1QSWn7Qh4f3zIyE3QaFVkWu2cAOJ++9VPQvlRPC0dU8t
8CRRUv73PiUVEcYLZzg930PiQ+7ao34aIrjknmuyDiGhGXvsuvoCEWRubjLl
nCJhflQ9ZZ+hCBUtpU4bL5Bw8XuSXbZcBP+Sm28tLpOIt+mrCbESIbPs79Pc
OyTylhxvq7Jlv1dZUqqQTKJJa8bAnPUivIzPyXmZTkKBcZiqcxHBcltLnXMu
CaO+T4oLPERwPR6z3baAxPrGE9oRPiLE1RRvGS0icSEz18wgRAS79uC00jck
0hM32J0KF8HxTtKxzioS5ZG8re+Pi9AWvbOqspbElIdm0LkoESQ5jl1ab0no
bHga8SGOrcfl6bsLrSSszR2jViSKUNT9Ka2hnUSE6unU3hQRIu7Na/3WTeL2
L60880wR9to6hDX2kSgU5r+KyxZBXOnnd5lHgqnkd1gVi4BA4+Y8AQn1/DP8
62UieNdrtmp9JmGSrD1CVougdcHE0f8rieCIzSq3W0TotXz99bmIxGV/wZzh
ThGbr026xQyJv7efNbLvE+HAM6sPmWISQ8sK1418EWH19Jeedj9ILDgZvGcJ
I8LsKp+TwnESng16F3b/EGHhsJPh6QkSzYEJlc3SNCqKZzYemiIhX7xxQFaR
hkvnX/LvOUKsmy4hBXUaqr7P3PUlhCjODLPL1qHRw/+5766UECOjBr4DejQ2
JXxYWSYtxHL73rOzl9C45LrdqF1GiLSBTeUxFjTWnjEN7pYTosdUur9sNY1Y
tb47jdOF0DpXMm3MjoZK6Oq8p/JCXNZdYuu/lX3/YWl9N0UhqsP6ve/voPH0
qp7tLCUhOGV3zrR60vgZX/uqmbWlyrYUBV8aZ0IPUSeVhTi8S65szT4aXyx+
M9JVESIvu7Q3IpTGozhxUTFr4cSRqbzDNOZFhw5tVBVi191Bm3lnaTystiK2
qglxW3hv145oGgX90+kq1i2/uZyKu0Ij4p//nE3VhVCOUfirMpHGzPDpKbdZ
r+8of/UziUbqj6EZo6zPGhzv/r8HNDy+7xc6coUoObLi175MGu9iT7slsR6t
Esx5kE2Dc0I5/hPrFRop1h3PaBgumlunO0OIID83T5Vith7jHlMP1hnPlP+0
L6OxW/PfX3Gs+ySq756sphGQleZazFrb+eTLggYahYeyAvpYuzxY2fX5HY3h
red3cTSEuEp9Hl/QSSNtPMxXm3Ud0rTde2k8aFnz13LWUlfdLeMHaST1HTVb
zdqmR8295jO7X8J+sz3rY8tqI6ZENExPZSluZJ3/55k75mM0wtqDEtaz/lpv
8SJ4kkayMqTWsDacPdyRLsWgbN3z0+asdwdmjHXJM7jR5r5In/W9F39ocdUY
NPQXc9VYt8lprNqoyWDSN3Dvd7Z+1d8b3CLnMrhXoUZ0st6Yee5o0UIGlzhH
CgtZnx+1vDW8mMHtfZH8q6xL19GF+iYMJESOQj/W44mP2v4wZ6A0f2GXGeuV
A96jidYMDufEv5VgnXX2PzPJDQzqeSXL4tnz73970dVyCwMigfPGmfVcXZvD
B1wZXHs0WqDK+nrpk4JeHwbc5Z/Vz7L/t0HZr3XmXgabLHY/NGMts2v2yKYQ
BktLoshBNi8nJmJMS44zELRnvbVm3RTum3g8koFGkkNfF5u3+V+txauiGagq
b/E5yrqye7jw+Q0G+V9SVdLZfCqWulrm5jHYrxK3uY3N9y4L47vB/zDwKnTT
92Cdlys3seQ1g4djQQrdbH+4prx8lVXPwH77O6JDQYi/InVtU/kMAsLDZuaw
/UX9GH/g/ZXBBqVfs+ayXnOwVWLeCIPBiLkZMWw/Du2Oqrw7bQStTfOueMgK
YbL2q8ONOSPwkuiQHGD7+43Mi83RziNwWlvyLJ6dDzNOX8+13zmCR11Wwp5J
Ev7f96tKe48gsjfqDyPW8gKdd5HBI9hlHKxTws4X59rzrieiR/AsdnKsnp1H
A5e2eoa8HgFzo+tLGju/ZNUE+1yMxND0HV3pyycxGuW5LtlEjM464WDiIHt/
TTbPF5qL4bSg9k3VAInqLy/aT9uJ4dN6U24RO08v1lxa99hTjNoD00w/9JKQ
OWOsK3FVjHKj/fW6nayHj3TkMmKYxPT881s9CelGaQeFV6PIjKHaZXJI/GzK
Drp+YAx2zZljtvtJDLrlzNLRGcd58+ESRUMSttEhwTXZP+Go4z87gBTgxmTR
dDuvX6hSHClZnSGAx5wKp4/MJBafWPogZa8AimVLvixw5RAGlpbLLAwE2GOW
Kt65dBphEK0SHyYYwtFTx5zni6cRUjlZPca5Q7ggTGhpapIgwuT2DEYfHIKT
kUqWYpIkUcEL/2ZhNYS4bPMyJx8poslN642JzBDqtqdNhP8mTdySjZH+0chH
WWPo5aWSMoTA6U5kQRIf+YGRREO3DPHswvDKAD8+dByxKqRAlojO/7vUxYQP
uynPc8l/yhE3s2Oy3nP48GsrpYtcpxNOMVFLjzQNwiby7HOf+fLE62+CdREp
g7geKnqpOCRPONWdD3ENH0T/mYf85NcKhLqdddaRdYP4vOeFX3mUImGZmnPx
sfYgqGB12UYfJWL+qnwV+68DyNlQP+G/TJm4Y8jRqq8YAH+vibmkWJmwn/a7
kvjuALQff0iIalQhsmZnXcw8MIBz3gdTGx1VCQu1CoVpjgP4PjErzvGFKpGr
uV562oIBGL68dadOT42oa35clTzOg5lv1Ra1GDUi8djHuIw2HsruaWg1iNWI
jKbiJ+F5PBiWacRu9lAnPDS738TG8bBJ+svcd6/ViYXzeK5T+3mgugYqao24
xL+1evyd63kIvRfHjbnKJcInDeOqDXhomKY3vDGeSzy1N0k0Z20UUFynmMAl
dqzVz8rQ52FgxVDktZtc4s7pztGLi3j4/V+CunWfS5z7aGm8fiEPa2imIeMx
lzDt65Bv1OFh5nr3i5X/cgnYye7p0+DhUDblc7GWSwR7X5J1Zt2sHrV6fT2X
uHCsvbBiBg+Xup+N1DdxiXf15VaZXB44h5R8W95zicMBlT0hajwI75ehn8cl
kpcHRHOUeHCQdJudPsglmpd2jR5U5CF979fRPUNcon1K8uCgAg9epto5pJBL
1HuFXqmT56G15tAckYhLiHIued2Q42HFcvmxfIZLHBo/byrH+kpCSku4mEuY
31g844QsDxt2NcaOjXGJbWOhP71leMio8PUvHucSYm8ViVZpHqQWj9v+OcEl
/Ha6ajiw9rlyba7NJJeYlU+YFUvx8JrR/zE1xSXyrJp9lrH+H+UESMw=
     "]], 
    LineBox[{{1.0010762682784848`, 1.2916055583474577`}, {1.0011889803076748`,
      0.2318158701556014}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.2},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{857., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 5.}, {0.2318158701556014, 1.2916055583474577`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.642339130356464*^9, 3.642339176346013*^9}, 
   3.642339222895537*^9, 3.642509883863984*^9, {3.642510554108176*^9, 
   3.6425105650842237`*^9}, 3.6425105956527843`*^9, {3.642511102969614*^9, 
   3.642511278069983*^9}, {3.642739117972488*^9, 3.642739143792981*^9}, {
   3.6427394001582737`*^9, 3.642739415538897*^9}, {3.642739445632723*^9, 
   3.642739527157646*^9}, {3.6427444982965527`*^9, 3.642744520960807*^9}, {
   3.6427445711811*^9, 3.6427446065793858`*^9}, 3.642744647078487*^9, {
   3.6427516876812162`*^9, 3.642751706203741*^9}, 3.642751759968961*^9, {
   3.642751805194345*^9, 3.642751939601288*^9}, {3.642752032949174*^9, 
   3.642752155366358*^9}, {3.642827350893691*^9, 3.642827372756694*^9}, {
   3.6428274030388203`*^9, 3.642827410612382*^9}, 3.642828912131805*^9, {
   3.642843442345654*^9, 3.642843449453958*^9}, {3.642845290133041*^9, 
   3.642845316798153*^9}, 3.642851472900963*^9, 3.642851831113563*^9, {
   3.642851971181445*^9, 3.642852008142357*^9}, {3.642852794719256*^9, 
   3.642852815101141*^9}, {3.642853490751649*^9, 
   3.6428536213267384`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
5tqmhOY4qZ8EOXiAMYBBaMYNFrmVGYUN3PmJIke7ZU2bMTDYA/FyLD3P1idQ
fqDMRfZxfIrX9oQY/tH8W/yLdD11FOZebyic+G8oXJ0Wd4jNvknydDS4yg/O
HZ3snknXT1my4afHULzQzj/5LIsiDulA8ZiEK1ymFoLO9IHB3rl1Ldl7sord
1zeW+e2rShcZSuOcSdKAUkREkWz7ssLP6IvqI3cFlm7BsmVdNXF/G+ysxuYc
7VC0f2I8neh4teZ+K0Q+cYe469P7BgaHt1yQGttLMykMGt3XwZkBa60zPNj3
Rn1bnsQr5mCjlXQZYwHM0eCONXLHFxWZFnMUO29Y43TFj5cfts2N+VkYJDU5
FxEdtTS/rGFEwE3qiR4j4PDjL5TvwbGdLWd0N/JI3hsYXzq6o2dSHpzZP9iN
qMSNmMzbcp/wb5utxcuGGTR7gl0WDhZavdZ20MB2UM/rrRpn6fI2sXBhp8jl
/Wa+3ZZYH/eb+kHBAbAqRkpJTqohWR6mS/ZUV2/Te+X1caeTci2kfvIfPRIi
jwfn+ewz8AgJU3JnUF8u3+0NhcRqeZuP6U6fu27Rp7wjCkb0/AXVcGCr+xAE
/90w3UkaQ3RJsQMQUppb35I1p68x89mWtroWY+m7XGgQjkdf15cVJZYvKH66
Yt15zOTW5zUVoZ90lgd/VFKUh4DZSCz/ikpCBD/nYnLN4lwjvmUJiHgWcptI
1yJ6PnsU2QMSSczeBhvZO8P6rDeez6dH0TO6dxVn7LYKA+VHkuJ9vwqPlhyM
FboYGPgHBX2Wkls90vDp5mSY6dyLmWlw2hUMpTnEKHB2j34Vn1WDPbois6hB
o4OyFpQFdOyB1CInQUDs4VJH/9UVHpLVBTmuX0i8BC7dt4Sru43EixQOnq8N
Cd3fUAgd3hrgW6zL97S5ZO0uifo+LLkc25MMaqAymhfkuaZAE8qDQ1M5OqhB
HQY6mMarje0FG3MrfY+n5dl+2l0WtKK+PCPPOmDDyGbF6loI31B4u72iSDef
P3z9pm7RCRPJWyXlNc8NtJU80dnd84+GFrqiJpOieq/A4+Ksrze05XOo4sgL
4WLg6JulUTuq27hnfkosdEhxDl0/aOgzj9Nt0P6gvZP+TsV+g+sOokhzUX7Y
nmtl8SZe3l5uh8LiMpHVOXrUspxM5vHW5VUFADr2pgbLi6WH9UMQTSCfyimx
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
Exoav/s/sgU5qQ==\
\>"]]
}, Open  ]],

Cell["\<\
The point (q=1,\[Rho]=0) is singular: the function implicitTau has a \
different value depending on how we approach this point. \
\>", "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638868693379499*^9, 3.638868793202427*^9}, {3.638868830578557*^9, 
  3.6388688330584087`*^9}, {3.638870454643436*^9, 3.638870464054179*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "For q into the range [0,20] we compute the slope ie ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    SubscriptBox["\[Tau]", "q"]}], TraditionalForm]]],
 " using the points n=13, 16, 19."
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638793401569675*^9, 3.638793517316625*^9}, {3.638793622481604*^9, 
  3.63879362593719*^9}, {3.638870503411724*^9, 3.6388705210917673`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"linFit", "[", 
   RowBox[{"q_", ",", "\[Rho]_", ",", "nv_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"avIntN", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avIntN", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"avqInt", "[", 
          RowBox[{"q", ",", "#", ",", "\[Rho]"}], "]"}], "&"}], ",", "nv"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"glue", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", "nv", "]"}], "]"}], ",", 
        RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"data", ",", "n", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6387943612061357`*^9, 3.638794483189991*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValues", "=", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"0.", ",", "0.99", ",", "0.05"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"1.01", ",", "2.", ",", "0.1"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"2.", ",", "20.", ",", "0.5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"{", 
    RowBox[{"13", ",", "16", ",", "19"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"linFit", "[", 
      RowBox[{"#", ",", ".8", ",", "nValues"}], "]"}], "&"}], "/@", 
    "qValues"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.638794486975334*^9, 3.6387945321143713`*^9}, {
   3.638794563124834*^9, 3.6387945633640614`*^9}, 3.6387947892358313`*^9, {
   3.6388705966455927`*^9, 3.638870611526979*^9}, {3.63887117637542*^9, 
   3.638871189655429*^9}, {3.6388715168259277`*^9, 3.638871518168088*^9}, {
   3.639129271883354*^9, 3.639129313099586*^9}, 3.642242826760816*^9, {
   3.642243457226706*^9, 3.642243459625375*^9}, 3.642247240987359*^9, 
   3.642247769035482*^9, 3.642248038203887*^9, 3.6429318497870817`*^9, 
   3.642933970924119*^9, {3.642934671244854*^9, 3.642934671307638*^9}, {
   3.6430052763559313`*^9, 3.643005278179564*^9}, {3.643005986917099*^9, 
   3.643005988660137*^9}, 3.64300855507839*^9, 3.643011456824236*^9, {
   3.64301320333936*^9, 3.643013203432238*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"extract", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "q"], "'"}], "s", " ", "from", " ", "the", " ", 
    "fits"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tauqs", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
      "fits"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["D", "q"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        FractionBox["#1", 
         RowBox[{"#2", "-", "1"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["\[CapitalDelta]", "q"]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]qs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", "-", 
          RowBox[{"(", 
           RowBox[{"#2", "-", "1"}], ")"}]}], ")"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6387945939297028`*^9, 3.638794594275021*^9}, {
  3.638794633620426*^9, 3.638794876943446*^9}, {3.638795119798197*^9, 
  3.6387952198642263`*^9}, {3.638795307222921*^9, 3.638795339608634*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FittedModel", "::", "varzero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The estimated variance is zero. Properties requiring \
division by the variance or standard error will not be computed. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FittedModel\\\", ButtonNote -> \
\\\"FittedModel::varzero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.638871196176108*^9, 3.638871755244742*^9, 
  3.6391291480590067`*^9, 3.639129523527707*^9, 3.6422383478260098`*^9, 
  3.6422433892808847`*^9, 3.642243774921939*^9, 3.6422477317868233`*^9, 
  3.642248003365591*^9, 3.642248210698373*^9, 3.64230504863531*^9, 
  3.642511047372859*^9, 3.642854007178771*^9, 3.6429270007444677`*^9, 
  3.642932172759008*^9, 3.64293428811208*^9, 3.642934851416095*^9, 
  3.643005688006521*^9, 3.643006311948907*^9, 3.643008880713305*^9, 
  3.643011788841228*^9, 3.643013534380468*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "export", " ", "\[Tau]", " ", "as", " ", "a", " ", "function", " ", "of", 
    " ", "q", " ", "for", " ", "a", " ", "given", " ", "\[Rho]", " ", "to", 
    " ", "data", " ", "file"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<data/tauqpsi_rho_08.dat\>\""}], ",", 
     RowBox[{"glue", "[", 
      RowBox[{"qValues", ",", "tauqs"}], "]"}]}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.642927065978484*^9, 3.642927107910627*^9}, {
   3.642927152039167*^9, 3.6429271876552963`*^9}, {3.6429272373685713`*^9, 
   3.642927260616351*^9}, {3.642931854994987*^9, 3.6429318550423307`*^9}, {
   3.642933976840096*^9, 3.64293397699408*^9}, 3.642934681812208*^9, {
   3.64300528557944*^9, 3.643005285914754*^9}, {3.643005992942841*^9, 
   3.643005993123138*^9}, {3.643008565677465*^9, 3.643008565863763*^9}, {
   3.643011460769288*^9, 3.643011461049616*^9}, {3.643013206687606*^9, 
   3.643013207054335*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "import", " ", "\[Tau]", " ", "as", " ", "a", " ", "function", " ", "of", 
    " ", "q"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]q05", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<data/tauqpsi_rho_05.dat\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]q1", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<data/tauqpsi_rho_1.dat\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]q09", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<data/tauqpsi_rho_09.dat\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]q02", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<data/tauqpsi_rho_02.dat\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]q03", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<data/tauqpsi_rho_03.dat\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]q04", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<data/tauqpsi_rho_04.dat\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]q06", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<data/tauqpsi_rho_06.dat\>\""}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.64292724994771*^9, 3.642927284087639*^9}, {
  3.6429335598834267`*^9, 3.6429335670997267`*^9}, {3.642939023088622*^9, 
  3.6429390251370296`*^9}, {3.6429397026719913`*^9, 3.642939705135313*^9}, {
  3.6429400281442003`*^9, 3.642940032159587*^9}, {3.643005879524776*^9, 
  3.643005885764957*^9}, {3.6430112441842937`*^9, 3.643011260520836*^9}, {
  3.6430113168403*^9, 3.643011321239753*^9}, {3.643011393272583*^9, 
  3.643011397543983*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"implicitTaup", "[", 
       RowBox[{"q", ",", "0.5"}], "]"}], 
      RowBox[{"q", "-", "1"}]], ",", 
     FractionBox[
      RowBox[{"implicitTauNew", "[", 
       RowBox[{"q", ",", "0.5"}], "]"}], 
      RowBox[{"q", "-", "1"}]], ",", 
     FractionBox[
      RowBox[{"implicitTauTest", "[", 
       RowBox[{"q", ",", "0.5"}], "]"}], 
      RowBox[{"q", "-", "1"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.", ",", "20."}], "}"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"Line", "@", 
       RowBox[{"glue", "[", 
        RowBox[{"qValues", ",", "dqs"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.638871099478119*^9, 3.638871112695342*^9}, {
   3.638871203352187*^9, 3.63887126328948*^9}, {3.6388717651453753`*^9, 
   3.6388718315447817`*^9}, {3.638872635498169*^9, 3.638872686297875*^9}, {
   3.638873074153907*^9, 3.638873084169547*^9}, {3.63887337775386*^9, 
   3.638873430746499*^9}, {3.638876952701202*^9, 3.6388770164290953`*^9}, {
   3.638877124028881*^9, 3.6388772183809834`*^9}, {3.639128885451253*^9, 
   3.639128885691019*^9}, {3.639129178876523*^9, 3.6391292553405647`*^9}, {
   3.639129530029345*^9, 3.6391295879483356`*^9}, {3.639129652317589*^9, 
   3.63912965543666*^9}, {3.642238491241188*^9, 3.6422384913678102`*^9}, {
   3.642238539673977*^9, 3.642238542535811*^9}, {3.642243402363649*^9, 
   3.642243447628086*^9}, {3.6422438380593567`*^9, 3.642243846315618*^9}, {
   3.6422439250834417`*^9, 3.642243930635468*^9}, {3.6422466766208563`*^9, 
   3.642246694828352*^9}, {3.6422471518211823`*^9, 3.6422471674556093`*^9}, {
   3.64224774103861*^9, 3.642247746236792*^9}, {3.6422480079660473`*^9, 
   3.642248012380981*^9}, {3.6422482129901867`*^9, 3.642248214748995*^9}, {
   3.6422499285111933`*^9, 3.642249928896014*^9}, {3.642249970142859*^9, 
   3.6422499708463793`*^9}, {3.642305149270755*^9, 3.642305175605987*^9}, {
   3.642305442326518*^9, 3.642305457609371*^9}, {3.6423217334075937`*^9, 
   3.6423217364143047`*^9}, 3.642322114639234*^9, {3.642511060356391*^9, 
   3.642511063071179*^9}, {3.642853689801839*^9, 3.642853690441675*^9}, {
   3.642856176665497*^9, 3.6428561938653803`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwdUmk01XkAZWwtY0Io1UFjaSo7IeQOFdk64bV4kXVoniklM7yno9U6tkwG
bcQsSaOsHTIpRSRkSVkKPd573vJ7/4fERObN3HPuued+uPfDPXdjSJTPd1/I
yMh4S/mfXk8IUTQPu+oY0P+qxv83CjfoQruDukysOkFfNVJIYcArLVpXNxXc
Y9WssKsUYl39vlLQLUBlZ3lBXA4Fl6ff+n/UKUX9vfgzLWcp/HXe6gKlUwev
gFT6YgCFseByTZFOG3L7KsuX1lHglyyFCnlt0Fxy4RNNClMT+yoEFc/BK7JY
GFOjIM+Y9uDvfIHY6EfNvSsoGEbbnuNGdGGyzn2044MY1k5jH6jXPTBKWvi6
9L4Y8d6RQQKdAXQr+RXvcxbj8wVrrZH0ATy6XfW5wU6Ms7WyPT3zA0ggtfes
LcW4uD5/Z33vIHxDwtf56ouROfHUMDV5GPmGHr02SmIUMbVFhuIRHLnt9eBT
F4Fq/4yPsskofI9opoa2EfhE0U2Tw0YRm5uR9a6J4NVNAx6rexRJ6dkXVGoJ
BhUb/ELKxmAnsM/58TrB+qKN1sNjY+j/KvVcSh6B//ZktQNr34PVaa5ZfYng
XaRPu1vie2SnLf59KImA/ZLnYB7IRuuhXZ4zJwj0GXu1ynLZYLuqHOZFEoTL
VX/Qf8FG0OV8zmI4AW/bmfK128cxtGP+1C8BBJu7xtNyosbRYTrYoOlHwDjq
HvHlH+Ow8n6r0UQjEF7R0JVZPYETHg8+5XsSGFvFLzDdJkCvyaJa9xAc7xh9
M31mAnm5zR2bdxPcC3epOVY7gfZSI6eHTgSSpbJLXOEEqu5UWaQ6ElgUqB4P
1uOgobL8eYY9QYxFrPuQHweFqlNxXbYENe3DhvuzOQgJZC94WxPMhjnLdbVw
cMX11nEtKwKbz3+O7FnkICq22G2LBUFcnnJDkyUXMoon41LNCOrNTuU7MLi4
JqoPcTAl+NT2Jqa2iIuV3NWLe0wIHEIdvc1eczErCRiqMSZIWCgxvq3Mw+tR
bZc0qW/MXb5CfxcP/MTDvp1SL2MaxbnO4sFOs0zuZ2neqbWvaU0FDwacI2HP
pf3ng+0KL3F5mE3pup9nTvDkn8L4ldqTuN+p9/uSJYH8ZYVDibRJjKjuOKli
Q7DbONJqKW0STZJx50E7gqSWlyrMx5NQGRDERIGgNdBaNPVxEjqVpfPjuwiW
z19t+8GEj0klWp+PB4Ft8gDLPZiP9LuJWz19CI5qrDH65jIfSsUay/bRCfJK
aG8VnvFx1yHL43QoQYt5TiZ7ng+GlnLO9DHpno1deGwkwKkg5tZ3TAKDvcqS
G4ECCJnL9kcmE9CG3YtP5whAlNc/6/mV4CIjxZfeLAAzza3qwC2C6rlmeds5
AcLU9vq5NEj/lyRXq7FViDh69veyvQRqGk4R0wFCxMoqX1wQEjiXJKztzhYi
SPLY5dkKMaLNG9rKnwjR2uqfp24sxs3GeVb6rBDq2i+MW2hivPSyMWJsFiFo
09DHhfNiyAzHvHX1F2G/fTvbrE4MM0ZlpkGWCJm2jW60eTEC58SQaxLBRP6O
uoIehcwkY8nojAjaAhPFBG8KD9Ujix9ukv6yYEtNVRoFUfEt32vSnfq7s+tS
eihsMOfIszIIHIc8+mRNJfBs1Ks9+IiAybJnzZVKEO8VHLFtmmBGp+JpPW0K
xXIZP23QFcPyf0zjX1ennws=
     "]], LineBox[CompressedData["
1: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
qBAZTH7/TpGp9xe9vaT+L/8fbvY=
     "]], 
    LineBox[{{1.0023868359179047`, 1.2}, {1.003908775440247, -0.5}}]}, {}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwdUwtMk2cUrVJU3JgKMjFspRNkI1AVQR7GcVZfTB1kPDaQoDy1E+cYWKNQ
BR8g4gAHPmBCQaiPaZVQQ0AJPgBFijoBFSjgKGJpab+vfxHl4RT2bze5uTnJ
vbkn5577RUxC0LbpHA5nA5v/VWlqzAy3uCLf7crJrqkpBiXhZGUoPxl/m5d1
zRtjoPI/nsTnZ2Ffb5S/i5HBXr/Nn5jz/wB30UipuJfB+nvfRIzZX8bya3uc
o28yuHbY44jJ/iaCb72XysQM+qMrPqX2SuQ0Ndr1mIzQy6ZiiU4JC65zRZ/O
iNea7xUGRQu25V8eNaiN4MaPbNKveYTZyVer7NqMcEryPqQVPUGN1syrS2GE
p7D/ramzHaGVsXuaxUZIAndGGexVePzOEHCVY8TkEc+Ffdkq9M86xLGboDhY
Pa29fUIF4pd69+QwRbpd4Zrap92QB47VyF5S5GruOWVl9iJHsLYP9ynOJfOo
E9OH2brChwezKeZ1vAmyXKLGmcqegOIMiqCE8KWZcWqEueYoG1Mpnpct1qW0
qVG7rHqXVyJF94y6zTHyfpRSi6s1P1IMtOpWuUUOoIfnbR/hSOEYH7BQfnoA
MYukXqE8iu1mVW8dHw0gYcPurFhbCt2KtApbn1fwWODncP1jCnLWhs+x1qCV
l/fcZ5RA4CF5n7xBg9zQRMc2E8Evj9VdI2ka1CpyStIMBMNT8jwt0cBXtC7M
qZ9gNG612ZOmQTh4RoluPybwmrzU9+2HQRQUXOYvVxLsK7Csa3DXQsgtPtF8
j+AfZZe4+pwWmRfaA7bXEayK9Q1c1qlFQtnmk0k3CFLfywRXLHUQmxsy5FUE
nKUJg9IUHQQWF2WV1wiEzc8aFih0YMYMW9KvEByOXlmap9XBoXvp9FOXCBrf
lUo+4g1hLK+g4NV5Au4p87CMkCG4zklvkZQTrBPs9Jg6PoSZO1pmRp0jONrU
Oje5fghC5oC0sISgOdKTvh4bwqbP5S8FUgKLiSLlz0v0qAxqETkXE3hnqlI2
RuuRcYa6FxcR/GSzwPWrU3pYdfxgvZ/FBbKQF+YP9PANzmaesbjJLT93YEKP
XP8Dp6vY+dE7T1DvakB2wwdbF3bf4gDL4ZJIA9K3jgZuYvmE9G4s359vQM2g
UOIiI0iPPxYcft8An/SQSc1Fgqrx+1zvcQOeiviSs3KCgaNm1TYuBPPzbBYl
KAisbISikS0EPjflafmsnqtlqbZtvxNMMyVqv64nSHKrU1Y0EqxJ9my88ZCg
7M5ESjZ7947GW0u2dBG0+nu5xjuzPmrhHCnRsvr3il/4RVA01c/psHpHsCz+
eu7iExQR6nreobkUkeMMzBpYn+bMeDHqwvr9qGBY/YbCemtnnN6f4vb8neW3
vzRCMe1k0O59FLT8z+DicCNqc0tfyisoPnMb5KbkGHHF3WpvzFuK7+44VIfe
NWIoa3qROIT9P/9o0YoRI/x4PbOqVGxfT4mttRODwvXCvapSBt07epWmMAbS
X8+nz080wWJ8oeSv3xg8uPB0bWfZMHjVuzK6LzBw/z9G8C/RjmrX
     "]], 
    LineBox[CompressedData["
1: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
wwV/P5n/B0t945A=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 20}, {-0.5, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Thickness[Large], 
    LineBox[CompressedData["
1:eJxVz30s1HEcB/BjlB5EEhKKcJLnu5byx+dTqqX+wlS3lKQ4ImvVzENTqqU1
O5WN1FJ6co2xYrgpy62nIUzYoUO4jnvweCfcWq4+3z/6bN/99vq+v9/3dz/X
U6kRZ0w5HE7o0jJ+/59JKL5vHDHwnBv0n2smyPWw3Z/n8ippAvg840hh5fKK
6ixXln+BLTFOir29WvjX0w6B/pq00QItne+EmFlOdGi4FhLijdMNc4WPuvZb
aem+DOJye+Z6v2qgtcU4/aC1P+unEWmobxDaU77JkyM0dH4Iakq+bDxkp6H+
YbhrJYzP6FPT/RGIHi9P1z5R03sKKOF2Oz9MVFOfEpIECybpQWrqG4OOiqfF
mQYV9alAnFdg9uCTivrUAJecVF/vqahPC1O/889bxapga7SoSec1CScTXkqv
eqhAqvNa2pkCpbdAfurDOPyNo2eA/2pnJydxHPTGWDcLVe+nS7ysxyHfGIv0
EOxodVAsGaO+X/CkQJodKRyjvnnYoRMXzTuMUd8ihNR1yFNblNRnAM9bJ5bl
5Sip7zeY76mq9w5R0v9ysNZk+vm04SfZDJvepR+rbFKQLbBh5pmeWzdKXo22
1XK3j7IRsjUGz7k3H3ZjtkHxsHQx6+Yw2RZTGo+79Bh+kO0wLLL0ztl0ZgcU
11betVwYIjui5ec2ydtsZicMtebrJKuZXfA6CjxflA6SN6NCeGR+1R5mV7wc
nz0U1jVAdsNrIauaz+1g3oJvBB5R78vkZHcM32nTmsVl9sDHUevLTF9/J3ui
z9qFi4r9zFw8HDZzQzPST/bChIGixhW3mbeicHdcQGQwszfui+o2mKj7yNvQ
MfGke+JzZh+0F732m45j9kX9VPiLDVxmP4xwn9yVrO0l+6M+tlZ4vZ45ALsz
1+Va5JKvBOD85IS/WMDyQFQU18k2+bE8ED0WMyS+5iwPwg3lOZ+K5TLKgzD1
tF7Ol5A5PDxgKVrTVshyHpZVlM9gGsv5yL+gCYg/KoM/nAmaIQ==
     "]]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.642856181408366*^9, 3.642856196750005*^9}, 
   3.642928721880364*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"implicitTauTest", "[", 
     RowBox[{"q", ",", ".6"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.", ",", "20."}], "}"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"Line", "@", "\[Tau]q06"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Tau]\), \(q\)], \
\(\[Psi]\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642320922012107*^9, 3.6423209220439987`*^9}, {
  3.642855718138129*^9, 3.642855755909337*^9}, {3.64285578640661*^9, 
  3.642855795701384*^9}, {3.642856441863454*^9, 3.642856442050125*^9}, {
  3.642927304618661*^9, 3.642927307529104*^9}, {3.642933574781817*^9, 
  3.642933577996538*^9}, {3.642939030977504*^9, 3.6429390335836983`*^9}, {
  3.642939719474872*^9, 3.64293972230448*^9}, {3.6429400344344187`*^9, 
  3.642940076769731*^9}, {3.643010912377446*^9, 3.6430109164244413`*^9}, {
  3.6430112509861803`*^9, 3.6430112541367893`*^9}, {3.643011324762388*^9, 
  3.643011327928269*^9}, {3.64301140039439*^9, 3.643011403080667*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkXk4lAkAh6ecydEQIcPwTcU4Mj4Kbb5feVpX2l3VI2WLhA7HMpXoTrGk
NqZdT64k2rbQrppyrZnHIMeMR+kuyS1khiFHE9v+8T7v/+9rvjfaL3QhjUbz
/cb/zj21V5WzL9vN8+8a7fl5qSBv54irPzOe8nR9OMhvlApe+6bGMpkpVN7x
3uun06WCOI8AbRXmNepra+URH0Iq+L4OgVNmf1F5dNUIkceooOScY6LMrILS
k24TW10dEXQFlxp8MmuiPMVn3ONdPwqO/3QoaNjsNbWh1rtiT2W3YNFMdlOE
3RClfN6dXSeuF8TUnk4biZVTAz+frKOHNFJ2hbwnD0pnqOSXugqd2g9U35b9
Jp3ONDQ/C8jMKhumMo2TGDeClHBQT+ZbXTZOucSW31MSq4JxpG2Qzp+iRC+z
f4xepYHqiBXGH8MUFCdtzs3QSws7VM+cX+xLg0e/a6e9/xJkaVFqR08uxIDt
w00TI3QsyXhzMeeIMo4rUsjqBD10d5T1vN6qCjX64IFtbH1ol9IeVXurQ0Wi
4rH4XwOkNlprZepq4EtrSURGjCHu7EyPbJMvRp9/qZGpqTGexzuVVAi1sOHX
qMjGkuUoTs+5kRKqg9/nyhe572HA4VWn+p8ZS7DLRLT5ndwUiZ0T3jpBdGgK
rUcstjNhNSDLxzpdhDoVTAbYmMNxTWVGgo4e4k4d82NOmiMit/W0ZbseLgzx
2ltbLaCnLlpvUbQUm9k6tzWzCBhYOsnDwvVxqWSNcHMwCznqVUYHWAZo3npT
cdhlBfTb1JdqywwglESn2SitRMyFhvqJ4mUoO3gW4o6VYLl9keUdM4SpD+Uc
9WAV7nY5ThVQRnCfD0y8fsISIp0L7mnTRtj3QjBevt0KRS75N8OFxnA7e44f
zGRD2qI8F5GwHBnRY1WaA2yssunw2mFvgu4zRf3Xa6zBeNyf7DdpguHQin21
yTZAfF+4qJgBWaSumiTYFrz5+DpfrilKvVoUYbZ2sHLaJI22MUP/fvs1SpN2
0LifVF3VZQbju294yZLV2D6yIn/ZViYSg2ILJD72yNrinXevlIkphdElnwp7
tHMitd/TzWFZlXmtmcXBo4SpWRuuOZxC6n+gp3DAd/5ltE9iDmGOvqF4kgOT
G2slzvYWsBTqp27Z5YAnneyM2YsW8FUZYTytcUCwz9uG/j4LyN72iprYJBby
Q75GeRCIzrmkl/IbCc2u93GHCgiIF7Ck3ukkDBr4/ywoJMAOr2zW5JFosbIa
ziwi0MsZOHvlDxKfuf2BdbcJ7HgMWWYuCUuX2nWMewQ2jsvFt+6SaLNcO9Ba
9e2r586kusckhpXaP3OeE+CWyIKTmkj4f+CzGl8QaNNNXu/ZQmKcud5v9ysC
FzvuT7S0kigSuhSnviVA42qFtD8n0aA9vquni8BQrpDq7iExr8G7c3WUgIeS
//LCPhIHHF49ZcsIFO7/9Dl0gMR7bv2scIzAHtK49OMQCX3ba16fJgg8a+Sa
jI2RCGyy7tn0hQDHTmO6TE6iR7dc/Z2CwGVefvvhSRK9G0dtY+cIeO2WpE5P
k6h2CYjLW8DCLVFIWOUsicGYy9mOSiwoW81uOKEg8R03StCszELw5SsMt7lv
fY/OdAepslAjXzkzP08irGy16pQaC/8BBDwy7g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Tau]\\), \\(q\\)], \\(\[Psi]\
\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{798., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Prolog->{
    Thickness[Large], 
    LineBox[CompressedData["
1:eJxV0XsslXEYwPHXZTkiuR2Xkzg4lSO5OyHb8+hiJtHOH1kbEdG9rJaKamKY
KBVlHdaWVabltpq7Tiin09QSueSS3C/H/T5STp7+6Nnevfu8z/v7vn+8psHn
haGKDMPsWb3k9/9nQix6JJ8cyNM6HJYpGCOXQrzaCHs0XCZ2dJBPDXyNuO6X
UThMeykUJlQWRCwMitc6XyCE+3vAcd8Avd8AvOKcmPvpfeLjYfJpAmeOTodw
vIfOt8JPWzN18O4Wf6qTTzv8cjSc4eV1Ua8LmI5YXi6/k97/CV5vO5uFTBv1
e2A438Re9qOZzvdCSZGaxOZDI32vH86IFmQtJfXUG4RFYJ30CflEvSEIaE8f
LD8mod4InNOqlSZcqqKeDJr0iiySLIupNwanE5+Ci0a2mO+fUj1rMQE7fRr3
GvnFQM2sxeqTSfBULQvwXS6Bv2v/adgb5ev6IksCc/L17Ay01WhsqvCqh7vy
dcoccJNdH4S/bIK13gLUJGa/iptvo94iNLsrW9142EW9JXiXJ7rSvbWHestw
y8UjMii3j3or0NUfuzHYchDoxyL7mNKJ/sBhsjK6/VgeTWFPk1moxroabf1k
gayOA1PsJsPeX2RNrGIrjqRdVsA1a2NqaO+Sw5ASWRc73FU0PA6sI+sh+6y6
6+5sFtkAg2SZqZHz68kc9DfQL9R020A2QuPkIJUHFzaSjdFPOFtZVqdJ5mLg
xzfOwhYtsimOqukHlLZrk83QTD1KtPJdh2yO0mABb3+jLpmHLjcFpQVSNnkL
TpqUbNGp0CNvRal2YSvvpT55G8apShbPiAzIFph7SDvkYIIhmY8ZWfHenIsc
siXWRvd6KR3ZRN6OrfbjdwSeRmQrfOz0Oeub3WbyDry/q1p5iWNMtsbnSaPT
5UomZBtcXrlbwJf9sy2KI41t+Ke4a462RYlBaQO3k8zYYetUfgYjNKW9HXbe
Tkqqe09m7NH93tGlBBcz2tvjMyfBa6dcMuOArOtTKi1cc9o74NTEtr7wNDLj
iJV91wYUWDz8AxDHgms=
     "]]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.642855736856224*^9, 3.6428557565573273`*^9}, {
   3.642855787071718*^9, 3.642855797045587*^9}, 3.642856443454645*^9, 
   3.642927051038014*^9, 3.642927308287883*^9, 3.642933578954845*^9, 
   3.642939034237636*^9, 3.642939723101735*^9, 3.642939755131583*^9, {
   3.642940042060802*^9, 3.642940077264929*^9}, 3.643010917253017*^9, 
   3.6430112634743757`*^9, {3.643011326453484*^9, 3.643011328302031*^9}, 
   3.643011403573208*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q", ",", 
       RowBox[{"implicitTauTest", "[", 
        RowBox[{"q", ",", ".6"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", 
       RowBox[{"-", "10"}], ",", "20", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]interp", "=", 
   RowBox[{"Interpolation", "[", "data", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]num", "=", 
   RowBox[{"Interpolation", "[", "\[Tau]q06", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfSzRX99I5bXjn3+/DUD0v6peMxBdUXzCBkQ7Pdzi
BKKPpnB5gejS9PshIPrGsehwEJ36kKMCRBdZvKkC0WsmB74B0e8Sud6B6AbX
mz9ANE+L308Q7eIvrhYKpAttHMC0Q6mrbRiQjnx9E0zbKPdwhQPp/hV9YPpQ
yUydCCA96+9sMO20MdEARLP+XmcOot+8WHY9Ckgv90u9AaK5tNrYooG0T9wE
MG24vEgPRO+6UQ2mt/goRoPoFhtTML1KhyMVRHM9EwLTvVsaK6qB9Ik//JUg
WsT7gEIdyB+9pxRBtM7eYC0QvaD3HJgGACu1jLk=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Tau]interp", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "20"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Point", "[", "data", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Point", "[", "\[Tau]q06", "]"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.642855912982173*^9, 3.642855956229789*^9}, {
   3.642856024900907*^9, 3.6428560330759773`*^9}, {3.642856128565302*^9, 
   3.642856152964377*^9}, {3.64285729786228*^9, 3.642857298101338*^9}, {
   3.642857333462473*^9, 3.642857354933563*^9}, 3.642857424374888*^9, {
   3.64292735828162*^9, 3.642927380360011*^9}, 3.642929659530115*^9, {
   3.642931277259548*^9, 3.642931277354175*^9}, {3.642933670252742*^9, 
   3.642933705003418*^9}, {3.642939088815887*^9, 3.642939092446822*^9}, {
   3.6429397722241783`*^9, 3.642939772446958*^9}, {3.642940129280834*^9, 
   3.642940129727577*^9}, {3.6430059207271013`*^9, 3.643005920996746*^9}, {
   3.6430113671287622`*^9, 3.643011367431632*^9}, {3.643011424681079*^9, 
   3.643011425063724*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVxX0803kcAPDdCnnKQ/Lc2L6TMLPtl7sT3T4dXVGLlyOSRrvSqjmqHaUn
XdJlctckJpWrXF6Tjp5D9p2rdJ5aSYlUwyvP7GiNKe7uj/frTRUkhW8lk0gk
3n/+379TPDQ7izDZvIA5YsXB1yYujwVPIzyRMjkjMedgmlnbRO5HhGcp/7R6
GnOwyXLfT+4jCIdvU0iEJA7uOK81C+tAOOwOn+gdZeO9ghRm8U2ED2axt71u
ZOObA6m7YDvCKR+KMlXH2Jg5maZLf0bDseVvex5PsfCVeIfmEgkV17fWzTHI
88ES09KSPTGuWJBte7gmzhsnXxSyD/Ap2CcrU9v1pRdue1Apj25zwtyw12w7
9RJsKer0OJ7qgO/m+fedvbUYR8l9Az6/t8WSNWVlVnF0zKJIjooENhj5Pkgz
sKfhN7ZKlbexNb4uK3KcO+2CfXihgkT9fJxXb9SzN80Jr03pYiI/EywarzUu
3WCHc0wEWxt/NcAxhoxn3IQFuK9pVR35CAnruxklQSfm4xfsrsiaUzrFYQ9H
K8tAI+y8tqOPVj6o2Mc5cMPMioTFGaE+G2MaFGTvaHXjrQlF8qPYbxtC2rmn
K1qaLi7uUeTrIpdJ/TVczWrazt51mdwAubTJ484Ul8W39qSq3nE3pBueeDrz
BXzVs0S9rFDDTYZmpZOJEfBB0n7PfJLb9fHZqLLWFDZRQifFOTNcmaI6TSSy
hKia1/JVBWQYPeQ96dZiDft2GH5iZRpA5bzL8B4thPjxRYUbA+eBcHpAy79q
B8MWKutpJ1MI3h5acszYEfwe/x6ikpsDBTKUW2TOMHQQTuoZlrBZfb80ZJEL
7BqgNw+KraD/kOnKsSpXaJytydVfsAaZ0kWUR6KBhTokJ/DNAnirDPxNykLw
8uLZqXryQoh1H3TIjaHD83nMLeYUW/h+xeSrsXNukN2GQlats4N39rb5lxoX
gz07f2ntNnvou3w264b1EljmK81qOOMAR0dZ+x2DPKAzfuVu3wpHWH9u9dOM
JE8wKzDL0dQ5wSXS401rbnqBcEFMau+QM2RSo/qEPQz46W2y2woSBXo+8q50
ezGhbKba2MLLBVLZ9U1xP/oADvA6OebuCiqbUp2Mx4LwMyPKsApXoO10pV/X
sOBepXyrYRAVuMWuT7S/sOHunUXzm5upoDPqZvhTOKBOf5j4KIIGw8EvS5iY
A5HSbjm1jwZXd0Sc40URYOqenXApCcFd8u0EzQYCpoovqObuRvCg0I6VG0vA
ngDslyBG0NnQUde+mQBtAcPYYx8CE6/N/T+ICOjUNxZd+xmBcCiRSDtCgE43
nn8vD4Gb6Pjff5QR0F3p0ttSjYA1d0AafI2A1L/y2axaBAFFIbHDFQS4h/gd
OoURRDSZj7FvE/Dc6JNNxEMEGYzTNvcxAQ28/K9ftSDoHi6Oa20j4ElpR3SP
GsFoBtkjpZ2A9V1rZEG9CPTOW8btOwkoTJxoL3mPwIrnfoz/joB4RX+kcAgB
lJfLBwYJ4Dw58t3IBwRrV1qIs0cICM+pTl+nQxDdlbzcR0MA/ym76s8pBEnm
S1ViLQEf+l947p5BkFaSJ7ObJGD/N0aCVhIdMpfrBFV6AoYcUguWzqGDtC2a
sekzAf1+7i15BnQ4n1ilnZ0lICrWfo7OiA7/AqW/Or8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointBox[CompressedData["
1:eJw823VcU98bB3AYY4NtwDqoFd2YKMo9YieiqKiIYGJiYTd2Ygd2dzfqfUQs
bEVFQaQFBKU7fvuyZz/+8bUX4+ye530+957He6ceFz1kIsPIyOg+18jov3/1
Pw4gmn29W4mgDSwRX+mdVa+FGWLRTTeLNlDtErY9sUoLg89lu0aZtYHZXTnf
TpZq4e0FpzOnTdpAcfA9+7V/tHDgeJ5zTrMvTPrvJ18LAmunq6p6X8ha/N+A
Wuh7/q9/eJUv/DeaS7oWuMU938WX+sK3k7N0I2rh97o2k77/8YUh/w33UQsd
nRJMZL994e2b/3604L08/0xIti/0+W/AF1r42S8haOdPX3ha9d8BasF/MGl+
n+oL/x3erEe6949aesMixRf+Gy74nhbiu8yf3v+9L7T97+emFiI/t/PYmOwL
uoPTDaiFWQy67PkzX3D97wDPaSH5ts0j5hNfOPXf4Z3Uwvas4G2BD31B+d9w
R7TAXh01ceVdXzh44L8fLZyNnxT4+IYv/Dfbxbu1oPQf6th42Rf+m27Ydi2M
j2lv2fm8L/x3eF03aeHqZHHTglO+8N9w9mu1sLdjTdnto77QyrFSC+aivOKK
g756j8VaGOeTV+K711fvEaOFqe+aK6N3+Oo9Zmkhql0nxpUtvnqPaVpwuBEv
KV6PHpO0UHnU09stFj0idfMLrx4UtRw9wrTQPrRp3plF6DFCV4/mvsdz56FH
sBamvcn5rJmFHgO0kNLzEy9yGnr01oK6xnbA0UnoEaird8zrHT8j0aOrFiaN
zftpMwY9/LSwZfQcn1Gh6NFWN1/rxRv3D0UPL93xDWUWfh2EHi5a+JIsD5L0
Qw+tFlz70QlDe6KHvRZyTrd47SToodBCz4Sscx/80UOshYRZM1ytOqKHlRZK
bl+4NrANenB0v489HrDFEz1MtTAqfeTnZBf0MNKt/9dpM80d0KNeA7ETvQV9
lOhRpYGer8IerLNGj1INjLGfPvWZBD3+aEC0d6KaKTDkQwPtpwX/CuQZ8qEB
z+yOp1axDfnQQEsf9SxgGPKhgbAaSfeWJh/MhwbOD7K3C6jzwXxogPsgsHlp
pQ/mQwNzr2zOT/jng/nQwLkLxl/ri3wwHxoY2PHym075PpgPDdTm701emOWD
+dCAz/AX7++m+2A+NLDCvXd69TcfzIcGlsuUpe0/+2A+NPAjZQQ35p0P5kMD
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
PWroNPExmXUoGz1q6E4DC3bf6sRGjxrazHXDtlE2bPSooRMzI8W8JhZ61NAT
avp1eJXBQo9qerY/l7kTWOhRTaufjd466QQLParp6rK8rF5rWOhRTX8aEyho
q9vH6D2q6bPfa9zc+7DQo5rOGbs4wNuNhR5VdBrLbTTFY6FHFV1ZGhw3+q8p
elTRnfydS2I/mKJHFc0terHy3g1T9KiiR6V0GlW32xQ9quhxW6ds6LXAFD0q
6TYDXa2PjTSFl60elbQo1due1cUUPSpp2UTZyYW6fYfeo5K+ERt2t8bIFD0q
6VKjMVNic5joUUm7vxn+wuY5Ez0q6fVpk37BOSZ6VNBj+BvoOZuZ6FFBf7LZ
GeM7k4keFTQ93s+qaTATPSpoSYHZwS9tmehRQctcp2kTpEz0qKD7WB69d7nO
BD3K6SvvEiZdTjdBj3K6548rnR/QJuhRTnOede6WcsIEPcrpm22r1zX8ty9o
9Sinw5P7yX2mmKBHOR1mN894zgAT9Cijd51aPuiJtwl6lNFF13px7UUm6FFG
W05c0H1DNQM9yujsaxsZRj8Y6FFGk8FPh659xECPMpr3tn2g/DgDPUpp47WP
Uu+tYaBHKd3hppFmchQDPUrpD8tmumgHMNCjlAZ2QHWxNwM9Smnb9TP2JIkY
6FFKW0Y8sbpQY4wepfSBHk9nHk4zxvr/o6eOfJJwhDaGiNZ6/9Otv7ctl08a
A7+1vv/oPXkJ3V+v172/tZ5/6b6LtHHV03Tvb63fX7oib3SJ92BjrNdfevzc
ZeMXtDPG+pTQQZ4R9W/kxliPEnqbT/x9nyYjnH8JndIce+6E7jqsPx8U08bf
Pd9pnhvBytb5FdP9VFN8r1/Qvb91PsV0m8eJqQN1190PrevpD31vV2xy7Vzd
+/X/IUqv/neVdyPUCNfLH3oVl316ke46q18fRXTDDsaBII0RrociWuT2taQt
2wj9i2grecbggaktdGnrcIV0v86/DwadaKHjWn0LaVfndYkzp7fQpNWzkO7e
o+j9hQ6697cWvIC+PuJmsolxC633KqATWkrvL3rdTOt9CuhDnTWneHubab1H
AX28ud32hxHNtN7jN30le+3Kje7NtN7jNz3o26+lc6ubaL3Hb9q/dMmGxU+a
aL1HPr08wPjskS1NtN4jn+6XsCbt1wjd+1s98mlO940uAdomWu+RRy873rL9
/t9GWu+RR9df7iUa8qCR1nvk0ZMWut9kr2uk9R659MZ1hdE/dNdBvUcufVzt
3jfZTvf+Vo9cuv8t84BvhQ203iOHPulnOdD4TgOt98ihmXd85/VZ3UDrPXJo
zvuf1y4NaqD1Htm00diSFk+bBlrvkU3/cbo85s3velrvkU2/35j+bP2tevTI
ojWhV9pGrKpHjyza5MKr48MG1aNHFh35sh8nyqYePTJppkPSpH0FdeiRSVOj
qWs5t+vQI5PuODDg14DYOvTIpL90fvjn0+A6rP8vuq7S622M7jqm32Bm0E9k
Gxa3L66lVa31zaBDhnQoEjyopSNa6/mTtktwEnI31NL6DWU67eXz/LdqeC3W
K53OTWREDHWoxfqk0cO8B0afKK/BevygQ8MPmls+qcH5/6Anl0/Q7N1eQx9r
ne93emXGlUudw2too9b/0E6lLdkm8Q0euve3zieVtime/yu1oZo+1rqevtGp
YZemfUqupo30NwToWW0/+xQcqMb18pVer7iotJ5SjevjCx0RstYlyq8a18MX
+sD+Xv6f2NXon0Iz86J6h36rojNbh/tM8yc0+defqaJVrb6f6SNDr7Dvza+i
V7Z6fqIflcP+Hb1072/1+0ifmyf7uU5ahV4faau6Non78ivR5wPN3Ni+fdKd
SvT4QDvLczW89ZVY/3d0/MZzC6JHVNIrW+v9lk6/t0v517mSJq31fUM3rBnL
2lBbQes35Ml0z1+zZF1fVdArW+v3iq5N+97V4mAF1uslnZQ0ekLt1Aqszwta
4zklptm/AuvxjH7JdhmttKjA+SfRVQ/ntozKKKdJ63yf0j26/ep//Wo5bdS6
wX9Cn/a466pZVU6vbJ0P0PKPJqsvD9G9bj3+x7RN8OauQx1072893of0x1uf
e4iqy/D47tNRzQ4rS16U4fHcpV902fwtS3dd0X/+LXr9odQ2pdPK8POu0x/m
n10kD9C9br2hcYV+NSZs1yi+7nXreOfpmU4uk+9kl9JGrX9/it7+zzzd/bbu
devxHKEHOH5MfbDe8Pvd9KJVyh7jRxler6EVZtOYjp6l6GH4+f/vqSXvTDsX
nP5n+Htq6PPc1YwB/wzjU7dHDDkzqPwvbSRp/XxqTR4d/Wa/7nVrQ3ieMtkY
fmEJ9ddw/FT3ZI06LL/EMD8qfdDLIzO2lhjmT2Ut/VJytV2JoT5UgfBoqia9
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
De3wvY0Q/wfcEanQ
     "]], {
     RGBColor[1, 0, 0], 
     PointBox[CompressedData["
1:eJxV0XsslXEYwPHXZTkiuR2Xkzg4lSO5OyHb8+hiJtHOH1kbEdG9rJaKamKY
KBVlHdaWVabltpq7Tiin09QSueSS3C/H/T5STp7+6Nnevfu8z/v7vn+8psHn
haGKDMPsWb3k9/9nQix6JJ8cyNM6HJYpGCOXQrzaCHs0XCZ2dJBPDXyNuO6X
UThMeykUJlQWRCwMitc6XyCE+3vAcd8Avd8AvOKcmPvpfeLjYfJpAmeOTodw
vIfOt8JPWzN18O4Wf6qTTzv8cjSc4eV1Ua8LmI5YXi6/k97/CV5vO5uFTBv1
e2A438Re9qOZzvdCSZGaxOZDI32vH86IFmQtJfXUG4RFYJ30CflEvSEIaE8f
LD8mod4InNOqlSZcqqKeDJr0iiySLIupNwanE5+Ci0a2mO+fUj1rMQE7fRr3
GvnFQM2sxeqTSfBULQvwXS6Bv2v/adgb5ev6IksCc/L17Ay01WhsqvCqh7vy
dcoccJNdH4S/bIK13gLUJGa/iptvo94iNLsrW9142EW9JXiXJ7rSvbWHestw
y8UjMii3j3or0NUfuzHYchDoxyL7mNKJ/sBhsjK6/VgeTWFPk1moxroabf1k
gayOA1PsJsPeX2RNrGIrjqRdVsA1a2NqaO+Sw5ASWRc73FU0PA6sI+sh+6y6
6+5sFtkAg2SZqZHz68kc9DfQL9R020A2QuPkIJUHFzaSjdFPOFtZVqdJ5mLg
xzfOwhYtsimOqukHlLZrk83QTD1KtPJdh2yO0mABb3+jLpmHLjcFpQVSNnkL
TpqUbNGp0CNvRal2YSvvpT55G8apShbPiAzIFph7SDvkYIIhmY8ZWfHenIsc
siXWRvd6KR3ZRN6OrfbjdwSeRmQrfOz0Oeub3WbyDry/q1p5iWNMtsbnSaPT
5UomZBtcXrlbwJf9sy2KI41t+Ke4a462RYlBaQO3k8zYYetUfgYjNKW9HXbe
Tkqqe09m7NH93tGlBBcz2tvjMyfBa6dcMuOArOtTKi1cc9o74NTEtr7wNDLj
iJV91wYUWDz8AxDHgms=
      "]]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-10, 20}, {-18.07002536022356, 10.015556427692145`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.642855928315098*^9, 3.6428560384735603`*^9}, {
   3.6428561084049263`*^9, 3.642856153211458*^9}, 3.642856409234066*^9, 
   3.642857298716899*^9, 3.6428573559248943`*^9, 3.642857424892837*^9, {
   3.6429273406517267`*^9, 3.6429273811105967`*^9}, 3.642929660247484*^9, {
   3.642931278574705*^9, 3.642931298363821*^9}, 3.6429336187699127`*^9, {
   3.642933654324182*^9, 3.6429337053946857`*^9}, 3.642933754257077*^9, 
   3.642933797479393*^9, {3.642939084864356*^9, 3.642939092991879*^9}, 
   3.6429394525875807`*^9, {3.6429397695976677`*^9, 3.6429397728851347`*^9}, {
   3.642940113116989*^9, 3.642940130134458*^9}, {3.643005917713299*^9, 
   3.643005921367734*^9}, 3.643011274753331*^9, {3.643011363472123*^9, 
   3.6430113678317347`*^9}, {3.643011421146078*^9, 
   3.64301142552913*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
1/8A2mwiWw==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "[", "q_", "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Tau]interp", "'"}], "[", "q", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]num", "[", "q_", "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Tau]num", "'"}], "[", "q", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "q_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", "[", "q", "]"}], "q"}], "-", 
    RowBox[{"\[Tau]interp", "[", "q", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fnum", "[", "q_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]num", "[", "q", "]"}], "q"}], "-", 
    RowBox[{"\[Tau]num", "[", "q", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "[", "q", "]"}], ",", 
     RowBox[{"\[Alpha]num", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<q\>\"", ",", "\"\<\[Alpha](q)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.642856134984179*^9, 3.6428561598938017`*^9}, {
  3.642856201109467*^9, 3.642856250997673*^9}, {3.642856340038774*^9, 
  3.642856351189603*^9}, {3.642857452838313*^9, 3.642857489863769*^9}, {
  3.6429274385380363`*^9, 3.642927452859014*^9}, {3.642928476507008*^9, 
  3.6429284995945053`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVynk41Akcx/HRhEi7VJR7lNCEjF+uiu9XknKUtFLxVBMVCjm2dKxyH6HE
RkuuZO1jsasiUtmmy7k2lWh+xjVkzDCTyMiyv/3j87yf1/N89I6FeBxfRKPR
DlL7v7ejjsmx/HLtYmzLTly9LYH8Q8LNXozzEOGe25GYLYFut5QwBiMZ0hwU
liZlSOCc08HvZBm3gNPWtSQrXgI7nqPPV93foDUqPLQnSAIVMZtixbp1oFQ0
vW0tSKCfXakm0m0C+d8XbKqHxHBx76mjY7rdYLbSIGJ4ixjmYy3VeandoFXj
ZnrWUgxXamTevJF2Q9Te4RRFlhjiNHMc6jt7oOv1Ay17AzGk858bJCdywWP7
v358ZTEUntcRGUzwIN1Wxl25fQIGOz5tZR0ZBLpU/am9yQQoSHObTpsKAOU9
egoXj4N1YvcFZ7YAPFiXDULnROCvusrYKEsA+sqPhE5fRPCSdSN9UCqADWF1
L5cMiSAuMGnfoRdjwJQPm3vPEQGNG0E6+YjArczXuiBOBBd5pZEqjmLYMbFI
pkJRBKHPLqcKwybh25knwVaGQjAtyfznfqUU9EyaVhnlC4C/21+LZ03DOyl1
ngpmo5CtkaBddJSOAqeAQQn9E9iEPayit8rhMR+1ma7+YeB05bqHGCpin/KY
pHSAD6zUebvVu5bhn7UNtdNL+eA0vJln5qWMBfIJVUGbh2DEpMbxi1AFk2dz
Vn53dRAuziUTDRdWYMaPNmfqxAMgr/Ip4AemKsqVxFpFeg+AbJus09LHaugy
fiuvn9cP39orTt8IXY2mal7PzgX0A9+rUl1HRwPVfYS/htP7wT4pOOh1hSbe
l2V1Pq7qg5/nHyo4HNFGhenPgdpH+8Bbi+PKndTB7Vu/bTfS7QOlxg3CNZ4M
/LvLubGIw4PjFsVTB4318Agn1/+ANw/ORUV6MKb0MK/ZMumZHA/iBZmd7e1r
kO1aLN5U2wuuzO/LlH5ZizlE54z4bC+kVVg2urL1kbuQk7UOe6F53525CJt1
KJ+VdbNeqRca20JSjekGOEC3M3EfJKE6MBpbSQMMPWMjKGwgQccFrIPvG6Lm
29nYlXkkOCz4xBZcMkJONrFtNJoEv/dPPz/0XI+24/OHLwSQYBcd84DNYCJf
lN7B8yThRojkkdIIE0+zV/yEjiQMXLk7XPBkA+7RdZypsyBh7Hid37NEYzzv
ZvVhx3oSxEHL5dvYJsjS/rD8D20SKne1zJ0wMcVrZX3V/itJGPY3s6RPmWJR
oHNxuhIJGuU9mYltGzHeujrTVpaE2KNhxW0uZph5QqeTvcCFr3PqaS51ZthG
8q6LpVwwepR9q1mfhTS9Zd3sKS5Y+L7Yo5LMQo8Yy5BHEi405qmubp1iYbqD
hLl/nPo3qqbs9jZHQ7/HTfljXHCTFWq/eWKOXtIP5R6jXBB/HOI0MQkM/GtR
vekIF0Ly0lYkXyOwr13OPJLPhVYZ/QnnDAK775ZrhlJmnqxvVsokULWJphhI
eYg1En39JoFrPMq+eFM+8ArF2bcJ1NlYKIOUt32ebC0tJ3CdTczXJZTVdh5K
eP6KQG6NiV3+EBfCK8TshCYCk9zba7MpdyxPtN3ZQqCmUqNFBuWr5L0vLe0E
7mbG28VRpoUv8+18R6Cv4p7YQMqC240wMEggk3Gyy4qyE91Ls4RPYJx3VRaL
com/aPr4CIGnhJr7N1A+QmhUjgoIzEjby9eh/PZ1uJZEQmBUw+gmOcosU8WZ
6kkCtzyeX06jnJ5Z2BkxReBCjO6UdJALuw63pczMEOi5P/qFiHIpx/dE/SyB
qbN190YoL14/a39pjsDwhum7/ZTZ6de17eYJDEs1z/tI+cmkgXRhgUDZluCb
7yj/B7RLuug=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV0nk81N/3B3C77GZQQmXfE6ai8u0clC35iKRQtiwtlkoha1T2kuUjUfnQ
XlSKLCWilC2tKDPDvGfsYrIUid/799d9PB+P17n3nHuvik+Ikx8fDw+PLi8P
z/+vV2N9hIwOFmwVtwk7lTrIhWtuY5tdlSPB+seWYqkBLvTsTD2urJwCz7m4
3YDNBWOT9yWi3Vlw1CnRc6CfC+HW+yQFlfNhjzQ/14TJheeuRMRSwHWI0quf
U+3lAu/TSu5CVzH0ltRE3u7mgvrzP5rzf27Cqcifoa8/c8GqCT1+rbkL9g8C
mNGdXAhsO3dp2vIBeJgpvG5v5ULa55Y33ICHcFtHVLXqDRdcfwjH/tr+GPTD
TGa3NJD54/fkZ7vKYVyx2HxfLRciZ+2fTB96CkPKdgLSFVxIPT2xc+pPBaxK
XLfVq4wLhYuXhrgZzyDDwmnC9jYXShPWJ06uqYZNnuUr2q9zoU6oa9XE4xoI
DX6nuS2bC52pkVXjls9hrNHwZUwaF/ollZzHvryAhoP7S+oSufAzq258JOAl
TDj+80komtx/l/qDn12vQHWqNTl0P5n3Lls+vuYdxF4tz+KocGGkZMl3bOgd
DNzLmqpUIOs5jo9HH7fAl6hTQUkyXBA4PLVjxLINKg1au60EuaB53PTMYMB7
SOq+kwHDk7DRvH9msusj5Bjf/bLsySRE7TriNbqmB8o45+P+2E/CYuLGlcz0
HphVW8u712oS4it5P36c64Ekhb7RRpiEs4qXLWs+fYO1FyLO3TKehAucJs2U
pF6Iuezt0y4/CUWRq8c1J5hAE7Y5srZ9AojOITMjTwLsnGQDfkpOgMhcwbuj
BiMQTLmy26FyHEyTek7beY/A/es5In0PxiFQboW+ds4ITMq/UDxdMg5vjLIu
EHMjkN2W59qcOQ5nDyc7u70eBemmRL53R8aBpzeMbu0xDvaKrTmWauMQxbwV
Qdk+CXxWfnn0vDE49ioufez4FCha9Cfa5I7Cb0pO6fe0KeA7b9r4MmMUYr3v
dLTcmIJZ25MxZudHIZ3ng/Tdr1OwtOu6j1X4KNzZqprrt3kain0qJgr2jUJf
TdNVBu8M8HxX3ei5ZhQcn4g87MychSvCpyVry0bA4Eb2h6dlc3DEUcjw2/dh
kL1s+Kv+3RyMN5XEUb4Mw5+0dqV29hy4dOS4mHcMw9sTwoEchXkIE86tf1g/
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
Obe0RL6X1JqkANL/B8jo/Js=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox["\"\[Alpha](q)\"", TraditionalForm]},
  AxesOrigin->{0, 0.42},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{528., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6428561485900497`*^9, 3.642856160218761*^9}, 
   3.6428562213047447`*^9, 3.64285625154556*^9, 3.642856351630404*^9, 
   3.642856410690777*^9, 3.642857490557646*^9, 3.642927413171463*^9, 
   3.642927453447214*^9, {3.642928489185824*^9, 3.642928500098074*^9}, 
   3.6429296702159767`*^9, 3.64293362344858*^9, 3.6429338032539062`*^9, 
   3.642939110863368*^9, 3.6429397757864313`*^9, 3.642940137453793*^9, {
   3.64294020601433*^9, 3.642940215560239*^9}, 3.643011190057658*^9, 
   3.6430112822056417`*^9, 3.6430113698645267`*^9, 3.64301142819893*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "[", "q", "]"}], ",", 
     RowBox[{"f", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642939808677606*^9, 3.6429398480004053`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Ll8iYAX2bmC8VMDr/TVJExcJUHCl0jNGFbA798UeRQ8Cllxr1AQmFJA/6ZUf
H+lmt8s6XlMKmCgdVDPlTsCV8w0nNeYVUGLFJ3YJ6boLNyLzuRSxrqPHxZz0
hctdvOXCirjGJCEz6DwBebdj55q1FNG0/dumeTdy/mKp9VNBivg9TGta0IXs
74SIXoP7imguL26/fJasXwrv/MuHijgTYt8xRLosZ4FuEKqI7mePrSwmrV3b
5hfzXBHVXlNEXUhvn3/MOMhWxMM7KbrlzgTIHFtx7VmzIq41MbW46UTA8uof
SrsllbDg7bFR+dMErOr8MF9GVUKZ8IooYdK8GUkVBjJKmNeuasZFWtL6gqOl
nBI+l1qY63Ak86VxvPBVU8KXTm9XPCF95YTU+rwDSrj/y5mlv6cImH9jPaTu
roRfqy4e7XQgYFK/NWFLiRJuS2N8qLIjwEc7m3a/TAmbVfTFC0nPq4VFD7xX
Qsvg5mss0hziJk9jK5XwyMuS049J84x8DORvVkI6Qzf/OGl6aM6p6T4l5PE2
8+6zJeBY+1Na0Xpl3N25uLyOdJbLsWhjc2UUWBP81MuGgBLOnDOjFsrYE9Qn
5kS6OkpENcxaGQOuT6ZYkP5R1V7WZq+M5xRrRrVJUxTtB0+5KaNR1Y2V60if
/3Vum99NZRRzOWkYZ02AvNvdysQUZfL/FC/wzYq8/1YOheqzlVFYp22+jjS+
MLD+naaMY9Jev8tIn6jZ8GdrjjKqCY6MJJO+o/SP4LsSZdSvLHH3J937O9a2
+YsyFn+nW0iSHg3klPduU0b/fU49/KT/ijuOi34jz3f3ls9q0vzGzNsnu5TR
Ytbi3aglATosVvLQT2XsJxyKykkb7d/o9WBYGaP6foXnkT7R6bFHZZTMl8vj
yyLtsUG9wWtKGWn5NMsI0lcSnkaKzCqj6Cpuiwek7+6ZccifV8ZaL1v7m6RD
v5xQsllUxuezey56k445lz+1vKyMRb9uhbiS/h8jJClR
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
SBWozZuiTnQrEE1PC+C7rjLMHiX4/wQhdH8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 15}, {-0.9984160663968558, 1.7529555176842782`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6429398165039682`*^9, 3.642939848539583*^9}, 
   3.6429401686583567`*^9, {3.642940212527989*^9, 3.642940216584527*^9}, 
   3.643011193540951*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "q", "]"}], ",", 
       RowBox[{"f", "[", "q", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]num", "[", "q", "]"}], ",", 
       RowBox[{"fnum", "[", "q", "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1.2"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<f(\[Alpha])\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.642856292311116*^9, 3.642856325291173*^9}, {
   3.6428575061020823`*^9, 3.64285751477352*^9}, {3.6428577126471987`*^9, 
   3.642857715623859*^9}, {3.6429274591143713`*^9, 3.642927621193859*^9}, {
   3.642927655018764*^9, 3.642927658690605*^9}, {3.642927792827099*^9, 
   3.642927820218192*^9}, {3.642929675244026*^9, 3.6429296846522017`*^9}, 
   3.64293716734459*^9, {3.642939825986391*^9, 3.642939854720593*^9}, {
   3.642939897330168*^9, 3.642939914017292*^9}, {3.643011295994401*^9, 
   3.643011304122821*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
    LineBox[CompressedData["
1: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
kM8E7Vklc0oMD5Nc6jPjRjEh9IJuQaYaHzOqKnD71ZsJPY/dFyqa+Fjejf09
ow5MGMwYTH1pIMCSTOrCTc2ZoFmp+sd4uQAz7+LNNx1kQqSeq8WkvBDzdx4b
OL6HCYZfe6iBXkKs60bcxioVJlDf/mll/UKI7TLOqLmqQM4fbRC5iomwuSMS
pUmyTHA/NlLtZCTCBqoC04wlmZDMc8psDBJhZpIT/3h8Y8DdEwclmWUiDA39
kYx/YYBhmN759l4RxlFiDHp8ZkC2xJU8lwURpsSS9n9BMKDVqOvO8haEzdM6
9zqKGNAjnTukpI+wTTI5nYV8BphOx5fQbRC2QanxiR2XAWJLcvY0T4RFuk42
7ecwgDqvaeUSirCrboIDoZNk/vMEquguwlbMUpQCSWufqPDUvYew3sApaR/S
Vbf2pISSpigkzbqSblXvvE6JR5jkzjtrTElHWtR6KCQgbF/y1Xkp0tTCqE/a
iQhz7VEwKWQzAF9+E2OdgrA1wXUNWaS1y3jySaQTjR8eTCHtfpIW3E265Lqv
SQxpsU9LfTapCDOK1o/2WTVfZ9A6DWF7520GDEjb5uoqmGcg7AeTrPQDq/3i
VM5Fk8aGxR21SO/YdCb8Fem9aYcmt6/ON1F2NM5E2BW8V2/t6rxsTQ/dLIQ9
Xp7aKEY64LYgIYA08fe6z18myHn6dWnPSBs3ercJSbu3Ox7WyEYYz6u0lrPq
gKChy6Th4Gj5GOmquQ6HYtJVVKX8j6v1I+GVDNLN55wy/yWNnw+f2pqDsP8B
KHlPug==
     "]]}, 
   {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[0.3]],
     LineBox[CompressedData["
1:eJwd0Qs0VdkfB3ApjxQh04SZiTKNJJOZKen19SiUiKaX9JCipm6lmEI3mkpK
iOSRURpKXaQSIs0cklce0TQh93Jd3Pc9+570kB7+p/9Za6/f+qzv7+zf3mtb
Bh5YE6SpoaFxmV1f6qQKXW6chIHG/z81ft2cyJskZtDQ4XXh0yjBzjYfb7sB
Butt+H++Zu36lc8ecR+DcOucDBFrYhP/yaGXwUfN9HG1rHcZaenO4DMokd/1
v8S6qOHB2RudDPYbyk23sK72uXWi9jmD4WvzK/VZ5/D4r7htDKZ3JVbe/Ezg
+6/Hy5YmBg8FsrTZrJtbmAXldQwu9i9tTPlEMPlSh8HiagaR5jGtPR8JbOaN
+PtVMlhcdm+6Hmv9HD8Lw1IG+QPVzpM/EPzd+8Y/oIj9vyPvxrv3BDEtAwta
shmYtLY7eLwjuJYc7LEshYH4iV569WuCg2Y84bFzDNyLB9ynDBEY20a91uYy
qEvTTTxKCMQlhiHrwxjctByJilcRGKXsdrjFYWBVt3x+rIJg7+rdvJAtDA4d
WXh7oYQgI9Hnc/E6BtfeCk0lAwSSYl/N2d4MHArDRs6JCAzCeAmLwUDHhWYu
CQgOdRbdHbRkcOfvF8Gtzwj65P7G980YjFtg6888JTh2YFJ87GQGuz+u3/qp
mT3vvbHv3LQYhITqvOipI1gz07IAMjU+5tCnWisICpfNywwUqbEnyj45qIyg
djI/8WS3GmtSP40VFxNohc3qEraogfM6hSUF7PssrmF076nxpGxo5fksgh7u
I5/QQjXMtvzx27UM1msv1/Kvq1HhmIJrFwlGKw2PNmSo4Rmkv+f3eILHwbTJ
2Gg1Ip9+DtpxlMBQgksfVqkRkFvUnrKegOdPmW10U6OsxGfOGl+C7/S9tR5D
jS1NOV7aqwjCqStX8n5SQzvTdesvzgTq5uHIlqlqSMU13C4bAp3n2zPntBB4
aP88bd8HGgf4uu8VVQQz242mLH9DY1Fcl35RCYHmDnNTPUIjInOC3mb2Hmeq
0vz2imjMfhi3aDeH4KXhUM/FBhotZtwLrwwITEy3uvxxgcZgjRTcsQRHOA3W
sedoJHckGhsP0zieOk3rj1M0cpbG/hDYR8N76OMy38M0VN1axzJLaNzzS0rh
+NFor6f7bbbQeORhtyH2WxprDg5HeJep0L4q2Wjksgq5R5rshIUqPFgU6LEo
TYUDYc1Okbkq2Mf57AtLVCHKdyO3PkmF7Sl9itYoFTapC2Y27lVB89BGHZtt
Knj913zfdYYK2beuzT3wnQqnZM7lgnQlMnxniQrY2jR5nf2O80ocP5ispc1W
JvywJzmtxMNaV64fWwVD/YHmh5Xwv/7vfWWYEj8X/vZdzVolPMPLS+t8lRhb
WMzsnKzEq9MhVw7qKSFXa/zlkaqAenNN/ZEjCuSJlwipBAWS2i12rdivAL0j
IHPxaQXeLen9/FWQAtZv1kW7sX0737f5X12jgOOhsROz/BTQfFnLOzpHAaXw
L99t0xSw0T81fFAkR5LvYevKIjnaaqcEfrNCDsbm9NfdN+SI39VXuhNyzHec
0Dh6VQ6dvmAT3jw5Ql6HhW5IkcOHHradOV2Oq4N1gwiX4+6R9L1DIzK8Kt7p
9MZFjuKDRaaSAhlmRni6v+yWYfGtFLvfJ8hwt+JZmtF/Mpx2TG8/pyHD8eAi
jnOrDDFpFoNxb6S4OnKy43aVDGdm7Y+I6pVicOJNXv11GbolK6yX3JPCqwNF
dIgMWlXdpQs3STHVUdhTrieDcGX9Lc08CfJiznS5ekrhsJq30HO+GNqWzhqK
5VJMzG7zOjBbDOfnNXGpTlIYx5t2JVuI4XPih6bX86SgmjtPPNMTo+7jrvfd
FlK8bjvj7do7CNO9LRO83kkgsU6crowdxKY5NroP2DkeDtZZ1zsH4Osxexs1
SQKN9j0tBpH92NkDcyvlIDL4YzizjwrhUqm8N250ABo6P9VWeHdjhR83u37V
AKzWmYkco17AJmvM3X8q+rGAmrndZNIzLDmZ8av/mn4IlVIPLYcWbJKfqI0b
3w+137EnBQP1aDPse+jQKII6+v5zRcMjVG549VVoggjHl0plP/lWIrfHOMLP
WQQNq9RPWkn5iC4NDxFI+nDc5fayxBvJ1FvzGUGXzvVB2GQ1FPb0PuVit+N0
ybQ+VNmqDiUo6ykHMzNnUaUQGnarYtw62qnR83ZZzzYI4WToPtHSoJN6GUps
L4wRwsIoK8G3WEDpHzr5ojSiF3fub2vx/KWP0rJrdDH43IOMFrdv7Tj91APr
sw+Cr/bgjqF5ZcqcQSos0Dq/el0PAgJl6oAcMfXMQ2y/xKQHSaUjLk1vJVQM
59txrSIBkvKbP1eMkVG1T5ui75QJYHH4woQJ72VURv62j5MuClBVuPX3uEdy
Kvf2wfrNEWwedbh79Q4FlbZSnjB7uwAb9/MfiN4rqBedcW4LvQVY4FQ6mh+q
pNyDtfqWLxVAY9QmOlCgpG6+m2Vf/iObx/jkP3ZSUTOyh6KsrNh8n42h3QUV
tbbga/8gUwEazgYEMb0qqunsX26thmx/UcLTnmk09VuwJDpyvABzA7xudm6g
qfSt8rhiTQGmNvbU6CTQVPVec67LJz77/qWOT8ppainN7587zIfhbleHKyKa
2jNUZkqG+Aip5BnlaRPqR943AyfVfPgYj6x1tyLUf7l/SrxUfLQNjHGrcSJU
mPPJD5ScjyoD53lDGwh1gpNJUqV8JF3cN1WLQ6gZoWGuSWI2dxy2tIsmlOv3
AWfoAXb+sv6z7xMJxeMwTyVfbOfivug8oXK7I77pY13VwXRxWfvODXn8L+uk
kxbRo6wvl7xaXcF6rqKuXjOZUK+tV6+LYX08NHXlmBRCZVQFmVp+6bf/vkuQ
RijuSPeo2ZfcvuRHs3RCDfmvUJiwDqjgblrP+krq+HZd1lcj0m1bWQ/0T+tU
9/NhwRmtrswg1Bxl7vNq1knJb3mJmYTyyY7Xe8h67mdtpwbWOpGc5WWshetr
eWP+JJR9ntGTfNaGg9bDoaxDuxiDi6ydrNKj12cRan5jCieRdVX29OJE1vFC
26dnWPs4TimvY/0mZlnuMdYBvcZL519m9zepMQlnHRKu988+1rcaF5w7xPq4
h7vRddaSvOva+77MT61y4LMuLRgfu+vL/nn77CdfIdT/ABZRUVE=
     "]]}},
  AspectRatio->1.2,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Alpha]\"", TraditionalForm], 
    FormBox["\"f(\[Alpha])\"", TraditionalForm]},
  AxesOrigin->{0.5, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.642939902349266*^9, 3.642939914509013*^9}, 
   3.642940179238071*^9, 3.642940221383737*^9, 3.643011202246978*^9, {
   3.643011278755968*^9, 3.643011304670274*^9}, 3.643011375239108*^9, 
   3.64301143162146*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "[", "q", "]"}], ",", 
     RowBox[{"f", "[", "q", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", 
     RowBox[{"-", "2"}], ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1.2"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<f(\[Alpha])\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6429296886993103`*^9, 3.6429297117049923`*^9}, {
   3.642931096747402*^9, 3.6429311301632357`*^9}, {3.64293117098637*^9, 
   3.642931254732377*^9}, {3.642931309997303*^9, 3.642931346827525*^9}, {
   3.642931489437293*^9, 3.642931493084796*^9}, {3.642933825022724*^9, 
   3.6429338288229513`*^9}, {3.642933878205515*^9, 3.642933878813341*^9}, 
   3.642939164017974*^9, {3.642939942273683*^9, 3.642939995361165*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwV1Xc4Vf8fAPBrCyUzMpLyVTJKFKH3IUUkeySrrEJfK0qIjKhvGmQkOySZ
ZYaOkeyy8jOSdbkX1z02ucbv+OM853k95/Nen+f5fM7hm+5GjvQEAoGGP7vv
ChNk1aWLC0GisewdtWHUfqmp/lUnF0J47LROFB9Gm9ilEkp/ciHBjaVGoSzD
KO9M7onlDi4k7bHVE9LP36jKsuWCbisXYufJF4pY/0Zl/P6VsqrnQjpf3UpP
vT2E/nwjLZ1byIWMepCoDpoDqKRPj+31Ajz/dSZh8UMDqIHHzg5LPhfiYZ38
36O//Si/Bf0941y8nulKyPH8fvRTdLxEcSYXMr+ZxL3D2Y+WPnhx2S+BC3lp
IfFQoqEPPc7d51zlz4XUuoeO7BvsQdd5LCOj/LgQsVqCVMi7HvRUk1GM+T08
v7ye6R23HrTP36al2wuPH3cLeLfZjdbS0SM3b+PrH+qre/J3ozHZWpRmE3w+
hdQ75bKd6MUSmmLpEXx/3IoFKL+a0GWynB2I4f2psQ8kajShPTrFGdXC+HrN
989W87+jJzqs3r7gw+cLGODODW5EWdAZlWhmPH7NIHWIrwHNd6x8Ozi5H0Gq
bgip0qrQrM2gV03x+xFC+EBvX3YsmjebQkmPxt3X4zxL9xKtHnlL7xKFO3E8
QyYzDN204WGrD8GdNmA/OGsENkJ6t5+64Q7WsHUrTQCL9ty1M6p4/nNqFf73
P4FTl/ZAs+Ju/ssBrftKgOTt6nJBbj8ySi6vIOSUQoFI7OD84f2IWIxZwvmJ
Cnjrd+/+Eeb9iJ3xuO5yAAr9mh6V/DGcSNFP+uy41O8wu+z6fD6EE3k54K7v
E9IEzov09s+9OJH5f1Jf9zo1w/yW7zMuQ04k2P3oKVGFVnjslKgsws6JnCTz
SxaOdsDJs+FCNl77kGZPnfKs2m5Qj3epLWXai0R6aczlkgbB8V9DvkAKB+LB
sne6xm0IvBULSsndHMitmx83TBeHQKfpglNOCgeSM8Xbw7jzG4qkopmKT3Eg
tUKmYqjICEQPScdKXGRHroQEMCeWjkG2Y9J2kwQ7so4eopE2xoAx5PNZemZ2
pDlj6LIGMg6p7cbNao1syGC8hz5z2ziEykkebDvPhhicb/FVHZ2AQ2uhQQ6i
exCC64LHKcYp0BtYaH++zooMPi4mxmhNQeCfqN+m3awId5EYU/rTKdBJEn5R
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
2A==
     "]]}},
  AspectRatio->1.2,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Alpha]\"", TraditionalForm], 
    FormBox["\"f(\[Alpha])\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.642939995845552*^9, 3.6430112107419786`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "=", 
      RowBox[{"-", "2"}]}], ",", "\[Tau]f"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"implicitTauTest", "[", 
      RowBox[{"q", ",", "0.5"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Tau]f", "=", 
     RowBox[{"implicitTauTest", "[", 
      RowBox[{"q", ",", "0.5"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"eqtest", "[", 
       RowBox[{"q", ",", "\[Tau]", ",", "1."}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"-", "5"}], ",", "0"}], "}"}], ",", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"\[Tau]f", ",", 
          RowBox[{"eqtest", "[", 
           RowBox[{"q", ",", "\[Tau]f", ",", "1."}], "]"}]}], "}"}], 
        "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.642928991228692*^9, 3.642929055289771*^9}, {
   3.6429290894015703`*^9, 3.642929329690978*^9}, 3.64292939491346*^9, {
   3.6429294482844763`*^9, 3.642929522316299*^9}, {3.642939509090292*^9, 
   3.642939517093255*^9}}],

Cell[BoxData[
 RowBox[{"-", "4.280000535699285`"}]], "Print",
 CellChangeTimes->{{3.642929150749666*^9, 3.6429291665292883`*^9}, {
  3.642929215914744*^9, 3.6429293316880283`*^9}, {3.642929385147945*^9, 
  3.642929395645136*^9}, {3.6429294385278997`*^9, 3.642929522534562*^9}, {
  3.642939510160942*^9, 3.642939517657733*^9}, {3.64293962143281*^9, 
  3.6429396657921267`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->PointBox[{-4.280000535699285, -0.7211220505817764}],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-5, 0}, {-8.472132143056577, 3.536525041788293}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.642929019433539*^9, 3.642929055538251*^9}, {
  3.6429291298932867`*^9, 3.642929166645543*^9}, {3.642929216038348*^9, 
  3.6429293318602037`*^9}, {3.642929385325953*^9, 3.642929395858137*^9}, {
  3.642929438740226*^9, 3.6429295226682568`*^9}, {3.6429395102899427`*^9, 
  3.642939517786249*^9}, {3.642939621565189*^9, 3.642939665929373*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "implicitTauTest"}]], "Input",
 CellChangeTimes->{{3.64292906393696*^9, 3.6429290789189863`*^9}}],

Cell[CellGroupData[{

Cell["Global`implicitTauTest", "Print", "PrintUsage",
 CellChangeTimes->{3.6429395374523973`*^9},
 CellTags->"Info3642946737-1024975"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"implicitTauTest", "[", 
          RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
         RowBox[{"\[Tau]", "/.", "\[VeryThinSpace]", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{"eqtest", "[", 
             RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"q", ">", "0"}], ",", "0.`", ",", 
                RowBox[{"2", " ", "q"}]}], "]"}]}], "}"}]}], "]"}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`implicitTauTest],
  Editable->False]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.642939537482288*^9, {3.6429395873903027`*^9, 3.642939591789529*^9}},
 CellTags->"Info3642946737-1024975"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"implicitTauTest", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", "\[VeryThinSpace]", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eqtest", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"q", "-", "1"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.642939619503804*^9, 3.642939659759141*^9}}],

Cell["\<\
The 3-periodicity is also visible (although much less apparent) for the \
Harper model using the golden ratio as the irrational (see subsection below).\
\
\>", "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.642328501598403*^9, 3.642328532175137*^9}, {
  3.6423285700160627`*^9, 3.64232857900681*^9}, {3.642329652640565*^9, 
  3.64232965276752*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], "2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.642328510292632*^9, 3.642328532528442*^9}, 
   3.6423285792354307`*^9, 3.642329653196012*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"Inverse", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.642328901084405*^9, 3.642328920394483*^9}, 
   3.6423296787524643`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "2"},
     {"2", 
      RowBox[{"-", "3"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6423289098339157`*^9, 3.6423289207054977`*^9}, 
   3.642329679183267*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"Fibonacci", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"p", " ", 
       RowBox[{"Fibonacci", "[", "n", "]"}]}], "+", 
      RowBox[{"q", " ", 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", 
       RowBox[{"L", "-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "0", ",", 
       RowBox[{"L", "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"t", ",", 
   RowBox[{"MaxPlotPoints", "\[Rule]", "Infinity"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.642335104743649*^9, 3.642335196019775*^9}, {
   3.642335233271698*^9, 3.642335322068363*^9}, {3.642335373909217*^9, 
   3.642335377753634*^9}, {3.642335412133112*^9, 3.642335430836862*^9}, {
   3.642335544723839*^9, 3.6423355504534903`*^9}, {3.6423356175754023`*^9, 
   3.6423356176445637`*^9}, {3.64233572584585*^9, 3.642335734836773*^9}, {
   3.642335865062269*^9, 3.642336203318309*^9}, 3.642336254390235*^9, 
   3.642336298598214*^9, 3.642336339750358*^9}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.8688568909375637, 0.5965006245484981, 0.08103781418603667}, {
   0.9318685987628024, 0.48767997714004574`, 0.0033920718408563203`}, {1., 
   0.42, 0.}}, {{0.9209692690650763, 0.8198075749162996, 
   0.5386887702710812}, {0.8867475, 0.6747384999999999, 0.234897555}, {
   0.8847007055985888, 0.5345353459293081, 0.005740429269141459}}, {{1., 1., 
   1.}, {0.9358524035976143, 0.8760471123744494, 0.6849726554066216}, {
   0.9046381090624362, 0.7529763754515018, 0.38875729581396334`}}}, {{0, 0}, {
   3, 3}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{2.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {0.5, 
       FormBox["3", TraditionalForm]}}, {{2.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {0.5, 
       FormBox["3", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.642335192053447*^9, 3.642335196973424*^9}, {
   3.642335234221591*^9, 3.6423352922037563`*^9}, 3.6423353225603733`*^9, 
   3.6423353781614113`*^9, {3.642335418068692*^9, 3.6423354313491707`*^9}, 
   3.642335551127246*^9, 3.642335618206316*^9, 3.6423357354448357`*^9, {
   3.642335865663404*^9, 3.6423362035748043`*^9}, 3.642336254910563*^9, 
   3.642336299045745*^9, 3.642336340255959*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DuplicateFreeQ", "[", 
  RowBox[{"Flatten", "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6423359439643097`*^9, 3.642335967026836*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6423359474678097`*^9, 3.642336205498082*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M0inv", "=", 
  RowBox[{"Inverse", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642336747440344*^9, 3.642336765251596*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.642336767060689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigensystem", "[", "M0inv", "]"}]], "Input",
 CellChangeTimes->{{3.642336778589172*^9, 3.64233679981136*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["5"]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["5"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SqrtBox["5"]}], ")"}]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"]}], ")"}]}], ",", "1"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.642336794225621*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Eigensystem", "[", "M0inv", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Diag", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     RowBox[{"Eigensystem", "[", "M0inv", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.642336886307329*^9, 3.642336960756052*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "n", "]"}]], "Input",
 CellChangeTimes->{{3.642337297770116*^9, 3.642337299603092*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P", ".", 
    SuperscriptBox["Diag", "n"], ".", 
    RowBox[{"Inverse", "[", "P", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "//", "Expand"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"%", ",", 
   RowBox[{"n", ">", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"n", "\[Rule]", "6."}]}], "//", "Chop"}]}], "Input",
 CellChangeTimes->{{3.642336930930478*^9, 3.6423369472401648`*^9}, {
  3.642337293268752*^9, 3.642337389316402*^9}, {3.6423374429971333`*^9, 
  3.642337456821188*^9}, {3.642337499381406*^9, 3.642337524037195*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "5"], " ", 
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          SqrtBox["5"]}], ")"}]}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}], "n"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}], "n"], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         SqrtBox["5"]}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    SuperscriptBox["2", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["5"]}], ")"}], "n"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"3", " ", 
          SqrtBox["5"]}]}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SqrtBox["5"]}], ")"}], "n"], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"3", " ", 
          SqrtBox["5"]}]}], ")"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6423369410263*^9, 3.642336962097336*^9}, {
  3.642337301110812*^9, 3.6423373902227497`*^9}, {3.642337448974489*^9, 
  3.6423374574158783`*^9}, {3.64233750044561*^9, 3.642337524555717*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13.000000000000004`", ",", 
   RowBox[{"-", "21.000000000000007`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6423369410263*^9, 3.642336962097336*^9}, {
  3.642337301110812*^9, 3.6423373902227497`*^9}, {3.642337448974489*^9, 
  3.6423374574158783`*^9}, {3.64233750044561*^9, 3.642337524560861*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"13", "-", 
  RowBox[{"21", "\[Omega]"}]}]], "Input",
 CellChangeTimes->{{3.6423375430834513`*^9, 3.642337546550494*^9}}],

Cell[BoxData["0.021286236252207047`"], "Output",
 CellChangeTimes->{3.64233754713151*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Fibonacci", "[", "n", "]"}], 
    RowBox[{"Fibonacci", "[", 
     RowBox[{"n", "-", "2"}], "]"}]}], "-", 
   SuperscriptBox[
    RowBox[{"Fibonacci", "[", 
     RowBox[{"n", "-", "1"}], "]"}], "2"]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.6423376366706944`*^9, 3.642337669076511*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", 
   RowBox[{"n", " ", "\[Pi]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.642337655668445*^9, 3.642337669618966*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.642337053834744*^9, 3.642337084212082*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SqrtBox["5"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox["5"]}], ")"}]}]},
     {"1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.642337057909122*^9, 3.642337084600731*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Inverse", "[", "P", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "//", "Expand"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.642337194208127*^9, 3.6423372092214813`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "10"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "5"}], "-", 
      RowBox[{"3", " ", 
       SqrtBox["5"]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "10"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "5"}], "+", 
      RowBox[{"3", " ", 
       SqrtBox["5"]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.642337202065474*^9, 3.642337209496204*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Harper model", "Subsection",
 CellChangeTimes->{{3.638792576064698*^9, 3.638792577600327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "return", " ", "bands", " ", "and", " ", "intensities", " ", "ordered", 
    " ", "by", " ", "increasing", " ", "energy"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IntBandsHarp", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"IntBandsHarp", "[", "n", "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vpp", ",", "vpa", ",", "wfp", ",", "wfa", ",", "o", ",", 
        "intensities", ",", "intp", ",", "inta", ",", "bands"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpp", ",", "wfp"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hfib", "[", "n", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpa", ",", "wfa"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hfiba", "[", "n", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpp", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpp", "=", 
        RowBox[{"vpp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfp", "=", 
        RowBox[{"wfp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "intensity", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"intp", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfp", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpa", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpa", "=", 
        RowBox[{"vpa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfa", "=", 
        RowBox[{"wfa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inta", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfa", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"intensities", "=", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{"intp", "+", "inta"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
         SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
         " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
         " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
         "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"bands", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"intensities", ",", "bands"}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.633857622837657*^9, 3.633857636360725*^9}, {
   3.633857697432269*^9, 3.633857736618175*^9}, {3.633857875244348*^9, 
   3.633857880154935*^9}, {3.633857983696754*^9, 3.633858012847005*^9}, {
   3.633858113513686*^9, 3.63385817326226*^9}, {3.6338582191389923`*^9, 
   3.633858247882305*^9}, {3.6338584245242987`*^9, 3.633858441933634*^9}, {
   3.6338588071014423`*^9, 3.633858831973674*^9}, {3.633860127767949*^9, 
   3.633860127878072*^9}, {3.633860351256763*^9, 3.633860351463883*^9}, {
   3.633860667887651*^9, 3.6338606714718103`*^9}, {3.633862354799317*^9, 
   3.633862354917128*^9}, {3.6338625592436666`*^9, 3.633862559419834*^9}, {
   3.633864977426675*^9, 3.633865033792412*^9}, {3.633865157785954*^9, 
   3.633865170565158*^9}, {3.633865213101501*^9, 3.6338652143434143`*^9}, {
   3.6338652773363457`*^9, 3.6338654482999268`*^9}, {3.633865502113283*^9, 
   3.6338656219671173`*^9}, {3.633868107793435*^9, 3.6338681310708113`*^9}, 
   3.634029627471177*^9, {3.6387899522056437`*^9, 3.638790019803317*^9}, {
   3.638792583181432*^9, 3.638792586460359*^9}, {3.638792712620565*^9, 
   3.638792731963705*^9}, 3.6392022075139637`*^9, {3.6409401930344477`*^9, 
   3.64094019655385*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "averaged", " ", "q", " ", "moment", " ", "of", " ", "the", " ", 
    "intensity"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"avqIntHarp", "[", 
     RowBox[{"q_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"avqIntHarp", "[", 
      RowBox[{"q", ",", "n"}], "]"}], "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IntBandsHarp", "[", "n", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "^", "q"}], ",", "2"}], "]"}], "/", 
      
      RowBox[{"Fibonacci", "[", "n", "]"}]}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6387903168578157`*^9, 3.6387904975080957`*^9}, {
  3.638792773348711*^9, 3.6387927792366753`*^9}, {3.64094020155462*^9, 
  3.640940208834527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "19", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avIntN", "=", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"avqIntHarp", "[", 
       RowBox[{"15.", ",", "#"}], "]"}], "&"}], ",", "nValues"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Log", "@", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.638790563885058*^9, 3.6387906077785273`*^9}, {
  3.6387907799234743`*^9, 3.638790780082123*^9}, {3.638790991634129*^9, 
  3.638791068978476*^9}, {3.6387911202921457`*^9, 3.6387911701149406`*^9}, {
  3.638791215428357*^9, 3.638791308179717*^9}, {3.638791354820362*^9, 
  3.638791400499333*^9}, {3.638791526162737*^9, 3.638791554131571*^9}, {
  3.6387915928524446`*^9, 3.6387916451232243`*^9}, {3.638792749236163*^9, 
  3.638792766436413*^9}, {3.6387930951900387`*^9, 3.63879314770403*^9}, {
  3.639129803130342*^9, 3.6391298067943153`*^9}, {3.639129868284979*^9, 
  3.63912986842732*^9}, {3.6391303283485823`*^9, 3.639130335580117*^9}, {
  3.640940215282299*^9, 3.640940215490097*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0.6931471805599453, -0.6931471805599453}, {
      1.0986122886681098`, -1.2189250320809446`}, {
      1.6094379124341003`, -4.073903397916114}, {
      2.0794415416798357`, -5.524621255609219}, {
      2.5649493574615367`, -6.668168026750781}, {
      3.044522437723423, -8.961797931742332}, {
      3.5263605246161616`, -10.712026963472645`}, {
      4.007333185232471, -11.687320130646965`}, {
      4.48863636973214, -14.093576938595413`}, {
      4.969813299576001, -15.78267764222023}, {
      5.4510384535657, -16.793284532187585`}, {
      5.932245187448011, -19.180650638683154`}, {
      6.413458957167357, -20.879827440037996`}, {
      6.894670039433482, -21.885431853376076`}, {
      7.3758821482150125`, -24.275304297331}, {
      7.857093864902493, -25.973022840317178`}, {
      8.338305731356565, -26.979675508712326`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 8.338305731356565}, {-26.979675508712326`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638792795896812*^9, {3.6387930958408957`*^9, 3.638793148130229*^9}, 
   3.638851595467684*^9, 3.639129827442865*^9, 3.639129893188744*^9, {
   3.639130328944179*^9, 3.6391303372934933`*^9}, 3.640940225581086*^9}]
}, Open  ]],

Cell[TextData[{
 "For q into the range [0,20] we compute the slope ie ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    SubscriptBox["\[Tau]", "q"]}], TraditionalForm]]],
 " using the points n=10, 13, 16, 19."
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638793401569675*^9, 3.638793517316625*^9}, {3.638793622481604*^9, 
  3.63879362593719*^9}, {3.638870503411724*^9, 3.6388705210917673`*^9}, {
  3.639129991287359*^9, 3.639129991879635*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"linFitHarp", "[", 
   RowBox[{"q_", ",", "nv_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"avIntN", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avIntN", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"avqIntHarp", "[", 
          RowBox[{"q", ",", "#"}], "]"}], "&"}], ",", "nv"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"glue", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", "nv", "]"}], "]"}], ",", 
        RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"data", ",", "n", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6387943612061357`*^9, 3.638794483189991*^9}, {
  3.6391300219807453`*^9, 3.639130036731717*^9}, {3.640940231939519*^9, 
  3.640940234066831*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValuesHarp", "=", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"0.", ",", "0.99", ",", "0.05"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"1.01", ",", "2.", ",", "0.1"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"2.", ",", "20.", ",", "0.5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nValuesHarp", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "13", ",", "16", ",", "19"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitsHarp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"linFitHarp", "[", 
      RowBox[{"#", ",", "nValuesHarp"}], "]"}], "&"}], "/@", 
    "qValuesHarp"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.638794486975334*^9, 3.6387945321143713`*^9}, {
   3.638794563124834*^9, 3.6387945633640614`*^9}, 3.6387947892358313`*^9, {
   3.6388705966455927`*^9, 3.638870611526979*^9}, {3.63887117637542*^9, 
   3.638871189655429*^9}, {3.6388715168259277`*^9, 3.638871518168088*^9}, {
   3.639129271883354*^9, 3.639129313099586*^9}, {3.63913000378795*^9, 
   3.639130046698415*^9}, {3.639130165276963*^9, 3.639130182650362*^9}, {
   3.639130256621193*^9, 3.639130257547888*^9}, {3.640940130577168*^9, 
   3.6409401310411654`*^9}, {3.640940240194318*^9, 3.640940240433539*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6409403276727457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"extract", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "q"], "'"}], "s", " ", "from", " ", "the", " ", 
    "fits"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tauqsHarp", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
      "fitsHarp"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["D", "q"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqsHarp", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        FractionBox["#1", 
         RowBox[{"#2", "-", "1"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqsHarp", ",", "qValuesHarp"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6387945939297028`*^9, 3.638794594275021*^9}, {
  3.638794633620426*^9, 3.638794876943446*^9}, {3.638795119798197*^9, 
  3.6387952198642263`*^9}, {3.638795307222921*^9, 3.638795339608634*^9}, {
  3.639130187694229*^9, 3.639130192926097*^9}, {3.63913022476505*^9, 
  3.6391302419957247`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(\\(\\(linFitHarp[\
\\(\\(0.`, 0.1`, \\(\\({10, 13, 16, 19}\\)\\)\\)\\)]\\)\\)[\\\"ParameterTable\
\\\"]\\)\\) \[LeftDoubleBracket] \\(\\(1, 3, 2\\)\\) \[RightDoubleBracket]\\)\
\[NoBreak] is longer than depth of object. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136338945*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(\\(\\(linFitHarp[\
\\(\\(0.05`, 0.1`, \\(\\({10, 13, 16, \
19}\\)\\)\\)\\)]\\)\\)[\\\"ParameterTable\\\"]\\)\\) \[LeftDoubleBracket] \\(\
\\(1, 3, 2\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is longer than depth of \
object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136412695*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(\\(\\(linFitHarp[\
\\(\\(0.1`, 0.1`, \\(\\({10, 13, 16, \
19}\\)\\)\\)\\)]\\)\\)[\\\"ParameterTable\\\"]\\)\\) \[LeftDoubleBracket] \\(\
\\(1, 3, 2\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is longer than depth of \
object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136475226*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136537437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "1.1", ",", "20."}], "}"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"Line", "@", 
       RowBox[{"glue", "[", 
        RowBox[{"qValuesHarp", ",", "dqsHarp"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.638871099478119*^9, 3.638871112695342*^9}, {
   3.638871203352187*^9, 3.63887126328948*^9}, {3.6388717651453753`*^9, 
   3.6388718315447817`*^9}, {3.638872635498169*^9, 3.638872686297875*^9}, {
   3.638873074153907*^9, 3.638873084169547*^9}, {3.63887337775386*^9, 
   3.638873430746499*^9}, {3.638876952701202*^9, 3.6388770164290953`*^9}, {
   3.638877124028881*^9, 3.6388772183809834`*^9}, {3.639128885451253*^9, 
   3.639128885691019*^9}, {3.639129178876523*^9, 3.6391292553405647`*^9}, {
   3.639129530029345*^9, 3.6391295879483356`*^9}, {3.639129652317589*^9, 
   3.63912965543666*^9}, {3.639130217934422*^9, 3.6391302474375267`*^9}, 
   3.63913029584098*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.1, 20}, {-0.5, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Thickness[Large], 
    LineBox[CompressedData["
1:eJw1zw0s1GEcB/Bbneg9dqkM4ZS7Uh0nva1+P9JQTMWUMQ2hVitba6J5WVMq
t7y0UVdSpLByldNqaMZUlkPez1vn7dx5f0l60dvV7/ltz/77PN/n+T77Wwaf
PRw6j8Ph7P27dF826aNGt8S/x0F6Wzf58HDt8kUhp5hfg0zhJKyrGgMHsW4q
oWG8LOuI9Rjl1RA4fX0qK3EU/rfVQ/6dFc+ujY/Q+UZYYJdrNes/AuFhumkB
fo1ZRX3NMN1XQvZNbtp852FQ1OimE6ZkwoS4kiHqU4EmcbeZ444hOt8D9crF
h9aUaKm/D9bFKBJMnLR0vx+MZHelwg8aek8N1VH8GrGfhvo0cDA1qNpyeJD6
tCA473O1MX6Q+oYhQ5pkyDMZpL4RGFJzVSdeqqlvDK7biD3LvNUgDEiumBFM
QO2Bpq1lxmqonBH83ZkE1/Lvb4ZcB+BfHDAN0RIL8+K8fviii2c+g5VI/qzN
uB9SdHHyF1AIQ+qep/RR31dYtdbluPPKPur7BrEiq++FOb3U9wMg/P4Z2129
1DcH7p7uh+bae6jvF4RKDtifvtRD/8vBB9IAvxfbmbkolxv4Bqk/kQ1QNrt/
q9ymm7wE3c6VvzAd6CSvwAm9EFmUpoNshIXidmfTJcw8/LUD4oK3tZONcSqu
pNc/UElejWOxLcuc4tvIJijt4HK5Oa1kU4y+EBGmX9tCNsekc+4ebxcwW2Cu
3jufn17NZEs0SH+fubOgiWyFlR3+l0t5zHyM6NqbaXmjkWyN00pv+2Ye8zrc
rHqa5/a4gbweVSZmkqUuzDbIv5J+r1v7kSzAJ4qbkfczmIVY4HkxJNCDeQMK
ima0+/SZN+LvmCf87Hf1ZFu0MD4a3Cph3oQplY7+x3yZN+OrPQmdVXzmLXgn
yXaRh7aOLMIgXnSXVyo5XoRFkpPnf+5huR02KAdUislayu3QYW7EaX8+mWOP
pcuzLy8MZbk96qWYRRdas1yMoli5nXpQQbkYayd9H4UVkjkOWOxnmDYaqYA/
j7+TPw==
     "]]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.63913020312774*^9, {3.639130249329356*^9, 3.6391302642410097`*^9}, 
   3.63913029831077*^9, 3.6391303916183453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<../Harper/data/average_wf_dimension.pdf\>\""}], ",", "%"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.639129341680035*^9, 3.639129396282734*^9}, {
  3.639129631579259*^9, 3.6391296353862543`*^9}, {3.639130361690815*^9, 
  3.63913037916223*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/../\
Harper/data/average_wf_dimension.pdf\"\>"], "Output",
 CellChangeTimes->{{3.6391303799374447`*^9, 3.639130393141842*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1280, 965},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3642946737-1024975"->{
  Cell[326229, 6785, 134, 2, 42, "Print",
   CellTags->"Info3642946737-1024975"],
  Cell[326366, 6789, 1408, 37, 23, "Print",
   CellTags->"Info3642946737-1024975"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3642946737-1024975", 362711, 7817}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 97, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[702, 27, 150, 2, 44, "Subsection"],
Cell[855, 31, 390, 12, 32, "Input"],
Cell[1248, 45, 2524, 66, 165, "Input"],
Cell[3775, 113, 2808, 74, 187, "Input"],
Cell[6586, 189, 3023, 79, 187, "Input"],
Cell[9612, 270, 2900, 82, 288, "Input"],
Cell[12515, 354, 1930, 52, 165, "Input"],
Cell[14448, 408, 5991, 163, 429, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20488, 577, 104, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[20617, 582, 122, 1, 44, "Subsection"],
Cell[20742, 585, 3823, 121, 300, "Text"],
Cell[24568, 708, 1008, 33, 81, "Input"],
Cell[CellGroupData[{
Cell[25601, 745, 4407, 121, 390, "Input"],
Cell[30011, 868, 45170, 751, 239, "Output"]
}, Open  ]],
Cell[75196, 1622, 704, 20, 66, "Text"],
Cell[CellGroupData[{
Cell[75925, 1646, 234, 7, 32, "Input"],
Cell[76162, 1655, 572, 12, 23, "Message"],
Cell[76737, 1669, 283, 6, 32, "Output"]
}, Open  ]],
Cell[77035, 1678, 1045, 34, 75, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[78117, 1717, 155, 2, 36, "Subsection"],
Cell[78275, 1721, 4314, 130, 356, "Text"],
Cell[82592, 1853, 4868, 107, 547, "Input"],
Cell[CellGroupData[{
Cell[87485, 1964, 309, 7, 32, "Input"],
Cell[87797, 1973, 301, 5, 32, "Output"]
}, Open  ]],
Cell[88113, 1981, 805, 23, 55, "Input"],
Cell[88921, 2006, 1093, 31, 51, "Text"],
Cell[CellGroupData[{
Cell[90039, 2041, 1384, 29, 77, "Input"],
Cell[91426, 2072, 1863, 39, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93326, 2116, 131, 4, 32, "Input"],
Cell[93460, 2122, 1532, 40, 77, "Output"]
}, Open  ]],
Cell[95007, 2165, 1357, 30, 107, "Text"],
Cell[CellGroupData[{
Cell[96389, 2199, 1125, 26, 77, "Input"],
Cell[97517, 2227, 1978, 45, 229, "Output"]
}, Open  ]],
Cell[99510, 2275, 544, 13, 70, "Text"],
Cell[CellGroupData[{
Cell[100079, 2292, 2057, 54, 209, "Input"],
Cell[102139, 2348, 3326, 66, 240, "Output"],
Cell[105468, 2416, 1784, 39, 211, "Output"]
}, Open  ]],
Cell[107267, 2458, 963, 26, 121, "Input"],
Cell[108233, 2486, 351, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[108609, 2499, 1735, 50, 180, "Input"],
Cell[110347, 2551, 762, 14, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111146, 2570, 266, 6, 32, "Input"],
Cell[111415, 2578, 1348, 33, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112800, 2616, 257, 6, 32, "Input"],
Cell[113060, 2624, 1297, 32, 243, "Output"]
}, Open  ]],
Cell[114372, 2659, 2211, 71, 162, "Text"],
Cell[CellGroupData[{
Cell[116608, 2734, 208, 6, 72, "Input"],
Cell[116819, 2742, 110, 1, 32, "Output"]
}, Open  ]],
Cell[116944, 2746, 4703, 129, 425, "Input"],
Cell[121650, 2877, 8059, 224, 387, "Input"],
Cell[129712, 3103, 4166, 126, 315, "Input"],
Cell[133881, 3231, 2312, 61, 121, "Input"],
Cell[CellGroupData[{
Cell[136218, 3296, 1859, 38, 66, "Input"],
Cell[138080, 3336, 45461, 760, 546, 19036, 328, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[183556, 4099, 405, 7, 47, "Text"],
Cell[183964, 4108, 469, 11, 50, "Text"],
Cell[184436, 4121, 963, 26, 121, "Input"],
Cell[185402, 4149, 1487, 33, 77, "Input"],
Cell[CellGroupData[{
Cell[186914, 4186, 1735, 50, 180, "Input"],
Cell[188652, 4238, 995, 17, 23, "Message"]
}, Open  ]],
Cell[189662, 4258, 1086, 22, 55, "Input"],
Cell[190751, 4282, 2254, 61, 187, "Input"],
Cell[CellGroupData[{
Cell[193030, 4347, 2800, 60, 104, "Input"],
Cell[195833, 4409, 20909, 360, 243, 11322, 202, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216779, 4774, 1325, 28, 38, "Input"],
Cell[218107, 4804, 4371, 88, 525, "Output"]
}, Open  ]],
Cell[222493, 4895, 1003, 27, 77, "Input"],
Cell[CellGroupData[{
Cell[223521, 4926, 1197, 25, 32, "Input"],
Cell[224721, 4953, 52591, 878, 236, 46465, 778, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277349, 5836, 1547, 44, 121, "Input"],
Cell[278899, 5882, 9786, 174, 346, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288722, 6061, 326, 9, 32, "Input"],
Cell[289051, 6072, 11798, 206, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300886, 6283, 1401, 33, 32, "Input"],
Cell[302290, 6318, 7651, 139, 447, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309978, 6462, 963, 21, 32, "Input"],
Cell[310944, 6485, 6052, 111, 434, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317033, 6601, 1251, 32, 121, "Input"],
Cell[318287, 6635, 376, 6, 23, "Print"],
Cell[318666, 6643, 7376, 131, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326079, 6779, 125, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[326229, 6785, 134, 2, 42, "Print",
 CellTags->"Info3642946737-1024975"],
Cell[326366, 6789, 1408, 37, 23, "Print",
 CellTags->"Info3642946737-1024975"]
}, Open  ]]
}, Open  ]],
Cell[327801, 6830, 468, 12, 32, "Input"],
Cell[328272, 6844, 284, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[328581, 6854, 415, 12, 32, "Input"],
Cell[328999, 6868, 745, 21, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329781, 6894, 414, 13, 32, "Input"],
Cell[330198, 6909, 725, 21, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330960, 6935, 1325, 32, 99, "Input"],
Cell[332288, 6969, 1855, 36, 384, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334180, 7010, 169, 3, 32, "Input"],
Cell[334352, 7015, 99, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334488, 7021, 308, 9, 32, "Input"],
Cell[334799, 7032, 234, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335070, 7045, 133, 2, 32, "Input"],
Cell[335206, 7049, 886, 34, 47, "Output"]
}, Open  ]],
Cell[336107, 7086, 487, 13, 55, "Input"],
Cell[336597, 7101, 124, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[336746, 7107, 692, 18, 77, "Input"],
Cell[337441, 7127, 1735, 60, 47, "Output"],
Cell[339179, 7189, 339, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339555, 7200, 144, 3, 32, "Input"],
Cell[339702, 7205, 89, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339828, 7211, 364, 11, 32, "Input"],
Cell[340195, 7224, 169, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340401, 7233, 125, 2, 32, "Input"],
Cell[340529, 7237, 909, 28, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341475, 7270, 290, 9, 32, "Input"],
Cell[341768, 7281, 469, 17, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[342286, 7304, 100, 1, 44, "Subsection"],
Cell[342389, 7307, 4749, 101, 547, "Input"],
Cell[347141, 7410, 848, 24, 55, "Input"],
Cell[CellGroupData[{
Cell[348014, 7438, 1286, 28, 77, "Input"],
Cell[349303, 7468, 1912, 44, 229, "Output"]
}, Open  ]],
Cell[351230, 7515, 522, 12, 50, "Text"],
Cell[351755, 7529, 1038, 28, 121, "Input"],
Cell[CellGroupData[{
Cell[352818, 7561, 1322, 30, 77, "Input"],
Cell[354143, 7593, 79, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354259, 7599, 1333, 36, 133, "Input"],
Cell[355595, 7637, 637, 12, 23, "Message"],
Cell[356235, 7651, 641, 13, 23, "Message"],
Cell[356879, 7666, 640, 13, 23, "Message"],
Cell[357522, 7681, 528, 11, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358087, 7697, 1567, 37, 65, "Input"],
Cell[359657, 7736, 2114, 48, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361808, 7789, 367, 9, 32, "Input"],
Cell[362178, 7800, 195, 2, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
