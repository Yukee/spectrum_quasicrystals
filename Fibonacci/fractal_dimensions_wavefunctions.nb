(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    169667,       4002]
NotebookOptionsPosition[    165210,       3859]
NotebookOutlinePosition[    165544,       3874]
CellTagsIndexPosition[    165501,       3871]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hamiltonians", "Section",
 CellChangeTimes->{{3.629712555829027*^9, 3.629712557652924*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.632041721549465*^9, 3.632041723101447*^9}, {
  3.6358312356676207`*^9, 3.635831252179337*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"glue", "[", 
    RowBox[{"l1_", ",", "l2_"}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"l1", ",", "l2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.638791487960203*^9, 3.638791513106632*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hp", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
   3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
   3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
   3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
   3.629711744441989*^9}, {3.629712260739542*^9, 3.6297122613888474`*^9}, {
   3.629712372304244*^9, 3.629712372429983*^9}, 3.6313353026608963`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "antiperiodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ha", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{"-", "tw"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", 
     SuperscriptBox["e", "ik"], " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hk", "[", 
    RowBox[{"k_", ",", "n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "k"}], "]"}], "tw"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"ConjugateTranspose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}, {3.6342799382942677`*^9, 3.6342799433882017`*^9}, {
  3.634279999836821*^9, 3.6342800047344503`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "free", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Omega]", "=", 
     RowBox[{"N", " ", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Sqrt", "[", "5", "]"}], "-", "1"}], "2"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rot", "=", "28"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "rotate", " ", "the", " ", "sequence", " ", "of", " ", "couplings"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fib", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", 
        RowBox[{"(", " ", 
         RowBox[{"n", "+", "1", "+", "rot"}], ")"}]}], "]"}], "-", 
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "rot"}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"jump", "[", 
      RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fib", "[", 
         RowBox[{"n", "-", "1"}], "]"}], "<", "1"}], ",", "ts", ",", "tw"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hf", "[", 
     RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F2", "=", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"jump", "[", 
            RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ar", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"ar", "+", 
         RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hpn", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tbl", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
          RowBox[{"jump", "[", 
           RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"tbl", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "F2"}], "}"}], "\[Rule]", "tw"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"tbl", ",", 
         RowBox[{"{", 
          RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.631333750117631*^9, 3.631333766565724*^9}, {
  3.631333881332066*^9, 3.6313339868274307`*^9}, {3.6313340216815977`*^9, 
  3.631334026761477*^9}, {3.631334111921028*^9, 3.6313341148624983`*^9}, {
  3.6313347078403673`*^9, 3.631334724799961*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Harper", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hharp", "[", 
     RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hopping", ",", "pot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"hopping", " ", "subdiagonal", " ", "part"}], "*)"}], 
      RowBox[{
       RowBox[{"hopping", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"q", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"periodic", " ", "boundary", " ", "conditions"}], "*)"}], 
       RowBox[{"AppendTo", "[", 
        RowBox[{"hopping", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "q"}], "}"}], "\[Rule]", 
          RowBox[{"-", "1."}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"convert", " ", "to", " ", "matrix"}], "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"hopping", ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "symmetrize", "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"hopping", "+", 
         RowBox[{"Transpose", "[", "hopping", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"diagonal", " ", "part"}], "*)"}], 
       RowBox[{"pot", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "i"}], "}"}], "\[Rule]", 
             RowBox[{"2.", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Pi]", " ", "p", " ", 
                RowBox[{"i", "/", "q"}]}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "q"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"pot", "+", "hopping"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Harper", " ", "antiperiodic"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hharpa", "[", 
     RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hopping", ",", "pot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"hopping", " ", "subdiagonal", " ", "part"}], "*)"}], 
      RowBox[{
       RowBox[{"hopping", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"q", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"antiperiodic", " ", "boundary", " ", "conditions"}], "*)"}], 
       
       RowBox[{"AppendTo", "[", 
        RowBox[{"hopping", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "q"}], "}"}], "\[Rule]", "1."}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"convert", " ", "to", " ", "matrix"}], "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"hopping", ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "symmetrize", "*)"}], 
       RowBox[{"hopping", "=", 
        RowBox[{"hopping", "+", 
         RowBox[{"Transpose", "[", "hopping", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"diagonal", " ", "part"}], "*)"}], 
       RowBox[{"pot", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "i"}], "}"}], "\[Rule]", 
             RowBox[{"2.", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Pi]", " ", "p", " ", 
                RowBox[{"i", "/", "q"}]}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "q"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"pot", "+", "hopping"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "choosing", " ", "Fibonacci", " ", "numbers", " ", "as", " ", 
     "approximants"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"hfib", "[", "n_", "]"}], ":=", 
     RowBox[{"hharp", "[", 
      RowBox[{
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ",", 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"hfiba", "[", "n_", "]"}], ":=", 
     RowBox[{"hharpa", "[", 
      RowBox[{
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ",", 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.638249400809607*^9, 3.638249432782072*^9}, {
  3.638249651446948*^9, 3.6382496950248528`*^9}, {3.638792520044005*^9, 
  3.638792555268008*^9}, {3.638792634394656*^9, 3.6387926459809427`*^9}, {
  3.6387926847528143`*^9, 3.6387927036844*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Average exponents", "Section",
 CellChangeTimes->{{3.6387835848909187`*^9, 3.638783600107369*^9}}],

Cell[CellGroupData[{

Cell["Typical x, typical eigenfunction", "Subsection",
 CellChangeTimes->{{3.638785617804412*^9, 3.6387856277885103`*^9}}],

Cell[TextData[{
 "Let us note ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalOmega]", "n"], TraditionalForm]]],
 "(x) the number of states having a given value of x at step n. One has\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "n"], "(", "x", ")"}], " ", "=", " ", 
    RowBox[{"\[CapitalOmega]", "(", 
     RowBox[{
      SubscriptBox["n", "m"], ",", 
      SubscriptBox["n", "a"]}], ")"}]}], TraditionalForm]]],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "m"], "=", 
    RowBox[{"n", " ", "x"}]}], TraditionalForm]]],
 " the number of molecular renormalizations, and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "a"], "=", 
    RowBox[{"n", " ", 
     FractionBox[
      RowBox[{"1", "-", 
       RowBox[{"2", "x"}]}], "3"]}]}], TraditionalForm]]],
 " the number of atomic renormalizations, and\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalOmega]", 
     RowBox[{"(", 
      RowBox[{"p", ",", "q"}], ")"}]}], "=", 
    RowBox[{
     SuperscriptBox["2", "p"], 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "+", "q"}], ")"}], "!"}], 
      RowBox[{
       RowBox[{"p", "!"}], " ", 
       RowBox[{"q", "!"}]}]]}]}], TraditionalForm]]],
 ".\nWhen n becomes large, we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Log", "(", 
      RowBox[{
       SuperscriptBox["\[CapitalOmega]", "n"], "(", "x", ")"}], ")"}], " ", 
     "~", " ", 
     RowBox[{"f", "(", "x", ")"}]}], " ", 
    RowBox[{
     RowBox[{"Log", "(", 
      SubscriptBox["F", "n"], ")"}], " ", "~", " ", "n"}], " ", 
    RowBox[{
     RowBox[{"Log", "(", "\[Phi]", ")"}], "\[Cross]", 
     RowBox[{"f", "(", "x", ")"}]}]}], TraditionalForm]]],
 " with Log(\[Phi])\[Cross]f(x) = -x Log(3x/2) + ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "3"], TraditionalForm]]],
 "Log(1+x) - ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"2", "x"}]}], "3"], TraditionalForm]]],
 "Log(1-2x)\nThe Log erases a constant factor ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". To recover it we simply note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", 
    SuperscriptBox[
     SubscriptBox["F", "n"], 
     RowBox[{
      RowBox[{"f", "(", "x", ")"}], "-", "1"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " should be the probability density of x. Thus by the steepest descent \
method we get\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "=", " ", 
    SqrtBox[
     FractionBox[
      RowBox[{"n", " ", "\[Sigma]"}], 
      RowBox[{"2", " ", "\[Pi]"}]]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with \[Sigma] = Log(\[Phi]) |",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "''"}], 
    RowBox[{"(", 
     SubscriptBox["x", "0"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "|.\nThe final thing to do to compare asymptotic result for the probability \
density with ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox["\[CapitalOmega]", "n"], 
    SubscriptBox["F", "n"]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is to take the continuous limit. Since there are approximately n/3 values \
of x at step n, we simply multiply by n/3."
}], "Text",
 CellChangeTimes->{{3.638783642907102*^9, 3.6387840264917507`*^9}, {
  3.6387841181557693`*^9, 3.638784154475835*^9}, {3.6387841971156397`*^9, 
  3.6387843127158957`*^9}, {3.6387844249723377`*^9, 3.638784433563871*^9}, {
  3.63885319136224*^9, 3.638853210017619*^9}, {3.6388532477459373`*^9, 
  3.638853260545871*^9}, {3.6388547699626637`*^9, 3.638855075835269*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"3", 
        RowBox[{"x", "/", "2"}]}], "]"}]}], " ", "+", " ", 
     RowBox[{
      FormBox[
       FractionBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "x"}], ")"}], "3"],
       TraditionalForm], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "x"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      FormBox[
       FractionBox[
        RowBox[{"1", " ", "-", " ", 
         RowBox[{"2", "x"}]}], "3"],
       TraditionalForm], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", 
        RowBox[{"2", "x"}]}], "]"}]}]}], 
    RowBox[{"Log", "[", 
     RowBox[{"\[Omega]", "^", 
      RowBox[{"-", "1"}]}], "]"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.638784337235059*^9, 3.63878436219147*^9}, {
  3.63878443688055*^9, 3.638784441215188*^9}, {3.638854663888339*^9, 
  3.638854668094747*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"step", "=", "80"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "number", " ", "of", " ", "states", " ", "having", " ", "value", " ", "x",
      " ", "when", " ", "n"}], " ", "=", " ", "step"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compt", "[", "x_", "]"}], ":=", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"step", " ", "x"}]], 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"step", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "x"}], ")"}], "/", "3"}]}], ")"}], "!"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"step", " ", "x"}], ")"}], "!"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"step", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", "x"}]}], ")"}], "/", "3"}]}], ")"}], "!"}]}]]}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"exact", " ", "probability", " ", "density", " ", "of", " ", "x"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"exactfreq", "[", "x_", "]"}], ":=", 
    RowBox[{
     FractionBox["step", "3"], 
     FractionBox[
      RowBox[{" ", 
       RowBox[{"compt", "[", "x", "]"}]}], 
      RowBox[{"Fibonacci", "[", "step", "]"}]]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "variance"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x0", "=", 
    FormBox[
     RowBox[{"2", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "\[Omega]"}], "-", "1"}], ")"}], "/", "5"}]}],
     TraditionalForm]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "the", " ", "value", " ", "of", " ", "x", " ", 
    "that", " ", "makes", " ", "f", " ", "stationnary"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"f", "''"}], "[", "x0", "]"}]}], "*", 
     RowBox[{"Log", "[", 
      RowBox[{"\[Omega]", "^", 
       RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "asymptotic", " ", "probability", " ", "density", " ", "of", " ", "x"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"freq", "[", "x_", "]"}], ":=", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"step", " ", "\[Sigma]"}], 
      RowBox[{"2", " ", "\[Pi]"}]]], 
    SuperscriptBox[
     RowBox[{"Fibonacci", "[", "step", "]"}], 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], "-", "1"}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"exactfreq", "[", "x", "]"}], ",", 
     RowBox[{"freq", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"1", "/", "2"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.638784365139797*^9, 3.638784389502637*^9}, {
   3.638784482143703*^9, 3.638784489998226*^9}, {3.6387845538168573`*^9, 
   3.638784763664557*^9}, {3.638784811649939*^9, 3.638784844128883*^9}, {
   3.63878584864167*^9, 3.638785857025633*^9}, 3.63885191774343*^9, {
   3.6388522270735292`*^9, 3.638852237247794*^9}, {3.638852285197522*^9, 
   3.6388524288614264`*^9}, {3.638852484763895*^9, 3.638852515311448*^9}, {
   3.63885263843143*^9, 3.638852771087302*^9}, {3.638853022110984*^9, 
   3.638853041710161*^9}, {3.638853157230781*^9, 3.6388531587980967`*^9}, {
   3.638853293007835*^9, 3.638853340402598*^9}, {3.63885339342268*^9, 
   3.638853427854576*^9}, {3.638853458257043*^9, 3.638853483409279*^9}, {
   3.638853704256863*^9, 3.63885373024017*^9}, {3.638853806992846*^9, 
   3.6388538077410917`*^9}, 3.638853874369492*^9, {3.638853956464325*^9, 
   3.6388539760639772`*^9}, {3.6388542586889753`*^9, 3.638854296688943*^9}, 
   3.638854343618617*^9, {3.6388544579213*^9, 3.638854520401705*^9}, {
   3.638854594626376*^9, 3.638854651473197*^9}, {3.638854710928803*^9, 
   3.638854757297799*^9}, {3.6388550939537888`*^9, 3.6388552541155357`*^9}, {
   3.638855498326974*^9, 3.638855507129644*^9}, {3.638855538503229*^9, 
   3.638855543333881*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
j1Owhw==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVl3c8Vv8XwEUDTTTs8ZC9spN7z6UipZKVJNlkhWSLhOzs7L333nvv/dge
21cllRkpP7+/7uv9Op97PueeeQ+L7mslA2IiIiLSk0RE/3/eN1gbavxyF42k
wp7HDNVK/ZevpjtHwwa67HE9gcyNUlfP4gNLaETgq4Rl9tvGJin+m5fT4mju
gMbn31USHG1SRFRfQo+Y5MFJ7iyJ5n671NB6nbsO+yMQdxJh5V/ulJIcFC4M
oVGBoFnTd1Ln+6TOZZMmbDM9AwVip4/Tk4NSsx9mA9TYtYCqRYn2hs2I1Dj/
M1QzQge4eHUalLXGpBpjWkQDaPSB3D9pNChpUiqLlJ+vPtYQEGQd25eblQp5
G8n2g+kVxP6TFJbOn5dyXCSmZ04xhaOo7xXBO4tSeo/NqZ6wW0DWV6s5e7cV
KXaC6akmFUsIrLH5yai2JhV9meX9swgr8Mzt/qL+7pvUhQdjh7/GrcGFqy2w
8sQPqQ/v/ex9aWxgdIOoo9/ml1Q9vWG5WrUNyO3664p92JT6XYFt456/Bb6r
OjusiVtSZhs7r2tibcGlzWb1LemuVLrPYN5HxA6yn5v36KjuSc2z5XxTJtgB
GwmH+VLJbymV59pG60wOwPeYOJ4u649U4K5kWmWjA5DSNf6XKv1XqjP4ypKH
jiPsVcbcNPnxTwrp7NZiSHGCAp1Ub125E4i9Xlrsl9vOwM/3Z1dGmhgp/uc6
VbbsDInS/VLf5UgQdlFRtUfs7+A9XdrrS+9OIdqDF8NoO96Bf2QZbiT/NBJj
+nVo1cgV6um5urc2ziCkQwPpDSpukDijayuSSI6kMda1XU9zg2//fMymKc8h
MmbZy347bnBO5mBh4/N5xPmMJ0494j2cNGNK0re4hNCoWkvXr74HA9pbxgKP
KZDy5JfabOLucJV+/s2RJCXyE5GM/znuDqFxtyXKRS8jAX4cdWqcH+D8GWWx
/LtXEO7JyzO19h9g1/+9Tb/uVUTf5geND40HRKUY735rp0aESUIciy09gGJO
XsOZhxYhDhGZnu7wAL1x5qt+yXRIQoFDLL+tJzR6OEs29jAiFij936d9nsCq
vRT5HzAjUn31L96zecHiS2Ppa9dZkKmvJEyjw14g9Oqf/FUqViTTId31L9dH
MEUnakgZ2BA7Uvl59vcfQbXImsRE5DpymT0wyUHAG+jG88jJAjmQpVJB4hQv
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
s8Qd2QThfzGk8es=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638784375023015*^9, 3.6387843900141687`*^9}, 
   3.6387844432076483`*^9, {3.6387845849385643`*^9, 3.638784764316794*^9}, {
   3.63878584955514*^9, 3.63878585753655*^9}, 3.638795698253481*^9, 
   3.638851416057928*^9, 3.638851930096963*^9, {3.6388522989570217`*^9, 
   3.638852328653894*^9}, {3.638852358748344*^9, 3.638852429682807*^9}, {
   3.638852487982975*^9, 3.638852515861109*^9}, {3.6388526557952337`*^9, 
   3.6388526806529903`*^9}, {3.638852728387805*^9, 3.638852771600533*^9}, 
   3.638853042541519*^9, 3.638853159567964*^9, 3.638853299955646*^9, 
   3.638853341200922*^9, {3.6388534294833727`*^9, 3.638853489077834*^9}, {
   3.6388537109726257`*^9, 3.6388537312344427`*^9}, 3.63885380846132*^9, 
   3.6388538749156103`*^9, {3.638853968212799*^9, 3.638853976993931*^9}, {
   3.6388542607024803`*^9, 3.638854298140304*^9}, 3.638854344282189*^9, {
   3.6388544691717777`*^9, 3.638854520930078*^9}, {3.638854702089624*^9, 
   3.638854725716618*^9}, 3.638854767168589*^9, {3.6388551783308372`*^9, 
   3.638855192637237*^9}, {3.6388552400018797`*^9, 3.6388552553225403`*^9}, {
   3.6388554989552402`*^9, 3.638855508080331*^9}, {3.638855539423462*^9, 
   3.638855543784656*^9}, 3.639124110677561*^9, 3.63912477231357*^9}]
}, Open  ]],

Cell[TextData[{
 "So, the typical value of x is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " such that\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", 
      SubscriptBox["x", "0"], ")"}]}], " ", "=", " ", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638783642907102*^9, 3.6387840264917507`*^9}, {
  3.6387841181557693`*^9, 3.638784154475835*^9}, {3.6387841971156397`*^9, 
  3.6387843127158957`*^9}, {3.6387844249723377`*^9, 3.638784433563871*^9}, {
  3.638784873516917*^9, 3.638784895872274*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], "[", "x", "]"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6387849018292837`*^9, 3.638784906894401*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ratnz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Solve was unable to solve the system with inexact \
coefficients. The answer was obtained by solving a corresponding exact system \
and numericizing the result. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::ratnz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6388553654047956`*^9, 3.639124111710307*^9, 
  3.639124772708631*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.34164078649987384`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6387849077291307`*^9, 3.638795698375495*^9, 
  3.638851416432148*^9, 3.63885536540606*^9, 3.639124111712367*^9, 
  3.6391247727106247`*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], "=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Omega]", "4"]}], ")"}], "/", "5"}]}], "=", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "2", "+", 
          RowBox[{"3", "\[Omega]"}]}], ")"}], "/", "5"}]}], "=", 
      RowBox[{"2", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "\[Omega]"}], "-", "1"}], ")"}], "/", "5"}]}]}]}]}], 
   TraditionalForm]]],
 "\nWe have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["x", "0"], ")"}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
  3.6387854809595346`*^9, 3.63878552089725*^9}, {3.638852579881732*^9, 
  3.638852591278611*^9}, {3.638855378768705*^9, 3.638855380543936*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Typical exponent", "Subsection",
 CellChangeTimes->{{3.638785617804412*^9, 3.6387856277885103`*^9}, {
  3.638785699124238*^9, 3.638785702492312*^9}}],

Cell[TextData[{
 "In the large size limit, almost all wavefunctions have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    SubscriptBox["x", "0"]}], TraditionalForm]]],
 ". Therefore they have the exponent ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], "(", 
    SubscriptBox["x", "0"], ")"}], TraditionalForm]]],
 ". We also compute the average exponent\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SubscriptBox["F", "n"]], 
      SubscriptBox["\[CapitalSigma]", "a"], 
      RowBox[{
       SubscriptBox["\[Chi]", "q"], "(", "a", ")"}]}], " ", "=", " ", 
     RowBox[{
      FractionBox["1", 
       SubscriptBox["F", "n"]], 
      SubscriptBox["\[CapitalSigma]", "x"], 
      RowBox[{"\[CapitalOmega]", "(", "x", ")"}], " ", 
      RowBox[{
       SubscriptBox["\[Chi]", "q"], "(", "x", ")"}]}]}]}], 
   TraditionalForm]]],
 ".\nThus, we obtain that the average exponent is the exponent of the typical \
wavefunction:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Tau]", "q"], "(", 
       SubscriptBox["x", "0"], ")"}], "+", "1", "-", 
      RowBox[{"f", "(", 
       SubscriptBox["x", "0"], ")"}]}], " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "q"], "(", 
      SubscriptBox["x", "0"], ")"}]}]}], TraditionalForm]]],
 ".\n\nThis is perhaps too crude a reasoning, since we neglect completely the \
variance of the probability density of x. More rigorously we write\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], " ", "=", " ", 
    RowBox[{"N", 
     RowBox[{"\[Integral]", 
      RowBox[{"dx", " ", 
       SuperscriptBox[
        SubscriptBox["F", "n"], 
        RowBox[{
         RowBox[{"f", "(", "x", ")"}], "-", "1"}]], 
       SuperscriptBox[
        SubscriptBox["F", "n"], 
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["\[Tau]", "q"], "(", "x", ")"}]}]]}]}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nWe let g(x) = - log(\[Phi])(f(x)-1) ~ ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[Sigma]", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SubscriptBox["x", "0"]}], ")"}], "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nand ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["t", "q"], " ", "\[Cross]", " ", "x"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"log", "(", "\[Phi]", ")"}], " ", 
     RowBox[{
      SubscriptBox["\[Tau]", "q"], "(", "x", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". (At leading order in \[Rho] \[Tau] is linear in x. At second order it is \
affine in x).\nThen [computation to be checked]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], "~", " ", 
    SuperscriptBox["e", 
     RowBox[{"-", 
      RowBox[{"n", "(", 
       RowBox[{
        RowBox[{"t", " ", 
         SubscriptBox["x", "0"]}], "-", 
        RowBox[{
         SuperscriptBox["\[Sigma]t", "2"], "/", "2"}]}], ")"}]}]]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and thus\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Tau]", "q"], "(", 
      SubscriptBox["x", "0"], ")"}], "-", 
     FractionBox[
      RowBox[{"\[Sigma]", " ", 
       SuperscriptBox[
        SubscriptBox["t", "q"], "2"]}], 
      RowBox[{"2", " ", 
       RowBox[{"log", "(", "\[Phi]", ")"}]}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
   3.6387854809595346`*^9, 3.63878552089725*^9}, {3.6387857125111732`*^9, 
   3.638785735244388*^9}, 3.6387863849251623`*^9, {3.638787217085743*^9, 
   3.6387874299972982`*^9}, {3.638789863215384*^9, 3.6387898769593678`*^9}, {
   3.638855784610023*^9, 3.638855790706057*^9}, {3.638855893819655*^9, 
   3.638855900059226*^9}, {3.638855993099423*^9, 3.638855993152772*^9}, {
   3.638857196732266*^9, 3.638857419923415*^9}, {3.638857463516534*^9, 
   3.63885754264712*^9}, {3.638857633836708*^9, 3.638857649884869*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "return", " ", "bands", " ", "and", " ", "intensities", " ", "ordered", 
    " ", "by", " ", "increasing", " ", "energy"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IntBands", "[", 
    RowBox[{"n_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"IntBands", "[", 
     RowBox[{"n", ",", "\[Rho]"}], "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ts", "=", "1."}], ",", 
        RowBox[{"tw", "=", "\[Rho]"}], ",", "vpp", ",", "vpa", ",", "wfp", 
        ",", "wfa", ",", "o", ",", "intensities", ",", "intp", ",", "inta", 
        ",", "bands"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpp", ",", "wfp"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hp", "[", 
          RowBox[{
           RowBox[{"n", "-", "2"}], ",", "tw", ",", "ts"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpa", ",", "wfa"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"ha", "[", 
          RowBox[{
           RowBox[{"n", "-", "2"}], ",", "tw", ",", "ts"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpp", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpp", "=", 
        RowBox[{"vpp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfp", "=", 
        RowBox[{"wfp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "intensity", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"intp", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfp", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpa", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpa", "=", 
        RowBox[{"vpa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfa", "=", 
        RowBox[{"wfa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inta", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfa", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"intensities", "=", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{"intp", "+", "inta"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
         SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
         " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
         " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
         "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"bands", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"intensities", ",", "bands"}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.633857622837657*^9, 3.633857636360725*^9}, {
   3.633857697432269*^9, 3.633857736618175*^9}, {3.633857875244348*^9, 
   3.633857880154935*^9}, {3.633857983696754*^9, 3.633858012847005*^9}, {
   3.633858113513686*^9, 3.63385817326226*^9}, {3.6338582191389923`*^9, 
   3.633858247882305*^9}, {3.6338584245242987`*^9, 3.633858441933634*^9}, {
   3.6338588071014423`*^9, 3.633858831973674*^9}, {3.633860127767949*^9, 
   3.633860127878072*^9}, {3.633860351256763*^9, 3.633860351463883*^9}, {
   3.633860667887651*^9, 3.6338606714718103`*^9}, {3.633862354799317*^9, 
   3.633862354917128*^9}, {3.6338625592436666`*^9, 3.633862559419834*^9}, {
   3.633864977426675*^9, 3.633865033792412*^9}, {3.633865157785954*^9, 
   3.633865170565158*^9}, {3.633865213101501*^9, 3.6338652143434143`*^9}, {
   3.6338652773363457`*^9, 3.6338654482999268`*^9}, {3.633865502113283*^9, 
   3.6338656219671173`*^9}, {3.633868107793435*^9, 3.6338681310708113`*^9}, 
   3.634029627471177*^9, {3.6387899522056437`*^9, 3.638790019803317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"IntBands", "[", 
    RowBox[{"19", ",", "0.1"}], "]"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.6387900446858387`*^9, 3.6387901090412893`*^9}, {
  3.638790309874659*^9, 3.638790314497367*^9}, {3.638790673699335*^9, 
  3.638790673858129*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"274.839972`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.6387900634503593`*^9, 3.6387901161600113`*^9}, {
   3.6387903119967012`*^9, 3.6387903375934353`*^9}, 3.638790774026194*^9, 
   3.638851524480652*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "averaged", " ", "q", " ", "moment", " ", "of", " ", "the", " ", 
    "intensity"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"avqInt", "[", 
     RowBox[{"q_", ",", "n_", ",", "\[Rho]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"avqInt", "[", 
      RowBox[{"q", ",", "n", ",", "\[Rho]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IntBands", "[", 
           RowBox[{"n", ",", "\[Rho]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "^", "q"}], ",", "2"}], "]"}], "/", 
      
      RowBox[{"Fibonacci", "[", "n", "]"}]}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6387903168578157`*^9, 3.6387904975080957`*^9}}],

Cell[TextData[{
 "We expect ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Log", " ", 
    RowBox[{
     SubscriptBox[
      SuperscriptBox["\[Chi]", "n"], "q"], " ", "~", " ", 
     RowBox[{"-", 
      SubscriptBox["\[Tau]", "q"]}]}], " ", "Log", " ", 
    SubscriptBox["F", "n"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and indeed, Log ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    SuperscriptBox["\[Chi]", "n"], "q"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is a linear function of n ~ Log ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":"
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
   3.6387854809595346`*^9, 3.63878552089725*^9}, {3.6387857125111732`*^9, 
   3.638785735244388*^9}, 3.6387863849251623`*^9, {3.638787217085743*^9, 
   3.6387874299972982`*^9}, {3.638789863215384*^9, 3.6387898769593678`*^9}, {
   3.638790749617064*^9, 3.63879076400309*^9}, {3.6387909075233727`*^9, 
   3.6387909837752733`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "19", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avIntN", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"avqInt", "[", 
       RowBox[{".8", ",", "#", ",", "0.1"}], "]"}], "&"}], ",", "nValues"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Log", "@", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.638790563885058*^9, 3.6387906077785273`*^9}, {
   3.6387907799234743`*^9, 3.638790780082123*^9}, {3.638790991634129*^9, 
   3.638791068978476*^9}, {3.6387911202921457`*^9, 3.6387911701149406`*^9}, {
   3.638791215428357*^9, 3.638791308179717*^9}, {3.638791354820362*^9, 
   3.638791400499333*^9}, {3.638791577172716*^9, 3.638791581379018*^9}, {
   3.638793284598233*^9, 3.6387933166129427`*^9}, {3.638793376277965*^9, 
   3.638793377205214*^9}, 3.638793482806005*^9, 3.638851382497431*^9, {
   3.639128252490878*^9, 3.639128252890016*^9}, {3.639128305131393*^9, 
   3.639128332729555*^9}, {3.639128382203203*^9, 3.639128385210931*^9}, {
   3.639128487434729*^9, 3.639128510345064*^9}, {3.639128700603148*^9, 
   3.639128743562126*^9}, {3.639131452828783*^9, 3.639131461931829*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0.6931471805599453, 0.13862943611198894`}, {
      1.0986122886681098`, 0.11357678762026249`}, {1.6094379124341003`, 
      0.2386941604788886}, {2.0794415416798357`, 0.24080848508260916`}, {
      2.5649493574615367`, 0.3354296648502254}, {3.044522437723423, 
      0.36218128182314036`}, {3.5263605246161616`, 0.43756093167725807`}, {
      4.007333185232471, 0.4783223235009538}, {4.48863636973214, 
      0.5435173404453367}, {4.969813299576001, 0.5915024402328131}, {
      5.4510384535657, 0.6515701546035508}, {5.932245187448011, 
      0.7031583966620224}, {6.413458957167357, 0.7606902978195487}, {
      6.894670039433482, 0.8140559630942782}, {7.3758821482150125`, 
      0.8703405834585796}, {7.857093864902493, 0.9245799775919001}, {
      8.338305731356565, 0.9802521210734262}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 8.338305731356565}, {0, 0.9802521210734262}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.639128385674492*^9, {3.639128488218371*^9, 3.639128510768248*^9}, {
   3.639128703436467*^9, 3.639128744260952*^9}, {3.639131450018265*^9, 
   3.639131462460709*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"glue", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1.1486983549970349`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1.1202779090643658`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1.2695901863458385`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1.2722773518825243`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "1.3985411601253945`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "1.436459322323343`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "1.5489246743372227`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "1.6133654251765528`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", "1.722053269929265`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"144", ",", "1.8067008372883324`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"233", ",", "1.918550886774474`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"377", ",", "2.020122991946956`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"610", ",", "2.1397527774828213`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"987", ",", "2.2570439335168784`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1597", ",", "2.3877239343311683`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2584", ",", "2.5208092415998955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4181", ",", "2.6651280921874747`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.639128356321512*^9}]
}, Open  ]],

Cell[TextData[{
 "For large values of q, the 3-periodic behaviour of the Fibonacci numbers \
(odd, odd, even...) is clearly visible.\nIt turns out that when ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]]],
 " is even, there is a gap at E=0, while there is a band when ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]]],
 " is odd. Since there is an energy level at E=0 for the quasicrystalline \
chain, we guess that choosing odd approximant is a better idea. If ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "n"], TraditionalForm]]],
 " is odd and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", 
    RowBox[{"n", "-", "2"}]], TraditionalForm]]],
 " as well, then the 2 lateral clusters have also a band in their center. \
This is perhaps even better."
}], "Text",
 CellChangeTimes->{{3.638785306796356*^9, 3.638785322288384*^9}, {
   3.6387854809595346`*^9, 3.63878552089725*^9}, {3.6387857125111732`*^9, 
   3.638785735244388*^9}, 3.6387863849251623`*^9, {3.638787217085743*^9, 
   3.6387874299972982`*^9}, {3.638789863215384*^9, 3.6387898769593678`*^9}, {
   3.638790749617064*^9, 3.63879076400309*^9}, {3.6387909075233727`*^9, 
   3.6387909837752733`*^9}, {3.638791416320141*^9, 3.6387914635681458`*^9}, {
   3.638792148912303*^9, 3.638792351792663*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "19", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avIntN", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"avqInt", "[", 
       RowBox[{"10.", ",", "#", ",", "0.1"}], "]"}], "&"}], ",", "nValues"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Log", "@", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.638790563885058*^9, 3.6387906077785273`*^9}, {
   3.6387907799234743`*^9, 3.638790780082123*^9}, {3.638790991634129*^9, 
   3.638791068978476*^9}, {3.6387911202921457`*^9, 3.6387911701149406`*^9}, {
   3.638791215428357*^9, 3.638791308179717*^9}, {3.638791354820362*^9, 
   3.638791400499333*^9}, {3.638791526162737*^9, 3.638791554131571*^9}, {
   3.6387915928524446`*^9, 3.6387916451232243`*^9}, 3.638851386123867*^9, {
   3.6388714553365927`*^9, 3.638871500711956*^9}, {3.639128760730237*^9, 
   3.639128765721752*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0.6931471805599453, -6.23832462503951}, {
      1.0986122886681098`, -1.2848746022911515`}, {
      1.6094379124341003`, -1.8092528237138148`}, {
      2.0794415416798357`, -7.170655978752368}, {
      2.5649493574615367`, -2.946906123378745}, {
      3.044522437723423, -3.444269628778972}, {
      3.5263605246161616`, -8.424187905530601}, {
      4.007333185232471, -4.585003009661572}, {
      4.48863636973214, -5.088300124840333}, {
      4.969813299576001, -9.78499182304022}, {
      5.4510384535657, -6.224439133748406}, {
      5.932245187448011, -6.731809723563897}, {
      6.413458957167357, -11.207675399566467`}, {
      6.894670039433482, -7.863819157886625}, {
      7.3758821482150125`, -8.375331618643646}, {
      7.857093864902493, -12.669736221601545`}, {
      8.338305731356565, -9.503221471113013}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 8.338305731356565}, {-12.669736221601545`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638791536379951*^9, 3.6387915547642307`*^9}, {
   3.638791593354684*^9, 3.638791645588832*^9}, 3.638793720109568*^9, 
   3.6388515609879923`*^9, {3.6388714567827597`*^9, 3.638871501461339*^9}, {
   3.639128756602191*^9, 3.639128766086338*^9}}]
}, Open  ]],

Cell[TextData[{
 "For q into the range [0,1) it is safe to disregard the 3-periodicity \
dependance. Below we compute the slope ie ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    SubscriptBox["\[Tau]", "q"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for n=13, 16, 19 for different values of q between 0 and 1."
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638793401569675*^9, 3.638793517316625*^9}, {3.638793622481604*^9, 
  3.63879362593719*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "0.9", ",", "0.05"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"{", 
    RowBox[{"13", ",", "16", ",", "19"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avIntN", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"avqInt", "[", 
        RowBox[{"0.2", ",", "#", ",", "0.1"}], "]"}], "&"}], ",", "nValues"}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dat", "=", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"Fibonacci", "[", "nValues", "]"}], "]"}], ",", 
     RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"dat", ",", "n", ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "dat", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fit", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"fit", "[", "\"\<FitResiduals\>\"", "]"}], ",", " ", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.638793532816143*^9, 3.6387935726130323`*^9}, {
   3.638793630900609*^9, 3.638793663204536*^9}, {3.638793732054772*^9, 
   3.638793733861661*^9}, {3.6387938453818703`*^9, 3.638793886678442*^9}, {
   3.638793924036399*^9, 3.638793989935809*^9}, {3.638794032839847*^9, 
   3.6387940978147383`*^9}, {3.638794139942824*^9, 3.638794224181072*^9}, {
   3.638794270056518*^9, 3.638794297205297*^9}, {3.638795382778778*^9, 
   3.638795383179003*^9}, 3.638851388910232*^9, {3.638871397563298*^9, 
   3.638871445291191*^9}, 3.6388715080275106`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{5.4510384535657, 3.6055356886873207`}, {6.894670039433482, 
       4.544782127765326}, {8.338305731356565, 
       5.489856458007559}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVkGs4lHkAR0djKKkMYzKvwfBK7ZCoFLX8fyISpVQrKhqXlgjR1nbZVG65
VZs2lXSxalVMqbSU1ZSkGZdHdNmKVYRC24y7aWjbD+c5n88xDYr2CZ3AYDBW
fON/5+4P0rANSXfyslYmZHILyDn/3kW+gnDCOPGDzQf+FfJqRVqsQLCblIze
bF5CXyW73P2msgSpxLgqwm5kTiFxe4SNwyanyWhRVFyx+Q1SdGh+gtzkCql1
fWvOd7pN3onE3E8mZSQ2tjJFEVNO9q6O2NxjIiWtnY8sVkY8JpNGc6SR1q9J
UrLQT5P3jGx/GJ/RG9tOEsuDTpwLbSbW+VlPb4s/kvp1UYGurm2kY2UYv9Ve
TnQkRp3jRZ0km0o2uri5n1QvTupaW9tNHGJLrzNrh8gCYaC/fMlnUvkyZ1X0
TCU5pYzM829UENuMcScDjzHSEKbxPK2ln7h3Lmq18WUgRMdP0sIZIl2z7ywd
6FVDsUQzfL/FCNmrSp1XvocJ19bkuluzlUST/SF8rZCFuQvvd08WqQirjuU+
+S8NNGevqSqOGidf6osij2+fCPmpVVaOaxno8BXzjI21wM1tbeqJUIPz4aht
T4om4/Qlvv+DmAn4bbx0kkvgFEiX3/m+IJ2JDfxKr+b+qVg/MDZWkqUObYll
r9k6HWQtyjN8XsxCqF3eoJ8VG31/WmdXyDSwa//PPoJBNsQO4Yr6Bk0kdWc1
1dfrwmA9o0DeOxFewmkF2mf00LpnqaPD0CRkFi2QeIk4kD2LtfFSakG25nfV
Dgd9BNWo4mM42pDURWdYMbnwfTxffM9wCm5uPYjaFi6+bJLaGzhMhbEnsY+6
PR0PrNxMyeppcPm6MeH8PgP0xdvvcLPUQciL+32l63h4s1DFGirVgdPBQyUi
AYU+BVfTwZGN49GKe9pdFHKqZyx8V8FG24FLnecrDJHTE6R/3FMXPaFlIQ9T
+JCxh4NefOuQb9PVrBMZwTu5LIDepAexR41qy2xjMMcapcw2PXSG2SxgDhrD
4+jbYI8QDqhrr7NS6kzQEc0vzFZwkLA5Nq/OU4AbPteDd/+kj2EVL9OzTICn
CTHSYHUuZt3LPi0zN0Viw4yAW8e4sAuu8manmiLUZG7QSb3pkJzVN6gdNEVu
eSTn0MXpmCXRT1u5wQzqG8ft1CwMsILVa9RYYYYxbmJyxx8GkL95XykV0vAS
2Cc1zuch+mymXupRGjJLl36fUh5q1cw/L/+VRn7TsOm5uzwIf7wr086icWBv
4aqP5Ty8t+06eOwkDbsafXH8Ax7WV0OenUvj/NYPYYUyHpb09ddevkZj55XM
f1gtPHCX+Sc/qqZhPvNvaakahbgiuShZSmO8PmOEqU6hQTfFcVkNjVc7nWd6
a1BIb7k1UFNP4+jjq4kdWhQYcVOCm57T+BL6C9HlUOjOlZC2dhqN+WYlERYU
3Jm+hvkdNAq9XrbfmUUhP+zTUGgXjZSBdN0JlhQC51Hij900HF0Ho0/NofDs
SRxfoaBR0F4trLKnYGutNXKzn0ZC+j4/ncUUjmRdaNoxSCNgnu3hDY4UPALq
0kZGaHASznQonClcrgzecldJ41+hN8fRlYL6d0rnfapv/xqZLofdKIiOHDNy
GqdxaU/p9qZlFCr6LUa/fqURb7btgrEnhf8AFpkltw==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.405924902350218, 3.511319650221309},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{5.4510384535657, 8.338305731356565}, {3.6055356886873207`, 
   5.489856458007559}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638793703510494*^9, {3.638793831218244*^9, 3.6387938578098917`*^9}, {
   3.638793980799843*^9, 3.638793990633048*^9}, {3.6387940412908583`*^9, 
   3.638794098348785*^9}, {3.638794150287819*^9, 3.638794233275392*^9}, {
   3.6387942705643187`*^9, 3.638794298019896*^9}, 3.638795384749449*^9, 
   3.6388515627131023`*^9, {3.638871394124557*^9, 3.638871445774756*^9}, 
   3.6388715096993856`*^9, 3.6391287835783253`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 0.0009708699514212604}, {
    2., -0.001941737141446076}, {3., 0.0009708671900243715}, {1., 0.}, {2., 
    0.}, {3., 0.}, {1., 0.0009708699514212604}, {2., -0.001941737141446076}, {
    3., 0.0009708671900243715}}, {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{5, 2}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{4, 1}], 
       LineBox[{6, 3}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{7, 8, 9}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 3.}, {-0.001941737141446076, 0.0009708699514212604}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638793703510494*^9, {3.638793831218244*^9, 3.6387938578098917`*^9}, {
   3.638793980799843*^9, 3.638793990633048*^9}, {3.6387940412908583`*^9, 
   3.638794098348785*^9}, {3.638794150287819*^9, 3.638794233275392*^9}, {
   3.6387942705643187`*^9, 3.638794298019896*^9}, 3.638795384749449*^9, 
   3.6388515627131023`*^9, {3.638871394124557*^9, 3.638871445774756*^9}, 
   3.6388715096993856`*^9, 3.639128783691609*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"linFit", "[", 
   RowBox[{"q_", ",", "\[Rho]_", ",", "nv_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"avIntN", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avIntN", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"avqInt", "[", 
          RowBox[{"q", ",", "#", ",", "\[Rho]"}], "]"}], "&"}], ",", "nv"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"glue", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", "nv", "]"}], "]"}], ",", 
        RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"data", ",", "n", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6387943612061357`*^9, 3.638794483189991*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"linFit", "[", 
      RowBox[{"#", ",", "0.1", ",", "nValues"}], "]"}], "&"}], "/@", 
    "qValues"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.638794486975334*^9, 3.6387945321143713`*^9}, {
   3.638794563124834*^9, 3.6387945633640614`*^9}, 3.6387947892358313`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"extract", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "q"], "'"}], "s", " ", "from", " ", "the", " ", 
    "fits"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tauqs", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
      "fits"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["D", "q"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        FractionBox["#1", 
         RowBox[{"#2", "-", "1"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["\[CapitalDelta]", "q"]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]qs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", "-", 
          RowBox[{"(", 
           RowBox[{"#2", "-", "1"}], ")"}]}], ")"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6387945939297028`*^9, 3.638794594275021*^9}, {
  3.638794633620426*^9, 3.638794876943446*^9}, {3.638795119798197*^9, 
  3.6387952198642263`*^9}, {3.638795307222921*^9, 3.638795339608634*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FittedModel", "::", "varzero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The estimated variance is zero. Properties requiring \
division by the variance or standard error will not be computed. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FittedModel\\\", ButtonNote -> \
\\\"FittedModel::varzero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6387948384494534`*^9, 3.638794877698139*^9, 3.638795122100992*^9, {
   3.63879519399751*^9, 3.638795220236808*^9}, 3.638795341427099*^9, 
   3.638795432269437*^9, 3.638851584368726*^9, 3.639128789451413*^9, 
   3.6391288237222*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"glue", "[", 
    RowBox[{"qValues", ",", "\[CapitalDelta]qs"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63879534528953*^9, 3.638795370182397*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQ5mzQSBlfYMr/OPhTqstIfwd9r/MFrBsFpou72J
MQgctn9Q7qQsmbwfKn/S/gHr7he/7hyyh5hywf7HzLzmcOWjUPWX7Wv2pi4K
m3vMPj0NBK7Ze7nH7AhKPg7Vf9Peaj3T/sye4/Znz4DAHXsltXe273WPQ817
YN9TJaIpH30Mqv6hPUe+0ScGVZj5j+0NLPUv5Mw6DNX/xN5UyXSH+omDUPue
2TM1X3gkWbQfat4L+39XZv6tebMLat5L+5Pf9vuu59sGNe+1vWhpB7ft0w1Q
897YiyXHOJ7+ssweAB73hnw=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 0.9}, {0, 0.18397256685909175`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638795356448955*^9, 3.638795370600136*^9}, 
   3.638795433312377*^9, 3.638851584511702*^9, 3.6391288252964373`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"glue", "[", 
    RowBox[{"qValues", ",", "dqs"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6388672000991087`*^9, 3.6388672128680058`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQo+2M+aCQIr7b/e4Pm7LewdlL/TvvpOmfLC02/s
TYxB4LD9To9W/bik11D5k/Zafa7TP0q9soeYc8F+7ZlWTYsvL6DqL9vPOafC
n/jmuX16Gghcs+d21/6ix/gcqv+m/YqH+1w1DZ7Znz0DAnfsFQ5MPnOw7CnU
vAf2uw6VZhdcegJV/9De5PfjqcccnkDNf2zvWPPob/X+x1D9T+y3Gii/KvV5
DLXvmf0+Oc2eU08fQc17Yd8oatx4sPMR1LyX9gdZM/IvmT2CmvfaPmdectmi
1w+h5r2xF3RS+86w/KE9ADf0jv0=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5292180126661767},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 0.9}, {0.551636202539216, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.638867213257455*^9, 3.6391288273352957`*^9}]
}, Open  ]],

Cell[TextData[{
 "It is also possible to derive recursion relations on ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["\[Chi]", "q"], "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " using the second-order perturbation theory on wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Chi]", "q"], "n"], "=", 
    RowBox[{
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\[Lambda]", "2"], ")"}], "q"], 
      SuperscriptBox["\[Omega]", "2"], 
      SuperscriptBox[
       SubscriptBox["\[Chi]", "q"], 
       RowBox[{"n", "-", "2"}]]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Lambda]", "'"}], ")"}], "q"], 
      SuperscriptBox["\[Omega]", "3"], 
      SuperscriptBox[
       SubscriptBox["\[Chi]", "q"], 
       RowBox[{"n", "-", "3"}]]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nwith \[Lambda] = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox["\[Rho]", "2"], "/", "2"}]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Lambda]", "'"}], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["\[Rho]", "2"]}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nUsing that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Chi]", "q"], "~", 
    SuperscriptBox[
     SubscriptBox["F", "n"], 
     RowBox[{"-", 
      SubscriptBox["\[Tau]", "q"]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we arrive at an implicit equation on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "q"], ":"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638867467730092*^9, 3.6388674710259113`*^9}, {3.6388675179860086`*^9, 
  3.638867641799417*^9}, {3.6388677347913218`*^9, 3.638867756321891*^9}, {
  3.6388678316498957`*^9, 3.638867853912799*^9}, {3.638867951122116*^9, 
  3.638867961577031*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eq", "[", 
    RowBox[{"q_", ",", "\[Tau]q_", ",", "\[Rho]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["2", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox["\[Rho]", "2"]}], ")"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "+", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", 
          SuperscriptBox["\[Rho]", "2"]}]}], ")"}], "q"]], 
     SuperscriptBox["\[Omega]", 
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Tau]q"}], ")"}]}]]}], "-", "1"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.638867969725889*^9, 3.6388680660065603`*^9}, {
  3.6388688884558153`*^9, 3.6388688948391027`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"implicitTau", "[", 
   RowBox[{"q_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{"\[Tau]", "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{"eq", "[", 
      RowBox[{"q", ",", "\[Tau]", ",", "\[Rho]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0."}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6388680736087217`*^9, 3.6388681099086533`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"implicitTau", "[", 
     RowBox[{"q", ",", "0."}], "]"}], 
    RowBox[{"q", "-", "1"}]], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0.", ",", "2."}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63886811350142*^9, 3.638868176916999*^9}, {
  3.638868304326674*^9, 3.638868327590094*^9}, {3.63886837102986*^9, 
  3.63886839629733*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVjHs4lHkfh53WITTFxo7KplSWDaWQLd/a7ZVDtVsIxbYR1aYkLYZE0rtK
DaItqZeQTo4pFPr+HLaDchgJlTLm8MzMM4/zYTXE9v7xue7rvu7r+pj4h+wI
VFFSUkr8sv/TNVDKI7JAxyTxjlPWqZ5PJEU7/XvYm2DuxSXhzi9t0ED7DbeM
7QEz02+KG5p+Qsu1X9+8zt4H1uF3tim9dkeHVpuSi+zjEJAR13rjQwCSzPo1
F9gJwE5brbpwJAxPn0qKPMdOB13ulPcT4wTcd3yAfZadB10KHf6tyHTUTHe5
MTj0AHSnhj43rsjHitZVmzcbI7DSNRxUjUvR+3T3u/qkBigK9PjmdXwFhpSG
rbgy+gKo+6zrmnqIwykdz5WVW6DmpcLvbVA9Pq99ii3r2oCzzuckV/05HuS4
6Pow7eA4b1lTzrwmrNVaNVNwuBPO9A9ue7aCh/m5DdNGS9/B9tH5ntb723GD
QU2Oe1E33M3dTLe1d+KKZ92VT8174N7GufcsC99j+wb3/jv9fNjb4ZnQ/BMf
FVnC6/dH+KDsn1yTv5WPJjNhW6sm+HD1qbPbGS8+HqlJL3il0gvn51THeB7i
o4ZDx+8DBr3Q/lB35Mc0PjrY+EhWQy8c+xzf4yXiY/bSPXxM7oV7CtucjKRe
DJ51qO2NtQAUBqNZCwYFmF9jUO5qK4A9Cd/yq6cE2HO0LgN/EECReejLIC0h
7uhk773jJIAgJp/XuViI9nnPB074CoB/aJPQaqcQ1RyX6ZomCsCJcyOl7okQ
r4X2bj7WI4BLlf9pe3FZhC+7vGpmc4WglL17VlAwhfHvJPN+TxOCzBNOpURT
aN8dceTvK0Kw6T784Nk5CvN6Ln97IlcIQdriVN87FJ6gOk/JKoVw2WTxjImE
whWjXk4NQiHEJ0WVmQdKMJnl3cJZK4JnNbV/3D8kRXcn716RSAS/fvRr+OoW
jY/1V7YIZSJwj7HTKa6kcXGvVo2gXwQyuYl8fyONw9FVV/gTIjBg0XWa/TSm
lBr/0q0jhtvDKqu1bOX4aoH4yevVYrifUR/8zQs5bhoJvVaXIIb8uCg//SkG
C4jrudqzYlC1u5v5ntWH+twlkYQrhuLGJfvLl/ShwOyN+5MrYnBN/DAnz60P
4361135cIAYrp/m3/K/1Yc2LaU5puxiqHti4ndnYj7bZSV7ZphTYr0k+apU5
gCW1sRxtcwr+YOiswLIBtBCGZYZbUZB8IkWv/OUALlrm27PFgQJqhHM0f2oA
tQu+3//pZwrye8vHRFaDyK9oCt8RTcFw9nWNnEuDmNTC+kutjQKnDv4hy+Ah
VB9SrQzppECnME8+P2oI4/Qm3r7rpsDQNrSYnTiE4Z78haUSCpoDQyKc8obw
t/clN/0+U6Df5+N04MMQ2kq2Pyw3k0Dm/MlKyY5h5E+ntR+IlYCqWVZDtdsI
6jCtSREJErBuryp9v2sE7d/q/vTfsxJ4Y3/3uM7vI5hS9mdpbpoEXGJOTuUm
juCGA9Hcj7ck0LEk63bR0xG8wfN39miVQJituskvTqPon7eyGkyk4Dnfg6rz
GENu6pGwbcukUKA3obY3aAwfn7xn7mchBY3i2tx5kWOo57M0I2qNFH501Z1b
nzmG9brs8IcuUpj1cxbXRjSGphFK1hbHpBBUdBjTOOModmnJNaj/0rMV0pKK
f9A0aXly6nMp+L64G/5D8z+471VslE6zFCq9GtWlon9QsM16u8pbKRwxnr3/
tt4EfnRPne7rl4L9hvuy5pAJ7PJz9/nbSAYdK2dcp6w/YWNo5+zjx2RAZfEu
+/IUqFVmpeiPkEH1w4zqNkaBzqN/ig/GyMDcuoSEa07is3D76j2JMjB65bjW
dcMkNkRnHHT7nwyaxlHt+/uTWHNmd8PiRhks/cXIziVrCksyejg8ExqouGd6
1TnTGPzdgnerltOw9kyUxfaGaTR75O2Q/j0N60Z1pEuoaczq4il22tHgeo2e
SjCfQa5hQ3T3FhoW3PIZdS6fwcOXbsdIImi4Z/hoeP1hJWK2VPzBOYaGxNCw
4kVxSkT0wMTxbjwNKxLi15mlKRHf9qvTwRdoaOkcjr71SIls0b8QO5xDw28N
yz8e01Qm5qmhpz430cCLDM64WahMqEVFvb++pkFfcXO1Tr0yySmhN5IuGgbX
lW3O6lImRq0BKqeFNBT0KGtsVVMhWqydpzU/0ZAqmHnR4adCpOcdzuibysHf
+LtMcyNVcjNR9ex3UXKgQ3Zq5FWrET1R4knLWDn8xclXH+9QI3Ew+7hNghwe
6v1QHT+kRnaNf7NnPVcO4yNU4M/LvyKsfZZrtufIIcPYZ/2rS18RDvj0RjbK
wT3tHPV1rDqhrn7siGmRg1qSpW/EdXXiMR7wKr5dDstkdVWLq9WJZeGRivMf
5bBqcnyPt0KdCI0SLmQPyyEs2yHEL0qDbB0vWvvciIGKcuUTbWc1yePtq62a
vmXAQKuI41aoScwKH5m2mTKgqlHLXcTTJCr7GljdlgxEB3sXiNhapIL3Vjzw
IwPv9BoXTBdrEZNCtYuGhxjY5XV2Y/fALMLVPPfngqMMNPePvOextclUACvG
5A8GhD2nDR03aZMOI6MDFrEMtDpWHYy/qk2SEq0cIY2B8XS15tEtOmQsYBcd
VMVA+vBC65iXuiRcf1K/izCwKUByw0JlNhmvy1zv8vTLn/2u9RfXfnGTDykW
PAa+tsCyv+7OJhM9e+wGKQac09nXZJdYJDJZae9ehgH/iLnlf7exyITjjXNt
QwzY+Rsar9ecQz5dF3x4MMVAcd5gCGyeQxS7AxM4en3gdv69MTbOIVHa6kW0
YR9MTaRta2PmkMnH+Z27F/aBS/HKN4GsuaT607AHmPZBujFlt3TdXPIvVzWS
Gw==
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[{{0.9996989324018037, -4.3087357267574085`}, {0.9997004907139275, 
     4.958376877619307}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 2.}, {-4.3087357267574085`, 4.958376877619307}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6388681223126173`*^9, 3.638868138051756*^9}, {
   3.638868171991357*^9, 3.638868179034906*^9}, {3.638868305273736*^9, 
   3.6388683281309137`*^9}, {3.638868371539357*^9, 3.638868397450342*^9}, 
   3.638868898774046*^9, 
   3.639129169795147*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Je/M5UHd3b3P6QN/WS7vO1TmkRAaGtrh4eHBX5iIRp5MFtFZ9TVY3HCBqESH
hYU9WX6h6i9p+ZXoJbS+JlfZrLAkvM/nis/XMZTP8KhgshLWnY99EqovqyI8
/5mnbAjjZBbmgdra2n4Pqa6PRprl1YCdtTdGQbt37968bds2fs7fQPVaI89D
vlLf1Pba8cKqjVv2Z1+esWBV7wTPuYwDngYRKtT/t1SN+zMJb9ELbTwsZkx9
WW3uBSvPa5z+1tbW1qX79u07qpIvOQSf4fludrrRv/ei87LPQ894e3tDsrl6
pKqqimvxm+6enu9W1DRGbPzkJM4xs63ImXdmyRfOXZPYOdljCnEgjJZZIEc6
brVNax3X4skj2tramj09PcWV1o6Fq6EFzK3iDjjtt7ao0NDmRyprm8ek5lXQ
rQTVRBGxpMPqK4q/x1TlHrjrcNF/5xTXPFpZUxcSGRnJ6rImuY2e05R7Z2cn
n/nLtb0pv7upqcncjPl3Fq6OXJ3OVnHt9FxC3UmAGbOlmqoLxB66J02e0jJx
aYzstc+B3olve1zwWp5A/BZ99+vcksvD2zq6zPvtmpeXV92MGTP2rFu37t76
+vrPYyS0HlprTnlR/t7CRXM2NiI/lY2RDcL0Eg1BucUGfnAcBewkVr4LHnjH
JM/ZB0MiEgkcjk/OLCydN3++ixXBX/ocNoS1dn4l71m4ls7GNsSPxLvrHc3X
O55UDdH/ZJyqIraG4s9cuCkVsq4qaEZiKHGeuMDtx0N3xJ5m+WC7WRqBn1E+
AQQK/sHhsYrp6PDI31n3j7W1ZRXfzjA9LrfobS1tnfiTv80urpkWd7ycofhk
xa6svPnrU4gvyJFyhWudnLf+6O6wyGxig0TQnz1TUc/jZgloOV7d46S3+Hub
qurld8Ie/lJo5JsJzb8bIavPP9/3lJslkg1f3p4sdkZDeifukDQ4MzST3UO+
BbeDCBMRF7Spuo0ZEjf8Ncg/QxL0YVwRvsWLBaW199U1tsGCJLjDFEfGLobi
52OmmRPMEjkv/AOI7kerP8456rc1/cy7q48wIZok7vgNaDh8LfIS/h/FF+Om
ww+/c6GmSUzSNH3iyNzMMDLv96odQpyX8kuvkEUiTOS3O/EMgUWWCiYFkVgu
rkKiIbUqw2K8IP8YX37O+GB1CAtB2aFb7+oTSk7gCDT+qNpr1793vrqRKBzR
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
2CL0O0Db4v2L9E9Y/o3fi8/yQIOiDPob0jM17w==\
\>"]]
}, Open  ]],

Cell["\<\
The point (q=1,\[Rho]=0) is singular: the function implicitTau has a \
different value depending on how we approach this point. \
\>", "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638868693379499*^9, 3.638868793202427*^9}, {3.638868830578557*^9, 
  3.6388688330584087`*^9}, {3.638870454643436*^9, 3.638870464054179*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "For q into the range [0,20] we compute the slope ie ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    SubscriptBox["\[Tau]", "q"]}], TraditionalForm]]],
 " using the points n=13, 16, 19."
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638793401569675*^9, 3.638793517316625*^9}, {3.638793622481604*^9, 
  3.63879362593719*^9}, {3.638870503411724*^9, 3.6388705210917673`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"linFit", "[", 
   RowBox[{"q_", ",", "\[Rho]_", ",", "nv_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"avIntN", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avIntN", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"avqInt", "[", 
          RowBox[{"q", ",", "#", ",", "\[Rho]"}], "]"}], "&"}], ",", "nv"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"glue", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", "nv", "]"}], "]"}], ",", 
        RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"data", ",", "n", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6387943612061357`*^9, 3.638794483189991*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValues", "=", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "0.1"}], ",", "0.99", ",", "0.05"}], "]"}], "~", "Join", 
    "~", 
    RowBox[{"Range", "[", 
     RowBox[{"1.01", ",", "2.", ",", "0.1"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"2.", ",", "20.", ",", "0.5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"{", 
    RowBox[{"13", ",", "16", ",", "19"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"linFit", "[", 
      RowBox[{"#", ",", "0.1", ",", "nValues"}], "]"}], "&"}], "/@", 
    "qValues"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.638794486975334*^9, 3.6387945321143713`*^9}, {
   3.638794563124834*^9, 3.6387945633640614`*^9}, 3.6387947892358313`*^9, {
   3.6388705966455927`*^9, 3.638870611526979*^9}, {3.63887117637542*^9, 
   3.638871189655429*^9}, {3.6388715168259277`*^9, 3.638871518168088*^9}, {
   3.639129271883354*^9, 3.639129313099586*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"extract", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "q"], "'"}], "s", " ", "from", " ", "the", " ", 
    "fits"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tauqs", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
      "fits"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["D", "q"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        FractionBox["#1", 
         RowBox[{"#2", "-", "1"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["\[CapitalDelta]", "q"]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]qs", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", "-", 
          RowBox[{"(", 
           RowBox[{"#2", "-", "1"}], ")"}]}], ")"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqs", ",", "qValues"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6387945939297028`*^9, 3.638794594275021*^9}, {
  3.638794633620426*^9, 3.638794876943446*^9}, {3.638795119798197*^9, 
  3.6387952198642263`*^9}, {3.638795307222921*^9, 3.638795339608634*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FittedModel", "::", "varzero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The estimated variance is zero. Properties requiring \
division by the variance or standard error will not be computed. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FittedModel\\\", ButtonNote -> \
\\\"FittedModel::varzero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.638871196176108*^9, 3.638871755244742*^9, 
  3.6391291480590067`*^9, 3.639129523527707*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    FractionBox[
     RowBox[{"implicitTau", "[", 
      RowBox[{"q", ",", "0.1"}], "]"}], 
     RowBox[{"q", "-", "1"}]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "1.1", ",", "20."}], "}"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"Line", "@", 
       RowBox[{"glue", "[", 
        RowBox[{"qValues", ",", "dqs"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.638871099478119*^9, 3.638871112695342*^9}, {
  3.638871203352187*^9, 3.63887126328948*^9}, {3.6388717651453753`*^9, 
  3.6388718315447817`*^9}, {3.638872635498169*^9, 3.638872686297875*^9}, {
  3.638873074153907*^9, 3.638873084169547*^9}, {3.63887337775386*^9, 
  3.638873430746499*^9}, {3.638876952701202*^9, 3.6388770164290953`*^9}, {
  3.638877124028881*^9, 3.6388772183809834`*^9}, {3.639128885451253*^9, 
  3.639128885691019*^9}, {3.639129178876523*^9, 3.6391292553405647`*^9}, {
  3.639129530029345*^9, 3.6391295879483356`*^9}, {3.639129652317589*^9, 
  3.63912965543666*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.1, 20}, {-0.5, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Thickness[Large], 
    LineBox[CompressedData["
1:eJxV0X0s1HEcwPFfqq2anoQ1yyWXh9OD89CTTp9PNYVkqlErPTGpMJdFC2u0
mqVbV6lQloe1RUubFHddHs5TksuF0tXhjtOFm1EuhMqdjz/6bL/99vp9vr/3
74/fqpDo/WEmDMN4TV2G+/1Mw4grND9KhbWsIZh2QYW1YJkwunUQmP9mELKm
96D/bDpZEjRA58WQoIxj577TgZtxqkHsfdX5WEg/PDDu34LTDa/0Ias+6smh
sPEqZ/Pwd3A3nm+BrPerF5/UaeGUcT7B/N1rhtfP0lJfAfnqci8O9xu8bzSM
Emwq0xqlcT0wy9hTQW5VbAS/WUPn1eA+3n23DjXU74btiV2TCRXdIDO+r4GX
XHZfrF83hBu/9w3KWRxBQ08X9b7DGQu3ZOm1Lur1gnTu6ejmjV3U64fIh6Fx
ef1q6ulg6Q77EeaxmnoDIMnoXKQJVwMnWFildxwE3vIt9ets1VCtd5x6MgS3
ZcIKb7EKjOvgn8BzcjVPOKyCX4a1fhjyytp0B01UcNOwFv6Clgty6eKjndQb
hRiTbVJLSQf1xmBBCXtiiXUH9cahVqPDHZfbqTcBtvdTCh/2Kan3B1oqP5cL
gpQz/xd9J1y0ytav5Dn4pWA0nhuoIM9Dv+P7m8OC2simyI7K9fO49JG8BNkD
6Zb8ey1kM0yPZynuiD+QzbFYZOYxbConW+JssWrhbQ8ZeTnqWsUNNxsbyFaY
rcmu7XhdT16BJW0B4WZjdWQWipIkon0xtWQb1Op9doJ1DXkVXr/ctos7VEW2
xZxe/psorZTMxltXcvzzf1eSV2Naig0/w37GdsgLtc9PbCon26PAju15Nq6M
7ID8vL9Ndp6vyY4YGJBZmrtSQubgnq3Vr85ZvSI7YVlw2oZnTmLyGnwi8zJr
3ysir0XRvOJNncml5HVYNJJ3Xl1TQl6PIRl85wCLGTsjj1fvJzv3kszFkTvb
Ox0UL6adxEUfyVPvQF8y44KZ4dkpETXFtHdBH8Gji1m7yIwrslKP9LjIn9Pe
FVMPJTmmniAzbtjjXxlpMVJEezesvl6350AamXHHAsWhJrl7EfwDeByn/A==

     "]]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.639129221147291*^9, 3.6391292560653543`*^9}, {
  3.6391295252129517`*^9, 3.6391295499860477`*^9}, {3.639129580247731*^9, 
  3.639129588926887*^9}, {3.6391296395705433`*^9, 3.639129656123928*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<data/average_wf_dimension_\[Rho]_10.pdf\>\""}], ",", "%"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.639129341680035*^9, 3.639129396282734*^9}, {
  3.639129631579259*^9, 3.6391296353862543`*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/data/\
average_wf_dimension_\[Rho]_10.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.639129604628786*^9, {3.639129636395177*^9, 3.639129660435381*^9}}]
}, Open  ]],

Cell["\<\
The 3-periodicity is also visible (although much less apparent) for the \
Harper model using the golden ratio as the irrational (see subsection below).\
\
\>", "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Closed]],

Cell[CellGroupData[{

Cell["Harper model", "Subsection",
 CellChangeTimes->{{3.638792576064698*^9, 3.638792577600327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "return", " ", "bands", " ", "and", " ", "intensities", " ", "ordered", 
    " ", "by", " ", "increasing", " ", "energy"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IntBandsHarp", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"IntBandsHarp", "[", "n", "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vpp", ",", "vpa", ",", "wfp", ",", "wfa", ",", "o", ",", 
        "intensities", ",", "intp", ",", "inta", ",", "bands"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpp", ",", "wfp"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hfib", "[", "n", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vpa", ",", "wfa"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hfiba", "[", "n", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpp", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpp", "=", 
        RowBox[{"vpp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfp", "=", 
        RowBox[{"wfp", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "intensity", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"intp", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfp", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", "vpa", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vpa", "=", 
        RowBox[{"vpa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wfa", "=", 
        RowBox[{"wfa", "[", 
         RowBox[{"[", "o", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"inta", "=", 
        SuperscriptBox[
         RowBox[{"Abs", "[", "wfa", "]"}], "2"]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"intensities", "=", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{"intp", "+", "inta"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
         SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
         " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
         " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
         "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"bands", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"intensities", ",", "bands"}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.633857622837657*^9, 3.633857636360725*^9}, {
   3.633857697432269*^9, 3.633857736618175*^9}, {3.633857875244348*^9, 
   3.633857880154935*^9}, {3.633857983696754*^9, 3.633858012847005*^9}, {
   3.633858113513686*^9, 3.63385817326226*^9}, {3.6338582191389923`*^9, 
   3.633858247882305*^9}, {3.6338584245242987`*^9, 3.633858441933634*^9}, {
   3.6338588071014423`*^9, 3.633858831973674*^9}, {3.633860127767949*^9, 
   3.633860127878072*^9}, {3.633860351256763*^9, 3.633860351463883*^9}, {
   3.633860667887651*^9, 3.6338606714718103`*^9}, {3.633862354799317*^9, 
   3.633862354917128*^9}, {3.6338625592436666`*^9, 3.633862559419834*^9}, {
   3.633864977426675*^9, 3.633865033792412*^9}, {3.633865157785954*^9, 
   3.633865170565158*^9}, {3.633865213101501*^9, 3.6338652143434143`*^9}, {
   3.6338652773363457`*^9, 3.6338654482999268`*^9}, {3.633865502113283*^9, 
   3.6338656219671173`*^9}, {3.633868107793435*^9, 3.6338681310708113`*^9}, 
   3.634029627471177*^9, {3.6387899522056437`*^9, 3.638790019803317*^9}, {
   3.638792583181432*^9, 3.638792586460359*^9}, {3.638792712620565*^9, 
   3.638792731963705*^9}, 3.6392022075139637`*^9, {3.6409401930344477`*^9, 
   3.64094019655385*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "averaged", " ", "q", " ", "moment", " ", "of", " ", "the", " ", 
    "intensity"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"avqIntHarp", "[", 
     RowBox[{"q_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"avqIntHarp", "[", 
      RowBox[{"q", ",", "n"}], "]"}], "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"IntBandsHarp", "[", "n", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "^", "q"}], ",", "2"}], "]"}], "/", 
      
      RowBox[{"Fibonacci", "[", "n", "]"}]}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6387903168578157`*^9, 3.6387904975080957`*^9}, {
  3.638792773348711*^9, 3.6387927792366753`*^9}, {3.64094020155462*^9, 
  3.640940208834527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "19", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avIntN", "=", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"avqIntHarp", "[", 
       RowBox[{"15.", ",", "#"}], "]"}], "&"}], ",", "nValues"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Log", "@", 
   RowBox[{"glue", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", "nValues", "]"}], ",", "avIntN"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.638790563885058*^9, 3.6387906077785273`*^9}, {
  3.6387907799234743`*^9, 3.638790780082123*^9}, {3.638790991634129*^9, 
  3.638791068978476*^9}, {3.6387911202921457`*^9, 3.6387911701149406`*^9}, {
  3.638791215428357*^9, 3.638791308179717*^9}, {3.638791354820362*^9, 
  3.638791400499333*^9}, {3.638791526162737*^9, 3.638791554131571*^9}, {
  3.6387915928524446`*^9, 3.6387916451232243`*^9}, {3.638792749236163*^9, 
  3.638792766436413*^9}, {3.6387930951900387`*^9, 3.63879314770403*^9}, {
  3.639129803130342*^9, 3.6391298067943153`*^9}, {3.639129868284979*^9, 
  3.63912986842732*^9}, {3.6391303283485823`*^9, 3.639130335580117*^9}, {
  3.640940215282299*^9, 3.640940215490097*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0.6931471805599453, -0.6931471805599453}, {
      1.0986122886681098`, -1.2189250320809446`}, {
      1.6094379124341003`, -4.073903397916114}, {
      2.0794415416798357`, -5.524621255609219}, {
      2.5649493574615367`, -6.668168026750781}, {
      3.044522437723423, -8.961797931742332}, {
      3.5263605246161616`, -10.712026963472645`}, {
      4.007333185232471, -11.687320130646965`}, {
      4.48863636973214, -14.093576938595413`}, {
      4.969813299576001, -15.78267764222023}, {
      5.4510384535657, -16.793284532187585`}, {
      5.932245187448011, -19.180650638683154`}, {
      6.413458957167357, -20.879827440037996`}, {
      6.894670039433482, -21.885431853376076`}, {
      7.3758821482150125`, -24.275304297331}, {
      7.857093864902493, -25.973022840317178`}, {
      8.338305731356565, -26.979675508712326`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 8.338305731356565}, {-26.979675508712326`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638792795896812*^9, {3.6387930958408957`*^9, 3.638793148130229*^9}, 
   3.638851595467684*^9, 3.639129827442865*^9, 3.639129893188744*^9, {
   3.639130328944179*^9, 3.6391303372934933`*^9}, 3.640940225581086*^9}]
}, Open  ]],

Cell[TextData[{
 "For q into the range [0,20] we compute the slope ie ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    SubscriptBox["\[Tau]", "q"]}], TraditionalForm]]],
 " using the points n=10, 13, 16, 19."
}], "Text",
 CellChangeTimes->{{3.638793157921402*^9, 3.638793233760907*^9}, {
  3.638793401569675*^9, 3.638793517316625*^9}, {3.638793622481604*^9, 
  3.63879362593719*^9}, {3.638870503411724*^9, 3.6388705210917673`*^9}, {
  3.639129991287359*^9, 3.639129991879635*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"linFitHarp", "[", 
   RowBox[{"q_", ",", "nv_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"avIntN", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avIntN", "=", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"avqIntHarp", "[", 
          RowBox[{"q", ",", "#"}], "]"}], "&"}], ",", "nv"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"glue", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", "nv", "]"}], "]"}], ",", 
        RowBox[{"Log", "[", "avIntN", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LinearModelFit", "[", 
      RowBox[{"data", ",", "n", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6387943612061357`*^9, 3.638794483189991*^9}, {
  3.6391300219807453`*^9, 3.639130036731717*^9}, {3.640940231939519*^9, 
  3.640940234066831*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValuesHarp", "=", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"0.", ",", "0.99", ",", "0.05"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"1.01", ",", "2.", ",", "0.1"}], "]"}], "~", "Join", "~", 
    RowBox[{"Range", "[", 
     RowBox[{"2.", ",", "20.", ",", "0.5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nValuesHarp", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "13", ",", "16", ",", "19"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitsHarp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"linFitHarp", "[", 
      RowBox[{"#", ",", "nValuesHarp"}], "]"}], "&"}], "/@", 
    "qValuesHarp"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.638794486975334*^9, 3.6387945321143713`*^9}, {
   3.638794563124834*^9, 3.6387945633640614`*^9}, 3.6387947892358313`*^9, {
   3.6388705966455927`*^9, 3.638870611526979*^9}, {3.63887117637542*^9, 
   3.638871189655429*^9}, {3.6388715168259277`*^9, 3.638871518168088*^9}, {
   3.639129271883354*^9, 3.639129313099586*^9}, {3.63913000378795*^9, 
   3.639130046698415*^9}, {3.639130165276963*^9, 3.639130182650362*^9}, {
   3.639130256621193*^9, 3.639130257547888*^9}, {3.640940130577168*^9, 
   3.6409401310411654`*^9}, {3.640940240194318*^9, 3.640940240433539*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6409403276727457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"extract", " ", 
    RowBox[{
     SubscriptBox["\[Tau]", "q"], "'"}], "s", " ", "from", " ", "the", " ", 
    "fits"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tauqsHarp", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"#", "[", "\"\<ParameterTable\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], "&"}], "/@", 
      "fitsHarp"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"convert", " ", "to", " ", 
     SubscriptBox["D", "q"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqsHarp", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        FractionBox["#1", 
         RowBox[{"#2", "-", "1"}]], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"tauqsHarp", ",", "qValuesHarp"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6387945939297028`*^9, 3.638794594275021*^9}, {
  3.638794633620426*^9, 3.638794876943446*^9}, {3.638795119798197*^9, 
  3.6387952198642263`*^9}, {3.638795307222921*^9, 3.638795339608634*^9}, {
  3.639130187694229*^9, 3.639130192926097*^9}, {3.63913022476505*^9, 
  3.6391302419957247`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(\\(\\(linFitHarp[\
\\(\\(0.`, 0.1`, \\(\\({10, 13, 16, 19}\\)\\)\\)\\)]\\)\\)[\\\"ParameterTable\
\\\"]\\)\\) \[LeftDoubleBracket] \\(\\(1, 3, 2\\)\\) \[RightDoubleBracket]\\)\
\[NoBreak] is longer than depth of object. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136338945*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(\\(\\(linFitHarp[\
\\(\\(0.05`, 0.1`, \\(\\({10, 13, 16, \
19}\\)\\)\\)\\)]\\)\\)[\\\"ParameterTable\\\"]\\)\\) \[LeftDoubleBracket] \\(\
\\(1, 3, 2\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is longer than depth of \
object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136412695*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(\\(\\(linFitHarp[\
\\(\\(0.1`, 0.1`, \\(\\({10, 13, 16, \
19}\\)\\)\\)\\)]\\)\\)[\\\"ParameterTable\\\"]\\)\\) \[LeftDoubleBracket] \\(\
\\(1, 3, 2\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is longer than depth of \
object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136475226*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.640940136537437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "1.1", ",", "20."}], "}"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"Line", "@", 
       RowBox[{"glue", "[", 
        RowBox[{"qValuesHarp", ",", "dqsHarp"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<q\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(D\), \(q\)], \
\(\[Psi]\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.638871099478119*^9, 3.638871112695342*^9}, {
   3.638871203352187*^9, 3.63887126328948*^9}, {3.6388717651453753`*^9, 
   3.6388718315447817`*^9}, {3.638872635498169*^9, 3.638872686297875*^9}, {
   3.638873074153907*^9, 3.638873084169547*^9}, {3.63887337775386*^9, 
   3.638873430746499*^9}, {3.638876952701202*^9, 3.6388770164290953`*^9}, {
   3.638877124028881*^9, 3.6388772183809834`*^9}, {3.639128885451253*^9, 
   3.639128885691019*^9}, {3.639129178876523*^9, 3.6391292553405647`*^9}, {
   3.639129530029345*^9, 3.6391295879483356`*^9}, {3.639129652317589*^9, 
   3.63912965543666*^9}, {3.639130217934422*^9, 3.6391302474375267`*^9}, 
   3.63913029584098*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"q\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(D\\), \\(q\\)], \
\\(\[Psi]\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-0.1, 20}, {-0.5, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Thickness[Large], 
    LineBox[CompressedData["
1:eJw1zw0s1GEcB/Bbneg9dqkM4ZS7Uh0nva1+P9JQTMWUMQ2hVitba6J5WVMq
t7y0UVdSpLByldNqaMZUlkPez1vn7dx5f0l60dvV7/ltz/77PN/n+T77Wwaf
PRw6j8Ph7P27dF826aNGt8S/x0F6Wzf58HDt8kUhp5hfg0zhJKyrGgMHsW4q
oWG8LOuI9Rjl1RA4fX0qK3EU/rfVQ/6dFc+ujY/Q+UZYYJdrNes/AuFhumkB
fo1ZRX3NMN1XQvZNbtp852FQ1OimE6ZkwoS4kiHqU4EmcbeZ444hOt8D9crF
h9aUaKm/D9bFKBJMnLR0vx+MZHelwg8aek8N1VH8GrGfhvo0cDA1qNpyeJD6
tCA473O1MX6Q+oYhQ5pkyDMZpL4RGFJzVSdeqqlvDK7biD3LvNUgDEiumBFM
QO2Bpq1lxmqonBH83ZkE1/Lvb4ZcB+BfHDAN0RIL8+K8fviii2c+g5VI/qzN
uB9SdHHyF1AIQ+qep/RR31dYtdbluPPKPur7BrEiq++FOb3U9wMg/P4Z2129
1DcH7p7uh+bae6jvF4RKDtifvtRD/8vBB9IAvxfbmbkolxv4Bqk/kQ1QNrt/
q9ymm7wE3c6VvzAd6CSvwAm9EFmUpoNshIXidmfTJcw8/LUD4oK3tZONcSqu
pNc/UElejWOxLcuc4tvIJijt4HK5Oa1kU4y+EBGmX9tCNsekc+4ebxcwW2Cu
3jufn17NZEs0SH+fubOgiWyFlR3+l0t5zHyM6NqbaXmjkWyN00pv+2Ye8zrc
rHqa5/a4gbweVSZmkqUuzDbIv5J+r1v7kSzAJ4qbkfczmIVY4HkxJNCDeQMK
ima0+/SZN+LvmCf87Hf1ZFu0MD4a3Cph3oQplY7+x3yZN+OrPQmdVXzmLXgn
yXaRh7aOLMIgXnSXVyo5XoRFkpPnf+5huR02KAdUislayu3QYW7EaX8+mWOP
pcuzLy8MZbk96qWYRRdas1yMoli5nXpQQbkYayd9H4UVkjkOWOxnmDYaqYA/
j7+TPw==
     "]]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.63913020312774*^9, {3.639130249329356*^9, 3.6391302642410097`*^9}, 
   3.63913029831077*^9, 3.6391303916183453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<../Harper/data/average_wf_dimension.pdf\>\""}], ",", "%"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.639129341680035*^9, 3.639129396282734*^9}, {
  3.639129631579259*^9, 3.6391296353862543`*^9}, {3.639130361690815*^9, 
  3.63913037916223*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/spectrum_quasicrystals/Fibonacci/../\
Harper/data/average_wf_dimension.pdf\"\>"], "Output",
 CellChangeTimes->{{3.6391303799374447`*^9, 3.639130393141842*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 965},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 97, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[702, 27, 150, 2, 44, "Subsection"],
Cell[855, 31, 390, 12, 32, "Input"],
Cell[1248, 45, 2524, 66, 165, "Input"],
Cell[3775, 113, 2808, 74, 187, "Input"],
Cell[6586, 189, 3023, 79, 187, "Input"],
Cell[9612, 270, 2900, 82, 288, "Input"],
Cell[12515, 354, 1930, 52, 165, "Input"],
Cell[14448, 408, 5991, 163, 429, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20488, 577, 104, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[20617, 582, 122, 1, 44, "Subsection"],
Cell[20742, 585, 3823, 121, 300, "Text"],
Cell[24568, 708, 1008, 33, 81, "Input"],
Cell[CellGroupData[{
Cell[25601, 745, 4407, 121, 390, "Input"],
Cell[30011, 868, 45170, 751, 239, "Output"]
}, Open  ]],
Cell[75196, 1622, 704, 20, 66, "Text"],
Cell[CellGroupData[{
Cell[75925, 1646, 234, 7, 32, "Input"],
Cell[76162, 1655, 572, 12, 23, "Message"],
Cell[76737, 1669, 283, 6, 32, "Output"]
}, Open  ]],
Cell[77035, 1678, 1045, 34, 75, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78117, 1717, 155, 2, 44, "Subsection"],
Cell[78275, 1721, 4314, 130, 356, "Text"],
Cell[82592, 1853, 4868, 107, 547, "Input"],
Cell[CellGroupData[{
Cell[87485, 1964, 309, 7, 32, "Input"],
Cell[87797, 1973, 258, 5, 32, "Output"]
}, Open  ]],
Cell[88070, 1981, 805, 23, 55, "Input"],
Cell[88878, 2006, 1093, 31, 51, "Text"],
Cell[CellGroupData[{
Cell[89996, 2041, 1384, 29, 77, "Input"],
Cell[91383, 2072, 1820, 39, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93240, 2116, 131, 4, 32, "Input"],
Cell[93374, 2122, 1485, 39, 77, "Output"]
}, Open  ]],
Cell[94874, 2164, 1357, 30, 107, "Text"],
Cell[CellGroupData[{
Cell[96256, 2198, 1125, 26, 77, "Input"],
Cell[97384, 2226, 1928, 44, 229, "Output"]
}, Open  ]],
Cell[99327, 2273, 544, 13, 70, "Text"],
Cell[CellGroupData[{
Cell[99896, 2290, 2057, 54, 209, "Input"],
Cell[101956, 2346, 3276, 65, 240, "Output"],
Cell[105235, 2413, 1734, 38, 211, "Output"]
}, Open  ]],
Cell[106984, 2454, 963, 26, 121, "Input"],
Cell[107950, 2482, 351, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[108326, 2495, 1735, 50, 180, "Input"],
Cell[110064, 2547, 718, 14, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110819, 2566, 266, 6, 32, "Input"],
Cell[111088, 2574, 1301, 32, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112426, 2611, 257, 6, 32, "Input"],
Cell[112686, 2619, 1248, 31, 243, "Output"]
}, Open  ]],
Cell[113949, 2653, 2211, 71, 162, "Text"],
Cell[116163, 2726, 899, 29, 67, "Input"],
Cell[117065, 2757, 417, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[117507, 2772, 416, 11, 66, "Input"],
Cell[117926, 2785, 13576, 236, 231, 6928, 126, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[131517, 3024, 405, 7, 47, "Text"],
Cell[131925, 3033, 469, 11, 50, "Text"],
Cell[132397, 3046, 963, 26, 121, "Input"],
Cell[133363, 3074, 1084, 29, 77, "Input"],
Cell[CellGroupData[{
Cell[134472, 3107, 1735, 50, 180, "Input"],
Cell[136210, 3159, 575, 11, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136822, 3175, 1602, 40, 104, "Input"],
Cell[138427, 3217, 5743, 107, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144207, 3329, 319, 8, 32, "Input"],
Cell[144529, 3339, 218, 3, 32, "Output"]
}, Open  ]],
Cell[144762, 3345, 284, 6, 47, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[145083, 3356, 100, 1, 36, "Subsection"],
Cell[145186, 3359, 4749, 101, 547, "Input"],
Cell[149938, 3462, 848, 24, 55, "Input"],
Cell[CellGroupData[{
Cell[150811, 3490, 1286, 28, 77, "Input"],
Cell[152100, 3520, 1912, 44, 229, "Output"]
}, Open  ]],
Cell[154027, 3567, 522, 12, 50, "Text"],
Cell[154552, 3581, 1038, 28, 121, "Input"],
Cell[CellGroupData[{
Cell[155615, 3613, 1322, 30, 77, "Input"],
Cell[156940, 3645, 79, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157056, 3651, 1333, 36, 133, "Input"],
Cell[158392, 3689, 637, 12, 23, "Message"],
Cell[159032, 3703, 641, 13, 23, "Message"],
Cell[159676, 3718, 640, 13, 23, "Message"],
Cell[160319, 3733, 528, 11, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160884, 3749, 1567, 37, 65, "Input"],
Cell[162454, 3788, 2114, 48, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164605, 3841, 367, 9, 32, "Input"],
Cell[164975, 3852, 195, 2, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
