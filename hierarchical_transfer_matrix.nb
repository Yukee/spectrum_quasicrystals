(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    302642,       6230]
NotebookOptionsPosition[    296857,       6042]
NotebookOutlinePosition[    297210,       6058]
CellTagsIndexPosition[    297167,       6055]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["G\[EAcute]n\[EAcute]ralit\[EAcute]s", "Section",
 CellChangeTimes->{{3.621146690017959*^9, 3.621146694130292*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"matrice", " ", "de", " ", "transfert", " ", 
    RowBox[{"d", "'"}], "un", " ", "site", " ", "au", " ", "suivant"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"M", "[", 
      RowBox[{"tr_", ",", "tl_", ",", "e_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["e", "tr"], ",", 
         RowBox[{"-", 
          FractionBox["tl", "tr"]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "matrice", " ", "de", " ", "transfert", " ", "de", " ", "la", " ", "2"}],
      "-", "mol\[EAcute]cule"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M1", "=", 
     RowBox[{
      RowBox[{"M", "[", 
       RowBox[{"1", ",", "v", ",", "e"}], "]"}], ".", 
      RowBox[{"M", "[", 
       RowBox[{"v", ",", "1", ",", "e"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"%", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.6211465783587627`*^9, 3.621146606126301*^9}, {
  3.621146771672761*^9, 3.6211467834329147`*^9}, {3.621163822633212*^9, 
  3.6211638273214693`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        SuperscriptBox["e", "2"], "v"], "-", "v"}], 
      RowBox[{"-", 
       FractionBox["e", "v"]}]},
     {
      FractionBox["e", "v"], 
      RowBox[{"-", 
       FractionBox["1", "v"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.62114660645004*^9, {3.621163819397788*^9, 3.6211638277023706`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "matrice", " ", "de", " ", "transfert", " ", "de", " ", "la", " ", "4"}], 
    "-", "mol\[EAcute]cule"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M1", "/.", 
     RowBox[{"v", "\[Rule]", 
      RowBox[{"r", " ", "v"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"%", ".", "M1"}], "//", "Expand"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"M2", "=", "%"}]}]}]], "Input",
 CellChangeTimes->{{3.621070222623405*^9, 3.621070251379961*^9}, {
  3.621145535886098*^9, 3.621145562830843*^9}, {3.621145749566725*^9, 
  3.621145752752211*^9}, {3.621146435364835*^9, 3.621146445299721*^9}, {
  3.621146761238283*^9, 3.6211467632054443`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["e", "2"], "r"]}], "-", 
      RowBox[{
       SuperscriptBox["e", "2"], " ", "r"}], "-", 
      FractionBox[
       SuperscriptBox["e", "2"], 
       RowBox[{"r", " ", 
        SuperscriptBox["v", "2"]}]], "+", 
      FractionBox[
       SuperscriptBox["e", "4"], 
       RowBox[{"r", " ", 
        SuperscriptBox["v", "2"]}]], "+", 
      RowBox[{"r", " ", 
       SuperscriptBox["v", "2"]}]}], ",", 
     RowBox[{
      RowBox[{"e", " ", "r"}], "+", 
      FractionBox["e", 
       RowBox[{"r", " ", 
        SuperscriptBox["v", "2"]}]], "-", 
      FractionBox[
       SuperscriptBox["e", "3"], 
       RowBox[{"r", " ", 
        SuperscriptBox["v", "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["e", "r"]}], "-", 
      FractionBox["e", 
       RowBox[{"r", " ", 
        SuperscriptBox["v", "2"]}]], "+", 
      FractionBox[
       SuperscriptBox["e", "3"], 
       RowBox[{"r", " ", 
        SuperscriptBox["v", "2"]}]]}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"r", " ", 
        SuperscriptBox["v", "2"]}]], "-", 
      FractionBox[
       SuperscriptBox["e", "2"], 
       RowBox[{"r", " ", 
        SuperscriptBox["v", "2"]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6210702313631287`*^9, 3.621070251933529*^9}, 
   3.621145754917563*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"couplages", " ", "renormalis\[EAcute]s"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vv", "=", 
     FractionBox[
      RowBox[{"r", " ", 
       SuperscriptBox["v", "2"]}], 
      RowBox[{
       SuperscriptBox["e", "2"], "-", "1"}]]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"e1", "=", 
     RowBox[{"e", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox["r", 
          RowBox[{"-", "1"}]], "vv"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e2", "=", 
     RowBox[{"e", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"r", " ", "vv"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"la", " ", "4"}], "-", 
     RowBox[{
     "mol\[EAcute]cule", " ", "correspond", " ", "bien", " ", "\[AGrave]", 
      " ", "une", " ", "2"}], "-", 
     RowBox[{
     "mol\[EAcute]cule", " ", "avec", " ", "les", " ", "couplages", " ", 
      "renormalis\[EAcute]s"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"M", "[", 
      RowBox[{"1", ",", "vv", ",", "e2"}], "]"}], ".", 
     RowBox[{"M", "[", 
      RowBox[{"vv", ",", "1", ",", "e1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"%", "//", "Expand"}], "//", "Simplify"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"%", "\[Equal]", 
    RowBox[{"Simplify", "[", "M2", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.621145568164905*^9, 3.621145763966902*^9}, {
  3.621145820000834*^9, 3.6211458475900707`*^9}, {3.621145887557578*^9, 
  3.621146027938755*^9}, {3.6211461732863693`*^9, 3.621146196630762*^9}, {
  3.6211463049492617`*^9, 3.62114633917343*^9}, {3.621146373400811*^9, 
  3.621146427876884*^9}, {3.62114656980212*^9, 3.62114657069728*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.62114572110293*^9, 3.621145729894506*^9}, 
   3.6211457645914707`*^9, {3.621145998993363*^9, 3.6211460286249533`*^9}, 
   3.621146197307097*^9, {3.621146307522265*^9, 3.6211463397032337`*^9}, 
   3.621146657772771*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mol\[EAcute]cules isol\[EAcute]es", "Section",
 CellChangeTimes->{{3.621146704754087*^9, 3.621146712306305*^9}}],

Cell[CellGroupData[{

Cell["Intro", "Subsubsection",
 CellChangeTimes->{{3.621163724850676*^9, 3.621163725380117*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "matrice", " ", "de", " ", "transfert", " ", "de", " ", "la", " ", "2"}], 
    "-", "mol\[EAcute]cule"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M1", "=", 
     RowBox[{
      RowBox[{"M", "[", 
       RowBox[{"1", ",", "v", ",", "e"}], "]"}], ".", 
      RowBox[{"M", "[", 
       RowBox[{"v", ",", "1", ",", "e"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"M1", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.621146750450457*^9, 3.621146793751565*^9}, {
  3.621157029886982*^9, 3.6211570366509867`*^9}, {3.6211576530080214`*^9, 
  3.6211576571491547`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        SuperscriptBox["e", "2"], "v"], "-", "v"}], 
      RowBox[{"-", 
       FractionBox["e", "v"]}]},
     {
      FractionBox["e", "v"], 
      RowBox[{"-", 
       FractionBox["1", "v"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.621157657537127*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "hamiltonien", " ", "dans", " ", "la", " ", "base", " ", "atomique"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h4", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "v", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "v", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"%", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.6211471909364147`*^9, 3.6211472398523283`*^9}, {
  3.621152293088159*^9, 3.621152295335614*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "0"},
     {"1", "0", "v", "0"},
     {"0", "v", "0", "1"},
     {"0", "0", "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6211522956449966`*^9}]
}, Open  ]],

Cell[TextData[{
 "Dans le cas d\[CloseCurlyQuote]une mol\[EAcute]cule isol\[EAcute]e on a des \
conditions aux limites nulles. Cela donne pour la fonction \
d\[CloseCurlyQuote]onde d\[CloseCurlyQuote]\[EAcute]nergie E dont les \
coefficients sont les ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]]],
 " dans la base atomique les conditions :\nE ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "0"], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", 
    RowBox[{"0", ",", "1"}]], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "1"], TraditionalForm]]],
 "\nE ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "N"], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", 
    RowBox[{"N", ",", 
     RowBox[{"N", "-", "1"}]}]], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", 
    RowBox[{"N", "-", "1"}]], TraditionalForm]]],
 " \nDans la suite on suppose ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", 
     RowBox[{"0", ",", "1"}]], "=", 
    SubscriptBox["t", 
     RowBox[{"N", ",", 
      RowBox[{"N", "-", "1"}]}]]}], TraditionalForm]]],
 "=1. C\[CloseCurlyQuote]est de toute fa\[CCedilla]on le cas pour nos mol\
\[EAcute]cules.\nOn peut gr\[AHat]ce \[AGrave] la condition aux limites au \
bord gauche choisir ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["\[Psi]", "1"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "0"], TraditionalForm]]],
 ") = (E, 1). Le vecteur propre ne sera alors pas normalis\[EAcute], mais peu \
importe. \nAppelons M la matrice de transfert qui va d\[CloseCurlyQuote]un \
bord \[AGrave] l\[CloseCurlyQuote]autre du syst\[EGrave]me, ie celle qui \
donne :\nM ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["\[Psi]", "1"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "0"], TraditionalForm]]],
 ") = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["\[Psi]", "N"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", 
    RowBox[{"N", "-", "1"}]], TraditionalForm]]],
 ")\nApr\[EGrave]s application de M sur ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["\[Psi]", "1"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "0"], TraditionalForm]]],
 "), on obtient ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "N"], TraditionalForm]]],
 " comme un polyn\[OHat]me de degr\[EAcute] N-1 en E. Gr\[AHat]ce \[AGrave] \
la condition aux limites au bord droit on obtient une \[EAcute]quation \
polynomiale de degr\[EAcute] N \[AGrave] r\[EAcute]soudre, qui nous donne les \
N \[EAcute]nergies propres du syst\[EGrave]me."
}], "Text",
 CellChangeTimes->{{3.621156751716968*^9, 3.6211569196542683`*^9}, {
  3.621156953878517*^9, 3.6211571353035593`*^9}, {3.621157169800035*^9, 
  3.6211572235123787`*^9}, {3.62115729642584*^9, 3.6211574347939653`*^9}, {
  3.621157475818265*^9, 3.621157597242971*^9}, {3.62115773044384*^9, 
  3.621157760796332*^9}, {3.621157918734681*^9, 3.6211579255175657`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"M1", ".", 
    RowBox[{"{", 
     RowBox[{"e", " ", ",", "1"}], "}"}]}], "//", "Expand"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec4", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"e", "*", 
       RowBox[{"%", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "\[Equal]", 
      RowBox[{"%", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", "e"}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "les", " ", "\[EAcute]nergies", " ", "obtenues", " ", "sont", " ", "bien",
      " ", "celles", " ", "de", " ", "la", " ", "4"}], "-", 
    "mol\[EAcute]cule"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", "h4", "]"}]}], "Input",
 CellChangeTimes->{{3.621146833812842*^9, 3.6211468384706917`*^9}, {
  3.621146869401045*^9, 3.621146937174926*^9}, {3.6211523995642242`*^9, 
  3.621152400091826*^9}, {3.621152804655176*^9, 3.6211528060941143`*^9}, {
  3.621156125286354*^9, 3.62115612760544*^9}, {3.62115619117319*^9, 
  3.6211561929438066`*^9}, {3.6211578053447657`*^9, 3.621157893506351*^9}, {
  3.621158014979796*^9, 3.621158022771503*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "v"}], "-", 
        SqrtBox[
         RowBox[{"4", "+", 
          SuperscriptBox["v", "2"]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"v", "-", 
        SqrtBox[
         RowBox[{"4", "+", 
          SuperscriptBox["v", "2"]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "v"}], "+", 
        SqrtBox[
         RowBox[{"4", "+", 
          SuperscriptBox["v", "2"]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"v", "+", 
        SqrtBox[
         RowBox[{"4", "+", 
          SuperscriptBox["v", "2"]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.621146838947682*^9, {3.6211468699569683`*^9, 3.621146937629004*^9}, 
   3.621152400309105*^9, 3.621152807616547*^9, 3.621156137658128*^9, 
   3.621156193281814*^9, 3.6211578075630007`*^9, {3.621157841757176*^9, 
   3.621157852399468*^9}, 3.6211578945935163`*^9, 3.6211580238520317`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "v"}], "-", 
      SqrtBox[
       RowBox[{"4", "+", 
        SuperscriptBox["v", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"v", "-", 
      SqrtBox[
       RowBox[{"4", "+", 
        SuperscriptBox["v", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "v"}], "+", 
      SqrtBox[
       RowBox[{"4", "+", 
        SuperscriptBox["v", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"v", "+", 
      SqrtBox[
       RowBox[{"4", "+", 
        SuperscriptBox["v", "2"]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.621146838947682*^9, {3.6211468699569683`*^9, 3.621146937629004*^9}, 
   3.621152400309105*^9, 3.621152807616547*^9, 3.621156137658128*^9, 
   3.621156193281814*^9, 3.6211578075630007`*^9, {3.621157841757176*^9, 
   3.621157852399468*^9}, 3.6211578945935163`*^9, 3.6211580238550053`*^9}]
}, Open  ]],

Cell["\<\
La matrice de transfert nous donne aussi les vecteurs propres.\
\>", "Text",
 CellChangeTimes->{{3.62115873531359*^9, 3.6211587526099567`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i", "=", "4"}], ",", "vp"}], "}"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"vp", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "e", " ", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M1", ".", 
           RowBox[{"{", 
            RowBox[{"e", " ", ",", "1"}], "}"}]}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M1", ".", 
           RowBox[{"{", 
            RowBox[{"e", " ", ",", "1"}], "}"}]}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "/.", 
      RowBox[{"spec4", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"vp", "//", "Expand"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"e", "/.", 
           RowBox[{"spec4", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ")"}], 
         RowBox[{"-", "1"}]], "*", 
        RowBox[{"h4", ".", "vp"}]}], ")"}], "//", "FullSimplify"}], "//", 
     "Expand"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6211472079024277`*^9, 3.621147230554205*^9}, {
  3.621152198493339*^9, 3.621152220541339*^9}, {3.6211524066375647`*^9, 
  3.621152435662712*^9}, {3.621152833490037*^9, 3.6211528601003733`*^9}, {
  3.621156155736808*^9, 3.621156176760922*^9}, {3.621158034516773*^9, 
  3.6211581197634487`*^9}, {3.621158183440455*^9, 3.621158210625049*^9}, {
  3.621158264853363*^9, 3.621158382828665*^9}, {3.621158448326788*^9, 
  3.621158459125827*^9}, {3.621158501751309*^9, 3.621158611352709*^9}, {
  3.6211586502488956`*^9, 3.621158701466146*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    FractionBox["v", "2"], "+", 
    FractionBox[
     SqrtBox[
      RowBox[{"4", "+", 
       SuperscriptBox["v", "2"]}]], "2"]}], ",", 
   RowBox[{
    FractionBox["v", "2"], "+", 
    FractionBox[
     SqrtBox[
      RowBox[{"4", "+", 
       SuperscriptBox["v", "2"]}]], "2"]}], ",", "1"}], "}"}]], "Print",
 CellChangeTimes->{
  3.621158613401703*^9, {3.621158659828842*^9, 3.62115870195304*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    FractionBox["v", "2"], "+", 
    FractionBox[
     SqrtBox[
      RowBox[{"4", "+", 
       SuperscriptBox["v", "2"]}]], "2"]}], ",", 
   RowBox[{
    FractionBox["v", "2"], "+", 
    FractionBox[
     SqrtBox[
      RowBox[{"4", "+", 
       SuperscriptBox["v", "2"]}]], "2"]}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.621147244234215*^9, {3.621152199872632*^9, 3.621152221009408*^9}, {
   3.621152418902309*^9, 3.6211524364612017`*^9}, {3.6211528520050993`*^9, 
   3.621152861400216*^9}, {3.621156158446561*^9, 3.621156177600376*^9}, {
   3.621158098552239*^9, 3.621158120294819*^9}, 3.62115821158849*^9, {
   3.621158276427042*^9, 3.621158355862355*^9}, {3.621158449098959*^9, 
   3.621158459519216*^9}, 3.621158613476975*^9, {3.621158659867374*^9, 
   3.621158701993497*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spectre", "Subsection",
 CellChangeTimes->{{3.621163740691127*^9, 3.621163744354485*^9}}],

Cell[CellGroupData[{

Cell["Avec une matrice de transfert", "Subsubsection",
 CellChangeTimes->{{3.6211697640897017`*^9, 3.621169769305787*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "matrice", " ", "de", " ", "transfert", " ", "de", " ", "la", " ", "4"}], 
    "-", "mol\[EAcute]cule"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "M", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"M", "[", "v_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox[
           SuperscriptBox["e", "2"], "v"], "-", "v"}], ",", 
         RowBox[{"-", 
          FractionBox["e", "v"]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["e", "v"], ",", 
         RowBox[{"-", 
          FractionBox["1", "v"]}]}], "}"}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6211637678146467`*^9, 3.62116379555929*^9}, {
  3.621163831560882*^9, 3.621163836873413*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"M", ",", "vv"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", "[", "vv_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["e", "2"], "vv"], "-", "vv"}], ",", 
       RowBox[{"-", 
        FractionBox["e", "vv"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["e", "vv"], ",", 
       RowBox[{"-", 
        FractionBox["1", "vv"]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"r", ",", "v"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"iter", "=", "1"}], ",", 
     RowBox[{"v", "=", "1."}], ",", 
     RowBox[{"r", "=", "0.1"}], ",", "mf", ",", "transl", ",", "spec"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mf", "=", 
     RowBox[{
      RowBox[{"Nest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Expand", "[", 
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ".", 
              RowBox[{"(", 
               RowBox[{"M", "[", 
                RowBox[{
                 SuperscriptBox["r", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]], " ", "v"}], "]"}], ")"}], 
              ".", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", "1"}]}], "}"}], "&"}], ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"M", "[", "v", "]"}]}], ",", "1"}], "}"}], ",", "iter"}], 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"transl", "=", 
     RowBox[{"mf", ".", 
      RowBox[{"{", 
       RowBox[{"e", " ", ",", "1"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"spec", "=", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"e", "*", 
         RowBox[{"transl", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "\[Equal]", 
        RowBox[{"transl", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", "e"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"e", "/.", "spec"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6211640841717978`*^9, 3.621164084568797*^9}, {
   3.6211641748076344`*^9, 3.621164217113776*^9}, {3.621164502203689*^9, 
   3.621164557006954*^9}, {3.6211645932142267`*^9, 3.621164626959167*^9}, {
   3.621164679217778*^9, 3.621164787042169*^9}, {3.62116482009809*^9, 
   3.621164894853335*^9}, {3.621164938889242*^9, 3.62116493926772*^9}, {
   3.621164982085161*^9, 3.6211650083731117`*^9}, {3.621165094566161*^9, 
   3.621165111337977*^9}, {3.621165203543236*^9, 3.621165221561445*^9}, {
   3.621165312484226*^9, 3.6211654093522453`*^9}, {3.621165457642126*^9, 
   3.621165501927545*^9}, 3.621165555767819*^9, {3.6211656263929358`*^9, 
   3.621165674778865*^9}, {3.62116572095254*^9, 3.621165749865291*^9}, {
   3.621165787357048*^9, 3.6211658376254597`*^9}, {3.6211658752288723`*^9, 
   3.6211659477204943`*^9}, {3.6211659932916203`*^9, 3.621166009260713*^9}, {
   3.6211660871799097`*^9, 3.621166301599743*^9}, {3.621166351393474*^9, 
   3.621166360734602*^9}, {3.621166397447144*^9, 3.6211664230077877`*^9}, {
   3.621166490433634*^9, 3.6211664913765697`*^9}, {3.621166857848065*^9, 
   3.62116691009953*^9}, 3.6211669525338497`*^9, {3.621167002375115*^9, 
   3.621167011027824*^9}, 3.621169624425867*^9, {3.6211696548563128`*^9, 
   3.6211696946823263`*^9}, {3.621239410874329*^9, 3.621239414824812*^9}, {
   3.621239573209999*^9, 3.6212395794342012`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1., -1.6326732220293325`}, {2., -1.6049623264661972`}, {
     3., -0.6549584270557778}, {4., -0.5826693226189245}, {5., 
     0.5826693226189245}, {6., 0.6549584270557777}, {7., 
     1.6049623264661914`}, {8., 1.6326732220293434`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 8.}, {-1.6326732220293325`, 1.6326732220293434`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.621164627521987*^9, {3.621164680639862*^9, 3.62116469306548*^9}, 
   3.621164726188917*^9, {3.621164768155736*^9, 3.621164788205509*^9}, {
   3.621164835279508*^9, 3.621164874520391*^9}, 3.621164937296691*^9, {
   3.621164976070815*^9, 3.621165009230645*^9}, {3.6211650949578667`*^9, 
   3.621165114888892*^9}, {3.621165205980584*^9, 3.621165223922307*^9}, {
   3.6211653371673098`*^9, 3.6211654097402163`*^9}, {3.621165479054037*^9, 
   3.621165502306382*^9}, 3.621165557208309*^9, {3.621165626767067*^9, 
   3.6211656372752867`*^9}, 3.621165675651371*^9, {3.6211657220295143`*^9, 
   3.621165750208363*^9}, {3.621165790404717*^9, 3.621165840643749*^9}, {
   3.621165895035158*^9, 3.621165949779539*^9}, {3.621165996720706*^9, 
   3.621166012887361*^9}, 3.6211660879600277`*^9, {3.621166118815847*^9, 
   3.621166142385889*^9}, {3.621166190094536*^9, 3.621166212433971*^9}, {
   3.6211662501722183`*^9, 3.621166279170355*^9}, {3.621166349128214*^9, 
   3.621166364983368*^9}, 3.6211664126895742`*^9, {3.6211664796061697`*^9, 
   3.6211664919499083`*^9}, {3.621166859737257*^9, 3.6211669180150833`*^9}, 
   3.621166957139291*^9, {3.621167003592955*^9, 3.621167011386722*^9}, 
   3.621169624764776*^9, {3.621169655617941*^9, 3.621169695046777*^9}, {
   3.621239382499694*^9, 3.621239415150107*^9}, {3.6212395734724197`*^9, 
   3.621239579694147*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Diagonalisation directe", "Subsubsection",
 CellChangeTimes->{{3.6211697771138983`*^9, 3.621169785178193*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "amplitude", " ", "de", " ", "saut", " ", "entre", " ", "les", " ", 
     "sites", " ", "atomiques", " ", "i", " ", "et", " ", "i"}], "+", "1"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "t", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t", "[", "i_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", "tt"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"IntegerExponent", "[", 
         RowBox[{"i", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"k", "\[Equal]", "0"}], ",", 
         RowBox[{"tt", "=", "1"}], ",", 
         RowBox[{"tt", "=", 
          RowBox[{"v", " ", 
           SuperscriptBox["r", 
            RowBox[{"k", "-", "1"}]]}]}]}], "]"}], ";", "\[IndentingNewLine]",
        "tt"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6211679999582233`*^9, 3.621168134325338*^9}, {
  3.621168458751822*^9, 3.621168472552882*^9}, {3.621168519675881*^9, 
  3.621168549275285*^9}, {3.6211686223969097`*^9, 3.621168644998843*^9}, {
  3.6211687319432173`*^9, 3.621168734615151*^9}, {3.621169102780929*^9, 
  3.621169105022097*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "hamiltonien", " ", "avec", " ", "conditions", " ", "aux", " ", "bords", 
    " ", "libres"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "h", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "[", "n_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tbl", ",", "ar"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "->", 
           RowBox[{"t", "[", "i", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             SuperscriptBox["2", "n"], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ar", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["2", "n"], ",", 
            SuperscriptBox["2", "n"]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"ar", "+", 
         RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6211684819135237`*^9, 3.6211684988856583`*^9}, {
  3.621168559429494*^9, 3.621168599686886*^9}, {3.62116867296889*^9, 
  3.621168725036395*^9}, {3.621168764298398*^9, 3.621168815675806*^9}, {
  3.6211688527164*^9, 3.621168914476056*^9}, {3.621168955102767*^9, 
  3.621169020992931*^9}, {3.621169062764553*^9, 3.6211690985108767`*^9}, {
  3.6211697952057056`*^9, 3.621169799843378*^9}, {3.621250086580373*^9, 
  3.621250092914645*^9}, {3.621574042613912*^9, 3.6215740570107183`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "4", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6213332287885323`*^9, 3.62133323361891*^9}, {
  3.6213333052799797`*^9, 3.6213333164756393`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"1", "0", "v", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "v", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "1", "0", 
      RowBox[{"r", " ", "v"}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", 
      RowBox[{"r", " ", "v"}], "0", "1", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "v", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "v", "0", "1", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", "v"}], "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", "v"}], "0", "1", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "v", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "v", "0", "1", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", 
      RowBox[{"r", " ", "v"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"r", " ", "v"}], "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", 
      "v", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "v", 
      "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 30}, {{
       2}, {1}, {3}, {2}, {4}, {3}, {5}, {4}, {6}, {5}, {7}, {6}, {8}, {7}, {
       9}, {8}, {10}, {9}, {11}, {10}, {12}, {11}, {13}, {12}, {14}, {13}, {
       15}, {14}, {16}, {15}}}, {
      1, 1, $CellContext`v, $CellContext`v, 1, 
       1, $CellContext`r $CellContext`v, $CellContext`r $CellContext`v, 1, 
       1, $CellContext`v, $CellContext`v, 1, 
       1, $CellContext`r^2 $CellContext`v, $CellContext`r^2 $CellContext`v, 1,
        1, $CellContext`v, $CellContext`v, 1, 
       1, $CellContext`r $CellContext`v, $CellContext`r $CellContext`v, 1, 
       1, $CellContext`v, $CellContext`v, 1, 1}}]]]]], "Output",
 CellChangeTimes->{
  3.6213332339193*^9, 3.621333272616982*^9, {3.6213333064414263`*^9, 
   3.6213333166504517`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "spectre", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "=", "1."}], ",", 
      RowBox[{"r", "=", ".4"}], ",", "vp"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vp", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"h", "[", "9", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"vp", ",", 
       RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6211691819490356`*^9, 3.621169295515432*^9}, {
  3.621169329468741*^9, 3.621169363085153*^9}, {3.621169397340905*^9, 
  3.621169439694463*^9}, {3.621169484754628*^9, 3.621169534142599*^9}, {
  3.6211695650579653`*^9, 3.621169565167144*^9}, {3.621169603888824*^9, 
  3.621169719442539*^9}, {3.621169816596427*^9, 3.621169850688087*^9}, {
  3.621169918276724*^9, 3.621169920596176*^9}, {3.6211701269976807`*^9, 
  3.62117013270679*^9}, {3.621239395761104*^9, 3.621239437159552*^9}, {
  3.621239477620801*^9, 3.6212394863384867`*^9}, {3.62123954621198*^9, 
  3.621239555475575*^9}, {3.621239596547036*^9, 3.621239599810574*^9}, {
  3.621243910992449*^9, 3.621243924607359*^9}, {3.6212547095363626`*^9, 
  3.621254709703143*^9}, {3.621333325324873*^9, 3.621333343010429*^9}, {
  3.6213333970892982`*^9, 3.621333451932893*^9}, {3.621333496474539*^9, 
  3.6213335248894253`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1: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

     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{Automatic, 373.582738744522},
  Method->{},
  PlotRange->{{0., 512.}, {-1.7009026608756306`, 1.700902660875631}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6211691774948378`*^9, 3.621169218134161*^9}, {
   3.6211692500604353`*^9, 3.621169297568139*^9}, {3.621169331888404*^9, 
   3.621169363990342*^9}, {3.621169420128154*^9, 3.621169440740402*^9}, {
   3.621169516332835*^9, 3.621169534901366*^9}, {3.621169601747848*^9, 
   3.621169720298777*^9}, {3.621169816868084*^9, 3.6211698512277403`*^9}, 
   3.621169921537867*^9, {3.62117012842222*^9, 3.621170133285821*^9}, {
   3.6212393965372458`*^9, 3.621239437795829*^9}, {3.6212394781082487`*^9, 
   3.6212394912152233`*^9}, {3.6212395464777718`*^9, 
   3.6212395562386227`*^9}, {3.62124391273137*^9, 3.621243925726757*^9}, {
   3.621254703975453*^9, 3.6212547117620773`*^9}, 3.621274822909109*^9, 
   3.621315226198225*^9, {3.621333335505312*^9, 3.621333344766667*^9}, {
   3.621333399278241*^9, 3.621333453729527*^9}, {3.621333500084035*^9, 
   3.6213335254125977`*^9}, 3.621487524202012*^9, 3.621574070685318*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", "=", ".3"}], ",", 
     RowBox[{"r", "=", ".3"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Eigensystem", "[", 
    RowBox[{"h", "[", "2", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6214876316973*^9, 3.6214876478830833`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.161187420807834`", ",", 
     RowBox[{"-", "1.161187420807833`"}], ",", "0.861187420807835`", ",", 
     RowBox[{"-", "0.8611874208078341`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.4614270113110399`", ",", "0.5358032411553338`", ",", 
       "0.5358032411553344`", ",", "0.4614270113110405`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.46142701131104036`"}], ",", "0.535803241155334`", ",", 
       
       RowBox[{"-", "0.5358032411553338`"}], ",", "0.4614270113110406`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5358032411553342`", ",", "0.46142701131104064`", ",", 
       RowBox[{"-", "0.4614270113110401`"}], ",", 
       RowBox[{"-", "0.5358032411553336`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5358032411553341`", ",", 
       RowBox[{"-", "0.46142701131104025`"}], ",", 
       RowBox[{"-", "0.46142701131103997`"}], ",", "0.5358032411553343`"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.621487648181954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"vecteurs", " ", "propres"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "=", "1."}], ",", 
      RowBox[{"r", "=", ".3"}], ",", "val", ",", "vp", ",", 
      RowBox[{"i", "=", "8"}], ",", 
      RowBox[{"vect", "=", "2"}], ",", "tt"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"val", ",", "vp"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"h", "[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tt", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"it", ",", 
        RowBox[{"{", 
         RowBox[{"it", ",", 
          SuperscriptBox["2", "i"]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"vp", "[", 
        RowBox[{"[", "vect", "]"}], "]"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"val", "[", 
         RowBox[{"[", "vect", "]"}], "]"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Point", "/@", " ", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"tt", ",", 
             RowBox[{"vp", "[", 
              RowBox[{"[", "vect", "]"}], "]"}]}], "}"}]}], "]"}]}]}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6211691819490356`*^9, 3.621169295515432*^9}, {
   3.621169329468741*^9, 3.621169363085153*^9}, {3.621169397340905*^9, 
   3.621169439694463*^9}, {3.621169484754628*^9, 3.621169534142599*^9}, {
   3.6211695650579653`*^9, 3.621169565167144*^9}, {3.621169603888824*^9, 
   3.621169719442539*^9}, {3.621169816596427*^9, 3.621169850688087*^9}, {
   3.621169918276724*^9, 3.621169920596176*^9}, {3.6211701269976807`*^9, 
   3.62117013270679*^9}, {3.621239395761104*^9, 3.621239437159552*^9}, {
   3.621239477620801*^9, 3.6212394863384867`*^9}, {3.62123954621198*^9, 
   3.621239555475575*^9}, {3.621239604722619*^9, 3.621239632067193*^9}, {
   3.621243310363565*^9, 3.6212433157224293`*^9}, {3.62124353410839*^9, 
   3.62124356265228*^9}, {3.621243606831851*^9, 3.621243717807374*^9}, {
   3.621243793648526*^9, 3.6212438910103817`*^9}, {3.62124394784146*^9, 
   3.621243981714294*^9}, {3.62124478687073*^9, 3.621244800625298*^9}, {
   3.621252361858836*^9, 3.621252366721439*^9}, 3.621333596385977*^9, {
   3.6213336432483397`*^9, 3.621333774241098*^9}, {3.6213357746226892`*^9, 
   3.6213358180190496`*^9}, {3.621335869539687*^9, 3.621335901144291*^9}, {
   3.621337479277892*^9, 3.621337490864541*^9}, {3.621337584013032*^9, 
   3.621337993243061*^9}, {3.621487572411193*^9, 3.6214876084825172`*^9}, 
   3.621487651939579*^9, {3.621487682656275*^9, 3.621487862575514*^9}, {
   3.6214969552535343`*^9, 3.621496995691354*^9}, 3.62157408551516*^9, {
   3.621574134912489*^9, 3.6215741387358503`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
nk+H/ITzB73/JzZ+4YY=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointBox[{1, 0.026838317815871298`}], 
    PointBox[{2, 0.04493803466874795}], 
    PointBox[{3, 0.04840585261776771}], 
    PointBox[{4, 0.036112644365284906`}], 
    PointBox[{5, 0.04020366328275586}], 
    PointBox[{6, 0.05648315355743245}], 
    PointBox[{7, 0.05437163499704474}], 
    PointBox[{8, 0.03455662156024594}], 
    PointBox[{9, 0.038776829015097165`}], 
    PointBox[{10, 0.06181776200431304}], 
    PointBox[{11, 0.06473072876676324}], 
    PointBox[{12, 0.04656726247490046}], 
    PointBox[{13, 0.04413805997685019}], 
    PointBox[{14, 0.05993451539890431}], 
    PointBox[{15, 0.056216192824263087`}], 
    PointBox[{16, 0.03419378427373072}], 
    PointBox[{17, 0.03843787539533191}], 
    PointBox[{18, 0.06343708239272122}], 
    PointBox[{19, 0.06778106974893086}], 
    PointBox[{20, 0.05005542794863122}], 
    PointBox[{21, 0.053438851575938175`}], 
    PointBox[{22, 0.07446129572574581}], 
    PointBox[{23, 0.07123901801932597}], 
    PointBox[{24, 0.044821197442542954`}], 
    PointBox[{25, 0.042328003969705055`}], 
    PointBox[{26, 0.06684003160667884}], 
    PointBox[{27, 0.06958883367296095}], 
    PointBox[{28, 0.04967939563938867}], 
    PointBox[{29, 0.04531421225399418}], 
    PointBox[{30, 0.06097022286427437}], 
    PointBox[{31, 0.056774227402822584`}], 
    PointBox[{32, 0.034092448977649153`}], 
    PointBox[{33, 0.03828548223023163}], 
    PointBox[{34, 0.06382899886946286}], 
    PointBox[{35, 0.0685896872101999}], 
    PointBox[{36, 0.05101745920280045}], 
    PointBox[{37, 0.056112871806140205`}], 
    PointBox[{38, 0.07865006137106535}], 
    PointBox[{39, 0.07557866001192232}], 
    PointBox[{40, 0.04789872112471326}], 
    PointBox[{41, 0.05136532104939034}], 
    PointBox[{42, 0.0816951231476052}], 
    PointBox[{43, 0.08542485713769697}], 
    PointBox[{44, 0.06134011542299232}], 
    PointBox[{45, 0.057609766678721516`}], 
    PointBox[{46, 0.07805966278753168}], 
    PointBox[{47, 0.0730932027340055}], 
    PointBox[{48, 0.04432747418005116}], 
    PointBox[{49, 0.041801712365182264`}], 
    PointBox[{50, 0.06879587578723705}], 
    PointBox[{51, 0.07338998751719625}], 
    PointBox[{52, 0.05408819712721403}], 
    PointBox[{53, 0.05725066567707747}], 
    PointBox[{54, 0.0796339601569668}], 
    PointBox[{55, 0.07608830463004083}], 
    PointBox[{56, 0.04776817043890045}], 
    PointBox[{57, 0.04327378250389703}], 
    PointBox[{58, 0.06815841404006504}], 
    PointBox[{59, 0.0708505524903036}], 
    PointBox[{60, 0.050473633093170836`}], 
    PointBox[{61, 0.04554138243057044}], 
    PointBox[{62, 0.06111232499359143}], 
    PointBox[{63, 0.05678499279499422}], 
    PointBox[{64, 0.033968372403061275`}], 
    PointBox[{65, 0.03769275883707235}], 
    PointBox[{66, 0.06303014949854033}], 
    PointBox[{67, 0.06784481854666198}], 
    PointBox[{68, 0.05056910172359993}], 
    PointBox[{69, 0.056093337295536616`}], 
    PointBox[{70, 0.07875186006279315}], 
    PointBox[{71, 0.07576864608247398}], 
    PointBox[{72, 0.048115034793216244`}], 
    PointBox[{73, 0.05327875633668806}], 
    PointBox[{74, 0.08487950777688198}], 
    PointBox[{75, 0.08884335017209312}], 
    PointBox[{76, 0.06387964983918275}], 
    PointBox[{77, 0.060388763892367754`}], 
    PointBox[{78, 0.08195095077055166}], 
    PointBox[{79, 0.07682977164066306}], 
    PointBox[{80, 0.04669269095345979}], 
    PointBox[{81, 0.05008860573457796}], 
    PointBox[{82, 0.08260757539552141}], 
    PointBox[{83, 0.0882293809773115}], 
    PointBox[{84, 0.06512355322297612}], 
    PointBox[{85, 0.06937796039128528}], 
    PointBox[{86, 0.09662927540741242}], 
    PointBox[{87, 0.09241793747629197}], 
    PointBox[{88, 0.058115165239601176`}], 
    PointBox[{89, 0.05433331607838498}], 
    PointBox[{90, 0.08574524911250618}], 
    PointBox[{91, 0.08923838628142394}], 
    PointBox[{92, 0.06367535630734053}], 
    PointBox[{93, 0.057931747695946605`}], 
    PointBox[{94, 0.07789821500141436}], 
    PointBox[{95, 0.07250089381249408}], 
    PointBox[{96, 0.043497160894103576`}], 
    PointBox[{97, 0.04082468786905062}], 
    PointBox[{98, 0.06800446239714644}], 
    PointBox[{99, 0.07304187075055547}], 
    PointBox[{100, 0.05429672438280849}], 
    PointBox[{101, 0.05957491386453957}], 
    PointBox[{102, 0.08346311927581794}], 
    PointBox[{103, 0.08017559409615418}], 
    PointBox[{104, 0.050782761997328896`}], 
    PointBox[{105, 0.05394420050872501}], 
    PointBox[{106, 0.08575363094229667}], 
    PointBox[{107, 0.08964153637293054}], 
    PointBox[{108, 0.0643420083195787}], 
    PointBox[{109, 0.06030871745561275}], 
    PointBox[{110, 0.08167821360599659}], 
    PointBox[{111, 0.0764531474231573}], 
    PointBox[{112, 0.04633480915525143}], 
    PointBox[{113, 0.04184369945347022}], 
    PointBox[{114, 0.06881198085363338}], 
    PointBox[{115, 0.07337496672526932}], 
    PointBox[{116, 0.05404694127182308}], 
    PointBox[{117, 0.05707047253156255}], 
    PointBox[{118, 0.07934462181073082}], 
    PointBox[{119, 0.07578403013032711}], 
    PointBox[{120, 0.0475480320693916}], 
    PointBox[{121, 0.042559062285103415`}], 
    PointBox[{122, 0.06698150014888461}], 
    PointBox[{123, 0.06959465004910632}], 
    PointBox[{124, 0.049547666027717256`}], 
    PointBox[{125, 0.04455959819193974}], 
    PointBox[{126, 0.059746217218601516`}], 
    PointBox[{127, 0.055479368449565386`}], 
    PointBox[{128, 0.03314834494775195}], 
    PointBox[{129, 0.03314834494787957}], 
    PointBox[{130, 0.05547936844977915}], 
    PointBox[{131, 0.05974621721883201}], 
    PointBox[{132, 0.04455959819211173}], 
    PointBox[{133, 0.049547666027909026`}], 
    PointBox[{134, 0.06959465004937593}], 
    PointBox[{135, 0.0669815001491442}], 
    PointBox[{136, 0.04255906228526842}], 
    PointBox[{137, 0.04754803206957742}], 
    PointBox[{138, 0.07578403013062332}], 
    PointBox[{139, 0.0793446218110409}], 
    PointBox[{140, 0.057070472531785675`}], 
    PointBox[{141, 0.05404694127203473}], 
    PointBox[{142, 0.07337496672555684}], 
    PointBox[{143, 0.06881198085390296}], 
    PointBox[{144, 0.041843699453634205`}], 
    PointBox[{145, 0.04633480915543642}], 
    PointBox[{146, 0.07645314742346274}], 
    PointBox[{147, 0.08167821360632287}], 
    PointBox[{148, 0.06030871745585369}], 
    PointBox[{149, 0.06434200831983602}], 
    PointBox[{150, 0.0896415363732891}], 
    PointBox[{151, 0.08575363094263994}], 
    PointBox[{152, 0.05394420050894118}], 
    PointBox[{153, 0.05078276199753331}], 
    PointBox[{154, 0.08017559409647702}], 
    PointBox[{155, 0.08346311927615416}], 
    PointBox[{156, 0.05957491386477959}], 
    PointBox[{157, 0.05429672438302738}], 
    PointBox[{158, 0.07304187075084981}], 
    PointBox[{159, 0.06800446239742046}], 
    PointBox[{160, 0.04082468786921528}], 
    PointBox[{161, 0.043497160894292695`}], 
    PointBox[{162, 0.07250089381280932}], 
    PointBox[{163, 0.07789821500175313}], 
    PointBox[{164, 0.05793174769619856}], 
    PointBox[{165, 0.06367535630761785}], 
    PointBox[{166, 0.0892383862818125}], 
    PointBox[{167, 0.08574524911287973}], 
    PointBox[{168, 0.05433331607862178}], 
    PointBox[{169, 0.0581151652398556}], 
    PointBox[{170, 0.09241793747669651}], 
    PointBox[{171, 0.09662927540783564}], 
    PointBox[{172, 0.06937796039158918}], 
    PointBox[{173, 0.06512355322326155}], 
    PointBox[{174, 0.08822938097769838}], 
    PointBox[{175, 0.08260757539588359}], 
    PointBox[{176, 0.050088605734797495`}], 
    PointBox[{177, 0.04669269095366885}], 
    PointBox[{178, 0.07682977164100716}], 
    PointBox[{179, 0.08195095077091881}], 
    PointBox[{180, 0.060388763892638454`}], 
    PointBox[{181, 0.06387964983946925}], 
    PointBox[{182, 0.08884335017249166}], 
    PointBox[{183, 0.0848795077772626}], 
    PointBox[{184, 0.05327875633692698}], 
    PointBox[{185, 0.048115034793433195`}], 
    PointBox[{186, 0.07576864608281578}], 
    PointBox[{187, 0.07875186006314848}], 
    PointBox[{188, 0.05609333729578973}], 
    PointBox[{189, 0.05056910172382845}], 
    PointBox[{190, 0.06784481854696855}], 
    PointBox[{191, 0.06303014949882535}], 
    PointBox[{192, 0.03769275883724283}], 
    PointBox[{193, 0.03396837240326778}], 
    PointBox[{194, 0.05678499279533958}], 
    PointBox[{195, 0.06111232499396313}], 
    PointBox[{196, 0.04554138243084746}], 
    PointBox[{197, 0.050473633093478125`}], 
    PointBox[{198, 0.07085055249073506}], 
    PointBox[{199, 0.06815841404048026}], 
    PointBox[{200, 0.04327378250416066}], 
    PointBox[{201, 0.04776817043919254}], 
    PointBox[{202, 0.07608830463050621}], 
    PointBox[{203, 0.07963396015745401}], 
    PointBox[{204, 0.05725066567742776}], 
    PointBox[{205, 0.05408819712754529}], 
    PointBox[{206, 0.07338998751764575}], 
    PointBox[{207, 0.06879587578765847}], 
    PointBox[{208, 0.04180171236543823}], 
    PointBox[{209, 0.04432747418032537}], 
    PointBox[{210, 0.07309320273445755}], 
    PointBox[{211, 0.07805966278801457}], 
    PointBox[{212, 0.057609766679077974`}], 
    PointBox[{213, 0.061340115423372046`}], 
    PointBox[{214, 0.08542485713822592}], 
    PointBox[{215, 0.08169512314811105}], 
    PointBox[{216, 0.05136532104970832}], 
    PointBox[{217, 0.047898721125010105`}], 
    PointBox[{218, 0.0755786600123905}], 
    PointBox[{219, 0.07865006137155256}], 
    PointBox[{220, 0.0561128718064878}], 
    PointBox[{221, 0.05101745920311651}], 
    PointBox[{222, 0.0685896872106249}], 
    PointBox[{223, 0.06382899886985852}], 
    PointBox[{224, 0.03828548223046889}], 
    PointBox[{225, 0.03409244897786366}], 
    PointBox[{226, 0.056774227403179944`}], 
    PointBox[{227, 0.06097022286465821}], 
    PointBox[{228, 0.045314212254279576`}], 
    PointBox[{229, 0.04967939563970172}], 
    PointBox[{230, 0.06958883367339938}], 
    PointBox[{231, 0.06684003160709992}], 
    PointBox[{232, 0.04232800396997181}], 
    PointBox[{233, 0.04482119744282575}], 
    PointBox[{234, 0.07123901801977554}], 
    PointBox[{235, 0.0744612957262157}], 
    PointBox[{236, 0.05343885157627557}], 
    PointBox[{237, 0.05005542794894728}], 
    PointBox[{238, 0.06778106974935873}], 
    PointBox[{239, 0.06343708239312153}], 
    PointBox[{240, 0.038437875395574486`}], 
    PointBox[{241, 0.03419378427394689}], 
    PointBox[{242, 0.0562161928246186}], 
    PointBox[{243, 0.059934515399283454`}], 
    PointBox[{244, 0.044138059977129426`}], 
    PointBox[{245, 0.046567262475195076`}], 
    PointBox[{246, 0.06473072876717269}], 
    PointBox[{247, 0.06181776200470417}], 
    PointBox[{248, 0.03877682901534247}], 
    PointBox[{249, 0.03455662156046449}], 
    PointBox[{250, 0.054371634997388646`}], 
    PointBox[{251, 0.0564831535577898}], 
    PointBox[{252, 0.04020366328301019}], 
    PointBox[{253, 0.03611264436551343}], 
    PointBox[{254, 0.04840585261807398}], 
    PointBox[{255, 0.04493803466903217}], 
    PointBox[{256, 0.026838317816041082`}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{377.3333333333329, Automatic},
  Method->{},
  PlotLabel->FormBox["1.6743983351360816`", TraditionalForm],
  PlotRange->{{0., 256.}, {0, 0.09662927540783564}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.621487852324594*^9, 3.6214878631994667`*^9}, {
   3.621496957093175*^9, 3.6214969990692043`*^9}, 3.621574086376058*^9, {
   3.621574135445945*^9, 3.621574139300016*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "hamiltonien", " ", "avec", " ", "conditions", " ", "aux", " ", "bords", 
    " ", "p\[EAcute]riodiques"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "hp", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hp", "[", "n_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tbl", ",", "ar"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "->", 
           RowBox[{"t", "[", "i", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             SuperscriptBox["2", "n"], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "clp", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"tbl", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              SuperscriptBox["2", "n"]}], "}"}], "\[Rule]", 
            RowBox[{"t", "[", 
             SuperscriptBox["2", 
              RowBox[{"n", "-", "1"}]], "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ar", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["2", "n"], ",", 
            SuperscriptBox["2", "n"]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Normal", " ", "convertit", " ", "en", " ", "matrice"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"ar", "+", 
         RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hp", "[", "2", "]"}], "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.6211684819135237`*^9, 3.6211684988856583`*^9}, {
   3.621168559429494*^9, 3.621168599686886*^9}, {3.62116867296889*^9, 
   3.621168725036395*^9}, {3.621168764298398*^9, 3.621168815675806*^9}, {
   3.6211688527164*^9, 3.621168914476056*^9}, {3.621168955102767*^9, 
   3.621169020992931*^9}, {3.621169062764553*^9, 3.6211690985108767`*^9}, {
   3.6211697952057056`*^9, 3.621169799843378*^9}, {3.621250086580373*^9, 
   3.6212501106634912`*^9}, {3.621250323657508*^9, 3.6212503377529583`*^9}, {
   3.621251238561482*^9, 3.62125124487993*^9}, {3.621251284960129*^9, 
   3.6212513709614*^9}, {3.621251402228179*^9, 3.621251441713553*^9}, {
   3.621251478035475*^9, 3.6212514783061047`*^9}, {3.621251512009993*^9, 
   3.621251557108036*^9}, {3.621251614275922*^9, 3.6212516703030987`*^9}, 
   3.621252324868722*^9, {3.621317298441554*^9, 3.6213173009202833`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "v"},
     {"1", "0", "v", "0"},
     {"0", "v", "0", "1"},
     {"v", "0", "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6212513126159067`*^9, 3.6212513713598213`*^9}, 
   3.621251408873968*^9, 3.621251447921446*^9, {3.621251528151638*^9, 
   3.621251537809894*^9}, {3.621251614772149*^9, 3.621251670599347*^9}, 
   3.621252325175181*^9, 3.621254734109995*^9, 3.6212748281945257`*^9, 
   3.621315499875114*^9, 3.6213173017493553`*^9, 3.621333782371866*^9, 
   3.621504979258301*^9, 3.621507902320693*^9, 3.621525150150125*^9, 
   3.621574153747504*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "hamiltonien", " ", "avec", " ", "conditions", " ", "aux", " ", "bords", 
    " ", "antip\[EAcute]riodiques"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "ha", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ha", "[", "n_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tbl", ",", "ar"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "->", 
           RowBox[{"t", "[", "i", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             SuperscriptBox["2", "n"], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "clp", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"tbl", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              SuperscriptBox["2", "n"]}], "}"}], "\[Rule]", 
            RowBox[{"-", 
             RowBox[{"t", "[", 
              SuperscriptBox["2", 
               RowBox[{"n", "-", "1"}]], "]"}]}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ar", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["2", "n"], ",", 
            SuperscriptBox["2", "n"]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Normal", " ", "convertit", " ", "en", " ", "matrice"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"ar", "+", 
         RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ha", "[", "2", "]"}], "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.6211684819135237`*^9, 3.6211684988856583`*^9}, {
  3.621168559429494*^9, 3.621168599686886*^9}, {3.62116867296889*^9, 
  3.621168725036395*^9}, {3.621168764298398*^9, 3.621168815675806*^9}, {
  3.6211688527164*^9, 3.621168914476056*^9}, {3.621168955102767*^9, 
  3.621169020992931*^9}, {3.621169062764553*^9, 3.6211690985108767`*^9}, {
  3.6211697952057056`*^9, 3.621169799843378*^9}, {3.621250086580373*^9, 
  3.6212501106634912`*^9}, {3.621250323657508*^9, 3.6212503377529583`*^9}, {
  3.621251238561482*^9, 3.62125124487993*^9}, {3.621251284960129*^9, 
  3.6212513709614*^9}, {3.621251402228179*^9, 3.621251441713553*^9}, {
  3.621251478035475*^9, 3.6212514783061047`*^9}, {3.621251512009993*^9, 
  3.621251557108036*^9}, {3.621251614275922*^9, 3.6212516703030987`*^9}, {
  3.621252330154332*^9, 3.6212523511874933`*^9}, {3.621317235576994*^9, 
  3.621317258378375*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", 
      RowBox[{"-", "v"}]},
     {"1", "0", "v", "0"},
     {"0", "v", "0", "1"},
     {
      RowBox[{"-", "v"}], "0", "1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.621252340698368*^9, 3.6212523514766283`*^9}, 
   3.6212547362220078`*^9, 3.62127483013691*^9, 3.6213155021117496`*^9, 
   3.621317241919498*^9, 3.621333789743218*^9, 3.62150497725675*^9, 
   3.6215079055517073`*^9, 3.621525151740142*^9, 3.62157415630858*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "spectre", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "=", ".8"}], ",", 
      RowBox[{"r", "=", "0.3"}], ",", "vpp", ",", "vpa", ",", "vpn", ",", 
      RowBox[{"i", "=", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vpp", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"hp", "[", "i", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vpa", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"ha", "[", "i", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vpn", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"h", "[", "i", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#1", "-", "#2"}], ")"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpp", ",", "vpa"}], "}"}]}], "]"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vpp", ",", "vpa", ",", "vpn"}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6211691819490356`*^9, 3.621169295515432*^9}, {
   3.621169329468741*^9, 3.621169363085153*^9}, {3.621169397340905*^9, 
   3.621169439694463*^9}, {3.621169484754628*^9, 3.621169534142599*^9}, {
   3.6211695650579653`*^9, 3.621169565167144*^9}, {3.621169603888824*^9, 
   3.621169719442539*^9}, {3.621169816596427*^9, 3.621169850688087*^9}, {
   3.621169918276724*^9, 3.621169920596176*^9}, {3.6211701269976807`*^9, 
   3.62117013270679*^9}, {3.621239395761104*^9, 3.621239437159552*^9}, {
   3.621239477620801*^9, 3.6212394863384867`*^9}, {3.62123954621198*^9, 
   3.621239555475575*^9}, {3.621239596547036*^9, 3.621239599810574*^9}, {
   3.621243910992449*^9, 3.621243924607359*^9}, {3.6212523773171473`*^9, 
   3.6212524542169657`*^9}, {3.621252615229805*^9, 3.621252621595336*^9}, {
   3.621252684554472*^9, 3.6212527627959633`*^9}, 3.621315511293338*^9, {
   3.621316478769494*^9, 3.621316520690384*^9}, {3.62133425533079*^9, 
   3.621334267580483*^9}, {3.621334724149468*^9, 3.621334726469997*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.24720000000000014`, 0.24, 0.6], 
     LineBox[{{1., -1.7999999999999998`}, {2., -0.2}, {3., 
      0.1999999999999999}, {4., 1.8000000000000007`}}]}, 
    {RGBColor[0.6, 0.24, 0.4428931686004542], 
     LineBox[{{1., -1.2806248474865698`}, {2., -1.2806248474865698`}, {3., 
      1.2806248474865698`}, {4., 1.2806248474865698`}}]}, 
    {RGBColor[0.6, 0.5470136627990908, 0.24], 
     LineBox[{{1., -1.4770329614269009`}, {2., -0.6770329614269007}, {3., 
      0.6770329614269013}, {4., 1.4770329614269013`}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{1., 0.},
  Method->{},
  PlotRange->{{1., 4.}, {-1.7999999999999998`, 1.8000000000000007`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.06, 0.06}, {0.07200000000000001, 
   0.07200000000000001}}]], "Output",
 CellChangeTimes->{{3.6212524071702633`*^9, 3.6212524544738398`*^9}, {
   3.621252618238562*^9, 3.621252621831018*^9}, {3.6212526848449173`*^9, 
   3.621252712556381*^9}, {3.621252749989043*^9, 3.6212527630766497`*^9}, 
   3.621254738457349*^9, 3.621274832319788*^9, {3.621315504852702*^9, 
   3.621315511763013*^9}, {3.6213165003168907`*^9, 3.621316521389673*^9}, 
   3.621317306265016*^9, {3.621334259087072*^9, 3.6213342679937477`*^9}, 
   3.621334726978899*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"calcul", " ", "des", " ", "bandes", " ", "effectives"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "=", "1."}], ",", 
      RowBox[{"r", "=", ".999"}], ",", "vpp", ",", "vpa", ",", "bandlist", 
      ",", "dk", ",", "invdos", ",", 
      RowBox[{"i", "=", "11"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
       "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vpp", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"hp", "[", "i", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vpa", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"ha", "[", "i", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invdos", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Cos", "[", "k", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          FractionBox[
           RowBox[{"-", "Pi"}], "2"], ",", 
          FractionBox["Pi", "2"], ",", 
          FractionBox["Pi", 
           RowBox[{
            SuperscriptBox["2", "i"], "-", "1"}]]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
       SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
       " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
       " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
       "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"bandlist", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"bandlist", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"Length", "@", "bandlist"}], "/", "2"}], "]"}], "]"}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"dk", "=", 
      RowBox[{"N", "[", 
       FractionBox[
        RowBox[{"2", "Pi"}], 
        SuperscriptBox["2", "i"]], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bandlist", "/", "dk"}], ",", "invdos"}], "}"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vpp", ",", "vpa"}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.621334866775482*^9, 3.621334926235981*^9}, {
  3.621334971825459*^9, 3.621334977372476*^9}, {3.621335144702005*^9, 
  3.621335221776597*^9}, {3.621335272343429*^9, 3.6213352996043653`*^9}, {
  3.6213353439818687`*^9, 3.6213353713754473`*^9}, {3.6213355282255573`*^9, 
  3.621335543352255*^9}, {3.621335587935893*^9, 3.621335593872755*^9}, {
  3.621335645335142*^9, 3.6213356772297983`*^9}, {3.621505052617827*^9, 
  3.621505074801182*^9}, {3.62150518666131*^9, 3.6215054004975243`*^9}, {
  3.621505954338316*^9, 3.621505957646378*^9}, {3.62150598795788*^9, 
  3.621506181015368*^9}, {3.621525161270368*^9, 3.6215253011580257`*^9}, {
  3.62152535386615*^9, 3.621525372165278*^9}, {3.621525423333658*^9, 
  3.621525424078176*^9}, {3.621574164628378*^9, 3.621574175744629*^9}}],

Cell[CellGroupData[{

Cell[BoxData["0.0022267052405392936`"], "Print",
 CellChangeTimes->{
  3.6213176601584167`*^9, {3.621334867096846*^9, 3.621334896295556*^9}, 
   3.621334927731049*^9, {3.6213349733102903`*^9, 3.621334981172037*^9}, 
   3.6213352226102*^9, {3.621335273683385*^9, 3.621335299972417*^9}, {
   3.621335344880937*^9, 3.621335371999483*^9}, {3.6213355354131603`*^9, 
   3.6213355444638433`*^9}, 3.621335604556404*^9, {3.621335647218521*^9, 
   3.621335678493545*^9}, 3.621504983080266*^9, {3.621505208899335*^9, 
   3.6215054020601263`*^9}, 3.6215059587166433`*^9, {3.6215059921768703`*^9, 
   3.6215061824001083`*^9}, {3.621525189501754*^9, 3.621525207300308*^9}, {
   3.621525289319865*^9, 3.621525302662093*^9}, {3.621525355540657*^9, 
   3.621525373374991*^9}, 3.621525426043296*^9, {3.621574165550819*^9, 
   3.621574184689599*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
4njGNR5YIZ0z5KAl43oPTPFo/shtGWOBJ5RVHZOLU1l/2p7onlchmXOEsb4n
rmj20lX6sPbGnig4nLfSPowxPDHaeVFFy3DGlp7oaGAbVp3A2M4THn7Nv7Te
y9jZE9NGdbl++ggfvydu5eyPD0hjLPLEerfi28OzGCs90X/wa8WtG3z8ngjr
MWNTxAM+fk8saQjWf865whOxhdFhIa/4+D3hfPtec+dffPye2LLztNGdlk/Y
+L1w8Ygk5s8ltl3bC+e83wZJKxnre2H6qJPl8f1Ze2MvtLg10X/xcMbwwure
eSOyOFt6obTDgKPGZoztvKCpe3iuYAFjZy+I2g+r3LScsdALTwdUOE6awVjk
hayN004k8fZKL1QMuPtlqw/jHC+cdh8dHh7CuMgLP3+vsxvLucIL3Y+cK/k3
lnGNav/OKW2r0xjXe8G9R0l5hJyP3xt9Lj7/Hnec3//eSIl5luNymd//3hgb
cVZvah4fvzeMAkt+eN7g4/fG6Q3KQ7a3+fi9YRAd1H3ZEz5+b+T13x47/hsf
vzcKv1w91vKfp2z83pg++mih9Ts+fm9Y5Dz7/Zi3V3pj35Kq9JO9Wfscb3h+
OnrA2IhxkTcU7VKrhnKuUJ3P4m8HIkYzrvGGy4RixxmzGdd7I+fsTJd1ixgL
tmHhxmF3Q7ox1t4Gu86S4dd5f/rbYFn1o3ScO2PjbXDR/yM96s8Y21DtEQIF
Z8ttCD9bZvAggrHdNgxwqUoQpjF23oYvmmsfZu/l49+G1eZhf6sSGYu24UJu
49KWvL1yG679Hth91AU+/m24GFpwc3UFH/82dOzWN2wY54pt+Jti0m9CNR//
NtRp9ssJfs/Hvw2X3hdIz37j4/fBhXGGP7Md+fh90L9N7tMSNz5+Hyz1H6jx
qsszNn4fmJWMbajSZwwfHL87c3ohZ0sfpM9IjHo0iLGdD4LX3AtfMYmxsw+c
ddBx1UzGQh/Msq7SX2nCWOSDs7NHFa+cyFjpg4Y9LorVGxjn+MC7xyOztS6M
i3yQ1tXHS4NzhQ8+FhrP/+zDuMYH7fRWLTeJZ1zvg2GC3JAPcsaC7Yi63cW2
43LG2tthoi988tWesf52eCfunpp0go9/OzL+zG/cXcTHvx0PNh6pHsvZcjs+
Cy4P6HKZj3878lf2STR/xMe/HfF1n261reXj345jf58+E9zi49+O2YrSG6UP
+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
Qp+xcSQ6es7vUz2UsWkkPIf8N7lxBGOo+tu85v3zbowtIrHpvKDuV0/GlpE4
Z/JiJyYxtonEWEOP4wunMraLRM1JPWWDGWOHSNhZ3G7zFYydI2G0KHT/kvmM
vSNxd7zXjeELGQsjMX1db4289owjIhH8qNZ7byfGokh03VehFKxiLI/EsD2H
zFutZayMROnllvqRtoyzIiHVXN7ewY5xjup8ltrcy9rCOD8Sl4+f6u/hyrgo
Et9ND3n3WsK4LBLTPo4yf7qMcUUktI6IS8/5Ma5SnV+bM9o+gTz+kThif2jy
aR/GtZGQPZx8dqw/4/pIWBR4by+O5vGPROTjSRn9Y3n8o+A7f/fp0/z3SDMK
iZaLp65ezuMfhValyeM15Tz+UXA1XNjvfRqPfxScujn7Zct4/KOwvO3btttS
efyjECJafkK8j8c/ChZo7jngII9/FLpMeTQyJIHHPwoFE53s2kh5/KNw+GnF
jdN5PP5R+KeZfNO40zz+Uei61rLl9Fwe/yjs+b31+xHe3jkKJS36PvE7z+Mf
hTzN197nynj8o9D+SXzvw8E8/lFI8ru4uHU4j38Uspuv/37tJo9/FIr31L+d
eIfHPwphY25/G3idxz8KWYY7frny9jlR6B+9YvG/NTz+Uar3jdMXFj3j8Y9C
zXKRzvqLPP5RKL/WfZX8Mo9/FHZVXN5cV8fjH4UD44qcdOt5/KMQuLLR6VYt
j38URjw09nn5lsc/Ct2Xtv0y/TuPfxRySjKu3fzJ4x+NuUf0VnyyZ6wZjbvT
rRf/3cBYOxqHbpZMbdD4wOIfDZ+8lCVBmoz1o1FXHmQ5vhljw2i09HLXn8Lb
G0cjQNH22J6OjE2jkXzZ0leiwxjRuLMi5OzSRh7/aHzP/dV8Mj8/y2hknatL
ntWLtbeJRqoHthjpM7aLxv1DDQvSdRk7RGPWxHUTt/Rk7ByN7vri0amGjL2j
8XjyuA7mgxkLo6Gz0bF0zwse/2i8LnBtbc+vpygaPyymG/iMZO3l0QirDBs5
ezRjZTTenJ59Lnko46xopL8P9Z88nHGOqr8xPu2nT2Scr2KTtrl3wLgoGp//
W1czw4BxWTS+DonxudCfcUU0dh8y7zbPgnFVNAa5bbm2Yxbjmmh0XNkmcOUU
xrXReLRH3un3VMb10RB8GTQ2bR7jxmis325u2pYfTxCDlZPX+K98yt//YnDd
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
X3SOFHe/kXxSSymmN/RT55taS2Hfg+Sj2kix14Lkq9pKcX4PyWe1U13fWyTf
1V4KqYDkwzpIUf2Y5Ms6SXEpheTTOkuxKobk27pL4fOY5ON6SzHzR3t1vq6v
FBXHST6vUAq7NiTfN0QK4SOSDxwhRUtLki8cI4VJe5JPLJJitQvJN5ZIUfeN
5CPLpdiSQfKVFarr84zkMyulaLWB5DtnStGxHcmHzpJi6j2SL50txYM9JJ86
R4pTcpJvnSuFdrPB6nzsfCkefp+tztcukMLjOcnnLpIibw/J9y5V9VdK8sHL
VNdvAskXL5ciYxfJJ6+QIrwPyTevlGLrAZKPXiWFyz6Sr/5AiselJJ+9Rto0
3/25tGk+fK0UITkkX75O2jSfvl6KoAqSb98ghdUxko/fqLr+S0m+/i8pTiaS
fH5BEva+IPn+GknoUkPrAZLwuYDUC2glYcJxUk+gnYTgUFJvoJOEXQ9JPYJu
EgwjSb2CXhKGXiP1DPpJ0FlF6h0MkpDfN1ldD2GYhIaGXep6CaMkaM8m9RTG
SYhKJfUWJklwmkjqMUyTcMaF1GuYJWHOclLPgSSsGEfqPcyTVN9zpB7EIgkD
P51U14vMUZ1/s2B1PYmlarwtSb2JdRJsH5F6FJskZLYi9Sq2SbA+S+pZ7JLQ
uJ3Uu9ir2oeRehiHJCweT+plnJLgW0XqaZyT4Hyd1Nu4q84nntTjeCfhzzpS
r+Or2v8pqecRJiFoBqn3CUlqWg8Uobq+AaReKCYJRoNIPZEoCd1LSL2RJAkZ
z0k9kjwJDhNJvZIiCe7fST2TMqlpvVNmUtN6qKwk3FtI6qWykzCoQ5y6nion
CWNEpN4qNwmdvUg9Vn4SFhmSeq2CJDxdTOq5ipJQnk/qvUqToPhL6sHKkvB7
MakXK1fdL3dJPVmF6voXk3qzyiTMekDq0aqSoNuJ1Ks9UI2nI6lnq0lqWu/2
PAnKRFIPV5sEcTCpl6tLwpZKUk9Xn4SiwaTerkH1fPwg9XiNSfiuR+r1fqni
94LU8wlkcGwk9X4aMpQ0o/WAMozYSeoFtWT424nUE2rL0H0hqTfUkWF1AKlH
1JXhz15Sr6gnQ/ONpJ5RX4YxJqTe0UCGjw2kHtJQ1rRe0kiGxCOkntJYhlFF
pN7SRIb9UlKPaSqDZltSr2kmQ/xrUs8JGfaeJ/We5jLAitSDWsjQM4fUi85R
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
aSgYSvymrNPgs5b4UdmkodUh4ldlmwbBBepnlYaD/sTvyj4NkRU71X5YDmko
nUf8spzSsOFrhNpPyzkNp0H8ttzTcMeD+HF5p+HFKuLX5ZuGHi07q/28hGnI
Hk38vkLS4DyD+IFFpGH+NeIXFpMGNwHxExOl4bwj8RuTpMH3d5Laj0yuGn8M
8StTpGH8XOJnplTFbyrxO8tMw+104oeWlYY2I0LUfmnZadi7jvip5aQh1oH4
reWmNfVjy09DhzbEr60gDf4gfm5FaZj5hvi9laripyB+cGVp6N+b+MWVp2Fq
PvGTq0hDd2viN1epuj4fiB9dVRqss4lf3YM0KC8QP7uaNHy9maP2u3uehnsd
iR9ebRrO6RC/vLo09FpF/PTq09BOp4fab68hDf+GEz++xjR4eRC/vl9pWBdO
/PwE6Xi9lfj9aaSjuD/xA9RMx/gFxC9QKx0Nd4mfoHY6ztfZqP0GddKhv4X4
EeqmY+TVCWq/Qr10RE13UfsZ6qfjj2SA2u/QIB25lsQP0TAdo8dYqv0SjdLR
7y/xUzROR69k4rdoko6+SuLHaJoOxw7Er9EsHYm+xM8R6TB4RvwezdPRczzx
g7RIh90y4hc5Jx2B533VfpKW6Yh/T/wmrdPx3/0ItR+lTTpcFxG/Stt0LPtJ
/Czt0vE8i/hd2qfD4Qzxw3RQXU8F8ct0SsfOz8RP0zkdnYYRv033dHTfSPw4
vdNRs5r4dfqmo0BK/DyFqu2aoWq/zxDV9ZhB/EAj0nGigfiFxqRjVx3xExWl
I+ibk9pvVJIOsQ3xI5WnI3so8StVpCPajviZKtPhs5T4nWam42hpkNoPNSsd
ph+Far/U7HRsX0f8VHPSoZhM/FZz0zH0+0q1H2t+Os5+zVb7tRakI0y7iPi5
qu7fDOL3WpoO2eUctR9sWTrc/6xW+8WWp6O04Y/aT7YiHXohFmq/2cp0HFso
U/vRVqVj6QTiV/sgHWuPEz/bmnRc16lX+90+T8eFe1lqP9xa1fPxmvjl1qXj
w1Tip1ufjvshRmq/3YZ0fNv8Q+3H25iOV9XEr/dXOg75ED9fQQZatiV+vxoZ
iKq+q/YD1sxAlxV/PvyfX7BWBpKeED9h7QxUTCd+wzoZGFN4QO1HrJuBKc1W
q/2K9TJw7hzxM9ZXHb8j8Ts2yMDl2wfUfsiGGehfQvySjVTt7xA/ZeMMxL8m
fssmGZgfQPyYTTOa+jWbZSD4FfFzRkZTv2fzDLQ5Q/ygLTJw+kZrtV/0HNX5
DA5V+0lbZqDdFuI3bZ2BxYceqv2obTJg336Q2q/aNgPYSfys7TJQfsdd7Xdt
n4Gesf3UftgOGXCKMFP7ZTtloI9FN7WftnMGRrRNVPttu2dg7teHaj9u7wzk
twhV+3X7ZmCrx3Hi552BU82nq/2+QzJQNT1c7Qceobpe38Rqv/CYDFzznKb2
ExdlYJq+sdpvXJKBW0MS1X7kctXxHwap/coVGXCZbKj2M1dm4M+1arXfeWYG
Nn/foPZDz8rA6hbv1H7p2RnYd4z4qedk4E3AQrXfem4G0sd3Uvux52fg8NAX
ar/2ggx027dA7edepLpfn9ir/d5LVcdrNUHtB1+WgWaTiF98uer+Leum9pOv
yEB2+/Nqv/nKDDzvSfzoqzIw68tetV/9gwzYGJWq/exrMlA3zUTtd/88Ay/k
tvaZp4Xs+c/Az651rz4WBbHnPwNnNr4b7HotgD3/GWg7rVeLfrs82fOvut9d
nL6+cHZmz38GNLLE4aJVm9jznwHn7IkBQ66sZM+/Ei+nLXDu4mcx6f8BtNER
hg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
JOD47OzTdSSyMgnOlk61cR+HnJcE2d5hbeImIRckgemi1Zu9bsiFSeDp3eH0
rbnIxUlw7+fk+B+LkI1J8GySytHWF7ksCUQLvl4ftwq5Mgmq/nD18QxCrk6C
gpLVVWtDkU1JMFw2fUz0FuTapvlPuJ4kSECuT4I3bV4WiwTIDU2/70PkLXku
MicZxmVsrFbIkc2TobD9MaNUh2yRDD8WO2dn5yNbN/38yycuiXuRucnQsWZb
xabDyPbJUPFt1aTlJ5AdkyF/Zw/pdCOyczKcf3PwwuBLyJAM6eFWt9pWILs1
jS8Zf+5lFbJHMoSM7ZJ+9j6yVzIc+Zk9WPKE6Z8MI3rqd/m9Yvonw57g0Y1D
6pn+yfCbP9P+3y9M/2QIDK0YVPyT6Z8Mui7Hm202e4P6J0P9jW8HhrdFFja9
vvNZQ2s7ISuTQbBtNV9tjZyXDAMr4ra79UYuSIbPM6/JP/ZDLkyGJ3/P9FY6
IBcnQ2pK/auxI5GNyTBaUDz9zljksmQYtVoXEgzIlclwh6de3WI6cnXT+7N8
bz/5bGRTMhytL9/f1xO5NhkC3Bp/7lmCXJ8MnMljrIatQG5IhtzlMR8PrEHm
pIDDlSvSQRuQzVOg+/y+P7aGIVukwOsNSXZW0cjWKVD41/uOyQnI3BTombmm
5F0asn0K7Dj7zn5hDrJjCpz4lOZ5XIrsnALVz0dPtNIgQwr83fj72YatyG4p
oJteO710F7JHCnSL+3eV1QFkrxSQc4ZO9CtC5qXAgmrl9T0nkQNSIPP4hO7v
jcjBTb/vm12PYZeQI1PAefviG4HXkPkpEOX3aMK2m0z/pvFyL/reusv0T4G0
QdYjzUxM/xToY3p0YugLpn8KuLUY9NGzjumfAlmq5vcjPjL9U6Bq2pZQaQPT
PwXiVmhP7v/F9G96vbWRB/82q0P9U6Akpfe8m22QK1PgXHae/pEFcnUKeHLa
K152RTalwCpBxNg3Nsi1KeAS8z75dV/k+qb5P8iIfG6P3JAC7719utQMReak
wrKZkZ4VTsjmqfD7yKdxJeOQLVLhx/RnF3YAsnUq7FrJ+5wxDZmbCkct4i+s
c0e2T4XZLbyc3eYjO6bC2Pzm7lwvZOdUaPFT/fvTMmRIhT7lY+afX4nslgqt
oz9PzlmL7JEKq7l1lZ4bkb1SYTh/3I+u4ci8VLjdttFYtQU5IBW8nszuk8NH
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
meuZ/llwsc43cOdGpn8WXNjwWPAzhOmfBVszSsvnhjH9s+BS8r5RugimfxYk
r5h4/nkk0z8LOj3vHT4wmumfBdslX2cGxDL9syD8UJDrtnimfxbUTB6w4k4C
0z8L5rSrzGuVzPRv+nmxRfORqUz/LBjdQ5LmLWD6N73+gmZDozOY/llwqHnb
L4ospn8WvCr0enQwh+mfBTe/KF/9LWT6Z8GimijLG2KmfxY8sd+z/J6U6Z8F
if53rzyUM/2z4MWd4wsfKpn+WbAx68vvajXTPwsmuE+/XKFl+mfBuG0+h87q
mf5ZYHfv1fG9eUz/Jn0522vE25j+WTDyqUvv8Hymfzast1gfP38n0z8b7t55
1TiogOmfDZ1mBip+7Wb6Z8M1551zru1l+mfDm9GL+ir2M/2zIUo5srPPQaZ/
Npzf1GBrc4jpnw1LtMun3jnM9M8Gu/12guwipn82LP/V/MXEY0z/bCjac9L3
zXGmfzaMy2n5UXyC6Z8NydN2GkadYvpnw74R3mtuljD9s8E79JFb0BmmfzaU
v/42hWNk+mfDa5dAr9xzTP9scL3+MaX7eaZ/NnAvLyrXlzL9m8brsmRw74tM
/2yY5H1um/oS0z8bvrScP6LTZaZ/NvSe9c/dxCtM/2yw7dpa9f4q0z8bXHqc
2bj4GtM/G85cPbHsZAXTPxue8i74WVcy/bOh/saeuJAbTP9sGH/X6dCFf5j+
2TDs09DvllVM/2zw8l3lvfwW0z8bAnruqMi/zfTPAXh7yvv5HaZ/Dnz1ivzO
vcv0z4FnO3YXLr7H9M+BbQ96x6TfZ/rnQI/yvT7Hapj+OZD5u9f8hw+Y/jmQ
XTbL549HTP8csB3XIrq3iemfA3kDex9wfsz0z4G3Qzf86/6E6Z8D8/Ivefg8
ZfrngHLnH8bVz5j+OdDJ6tPkoOdM/xxQiELvBr1g+ueAjL80KeAl0z8H2rdO
huW1TP8c0Flespj3iumfA2lzf3+a8JrpnwPH7c1f93vD9M+B0hunP5rXMf1z
4MfEn+1fMi7IAb8B+eONb5n+OXDaTBQtfcf0zwFJl+3XVr5n+ufAqAUnhw+t
Z/rnwLmU47s+Ma7MgQGOMcOKPjD9c2CY+nXZxo9M/xyIrXge2v8T0z8HpOp5
jtWM63PgQU7nX8mfmf45sPtX+wcO/zL9c8GJM+jadcbmuVAYNLti/Remfy78
ZVpuavmV6Z8LP0/MaK5hzM0FM5vPowc1MP1zYd0bt+gixo65MKdyROXYb0z/
XLg+SjfqJGPIhe4zw/aO+s70z4XVv/KH72PskQuNLW3LbH8w/XNh9P0rGzIY
83Ih+aiu30fGAbmwXpJS59nI9M8FyajQ84cZR+bCkd5ee9r+ZPrnwl5l/63L
GQtyIWrPjV0HGAtzYWLf2WcaGCubWJj9bMIvpn8uvJwu6BHHuCAXri0fyTvB
uDAXDh5KOfqecXEuhN+L6NHnN9O/aT7jfufMZlyWC6M+d+sSzrgyF56/O7lT
wbi6abybT2YcZWzKhQ4WmY3XGNfmgu/Ng2ceM67PhXad5gjrGTfkQnz8ypDv
jDlCmK98t+I3Y7P/sLmQ/nw7If19FkI6nqWQvh5rIX29NkI6H66QztdOSN8P
eyF9vxyE9P10FNL320lI9XAWUr1chFRPEFK9XYX078FNSP9e3IX078lDSP/e
PIX079FLSP9efYT075knpH/v/kL6eQgQ0s9LkJB+noKF9PMWJqSfx0gh/bzG
COnnmS+kn/dkIb0eCIT0epElpNcToZBeb6RCej1SCun1Siuk17M8Ib3e5Qvp
9bBASK+X+4T0eloopNfbIiG9HhcL6fW6REiv50Yhvd6XCun3QZmQfl+UC+n3
SaWQft9UCen3UbWQfl/VCOn3mUlIv++eCen3Ya2Qfl/WCen3ab2Qft9+FtLv
4wYh/b5uFNLvc46Ift+bif5zPyCi9wvtRPR+wkJE7zcsRfR+xFpE71dsRPR+
hiui9zt2Ino/ZC+i90sOIno/5Sii91tOIno/5iyi92suIno/ByJ6v+cqoveD
biJ6v+guoveTHiJ6v+kpovejXiJ6v+ojovezPBG93/UX0fvhABG9Xw4S0fvp
YBG93w4T0fvxSBG9X48R0ft5voje7yeL6POAQESfF7JE9HlCKKLPG1IRfR5R
iujzilZEn2fyRPR5J19En4cKRPR5aZ+IPk8ViujzVpGIPo8Vi+jzWomIPs8Z
RfR5r1REnwfLRPR5sVxEnycrRfR5s0pEn0erRfR5tUZEn2dNIvq8+0xEn4dr
RfR5uU5En6frRfR5+7OIPo83iOjzeqOIPs9zxPR530z8n/UAMV0vaCem6wkW
YrreYCmm6xHWYrpeYSOm6xlcMV3vsBPT9RB7MV0vcRDT9RRHMV1vcRLT9Rhn
MV2vcRHT9RwQ0/UeVzFdD3IT0/UidzFdT/IQ0/UmTzFdj/IS0/UqHzFdz+KJ
6XqXv5iuhwWI6XpZkJiupwWL6XpbmJiux0WK6XpdjJiu5/HFdL0vWUzXAwVi
ul6YJabriUIxXW+Uiul6pFJM1yu1YrqemSem6535YroeWiCm66X7xHQ9tVBM
11uLxHQ9tlhM12tLxHQ91yim672lYroeXCam68XlYrqeXCmm681VYroeXS2m
69U1YrqebRLT9e5nYroeXium6+V1YrqeXi+m6+2fxXQ9vkFM1+sbxXQ9nyOh
6/1mkv/sB0jofkE7Cd1PsJDQ/QZLCd2PsJbQ/QobCd3P4ErofoedhO6H2Evo
fomDhO6nOErofouThO7HOEvofo2LhO7ngITu97hK6H6Qm4TuF7lL6H6Sh4Tu
N3lK6H6Ul4TuV/lI6H4WT0L3u/wldD8sQEL3y4IkdD8tWEL328IkdD8uUkL3
62IkdD+PL6H7fckSuh8okND9wiwJ3U8USuh+o1RC9yOVErpfqZXQ/cw8Cd3v
zJfQ/dACCd0v3Seh+6mFErrfWiSh+7HFErpfWyKh+7lGCd3vLZXQ/eAyCd0v
LpfQ/eRKCd1vrpLQ/ehqCd2vrpHQ/WyThO53P5PQ/fBaCd0vr5PQ/fR6Cd1v
/yyh+/ENErpf3yih+/kcKd3vN5P+px5ASusF2klpPYGFlNYbWEppPYK1lNYr
2EhpPQNXSusd7KS0HsJeSuslHKS0nsJRSustnKS0HsNZSus1XKS0ngOktN7D
VUrrQdyktF7EXUrrSTyktN7EU0rrUbyktF7FR0rrWXhSWu/iL6X1MAFSWi8T
JKX1NMFSWm8TJqX1OJFSWq8TI6X1PHwprfdJltJ6IIGU1gtlSWk9kVBK642k
UlqPpJTSeiWtlNYz5UlpvVO+lNZDFUhpvdQ+Ka2nKpTSeqsiKa3HKpbSeq0S
Ka3nMkppvVeplNaDlUlpvVi5lNaTVUppvVmVlNajVUtpvVqNlNazmaS03u2Z
lNbD1UppvVydlNbT1Utpvd1nKa3Ha5DSer1GKa3n48hovZ+Z7D/1gDJaL9hO
RusJLWS03tBSRusRrWW0XtFGRusZuTJa72gno/WQ9jJaL+kgo/WUjjJab+kk
o/WYzjJar+kio/WcIKP1nq4yWg/qJqP1ou4yWk/qIaP1pp4yWo/qJaP1qj4y
Ws/Kk9F6V38ZrYcNkNF62SAZracNltF62zAZrceNlNF63RgZrefly2i9b7KM
1gMLZLReOEtG64mFMlpvLJXRemSljNYra2W0njlPRuud82W0HrpARuul98lo
PXWhjNZbF8loPXaxjNZrl8hoPbdRRuu9S2W0HrxMRuvFy2W0nrxSRuvNq2S0
Hr1aRuvVa2S0nt0ko/Xuz2S0Hr5WRuvl62S0nr5eRuvtP8toPX6DjNbrN8po
PT9HTuv9zeT/6QeQ036BdnLaT2Ahp/0GlnLaj2Atp/0KNnLaz8CV034HOznt
h7CX034JBzntp3CU034LJzntx3CW034NFznt5wA57fdwldN+EDc57Rdxl9N+
Eg857TfxlNN+FC857VfxkdN+Fp6c9rv4y2k/TICc9ssEyWk/TbCc9tuEyWk/
TqSc9uvEyGk/D19O+32S5bQfSCCn/UJZctpPJJTTfiOpnPYjKeW0X0krp/1M
eXLa75Qvp/1QBXLaL7VPTvupCuW036pITvuxiuW0X6tETvu5jHLa71Uqp/1g
ZXLaL1Yup/1klXLab1Ylp/1o1XLar1Yjp/1sJjntd3smp/1wtXLaL1cnp/10
9XLab/dZTvvxGuS0X69RTvv5OAra72em+E8/oIL2C7ZT0H5CCwXtN7RU0H5E
awXtV7RR0H5GroL2O9opaD+kvYL2SzooaD+lo4L2WzopaD+ms4L2a7ooaD8n
KGi/p6uC9oO6KWi/qLuC9pN6KGi/qaeC9qN6KWi/qo+C9rPyFLTf1V9B+2ED
FLRfNkhB+2mDFbTfNkxB+3EjFbRfN0ZB+3n5Ctrvm6yg/cACBe0XzlLQfmKh
gvYbSxW0H1mpoP3KWgXtZ85T0H7nfAXthy5Q0H7pfQraT12ooP3WRQraj12s
oP3aJQraz21U0H7vUgXtBy9T0H7xcgXtJ69U0H7zKgXtR69W0H71GgXtZzcp
aL/7MwXth69V0H75OgXtp69X0H77zwraj9+goP36jQraz89R0n5/M+V//ACU
1C+gnZL6CVgoqd+ApZL6EVgrqV+BjZL6GXCV1O/ATkn9EOyV1C/BQUn9FByV
1G/BSUn9GJyV1K/BRUn9HEBJ/R5cldQPwk1J/SLcldRPwkNJ/SY8ldSPwktJ
/Sp8lNTPgqekfhf+SuqHEaCkfhlByv/4aSip30aYkvpxRCqpX0eMkvp58JXU
7yNZSf1ABErqF5KlpH4iQiX1G5EqqR+JUkn9SrRK6meSp6R+J/lK6odSoKR+
KfuU1E+lUEn9VoqU1I+lWEn9WkqU1M/FqKR+L6VK6gdTpqR+MeVK6idTqaR+
M1VK6kdTraR+NTVK6mdjUlK/m2dK6odTq6R+OXVK6qdTr6R+O5+V1I+nQUn9
ehqV1M+Ho6J+P2Yq6gdkrqJ+Qe1U1E/IQkX9hixV1I/IWkX9imxU1M+Iq6J+
R3Yq6odkr6J+SQ4q6qfkqKJ+S04q6sfkrKJ+TS4q6ucEKur35KqiflBuKuoX
5a6iflIeKuo35amiflReKupX5aOiflY8FfW78ldRP6wAFfXLClL9x09LRf22
wlTUjytSRf26YlTUz4uvon5fySrqByZQUb+wLBX1ExOqqN+YVEX9yJQq6lem
VVE/szwV9TvLV1E/tAIV9Uvbp6J+aoUq6rdWpKJ+bMUq6tdWoqJ+bkYV9Xsr
VVE/uDIV9YsrV1E/uUoV9ZurUlE/umoV9aurUVE/O5OK+t09U1E/vFoV9cur
U1E/vXoV9dv7rKJ+fA0q6tfXqKJ+fhw19fszU1M/QHM19Qtsp6Z+ghZq6jdo
qaZ+hNZq6ldoo6Z+hlw19Tu0U1M/RHs19Ut0UFM/RUc19Vt0UlM/Rmc19Wt0
UVM/R1BTv0dXNfWDdFNTv0h3NfWT9FBTv0lPNfWj9FJTv0ofNfWz5Kmp36W/
mvphBqipX2aQ+j9+mmrqtxmmpn6ckWrq1xmjpn6efDX1+0xWUz9QgZr6hWap
qZ+oUE39RqVq6keqVFO/Uq2a+pnmqanfab6a+qEWqKlf6j419VMtVFO/1SI1
9WMtVlO/1hI19XM1qqnfa6ma+sGWqalfbLma+slWqqnfbJWa+tFWq6lfbY2a
+tma1NTv9pma+uHWqqlfbp2a+unWq6nf7mc19eNtUFO/3kY19fPlaKjfr5mG
+gGba6hfcDsN9RO20FC/YUsN9SO21lC/YhsN9TPmaqjfsZ2G+iHba6hfsoOG
+ik7aqjfspOG+jE7a6hfs4uG+jmDhvo9u2qoH7SbhvpFu2uon7SHhvpNe2qo
H7WXhvpV+2ionzVPQ/2u/TXUDztAQ/2ygzT/8dPWUL/tMA31447UUL/uGA31
8+ZrqN93sob6gQs01C88S0P9xIUa6jcu1VA/cqWG+pVrNdTPPE9D/c7zNdQP
vUBD/dL3aaifeqGG+q0Xaagfe7GG+rWXaKifu1FD/d5LNdQPvkxD/eLLNdRP
vlJD/earNNSPvlpD/eprNNTP3qShfvfPNNQPv1ZD/fLrNNRPv15D/fY/a6gf
f4OG+vU3aqifP0dL/f7NtDQPwFxL8wLaaWmegIWW5g1YamkegbWW5hXYaGme
AVdL8w7stDQPwV5L8xIctDRPwVFL8xactDSPwVlL8xpctDTPAbQ078FVS/Mg
3LQ0L8JdS/MkPLQ0b8JTS/MovLQ0r8JH+588Cy3Nu/DX0jyMAC3NywjS0jyN
YC3N2wjT0jyOSC3N64jR0jwPvpbmfSRraR6IQEvzQrK0NE9EqKV5I1ItzSNR
amleiVZL80zytDTvJF9L81AKtDQvZZ+W5qkUamneSpGW5rEUa2leS4mW5rkY
tTTvpVRL82DKtDQvplxL82QqtTRvpkpL82iqtTSvpkZL82xMWpp380xL83Bq
tTQvp05L83TqtTRv57OW5vE0aGleT6OW5vlwdDTvx0xH84DMdTQvqJ2O5glZ
6GjekKWO5hFZ62hekY2O5hlxdTTvyE5H85DsdTQvyUFH85QcdTRvyUlH85ic
dTSvyUVH85xAR/OeXHU0D8pNR/Oi3HU0T8pDR/OmPHU0j8pLR/OqfHT/ybPS
0bwrfx3NwwrQ0bysIB3N0wrW0bytMB3N44rU0byuGB3N8+LraN5Xso7mgQl0
NC8sS0fzxIQ6mjcm1dE8MqWO5pVpdTTPLE9H887ydTQPrUBH89L26WieWqGO
5q0V6WgeW7GO5rWV6Giem1FH895KdTQPrkxH8+LKdTRPrlJH8+aqdDSPrlpH
8+pqdDTPzqSjeXfPdDQPr1ZH8/LqdDRPr15H8/Y+62geX4OO5vU16mieH0dP
8/7M9DQP0FxP8wLb6WmeoIWe5g1a6mkeobWe5hXa6GmeIVdP8w7t9DQP0V5P
8xId9DRP0VFP8xad9DSP0VlP8xpd9DTPEfQ079FVT/Mg3fQ0L9JdT/MkPfQ0
b9JTT/MovfQ0r9JHT/MseXqad+mvp3mYAXqalxmkp3mawXqatxmmp3mckXqa
1xmjp3mefD3N+0zW0zxQgZ7mhWbpaZ6oUE/zRqV6mkeq1NO8Uq2e5pnm6Wne
ab6e5qEW6Gle6j49zVMt1NO81SI9zWMt1tO81hL9f/Jc9TTvtVRP82DL9DQv
tlxP82Qr9TRvtkpP82ir9TSvtkZP82xNepp3+0xP83Br9TQvt05P83Tr9TRv
97Oe5vE26Gleb6Oe5vlyDDTv18xA84DNDTQvuJ2B5glbGGjesKWB5hFbG2he
sY2B5hlzDTTv2M5A85DtDTQv2cFA85QdDTRv2clA85idDTSv2cVA85zBQPOe
XQ00D9rNQPOi3Q00T9rDQPOmPQ00j9rLQPOqfQw0z5pnoHnX/gaahx1goHnZ
QQaapx1soHnbYQaaxx1poHndMYb/5HkbaN53soHmgQsMNC88y0DzxIUGmjcu
NdA8cqWB5pVrDTTPPM9A887zDTQPvcBA89L3GWieeqGB5q0XGWgee7GB5rWX
GGieu9FA895LDTQPvsxA8+LLDTRPvtJA8+arDDSPvtpA8+prDDTP3mSgeffP
DHCu8oILj5OKn38D7HxxPvHi/UT8/BsgcFf7sws2xOPn3wAND5L1Vv2i8PNv
gGsPF2pv3t+En38DTPG7ucK231r8/Dfp77Jrfu9+3vj5zwMO/vs/3o4iEA==

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{Automatic, 369.41261409643766`},
  Method->{},
  PlotRange->{{0., 2048.}, {0, 0.9999997055754284}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.6213176601584167`*^9, {3.621334867096846*^9, 3.621334896295556*^9}, 
   3.621334927731049*^9, {3.6213349733102903`*^9, 3.621334981172037*^9}, 
   3.6213352226102*^9, {3.621335273683385*^9, 3.621335299972417*^9}, {
   3.621335344880937*^9, 3.621335371999483*^9}, {3.6213355354131603`*^9, 
   3.6213355444638433`*^9}, 3.621335604556404*^9, {3.621335647218521*^9, 
   3.621335678493545*^9}, 3.621504983080266*^9, {3.621505208899335*^9, 
   3.6215054020601263`*^9}, 3.6215059587166433`*^9, {3.6215059921768703`*^9, 
   3.6215061824001083`*^9}, {3.621525189501754*^9, 3.621525207300308*^9}, {
   3.621525289319865*^9, 3.621525302662093*^9}, {3.621525355540657*^9, 
   3.621525373374991*^9}, 3.621525426043296*^9, {3.621574165550819*^9, 
   3.621574184827914*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfXd8VFXa/7wmM5OA6zZ33eY2EBUV7Lq6dtfe+1pAEAHpiICASAkhJKSR
BukNAgRIQggQeieE9N57ISEV0uv87ve0uTOZuRMC+r5//D6fHdzM3HvO9zn3
3HOe5/uU8+aU72Z+PXfKd998NeXvL387ZcHMb75a9PeX5n8rfWX1PyqV1SKV
6qbxf1fh/+tUKv6PTvqf7J8l+Ae/Xe+3xeQ/ml92dnZ6R0RE5K9cubJ97ty5
FxwcHF7Ozs62Jj+r30lLS0uyt7e/Om/evFMbN258qLy8XKX02z7ym5Vu+vTp
d126dIn8NdK2lH6LMtGP1U8jUiRtfMapU6fQHT4qNf61+gnk+j19OkXkPzaj
u7u7CyQxKpcuXTrrxIkT76ekpDjv2rWre9asWf/Jzc29iVymfbagoKBH+mpJ
fHz8c/n5+e47d+5Eq/9oaGhQDeeaWLOjef1tD+eaPSb6v+nnHYKdFMK/i4qK
AAMTSKWec/z48RvVwXCu+Z386Vt9lJSUBDEnVlVV8cmN2846Ojqq2Nsc4+3t
7bhnzx72c6yXl5dDVFSU6Z+tDH7ea/ahW/HbZA/CQtPX1PNus4/7p5Z5B12Q
/mdwcDBzzZo1+6TfNH19fZqfRexb6dOtoHc+UlZWhgePv4Cna/bs2VgCWMNf
JCQkpNrZ2Zn+2Ur+s8knycZTfqtqWE1fU8+mnqTNDZePvpvW/5RekYrvv//+
4vr16++ura21/llENHxq+Klk+fLl+OvXHR0dkPy37e3trOGnCgsL67777jvT
P1vJf1Z6avJbVcNq+pp6VnhqN1A+um+qb+nq6vLYvn073mq/8PDw30Cmn0fO
W+XL6c3QC1rnz5+/V3pFIfYvJGCvZWVl1S5evHjt3r3kcWCKoUV1f38/63CC
tBL1fvPNN6Z/tpL/rPRI5beqhtX0NfVsfkn9OeSmvduMq6urO+Lm5oa9+u+N
jY0javmaOmZPmCqzoxsXLlyYtXr1amh9uAv77KYdO3ZopSUeV2Aq4vtb29ra
+DN4Wpow1UuWLDH+nfUm/1np8V5709fUs6nHa/XzCE13Q631wMBApK+vL3a0
kTV7Tb0aPFh1woYNG6CRYa/+a1NTE3mJ2PLfJsn9eElJiexpaKacO3cOuwT5
S/rwa1hPBj/TvVn9x9bW1ntramrwEcM84i6uCcFOiwh+0gGgOpHV2Pr6+mxp
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
KSlu0m19M2fOfDk7O9tkxQM2JH/tbavrKQqkzFXyln/rvlpDAvfZkEDbhNFC
IriGMSS9/ERiNiTs/DIoDEhyI6VtmacRf5Ok0XM+JBRxoCRw/NMdl1Li2WhY
Lg7CxIrftGnT5PPnz8uGw2rVvn37zjk6UqeqqZOsKZWqntWQrT867KT3K8gq
4PmnPEWcRNFalJ0VlRKxsvjQUxlECiUpl8ucf8QSlJ3Rvro2OVB1iIs+3Poi
UNfxlH/Z2dnJr3u0rKwME8as6JRTU18tCXmE997g5eUCvx6vG8pVGkQ1IsPI
1IEpFqVn5zUgjpcQ2pMo5UO70GBGVdh5RvKEg4qsre/AahJjMNzqJKiegevu
r6ys5Nd9nJSUVLJ8+XILY6B5uKchS8dPfEzc/MzFNQGnX80ousx8kQ/KzuOB
hXQ9wyBPtIAbjyXtQtuTdpizg6d9XqZvgf/4u3payw7zYRhm2RMbfh0qPqAm
x83d3d0oJlK2bNkyLAqm1gDKDWtdCs8GiJcg0HU+tmdY0aRcCPM8yk0bbDxs
KKDgXPNQyN1YGEvWBZZfWBqIf9V5OX9vKhNWzA6LtVPYsPDrZp84caLh22+/
xf/H0KHuh01vby8ZFlJDha4IxKOYnRf5X6bs34kDLlHdAvom6lhZDx0PBPWx
8ZAH7I54PGgXNiiQBUuf5FgvtA/hp5mWFkS8BUv/iHyhVCzFws7sxKqC6/Cm
4P//qaWlRdvX12djYmpQDtsGldX7i1l+j7RQVy5yP4qZjFIZMDKZZw8cEJdA
duTdiEYDnmh+A6rGyjysCEDD5Mtb5n0CR4fyF+bO3taSo8bbhtnKLkxBCA0K
CiLXyLaNidKL9XxeXp7ZdYPyp9oNZeflb8w8vr1jJnBnrXyV0I+J2nhMaDos
fgu2MDByfQ+/G3lVT9qHXhjwdeWFYT1LZK8NnyoWS8fQsdGi4hBmin9YWNgn
0iUr9u/fj7+XSkqJSW2Cjgs5XqwkY9vH4uVZst6Pab3W3B+GD3I8TCmbt5oe
I3qa+HDGiMfX4oP4XvpciZkqCIvVG9y4e682K+xNbDqUIFesUMO0FsyQg5LC
0Tp//vyqpUuXrt27d6/VwMCAqUGhRo32nz1XawaKmEsZFtqXkqX2xZr9D5Zf
usIdm3KJZSe/DW8gSMiv0UDIlW/8ztREBMWTr6esieUxx7Cy729vKFLRnHmT
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\
\>"]]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw9nWdYVNcWhscSRWPBji1ib4liN9ZPjb1hjV3s2EFRioWhd5gZBhjKANao
sUejSSzYMUZFY48FW2y5ikZj1zuP61vmz33eOx727LPPC+ecvUrtyfOHTits
cPznZDB8+t9P/xV0PbwhdUHB24/7+X/g7cZeH+99ZieM6+kz7O5ndsbSc/9b
f/IzV8TsUi9qHf7MLjjffPr41M9cAx9r3BqQ/JldsfDWpfgJn7kOxvZvmdLz
M9fDpQVJQW/eKDfAmv5dc//7zI3wPql7P8tnboJGLl/+FPGZv8bIAaMOl/3M
zTDYPsFa6jO7odvlsUbra+UWOLPcNHDsZ26Jib+0/3j6lXIrlDxy7+SJz9wa
he61OVf1M7dB3KNLZct85rbovTPev/dL5Xa4N/jjbz0+c3s0jC0z1Os/5W+x
3bx484jP3AFt/vLeNu+Fcke0++lS/qzP3AmLGtxsN/O5cmf81iRvzITP3AV7
+p5f3u9f5a7YXrx2j96fGRgx/o8Dg56RjYD/zrrtzz3Vz7thTIdyq3ML9PNu
ePp0rOthZUN33I2qnbr4iX7eHf+be638LGVDD/zXoOP+Yo/18x448dWKfYWV
Dd9h5dkbBy3/6Off4Z9dd1cuVjb0xLUVY/KePdTPeyLrrc/xx8qGXii+xG3G
4Af6eS90utVvdQ9lQ2/8eiFptemeft4bDa4tvh6rbOgDF2/PtKt39fM+aP5t
yyErlA19MffvD/HXbuvnfVHWffjiy8qGfvA88vXeRzf18374rtjPV24oG/rj
l72FWl+/oZ/3x5Yqj0ZeUTYMQIuh50L/uKafD8C2kFIh25QNA3EnxG266S/9
fCDeICAxVtkwCE2Hb3Qaclk/H4Rgl77leykbBmPewkrb3lzQzwej+MzyXi+V
De7wtoXc+XCODHdsC1jSppCy0R2r7ZdyXpwh57jD0nXel0+VDUNwpeaWZXNO
6/FD8Ovu35dNVDYOgd+oIc8O/qHHD0HcMe+j+5QNQ+Ff85xnpd/1+KFYPP2n
Sa+O6/FD0bZo6XcdjunxQ/FipvVyW2XDMHT3G75g/GE9fhj+XGDuNUTZOAw7
L0e3n3pAjx+GjZP69vBQNgzHQ/vyCr779Pjh+KvoqXodlI3DMdl6dF7n3/T4
4Ti14pve3yobRiB5yqvF5Xbr8SOw413jHl8oG0fguuntmuM79PgRKHm+7eoj
yoaRcHp+ucvybXr8SDS50rrxZGXjSIS5pnUrvlmPH4kZ9+p3LaJs+B570ub/
F7tBj/8ega/2NghSNn6PAav73ni5Vo//Hv4dRlR4rmwYhRFbftsdu0qPH4Uf
x3pcL6tsHIWmRf2/TcrS40ehRAe/dyZlw2iEL/ZbczJdjx+N040WjjigbByN
a+feH3iQosePRtHjr3bfVTaMwfeb540tbNXjx6BudL9afyfq8WOQMH5Z1ycJ
evwY/BpXut0jZcNYvCq75talGD1+LA49tj/5Q9k4FssWlfn2hwg9fixq/XJ+
0CplwzgUvXJgeVCIHj8OTv1+P95T2TgO302uus05UI8fh+3Lt/xQStkwHufq
L/hvY4AePx5pfY+XW6FsHI/EezeKN1usx4/Hbz/McG2ibJiAKo8v2X/01uMn
4HziX34mZeMEzK/yYcrHOXr8BNwo/ZfprbJhIqIfThoyxFOPn4gxgesH9lI2
TsTC/kmFzVP0+Im4t2/i3jhlgwcatv1zUtpEsqsHpk+Z/3XyeP15HvAe6dTJ
NJrs4QGf0tvmxCgbPfDO9P1L+3Bytgeu3nLdYVLO8UDoT6O/jBhMzvfAnu0T
jgYrGyZhv33ohtn9dPxJ6Hv3YrVBypiEnDWrjtfpqeNPQshLt5SvlI2TMDvh
fLWLXXX8SVgbmLv5d+WcScj9ec72+R10/Emo1vZj5mxlw2Tk3O63uFIbHX8y
Sp2LNV1sreNPRjn3E9XmNdfxJyM7tdjjmcrGyfBplHjnXGMdfzJ+HzcoMlc5
ZzK2P2/g4lpPx5+MCycGFqmhbJiCoG3dvvf8SsefgjfNfj3SXxlTkDIw5V6o
i44/BZur/PSnUdk4BS1nzN2RWV7Hn4Jn2w6nW5RzpqDP6Tar7KV0/CkYZKqz
LVXZMBVHv/e5lVtMx5+KA8lrBvdTxlR82b7ssukGHX8q/vUO7TVZ2TgV/3Tu
Urf1mw8cfyqS3BP3N1TOmQq3zOTif/9Lzp+KFsXcn95UNkzDRvvYMkn/I7tO
Q/dkbx8/ZUzDyuaJPi73yB7T4LNp8YSKysZp+DpnatPUfB1/Gm5vsBvilHOm
wdLbPffDZR1/Gl7uunT4jbJhOspfuhTg/aeOPx13Lv6e3loZ09FuePBY2x86
/nSUu1e6u1XZOB1BZyaWP3lEx5+ODoen/Z2jnDMdZQa0X//3Ph1/OhZU3Lny
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
e6ts9EW5NjfjJ50mm3xR723N4T2Vs33RZvj6hukHyFt9EVPWvW6Kco4vVqy/
VvP8T+Q8x/i/HG99XDnfF8VSR+x/vYZc4IsaN4/9/ULZ4IcLZUzjvkglO/sh
KPto9IdksqsfPmStOv8+Sufvh+iW5UJfK8MPFTeNm/16ic7fDz+VLH7+H2UP
P9R0cm15ea7O3w+XKj358ryy0Q9rG2/y3T1R5++H/9WfGpGunO2Hhsdnj5s3
ROfvh29Xtuo0SznHD62622bV66Hz90P7PgFVXJTz/Rx+3f14oLXO3w8r7s96
sFfZ4I/hW7YX82qg8/fH7aO5AS2VXf3xbPcV73NVdP7+aFonZFieMvzhH3Np
T98SOn9/lA/1nd9Z2cMfkwol/bL2zWvO3x+u35ZetVLZ6A/rhCmFi/5DNvnj
57Nzpt17RM72R9TvbXPbXyNv9Uf82lrbWyvn+CNk9+8f5p4i5/njTsic3EnK
+f44t6H1wJj95AJ/VHxq7R6hbAjApLL1x17eSnYOwIkz7daNUXYNQM9vnP/N
WEF2C8CKO9PO2JQRgOoLe96yWMjuAajc7fvEcGWPAMRd67zZK0TnH4CST/el
zFE2BmBloSslBvvo/AMwpNj+uS2VswOwevCExl9M0/kHYGC5ihUKKecEwFS0
9vvfRuj8HT+/5JGDW5TzAzDjt1+dx/bS+Qeg/u2mhb5XNixB8ylfFv6ync5/
CZ7uyr12sq3Ofwm23Lo2ckFDnf8SNIvP7jpPGUtwqLf98cMqOv8lmLfv4o7r
yh5LUH0Kbvd30vkvwS+9Sv7ZW9m4BKsLp63f9OoV578Eo18e7WhWzl6C/dET
f7t3n7x1CQbm3t54WzlnCQ6efXupzmVy3hI8KO22r7Jy/hI0uT+zfe/j5IIl
8HSN7NRD2bAU8x9c2fvXL2TnpSh77uuXV3aTXZdi7fMmQ6auJ7stRbTriQYe
yliKjR7Dq09JJbsvhXXHx4MjlT2WInvy08t9o8heS3Hs5hcHeyobl+J9/rX1
Lfx1/ksR9TSvZCXl7KUIaG868dRT578U4/5ZtPN/yjlL0f3q6G9/GqXzX+q4
v37yca1y/lJU/uJ/QeP76PyXovNy64LRyoZl8Nk7uFvV9jr/ZXgz/Uajq+10
/svQz6Nd6biGOv9l8HLBy0hlLEPV45W3l6+i81+GDYOrLCmm7LEMk18/Gh5U
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
k18tLfviKXlrKEbXsNXccJW8OxS5z4YUXaucE4qzob3/HHWMnBuKqcN+qdNJ
OS8UFXYn2O5sI19yjF9mWWC+cn4ovnwXFrg4g3w/FPWy1nw7S7kgFC7WCRX/
Cye/CkXkyfmGZ8qGMFzcVMS40ZvsFIbm68r6fKPsHIaB+5L+vDaW7BKGWleG
7Lys7BqGwArOTXv3IjcKw4DuDa90UHYLwwanDfUz3cjtw9Ds1LRSacoIw0Hv
9cveViP3CUPFMR4nryu7h2FykaID235BHhWGrp3OtWqp7BGGn9L7935y/QnX
PwzzDv6264KyVxi6W2r8N/Ansl8YMp7+fLynsjEMyzb9OfZKBDkyDOnWZ7ET
lU1h6HIseFv+WLItDBVat15+STk7DDOuzJlbyY28Lgx1/q1w/V1z8tYwrA+1
RzYoSt4dhq86hIz9SjknDIMv9Gzb89Jjrn8Y4npFvv9SOc8xftTw+7U2ki+F
wfnHTXuqKOeHwan4PyudjOT7YZizO7NZQSC5IAxPGvdqdXoY+VUY3sQ6uRxT
NoSjyHdVd4U2IjuFI/5kn6vGBmTncDw/uOK/pm//x/UPR/PfS2yvq+wajlX9
LlY7cYrcyPHzjP3mb1d2C8eSHUcW91pJbh+OW8tmdu+ijHBYE0u45C0i9wlH
37PztyYru4fjxfqE7pX7kkeFIz/rh7JllD3CUfvK5Maza5A9w7FhTSfbUGWv
cPz4YfJ++5N/uP7hWH60syVJ2RiOXbN6Hvh4kBwZjjVuLR6HKpvCYZi/f9K1
JLItHP7mmGbnlbPD0dgaWOORJ3ldOJz/LBt7VnlrOFp07nf/Qkfy7nCMvfH9
r6eUc8LRuoj7mzNlyLnhSO58abdNOS8c168Hbo2++Yjr7xhv0u/Bwcr54Ti/
t3SRYTvI98MxotCQ4A7KBeF4fH1PnTfh5Ffh2H+6xvunyoYIRFbuXLf8GLJT
BGqV2p1WcTTZOQJ1rtZ/UvdrsksEqtxf9Ut1ZdcI1L866tq6Dw+5/hFYdXPb
AJOyWwRO2EsllzpDbh+BX+O2eBZVRgSWV70717iK3CcCZ3a5tOqt7B6BVvN7
nt2+iDwqApcLrVizQdkjAs3jZmx70ZvsGYGHPWJbXlP2isCAF2/qu1Qj+0Wg
3rAbH8oqGyNQddihbbP/ecD1j0Bsi/19nj4imyLw1rTvm877yLYI9O9fULiN
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
Yxx8uyd+O2TYaa5/HAa27XRv2hCyyfH9PZp7PIk+xfWPQ9bERhmnlLPjkPI4
Z3XQoZNc/zjUaDpiUi3lrXEoPOKpIeftH1z/OES+edAtSzknDnevzfOd35qc
Gwdvry8Q3YqcF4fltkIz+845wfWPQ5cT7zY0Us6PQ6eeB+Ynr/6d6x+H/xaM
Qmvlgjh89fRd4aSrx7n+jvkmnHf3UTbEw73dimGxLmSneORP/3fDUmeyczzC
tzweGDYgl+sfjwqFey6fquwaj7fHH1VJCT3G9Y/H+jn5Oa2V3eLhPDPOZ8Se
o1z/eCR+cNvaWhnxCLvy/EHE8yNc/3g87HctYeW/ZPd4+A5KeHOvKXlUPG7/
3bjdMWWPeDQeEFRn35TDXP94nB3z9OpYZa94NF+7fkSv9ENc/3h4HN+UVF/Z
GI/rkwZvPvbnQa5/POZVqDXs6hmyKR4RCWduLihJtsXj68ULvhqqnB2PA1su
PK/a/QDXPx4unf237OpG3hqPjHP1L/v453D943Gt9kyX4co5jvksR23z5P1c
f8f5KFIs+agHOS8eHV7vzMjI28v1j8fs1Z2rj1XOj8eF7YVPZXTdw/V3nA/z
s8GXupAL4rHq32npJTf/yvWPh+v7i7WObyIbEoCVng39XX/h+iegQ+Nbs6Nd
yM4J2BB2flXTmF1c/wRc9C9d82E02dVxvGvmuyevd3L9E+BTuP+CpspuCQgf
tbhJXc8dXP8E1F2Ruu7mDDIS4JExd5j7xe1c/wR06fj70bDzZPcEBAx70evh
d9u4/gmodaL3kXXKHgmIW/HsZZEZW7j+Cci9WPJZwDSyVwJOFClV1LXHRq5/
Al71GVbE3p1sTEC77nnHe9Vdz/VPgGXmtk2p1cmmBHwc7/RLl3druP4JqFNu
567f3pKzE9Dg4KY9wy+v5PonYFOber+euEjemoDuYzzP3JmVxfVPwNg+6aev
zyTnJKDr8R9OL2uYyvVPwMisxNPDXMl5CXDPWtzfdt3C9U9A7YovB1uukfMd
52PJ+9pO7aK4/gkofr4c7riRCxLgFp+0etIif65/Akpm4mJfb7LBhKVDVx2v
OsZduKgJ42d/4q5yPZhwN/vTvxcuZUJm4qefJ+xswvNzn8YTrmhCF/k+wi4m
xMn3Fa5hwiWZj7CrCdmZn+YrXM+EtbmfzodwIxO+7PvpfAl/bcK/cj6F3RzH
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
t+GV1Huh/zb4Sz0Y+m9DV6kXQ/9tqCT1ZOi/4/xIvRn6b0MXqUdD/21ar4b+
2+Ar9Wzov+P6kHo39N8Gw81P9XDovw2npV4O/bdpPR36b4NJ6u3QfxvWSj0e
+m9DrNTrof82ZEg9H/qfChep90P/UzFP6gHR/1R4Sb0g+p+KVlJPiP6n4pHU
G6L/qTgm9Yjofyr6Sb0i+p+KA1LPiP6n4nupd0T/U2GVekj0PxU7pF4S/U9F
JamnRP9TsVDqLdH/VByVekz0PxVNpV4T/U/FJqnnRP9T8UbqPdH/VHwt9aDo
fyoaSL0o+p+KmVJPiv6noqjUm6L/qTBLPSr6n4rBUq+K/qc6rtdP9azofypG
SL0r+p8Ku9TDov+pqCD1suh/KkxST4v+p6Ki1Nui/6moJvW46H8qsqVeF/1P
RWep50X/Hesl9b7ofyrGST0w+p+K8lIvjP6n4pTUE6P/qbgr9cbofyoCpB4Z
/Xesp9Qro/+piJR6ZvTfsb5S74z+pyJd6qHR/1Q0lnpp9D8V46WeGv13XL9S
b43+p2o9NvqfiiZSr43+p+Kp1HOj/6la743+O+Yv9eDof6rWi6P/qYiXenL0
PxWdpN4c/U9FC6lHR/9TAalXR/9T4Sr17Oi/4/qTenf0PxU7pR4e/U/FRamX
R/8d17/U06P/qdgv9fbof6rW46P/qUiQen30P1Xr+dH/NBil3h/9T8N9qQdI
/9NQWeoF0v80FJd6gvQ/DY+l3iD9T0O21COk/2kwS71C+p+G1lLPkP6nwU3q
HdL/NNSUeoj0Pw0/S71E+p+m9RTpfxr+J/UW6X8atks9RvrvmJ/Ua6T/aSgq
9RzpfxrSpN4j/U9DJakHSf/T4CX1Iul/GiZKPUn6n4bjUm+S/qfhiNSjpP9p
6Cz1Kul/mtazpP9p6Cb1Lul/mtbDpP9paCH1Mul/GvpIPU36n4b5Um+T/jvO
v9TjpP9paC71Oul/Gn6Uep70Pw0zpN4n/U9DA6kHSv8dLPVC6X8aIPVE6X8a
aku9UfqfhkipR0r/0zBQ6pXS/zR0kXqm9D8NF6TeKf1PQ4LUQ6X/aXgo9VLp
fxqGSj1V+p8Gg9Rbpf9p+ErqsdJ/x7+Xeq30Pw2xUs+V/qfhoNR7pf9pCJd6
sPQ/DX5SL5b+p6G01JOl/2n4kPup3iz9T8NlqUdL/9MQLfVq6X+a1rOl/2m4
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
2F3ld1l4u7HXx3vKhmwc3ZC6oMDB/wex/Z2g
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
vPly/KtRzl2yGjPrPmsy+DM5/tWYwV21Gi++MaX4peFy/KvRlLt+Ndo4n5tR
2VuOPxHNuT0SkWWaYl7ZRY4/ERncPom4d/b61696yPEn4ia3fyKmXCqc+PWT
v2n8iZjIHZGIHecnjvroBlmViG+4NYmoXvTWvq1nyYWJqOIuScTVk4bx3Q+T
yxNxmbtKeT72Dw67ysg1ibjBXZ+I0A6TLyauJ7upMIfbXYUmEcMy7+jJHir8
F87spYLb3u9++C6Z7K1CQzlzDxUmd9oT+iCC7KPCOG5fFTq+ETjU63MyVHiN
20+Fv6tKXn9zHNlfhWvcgSp0blJu7NJfvr4qvModqkLS1n9Ptn5bvt4qJHLH
qDDohNV5o718/VUYyK1WYfru0et3NZXzoYyH26LC1ANhn6ru3Kf5UR7nLlZh
Riu/231qyCWNXKbCj6P9b589Ri5XYRd3pQrLPnT3XfEDuUqFcO5TKvhPu9Dh
uQ3kGhVGcdep8D/NydxEE7lehVbcDcr8PrZ53k4huyXheW73JExZ0PefSZFk
jySM4/ZKQnzRlNoNs8jeSYjj7pGE8rw1He6OIfskYTu3bxK2bdncqdfHZCRh
M7dfEhJq19bMfIvsn4RV3IFJ+HOceVNiW3JwEs5whyZhiXb/IoMbOSIJs7lj
kvDK3p3j7Dfu0fwnwZNbnQT3c6rdpjNkTSNbkvD16UG/pB4kFyZhE3dxEu7s
CP9nXim5JAnXuMuS0Hx0csgna8jlSXiBuzIJR5aXP34uj1yVhP3cp5LwS0lS
+12ryDVJqOKuS0JEq1b7Fy8g1ychnLshCRn7G9a2CSC7JSOG2z0ZdVG/NnWC
7JGMK9xeycj3uXS2x3tk72RkcPdIRv+JmyPWvkr2aWTfZOxOrZnfrhkZydjO
7ZcMtPWqirlzl+Y/GYO5A5MxoXvLJycukIOTMZo7NBnx32ad73CEHJGMOO6Y
ZCRbDhRO205WJUPFrU7GmcUvlmV/SdYk4zS3RXl9Xp3tszWfXJiMGu7iZKTW
r4s9GkcuSUYSd1ky/muXUHFmAbm8kSuTUeC76J9zk8lVyTBxn0pGyPbyeT8P
JtckYy53XTImVTe7v+tdcn0yxnA3JMPvv2OdHK+Q3VIwhNs9BR/7dA9b2oTs
kQIfbq8UJHUt8Pzo1h2a/xSouHukIOH9aWtunyH7pCCc2zcFu5e+rF5zgIwU
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
7h7ZONTyt+de60r2ycaP3L7K+eInXFpUfp7mPxvR3H7Z2L1o5UvFs8j+2Sjj
DsxG/xsB4T8/Pkfz38ih2TiyLeridRs5IhuV3DHZuDm+qsN9X7IqG9e41dlY
cu3KrL9+PUvzn40wbks23o2a/G5VFLkwG525i7PhFr3op6L/kUuy8fcK5rJs
RC3O7bSw5AzNfzbmcldmI/t/fu1eH0+uyoaK+1Q2gtZ9i33XTtP8Z2Mkd102
ps2eqpueSa7Pxmjuhmx8dOjvxw/fIrvl4E1u9xw8SZm5+5WKUzT/Ofib2ysH
xz5683PLbLJ3DvZy98jBxm3NXr/75Dea/xys5/bNgW/rMdf628nIQW9uvxy0
/mTkD1Efk/0bOTAH71z85hXXr7/S/OegM3doDmaH+Df7YTk5IgdjuWNycPzd
zyce8iCrclDJrc7BTlXghMrNv9D856CM25KDHb0So38YTS7MwTbu4hy0qdvq
ueZKNc1/Dlpwl+Wg6Z/rz8emkstz8O8fzJU5qO479stPu5CrGvlUDtZ8+cvs
F3b/TPOfgzncdTmYeemw2/fTyfU5GMbdkIPnN9z935wHP9H85+LLYmb3XJS+
MfbrBj3ZIxfB3F65OHA12ZTlQ/bOxRbuHrmYdG3FH22OnaT5z0U7bt9c7Lpp
7JK1kIxcTOP2y0XHy+MGPXyB7J+Lm5eYA3PRdM3s3rO+qKL5Vx4vZA7NRer6
G8fLBpEjctGdOyYXzj2azLbfnaD5z8XD3czqXERs+fJH583jNP+5COC25KJZ
YPs3O3QnF+aifipzcS6+6eI7KvnzYzT/uVBzl+Vi83ur7afMR2n+lefHXZmL
gQ33fu1YdYTmPxdnHzCfysXfUaO6TXQn1+SiirsuF1rTQ+9oHKb5z4UXd0Mu
4rvM9jbFHKL5z0N/bvc8ZFnznw8vqaT5z8Ncbq88bHj9QreIuoM0/3mYxt0j
D01nrFkw1Zvsk4fnuH3z8E/32k69Ag/Q/Ochl9svD7ffGlH3IP9Hmv88nOcO
zMPNQ/712w5W0PznYSd3qPJ8+3vcnvPffpr/PPTkjslDWOuPpzTrR1YpP8+t
zoPxrYmVtqX7aP7zEMltyYM54EG77uv20vznYSB3cR4e1YVdWn++nOY/D8Xc
ZXn49Obegk7tyOV5+O8Gc2UeXjVfrmhn3U3zn4cRJuZTeVBN/G7e+Rd30fzn
wY+7Lg97Fh4+rI/+geY/Dx9xN+Sh7sqO4YMvfU/znw89t3s+PnvQxVo+uYzm
Px8+3F75uL/Evmj8vu9o/vMxhLtHPgYv6JR/yOdbmv98jJnP7JuPi2tOxfq6
ttH85+Ntbr98bB1lblfQaivNfz4WcAfmY8qcDZvux5XQ/OfjXe7QfPzif6SX
pnozzX8+vuWOyUfF1Mhf3/1mI81/Pk5NYVbnY3vnDou25a6n+c+Hg9uSjy/a
zew8YlERzX8+vvNkLs7HpaDn158fsYbmPx9NuMvy8fJY641XR9pp/vOhHsNc
qTyfVZeuXXAz0fznI5T7VD5Uq4d7fL4yn+Y/H1EJzHX52FLRtk3g3WSaf+X1
2M/ckI/aJxXvHF60iOZfgzV3mJtqkHf1qQeL94MGJfeZW2qw+ODT3yfsoUEi
t6cGS8XzEfbS4MVE5o4aTIl9Oh5hbw0mxzF302D66Kevh3APDb4Yw9xTA2/x
egr7aNB0FnMfDTqL+RH21eC39swDNDgk5lMYGnznzTxceb7i/SHsp8HwQOax
GjSf+PT9JOyvwRHuAA3ixftROFCDSu4gDQaJ97NwsPI4d4gGOpEH4VANmn3B
HKbBOyJfwhEaLOeO0uCmyKNwjAa9lzLHaxAu8iys0sDCnarBv+LvgbBag751
zDnK+cTfE2GNBge4DRr0EX+PhC0a5HDbNfAUf9+ECzUYxl2kPF/x91G4WHk/
cG/S4Lr4eypcoszHVeZSDWaKv8fCZRos4d6p/D7x91y4XAMVd4UGH4p/D4Qr
NQjkPqrBrU+e/nsiXKXBK/2ZqzU4Lv49Ej6lwV3uc8r7tfvTf8+Ea5Tnz12r
wQ7x76FwnQbHuK9rcHr6039Phes1uMZ9TwOT+PdYuEEDB/djDRLEv+fCblrY
uZtqMV98HqD8a5HA3VJ5XHyeoPxrkcbtqcUt8XmE8q9FkxXMHbVoLT7fUP61
6MjdTYvHPZ9+HqL8a+H7HnNPLfaLz1OUfy1Oc/fR4pD4PEb518ItkHmAFgvF
5znKvxYa7uFaDBOfDyn/WgRwj9Vikvg8SfnXYgp3gBYXxOdRyr8WT7iDFIvP
s5R/LdpcZg7RYpX4PEz51yKRO0yLQPF5mvKvxQzuKC12iM/jlH8t9nLHa7FL
fJ6n/GuxmztVi0fi+wDlX4v/uHO08BffJyj/yuvJbdBitPg+QvnXIorbrjw/
8X2G8q/FAe4iLV4T348o/1p0496kxZ0rT79PUf61eLGOuVSLfeL7GOVfi5Pc
O5X3j/g+R/nX4jB3hfK4+D5I+dfiCPdRLcaL75OUfy3mcFdr8br4Pkr512IQ
9zllPOL7LOVfi7e5a7XoL74PU/6V9xv3dS3M4vs05V+LTdz3tCgV38cp/1rs
5H6sxUXxfZ7yr8Md7qY6dBfXAyj/OvTibqkDxPUEyr8OY7k9dXhfXI+g/Osw
hbujDrPF9QzKvw4R3N10GCeuh1D+dQjm7qnDI3E9hfKvg2c0cx8dWovrMZR/
ZTzcA5TfJ67nUP51SOQersNdcT2I8q/Dfe6xOpSK60mUfx2+5Q7Qoa+4HkX5
1+Fj7iAdvhPXsyj/OuzgDtFhrrgeRvnXIZY7TCevr1H+dfiJO0qHI+J6HOVf
eZw7XoeJ4noe5V+HBdypOnk9kPKvk9cLKf/Kz4vriZR/HVZzG3TQieuRlH8d
XNx2HczieiblXwcHd5EO68T1UMq/DsXcm3Q4Lq6nUv51OMFdqsMEcT2W8q+T
12cp/zr0F9dzKf86fMpdobz+4now5V+HpdxHdTgsridT/pXXm7tayYu4Hk35
1+Ej7nM6ZInr2ZT/Rq7VoaO4Hk7518Gb+7oO28X1dMq/DmXc93ToIa7HU/51
+ID7sQ614no+5V+PW9xN9fhc3A+g/Osxl7ulXt5PoPzrMYDbUy/vT1D+G7mj
HufE/QzKvx5XuLvpYRX3Qyj/eji5e+rhIe6nUP4buY8eq8T9GMq/HmruAXpc
E/dzKP963OMersd74n4Q5V+Pftxj9UgT95Mo/3rkcQfo8Zy4H0X518v7VZR/
PVzifhblX4/N3CF6qMT9MMq/HuncYXq8Ju6nUf71eIM7So+B4n4c5V+Psdzx
eriL+3mUfz08uVP16C3uB1L+9RjMnaNHqbifSPnXy/uLlH89zov7kZR/PW5w
2/U4IO5nUv6V9wN3kR5B4n4o5V+P+dyb9Ogv7qdS/vUYwl2qx53BT+/HUv71
aALmnXrcFfdzKf96NHBXKOMT94Mp/3p8y31Ur3w/e3o/mfKvx5fc1XokifvR
lH89MrnP6eEQ97Mp/3p8wV2r5EXcD6f869Ga+7oeueJ+OuVfDyP3PT3yxf14
yr8eWu7HetjF/XzKvwHruZsaMEysB6D8GzCSu6VBrieg/BvQitvTgEViPQLl
34AV3B0NePy/p+sZKP/K8W2Zuxnwp1gPQfk34C/ungYcEuspKP8GnODuY0AH
sR6D8m+AN/cAA0rFeg7KvwEHuIcbsEmsB6H8G7CNe6zyeoj1JJT/Rg4wIECs
R6H8GzCdO0h5vcV6Fsq/ASXcIQaEiPUwlH8DwrjDDEgW62ko/wZkcEcZECnW
41D+DYjhjjdgrVjPQ/lXxsudasBEsR6I8m+Q64Uo/wbYxHoiyr/y+7gNBmSK
9UiUfwO03HYDFov1TJR/5f3BXWSQ66Eo/wbM495kwDSxnoryr7y+3KUG9BPr
sSj/Bgzi3mnAB2I9F+VfeZy7woB2Yj0Y5d+AjtxHDegj1pNR/pW8cFcbUCHW
o1H+DfiR+5wB4WI9G+XfABV3rZIvsR6O8q/kg/u68v4V6+ko/waUcd8zYIBY
j0f5N8j1epR/A/aJ9XyUfyOOcTc1olCsB6T8G+V6Qcq/ERFiPSHl34iV3J5G
1Iv1iJR/I25zdzRij1jPSPk3yvWNlH8j+ov1kJR/I4Zw9zQiTqynpPwbkc/d
x4hWYj0m5d+I17kHGPFQrOek/Bvlek/KvxFuYj0o5d+I1txjjbgo1pNS/o24
zB1ghKdYj0r5N6I7d5BRrmel/BvhxR2iPF+xHpbyb0RX7jDl9RTraSn/RvzL
HWXEF2I9LuXfiCLueCM2ivW8lH8jtnCnGvGNWA9M+TdiF3eOEb3EemLKvxEf
cBuM8BHrkSn/RvTmthvl+mbKvxGbuYuMmCrWQ1P+jZjFvUl5f4n11JR/Zfzc
pUZoxHpsyr8RZu6dRqSL9dyUfyN03BXK/Ir14JR/o1wvTvk34g+xnpzyb8Ql
7mojhon16JR/o1yvTvk3IkesZ6f8K8+Pu1Z5P4j18JR/I17jvm7EW2I9PeXf
iB7c95T3v1iPT/k3oj33Y6Ncz0/5N+Er7qYmvC32A1D+TfiAu6UJZ8V+Asq/
CbXcnib0FvsRKP8mgLujCRliPwPlv5G7KT8v9kNQ/k0Yw93TJPdXUP5NKOLu
Y8I8sR+D8m9CKPcAEz4V+zko/yaM4x5uwgqxH4Tyb0IK91gTSsV+Esq/Cd9x
B5gQL/ajUP5NSOQOMsn9LZR/E1K5Q0xyPwzl3yT3y1D+lecn9tNQ/k2I444y
YbXYj0P5N8n9OpR/E/qK/TyUf5Pc70P5N2GY2A9E+TdhJHeOYrGfiPJvwgRu
g0nuT6L8m7CA226CWexnovybYOEuMqFJ+6f7oSj/JrzAvckEtdhPRfk3IZu7
1CT3Z1H+TbjFvdOEU2I/F+XfhBruCmU+xH4wyn8jH1Vef7GfjPKvvH+5q00Y
L/ajUf5Ncr8a5d8k97NR/pXXm7vWhJ1iPxzl34Q93NdN+ETsp6P8mzCE+54J
OrEfj/LfyI9NuCT281H+zXK/H+XfjCixH5Dyb0YSd0szQsV+Qsq/GWHcnma5
H5Hyb0Y1d0czfhT7GSn/Zhzg7mZGU7EfkvLfyD3NuCn2U1L+zajn7mPGNrEf
k/JvRin3ALPcz0n5N6MF93AzXhP7QSn/ZnhzjzXL/aSUfzPCuQPM+F3sR6X8
m+V+Vcq/GavFflbKvxkq7hAzysR+WMq/Gd9zh5mxS+ynpfybsZc7yiz341L+
zXK/LuXfDH+xn5fyb8Y07lQz3MR+YMq/Gc9x55jRWuwnpvyb4cFtMGOk2I9M
+TdjLLfdjOViPzPlX3m/cReZsU/sh6b8m1HJvcmMOWI/NeXfjPncpWZMFPux
Kf9muT+b8m/GeLGfm/KvjJ+7wozhYj845b+Rjyqvr9hPTvk3I4272oyOYj86
5d+MbtznlPev2M9O+TfjAXetGZ3EfnjKvxlduK8rz1/sp6f8K/PJfc+Mx2I/
PuXfjH+5Hyvvf7G/n/JvQQvuphbME/UAKP8WLOBuaUGdqCdA+begntvTgt9F
PQLKv/Lz3B0tOCLqGVD+LTjK3c0i6yFQ/i3Yyt3TghGingLl34Kp3H0suCbq
MVD+LXjAPcCCZFHPgfJvgZZ7uAVNRD0Iyr/y+nCPtaCZqCdB+begOXeABUGi
HgXl34JZ3EEW7BL1LCj/FhzmDrFgi6iHQfm34DvuMAteFfU0KP8WeHNHWRAq
6nFQ/i0I4463yHoelH8LFnKnWrBd1AOh/FtQzp1jkfVEKP8WDOQ2WFAj6pFQ
/i2o5bZbZD0Tyr8Fr3MXWfChqIdC+bfAl3uTBZdFPRXKvwVXuUstGCzqsVD+
LfiUe6cyn6KeC+XfIuu9UP4tmC3qwVD+LbI+DOXfgjRRT4byb4Gau9qCkaIe
DeXfAn/ucxa8L+rZUP4t+Ii71oIxoh4O5d+CsdzXLVgm6ulQ/i2I475nQUtR
j4fy38iPLbgo6vlQ/q2o5W5qlfWAKP9WfMvd0gqVqCdE+bciidvTilmiHhHl
34o53B2tyBX1jCj/jdzNiumiHhLl34qZ3D2t2CrqKVH+rbLeEuXfCk9Rj4ny
b4UX9wAr+ol6TpR/K8A93IpFoh4U5d+KJdxjrTgs6klR/q04xh1gxUJRj4ry
b8Vi7iArLol6VpR/K65xh1gRLuphUf6tiOQOs8p6WpR/K5pwR1lxSNTjovxb
cYQ73oodop4X5d+K3dypVkwQ9cAo/1b4c+dY8ZOoJ0b5t+JXboMVLUQ9Msq/
FR7cduX3iXpmlH8rpnIXWWU9NMq/FZ9zb7LiuqinRvm34iZ3qRU9RT02yr8V
Ptw7rbKeG+W/kSussh4c5d+KR9xHrbgh6slR/q2yvhzl34o0UY+O8m9FOvc5
q6xvR/lv5FqrrIdH+bdCx33dirminh7l34p53PesCBD1+Cj/yuvL/diKT0Q9
P8q/DUO5m9pQLeoBUv5t+JW7pQ3jRT1Byr8NE7k9bVgk6hFS/m1YzN3RhghR
z5Dyb8Ny7m42aEQ9RMq/DVrunjZEi3qKlH8bErj72JAl6jFS/m0wcQ+w4bCo
50j5t+Eo93AbHoh6kJR/Gx5yj7Whl6gnSfm3yfqSlH8bvhP1KCn/NuzhDlLG
I+pZUv5t0HOH2LBK1MOk/NuQzR1mk/U1Kf82eHBH2fBI1OOk/NvwL3e8Mp+i
nifl34ZT3Kk27BD1QCn/NpRz59jgJuqLUv5teJHbYMM5UY+U8m9DDbfdhgBR
z5Tyb8N07iIbikQ9VMq/DRu5NynjFfVUKf82tOUutcEl6rFS/m1Yy73Thsui
nivl3ybrvVL+bbI+LOVfef24j9pkfVnKvw0juattsh4t5d+GvdznbFgj6tlS
/pXnx11rw7eiHi7lX3k/cV+3yXq6lH8b1nHfs8l6vJR/G2q5HyvPR9TzpfwX
YD930wJUiXrAlP8CVHO3LMA6UU+Y8l+ATdyeBXCKesSU/wKs5e5YgNOinjHl
vwBnubsVIF/UQ6b8N3LPAjQX9ZQp/43cpwC/iHrMlP8CnOIeUICXRT1nyn+B
rO9M+S/ALlEPmvJfgN3cYwuQJ+pJU/4LoOMOUH6/qEdN+S/Am9xBBegp6llT
/gtkfWvKfwE+EPWwKf8F6MsdVoBXRD1tyn8BXueOKsAiUY+b8l+ASO74AvQX
9bwp/wUYxJ1agCBRD5zyX4DZ3DkF6CfqiVP+ld/HbSjAHlGPnPLfyPYCbBD1
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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{Automatic, 369.41261409643766`},
  Method->{},
  PlotRange->{{0., 2048.}, {-1.9990086056301815`, 1.999008605630182}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.621317660292835*^9, {3.6213348671145077`*^9, 3.621334896325472*^9}, 
   3.621334927759844*^9, {3.621334973342808*^9, 3.621334981195635*^9}, 
   3.6213352226490173`*^9, {3.621335273737165*^9, 3.621335299992461*^9}, {
   3.621335344886654*^9, 3.621335372032843*^9}, {3.621335535429851*^9, 
   3.621335544489772*^9}, 3.6213356046001387`*^9, {3.621335647261107*^9, 
   3.62133567852267*^9}, 3.621504983108192*^9, {3.6215052089329567`*^9, 
   3.621505402093205*^9}, 3.6215059587452097`*^9, {3.6215059922073097`*^9, 
   3.621506182423511*^9}, {3.621525189630576*^9, 3.621525207343343*^9}, {
   3.6215252893560247`*^9, 3.621525302724947*^9}, {3.621525355573455*^9, 
   3.6215253734118223`*^9}, 3.621525426105056*^9, {3.621574165765481*^9, 
   3.621574184985128*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
hsrKjPD3ydZklgBPvVZVpPbK2b99g5VDh91rTA5zMoYwp6cL6QfOq45tvtHu
sVrd4hsINhUkD7Y1ljPT92vuUx68KM+Xjl1ann2GANrsG6iSb8Uo1bl9TE5G
E/phRJT6bDCyIQmwjb7BqiFXM6tNWmSxcsVjKr1BEfr6w60NZgLoG99ANfDs
BmtPz0ndqW/7iPHoypOO25mdFulV6Rt8g9WxWquyWIMOgMkWZCbGBXe2dXZ6
ga33DQb7V5KbrNZuRXrsV9whDFP56MQ2IfvU+sCAYHdNsqJAl4iObbidfgYQ
reivddosBNCXvoGa4Nk/ejqbunNCPNYgnZkhz0+vMud6Fe8L32CwjSiJTTod
5iI7KGOdhGkveHeFNb6BWgFoYl11aasm5CWyK1TK988dZmkj1/CrfQPB3ugg
SW+v46z6+BZGr3PnAL1G6WMyxfkoz03fVb6xOuDZ/NLcdLtOOomcWU3aqLnX
2Ow2r6pa6RsMOo34ju6ulvLU8AVkvaPt7WfqK/O8wD71DdYFz1BJ9IpDn6FS
Eh3+oZ/0yVFeYCsIMIzVDRBTaquK21WymWR+iuRRi261dbd7QSzznR/wqBAP
dtqtKRmHNyI3BE4fM0vJt8wF3lrPjzcOVKpkNbM86C2k3Z1qCPJVqNJGvIGP
kXmgpb6B7PBsSGtrKzofJtuvQRH2xr09HbVeuVriGwwOMfDmVZHuAFoacJYR
07EmLCrJ8V6bfeQbDE5YJMsK9Em2LPpJsrufVp3YLvE0sRb7BnLBs7s6OtrK
M8I/IFsRbZaObW80e+VqkW8wLOE8iQrVXdyHfSzYrDkN0sd/Tk08GjjQAHjx
crUpsyfTU4+W6KPnIEvaK2vzBRBZz4zberrbS1MjPiQRkb/AyKbmJi/EeQKI
cDgnRl0KeR2Q6z20+F5iNl7wQvxAABH8GyTTK0vzkCXCtSwzIpA+8toIe18A
DQ4lxbc7LE0mZeQHZP5qlGFzRjS3eJd4rgAiuHZRwfrEEHRK4s4fMxmN3Z95
YV/gQHAeS71pLsy059AT+C4sG3ZEeXoPD/SuABB4jYjv7upotmTJppCtWq6M
mHubo7vZq4xvCyBeCy/+0mttMV468AVp0KE951nlxVleiG8JIF4PrbrYlJ2E
joa4wjImz96s5P1X4dNTDu1NATRw6pIMa25pdS9MAY0ebkw/sPIGh8dc/oYA
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
cT8a9k/8ptdTuKxRJLrq/wBjm3pT\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "dimensions", " ", "fractales", " ", "en", " ", "utilisant", " ", "les", 
    " ", "bandes", " ", "effectives", " ", "comme", " ", "largeur", " ", "de",
     " ", "bo\[IHat]te"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "=", "1."}], ",", 
      RowBox[{"r", "=", ".1"}], ",", "vpp", ",", "vpa", ",", "vppN", ",", 
      "vpaN", ",", "bandlist", ",", "bandlistN", ",", 
      RowBox[{"i", "=", "11"}], ",", "gam", ",", "gamN", ",", "\[Tau]0"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
       "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vpp", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"hp", "[", "i", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vpa", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"ha", "[", "i", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
        "taille", " ", "i"}], "+", 
       RowBox[{"1", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vppN", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"hp", "[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vpaN", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"ha", "[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Print", "[", "\"\<les spectres sont calcul\[EAcute]s !\>\"", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
       SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
       " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
       " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
       "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"bandlist", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bandlistN", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"vpaN", ",", "vppN"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"limite", " ", "singuli\[EGrave]re", " ", "quand", " ", "r"}],
         "\[Rule]", "1"}], ",", " ", 
       RowBox[{"r", "<", 
        RowBox[{"1", " ", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"bandlist", ",", 
          RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "]"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "calcul", " ", "des", " ", "fonctions", " ", "de", " ", "partition", 
       " ", 
       SubscriptBox["\[CapitalGamma]", "i"], " ", "et", " ", 
       SubscriptBox["\[CapitalGamma]", 
        RowBox[{"i", "+", "1"}]]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"gam", "=", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "i"}], " ", "q"}]], 
       RowBox[{"Plus", "@@", 
        SuperscriptBox[
         RowBox[{"(", "bandlist", ")"}], 
         RowBox[{"-", "\[Tau]"}]]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gamN", "=", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"i", "+", "1"}], ")"}]}], " ", "q"}]], 
       RowBox[{"Plus", "@@", 
        SuperscriptBox[
         RowBox[{"(", "bandlistN", ")"}], 
         RowBox[{"-", "\[Tau]"}]]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      SubscriptBox["D", "0"], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Tau]0", "=", 
      RowBox[{"\[Tau]", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["gamN", "gam"], "/.", 
            RowBox[{"q", "\[Rule]", "0"}]}], ")"}], "-", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\[Tau]0", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"v\[EAcute]rif", " ", "que", " ", "FindRoot", " ", "ne", " ", 
       RowBox[{"s", "'"}], "est", " ", "pas", " ", "plant\[EAcute]"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["gamN", "gam"], "/.", 
           RowBox[{"q", "\[Rule]", "0"}]}], ")"}], "-", "1"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", 
          RowBox[{"\[Tau]0", "-", "0.2"}], ",", 
          RowBox[{"\[Tau]0", "+", "0.2"}]}], "}"}], ",", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{"\[Tau]0", ",", "0"}], "}"}], "]"}]}], "}"}]}]}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vpp", ",", "vpa"}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6211691819490356`*^9, 3.621169295515432*^9}, {
   3.621169329468741*^9, 3.621169363085153*^9}, {3.621169397340905*^9, 
   3.621169439694463*^9}, {3.621169484754628*^9, 3.621169534142599*^9}, {
   3.6211695650579653`*^9, 3.621169565167144*^9}, {3.621169603888824*^9, 
   3.621169719442539*^9}, {3.621169816596427*^9, 3.621169850688087*^9}, {
   3.621169918276724*^9, 3.621169920596176*^9}, {3.6211701269976807`*^9, 
   3.62117013270679*^9}, {3.621239395761104*^9, 3.621239437159552*^9}, {
   3.621239477620801*^9, 3.6212394863384867`*^9}, {3.62123954621198*^9, 
   3.621239555475575*^9}, {3.621239596547036*^9, 3.621239599810574*^9}, {
   3.621243910992449*^9, 3.621243924607359*^9}, {3.6212523773171473`*^9, 
   3.6212524542169657`*^9}, {3.621252615229805*^9, 3.621252621595336*^9}, {
   3.621252684554472*^9, 3.6212527627959633`*^9}, {3.621254763938423*^9, 
   3.621254832689102*^9}, {3.621254898555005*^9, 3.6212549880271807`*^9}, {
   3.6212550569724073`*^9, 3.621255130353402*^9}, {3.621255165503927*^9, 
   3.621255165669924*^9}, {3.621255236170961*^9, 3.621255317108671*^9}, {
   3.6212553506865053`*^9, 3.621255433971394*^9}, {3.621255554506341*^9, 
   3.621255719417079*^9}, {3.6212557528109922`*^9, 3.621255804806408*^9}, {
   3.621256200293274*^9, 3.6212562057751617`*^9}, {3.621256303129624*^9, 
   3.6212563659405737`*^9}, {3.6212564185715218`*^9, 
   3.6212566257600307`*^9}, {3.621256663489665*^9, 3.621256693739643*^9}, {
   3.621256815349419*^9, 3.621256826647785*^9}, {3.621274846476047*^9, 
   3.621275145065218*^9}, {3.621275179862084*^9, 3.621275239908601*^9}, {
   3.6212752837980957`*^9, 3.6212753122612953`*^9}, {3.62127536277396*^9, 
   3.6212753860347633`*^9}, {3.621275442043687*^9, 3.6212755539844847`*^9}, 
   3.621315525059228*^9, {3.621315559557263*^9, 3.62131556011205*^9}, {
   3.621315675637495*^9, 3.621315761430065*^9}, 3.621315880152614*^9, {
   3.621316026405932*^9, 3.621316026559977*^9}, {3.621316058136022*^9, 
   3.621316113404099*^9}, {3.621316542094945*^9, 3.6213166074047194`*^9}, {
   3.621316650464574*^9, 3.621316651774397*^9}, {3.621316694033931*^9, 
   3.621316695104101*^9}, {3.6213167721142597`*^9, 3.621316907228303*^9}, {
   3.621317006334161*^9, 3.621317031454398*^9}, {3.62131711995912*^9, 
   3.621317148921311*^9}, {3.6213171895292883`*^9, 3.6213172019910994`*^9}, {
   3.6213173273216333`*^9, 3.621317356008131*^9}, {3.62131739719526*^9, 
   3.6213174833129873`*^9}, {3.621317541148703*^9, 3.6213175881099997`*^9}, {
   3.621317618544965*^9, 3.621317711316963*^9}, {3.6213240564859943`*^9, 
   3.621324056627421*^9}, {3.621324812826556*^9, 3.621324812988461*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"les spectres sont calcul\[EAcute]s !\"\>"], "Print",
 CellChangeTimes->{
  3.6212549892954884`*^9, 3.621255059808708*^9, {3.621255097832383*^9, 
   3.621255130939995*^9}, 3.621255168108829*^9, {3.62125528234413*^9, 
   3.621255317646076*^9}, {3.62125535144479*^9, 3.6212554345581427`*^9}, {
   3.6212556719791727`*^9, 3.621255691298998*^9}, 3.6212557214636993`*^9, {
   3.621256333084399*^9, 3.621256366199257*^9}, {3.621256460561511*^9, 
   3.6212564896898746`*^9}, 3.6212565418119087`*^9, {3.621256600811583*^9, 
   3.6212566276509123`*^9}, {3.6212566787505407`*^9, 3.621256693969184*^9}, 
   3.621274834634009*^9, 3.621274901665248*^9, {3.6212749631499863`*^9, 
   3.621275147676758*^9}, {3.6212752346284447`*^9, 3.621275242703546*^9}, 
   3.621275315041376*^9, {3.621275366858448*^9, 3.6212753887395*^9}, {
   3.6212754422999983`*^9, 3.621275578025463*^9}, 3.621315525983543*^9, 
   3.621315571175599*^9, {3.621315706130748*^9, 3.621315762196233*^9}, 
   3.621315881282824*^9, 3.6213160276133738`*^9, {3.621316629234598*^9, 
   3.621316658589183*^9}, 3.621316702091343*^9, 3.6213169169167957`*^9, 
   3.621317156809812*^9, {3.6213173155327682`*^9, 3.621317362911839*^9}, 
   3.621317490037018*^9, 3.621318426708541*^9, 3.6213247342241096`*^9, 
   3.621324893679543*^9}],

Cell[BoxData[
 RowBox[{"-", "0.23084480066884458`"}]], "Print",
 CellChangeTimes->{
  3.6212549892954884`*^9, 3.621255059808708*^9, {3.621255097832383*^9, 
   3.621255130939995*^9}, 3.621255168108829*^9, {3.62125528234413*^9, 
   3.621255317646076*^9}, {3.62125535144479*^9, 3.6212554345581427`*^9}, {
   3.6212556719791727`*^9, 3.621255691298998*^9}, 3.6212557214636993`*^9, {
   3.621256333084399*^9, 3.621256366199257*^9}, {3.621256460561511*^9, 
   3.6212564896898746`*^9}, 3.6212565418119087`*^9, {3.621256600811583*^9, 
   3.6212566276509123`*^9}, {3.6212566787505407`*^9, 3.621256693969184*^9}, 
   3.621274834634009*^9, 3.621274901665248*^9, {3.6212749631499863`*^9, 
   3.621275147676758*^9}, {3.6212752346284447`*^9, 3.621275242703546*^9}, 
   3.621275315041376*^9, {3.621275366858448*^9, 3.6212753887395*^9}, {
   3.6212754422999983`*^9, 3.621275578025463*^9}, 3.621315525983543*^9, 
   3.621315571175599*^9, {3.621315706130748*^9, 3.621315762196233*^9}, 
   3.621315881282824*^9, 3.6213160276133738`*^9, {3.621316629234598*^9, 
   3.621316658589183*^9}, 3.621316702091343*^9, 3.6213169169167957`*^9, 
   3.621317156809812*^9, {3.6213173155327682`*^9, 3.621317362911839*^9}, 
   3.621317490037018*^9, 3.621318426708541*^9, 3.6213247342241096`*^9, 
   3.621324893924522*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVxX8403kcAPDVdZ7IpVu5R1H00C/ErLspbj4ocVIxZXV3nkd+hJ5+OFwP
KVTEiCtFOWQzJ6W0WMyot4b5kf1m+853i1HYt6i7Q5J7urs/Xs9rY+QZRsxS
Eom0/z//r74bbjpXhEPJkmSDdFQHQW/70v6+hsPeb/zyM4Z1IKLsnH5fiINZ
i+NrV50OHraQVW/ycCCdt7z326AOsl50lxsu4bBQUpywr0cHbu/cKJJEHLJE
VR8aH+rgKs2EWc3AQZ4wwgtI0YFPV301g4zDGp7ppgxzHWzz30PXXxmCcvr9
zxEbcBBWzPP/WDYEQRf2ss55DIHHAcxyMUsL3rfHe/mHteAetZiUuYBBkFx0
7AQTA30QeuybikGVfkXOjmgNkMrEb6hTGlgqeVpmGqaG1btTLR5HacBhewjv
g98gSCGQfGpMDfOyfOqUzwCYcCLIzCNqsBqvXzZjp4KJsOI/09WDMGo+7ZFk
roTm47Mt3zIHYa/tBHo7J4cv8dIMK8kAHLFXzIizZPDJPtzBI2gAkpnbdz6l
SeC0IlrMalfBybLLYve7faDAboXEuqsgt8ZQuml1D+j4xtZLzUoIXgi+ebK8
C2JmM+z7nZUwYnZWFT8sghKz706E1ikgpfVspMq7HfZkudQvt1VA7jrZWhJP
CKPMUHxfsRx497xKBSo+bCXdmuhfIwdvIq1xVVI9YGu9Rj+QZZDZUKDRfObA
Y11+o2KlFDKnuV6csFyID6Uwuy0kQPKysWNk5iDrG+GzVp9egPebBW2RExdt
ON8TMj7fBxHHanKyRx8hG5e2WgtDL3i/fC2kLGlGH2+YKA9Je4DC8iuVrX+G
NnMLWyyl3fA+jnp0LFmEDqRVllEFYmCvn7nQ6ilG3YtTni/4XSCorXXpwnqR
LfVGfUZTJ1jN+hVTUyUokfLc+lpVB2AH4rlN7XJkiTn723BEcFL1TOhcr0SN
ARtPLct7Dp0BNt4JygFUFRkaEpfdDpP5Al/3YTUajhBYyFcAdKZO0E2mMXSm
EP8lx9AG0XeuDNx0xxFn5blgmk4I5c3WsgexetRj5+hQUSeAn7X0j/LBYfTw
95xyz+wmOJSZonN1MKAdsRHXFZf5wG+e3MU9OIoedQWm2TIboIjvLospH0OS
szxD9EEe0EZG4pVDr1CwbY62g/sA0rccvZiwbhz9lSzXbmfUgkiz+LXowgTS
nFmluhJYDVZ0swaWYhIV3pvyz91ZDWRWBY2lmUR7xvraWJurIUgYE87ST6KG
sOyaq0uroSlaez3fOIkK6AupRUIuqONcbt9aYkS7V7yyu+PIBX5l6TapmxE9
qmk+/cSsCoi5LdiTIiM6PnJzrGmeA8RyfmfvbSOyWZd4RDDOARvPisMv7xhR
XoGzb6uIA+8v9keb1hlRTDLH8vk5DpgVZnvEdhiRtW9+Wz/BhpSDlUqfGSNS
psW5STE2UE9v/ipiwYhyn/jVyMRsuJS3cSqdRKC5raRryio2EI0tFc/MCaSw
+DUK+5ENVh9/6vDbRKDcHxiYNoAN5ltOOcU7Ecjrsut+nMaG+4npuwrcCPRg
zkh7SWaDY8mEv4ZOoChKd90wiQ2Mq5EB/+wm0I6BAB+RvhKadPbv7AMJxPb/
wqmrpRJWWdO/3xdMoJWtT9f0FFcCWQ+uSWEE+hdu4KwN
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.4, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[Medium], 
    PointBox[{-0.23084480066884458`, 0}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-0.43084480066884456`, -0.03084480066884457}, \
{-0.4513432695094023, 0.8230529720885065}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.6212549892954884`*^9, 3.621255059808708*^9, {3.621255097832383*^9, 
   3.621255130939995*^9}, 3.621255168108829*^9, {3.62125528234413*^9, 
   3.621255317646076*^9}, {3.62125535144479*^9, 3.6212554345581427`*^9}, {
   3.6212556719791727`*^9, 3.621255691298998*^9}, 3.6212557214636993`*^9, {
   3.621256333084399*^9, 3.621256366199257*^9}, {3.621256460561511*^9, 
   3.6212564896898746`*^9}, 3.6212565418119087`*^9, {3.621256600811583*^9, 
   3.6212566276509123`*^9}, {3.6212566787505407`*^9, 3.621256693969184*^9}, 
   3.621274834634009*^9, 3.621274901665248*^9, {3.6212749631499863`*^9, 
   3.621275147676758*^9}, {3.6212752346284447`*^9, 3.621275242703546*^9}, 
   3.621275315041376*^9, {3.621275366858448*^9, 3.6212753887395*^9}, {
   3.6212754422999983`*^9, 3.621275578025463*^9}, 3.621315525983543*^9, 
   3.621315571175599*^9, {3.621315706130748*^9, 3.621315762196233*^9}, 
   3.621315881282824*^9, 3.6213160276133738`*^9, {3.621316629234598*^9, 
   3.621316658589183*^9}, 3.621316702091343*^9, 3.6213169169167957`*^9, 
   3.621317156809812*^9, {3.6213173155327682`*^9, 3.621317362911839*^9}, 
   3.621317490037018*^9, 3.621318426708541*^9, 3.6213247342241096`*^9, 
   3.621324894199629*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "d\[EAcute]pendance", " ", "en", " ", "la", " ", "taille", " ", "du", " ", 
    "syst\[EGrave]me"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "d0", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d0", "[", 
     RowBox[{"i_", ",", "vv_", ",", "rr_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "=", "vv"}], ",", 
        RowBox[{"r", "=", "rr"}], ",", "vpp", ",", "vpa", ",", "vppN", ",", 
        "vpaN", ",", "bandlist", ",", "bandlistN", ",", "gam", ",", "gamN", 
        ",", "\[Tau]0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
         "taille", " ", "i", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vpp", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"hp", "[", "i", "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vpa", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"ha", "[", "i", "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "spectres", " ", "des", " ", "syst\[EGrave]mes", " ", "de", " ", 
          "taille", " ", "i"}], "+", 
         RowBox[{"1", " ", "p", " ", "et", " ", "anti"}], "-", "p"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"vppN", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"hp", "[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vpaN", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"ha", "[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), \
n = \>\"", ",", " ", "i"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"la", " ", "taille", " ", "de", " ", "la", " ", 
         SuperscriptBox["i", "i\[EGrave]me"], " ", "bo\[IHat]te", " ", "est", 
         " ", "la", " ", "distance", " ", "entre", " ", "le", " ", "niveau", 
         " ", "i", " ", "p\[EAcute]riodique", " ", "et", " ", "le", " ", 
         "niveau", " ", "i", " ", "antip\[EAcute]riodique"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"bandlist", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpa", ",", "vpp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bandlistN", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"vpaN", ",", "vppN"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "limite", " ", "singuli\[EGrave]re", " ", "quand", " ", "r"}], 
          "\[Rule]", "1"}], ",", " ", 
         RowBox[{"r", "<", 
          RowBox[{"1", " ", "!!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"ListPlot", "[", 
           RowBox[{"bandlist", ",", 
            RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "]"}], ";"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "calcul", " ", "des", " ", "fonctions", " ", "de", " ", "partition", 
         " ", 
         SubscriptBox["\[CapitalGamma]", "i"], " ", "et", " ", 
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{"i", "+", "1"}]]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"gam", "=", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "q"}]], 
         RowBox[{"Plus", "@@", 
          SuperscriptBox[
           RowBox[{"(", "bandlist", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"gamN", "=", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"i", "+", "1"}], ")"}]}], " ", "q"}]], 
         RowBox[{"Plus", "@@", 
          SuperscriptBox[
           RowBox[{"(", "bandlistN", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        SubscriptBox["D", "0"], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Tau]0", "=", 
        RowBox[{"\[Tau]", "/.", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["gamN", "gam"], "/.", 
              RowBox[{"q", "\[Rule]", "0"}]}], ")"}], "-", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Tau]", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[Tau]0"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6211691819490356`*^9, 3.621169295515432*^9}, {
   3.621169329468741*^9, 3.621169363085153*^9}, {3.621169397340905*^9, 
   3.621169439694463*^9}, {3.621169484754628*^9, 3.621169534142599*^9}, {
   3.6211695650579653`*^9, 3.621169565167144*^9}, {3.621169603888824*^9, 
   3.621169719442539*^9}, {3.621169816596427*^9, 3.621169850688087*^9}, {
   3.621169918276724*^9, 3.621169920596176*^9}, {3.6211701269976807`*^9, 
   3.62117013270679*^9}, {3.621239395761104*^9, 3.621239437159552*^9}, {
   3.621239477620801*^9, 3.6212394863384867`*^9}, {3.62123954621198*^9, 
   3.621239555475575*^9}, {3.621239596547036*^9, 3.621239599810574*^9}, {
   3.621243910992449*^9, 3.621243924607359*^9}, {3.6212523773171473`*^9, 
   3.6212524542169657`*^9}, {3.621252615229805*^9, 3.621252621595336*^9}, {
   3.621252684554472*^9, 3.6212527627959633`*^9}, {3.621254763938423*^9, 
   3.621254832689102*^9}, {3.621254898555005*^9, 3.6212549880271807`*^9}, {
   3.6212550569724073`*^9, 3.621255130353402*^9}, {3.621255165503927*^9, 
   3.621255165669924*^9}, {3.621255236170961*^9, 3.621255317108671*^9}, {
   3.6212553506865053`*^9, 3.621255433971394*^9}, {3.621255554506341*^9, 
   3.621255719417079*^9}, {3.6212557528109922`*^9, 3.621255804806408*^9}, {
   3.621256200293274*^9, 3.6212562057751617`*^9}, {3.621256303129624*^9, 
   3.6212563659405737`*^9}, {3.6212564185715218`*^9, 
   3.6212566257600307`*^9}, {3.621256663489665*^9, 3.621256693739643*^9}, {
   3.621256815349419*^9, 3.621256826647785*^9}, {3.621274846476047*^9, 
   3.621275145065218*^9}, {3.621275179862084*^9, 3.621275239908601*^9}, {
   3.6212752837980957`*^9, 3.6212753122612953`*^9}, {3.62127536277396*^9, 
   3.6212753860347633`*^9}, {3.621275442043687*^9, 3.6212755539844847`*^9}, 
   3.621315525059228*^9, {3.621315559557263*^9, 3.62131556011205*^9}, {
   3.621315675637495*^9, 3.621315761430065*^9}, 3.621315880152614*^9, {
   3.621316026405932*^9, 3.621316026559977*^9}, {3.621316058136022*^9, 
   3.621316113404099*^9}, {3.621316542094945*^9, 3.6213166074047194`*^9}, {
   3.621316650464574*^9, 3.621316651774397*^9}, {3.621316694033931*^9, 
   3.621316695104101*^9}, {3.6213167721142597`*^9, 3.621316907228303*^9}, {
   3.621317006334161*^9, 3.621317031454398*^9}, {3.62131711995912*^9, 
   3.621317148921311*^9}, {3.6213171895292883`*^9, 3.6213172019910994`*^9}, {
   3.6213173273216333`*^9, 3.621317356008131*^9}, {3.62131739719526*^9, 
   3.6213174833129873`*^9}, {3.621317541148703*^9, 3.6213175881099997`*^9}, {
   3.621317618544965*^9, 3.621317711316963*^9}, {3.6213240564859943`*^9, 
   3.621324056627421*^9}, {3.621324812826556*^9, 3.621324812988461*^9}, {
   3.6213249815414677`*^9, 3.62132506531719*^9}, {3.621325152055851*^9, 
   3.6213251675578127`*^9}, {3.6213253984101343`*^9, 3.621325408296276*^9}, {
   3.621325461880583*^9, 3.621325474762186*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d0", "[", 
  RowBox[{"5", ",", "1.", ",", ".1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6213254798651*^9, 3.621325494167347*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325486750763*^9, 3.621325494479841*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.23130457165407942`"}]], "Output",
 CellChangeTimes->{{3.621325483038108*^9, 3.621325494544586*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d0l", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"d0", "[", 
     RowBox[{"i", ",", "1.", ",", ".1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2", ",", "11"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.621325090776729*^9, 3.621325123335094*^9}, {
  3.621325172310383*^9, 3.621325200772667*^9}, {3.621325418760023*^9, 
  3.6213254247115602`*^9}, {3.621326295728341*^9, 3.621326295870229*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962966537`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.62132629630063*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.621326296302266*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.62132629630483*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262964393682`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.621326296626823*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262975293217`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 10],
  
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.621326305892366*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 11],
  
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213263852746077`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.23034037569709523`"}], ",", 
   RowBox[{"-", "0.23125952434644143`"}], ",", 
   RowBox[{"-", "0.23130414882612435`"}], ",", 
   RowBox[{"-", "0.23130457165407942`"}], ",", 
   RowBox[{"-", "0.23130457322719322`"}], ",", 
   RowBox[{"-", "0.2313045715270012`"}], ",", 
   RowBox[{"-", "0.23130454138042417`"}], ",", 
   RowBox[{"-", "0.2313038128557063`"}], ",", 
   RowBox[{"-", "0.23129046640304524`"}], ",", 
   RowBox[{"-", "0.23084480066884458`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.621325119728353*^9, 3.621325133623863*^9}, {
   3.621325173089992*^9, 3.621325192804158*^9}, 3.621325293447916*^9, 
   3.621325432135935*^9, 3.6213262471384974`*^9, 3.621326385526622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "d0l", "]"}]], "Input",
 CellChangeTimes->{{3.6213253106760178`*^9, 3.6213253198759737`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1., -0.23034037569709523`}, {2., -0.23125952434644143`}, {
     3., -0.23130414882612435`}, {4., -0.23130457165407942`}, {
     5., -0.23130457322719322`}, {6., -0.2313045715270012}, {
     7., -0.23130454138042417`}, {8., -0.2313038128557063}, {
     9., -0.23129046640304524`}, {10., -0.23084480066884458`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.23029216582059034`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 10.}, {-0.23130457322719322`, -0.23034037569709523`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.621325320569899*^9, 3.621326282487584*^9, 
  3.621326391406275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d0l1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"d0", "[", 
     RowBox[{"i", ",", "1.", ",", "1."}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2", ",", "11"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.621325090776729*^9, 3.621325123335094*^9}, {
  3.621325172310383*^9, 3.621325200772667*^9}, {3.621325418760023*^9, 
  3.6213254247115602`*^9}, {3.621326295728341*^9, 3.621326295870229*^9}, {
  3.6213264915682077`*^9, 3.621326495327032*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9, 3.621326496598908*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9, 3.621326496635386*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9, 3.6213264966392193`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9, 3.621326496642198*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9, 3.621326496645587*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "7"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 7],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9, 3.6213264967471943`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9, 3.6213264970565233`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "9"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 9],
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9, 3.621326498021235*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 10],
  
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9, 3.621326506607596*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Syst\[EGrave]me de taille \\!\\(\\*SuperscriptBox[\\(2\\), \
\\(n\\)]\\), n = \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm[
  "Syst\[EGrave]me de taille \!\(\*SuperscriptBox[\(2\), \(n\)]\), n = ", 11],
  
  Editable->False]], "Print",
 CellChangeTimes->{{3.621325110886916*^9, 3.621325123717622*^9}, {
   3.621325172664281*^9, 3.6213252017194233`*^9}, 3.6213254260388727`*^9, 
   3.62132549732687*^9, 3.6213262962495317`*^9, 3.621326585998116*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.9999999999999954`"}], ",", 
   RowBox[{"-", "0.9999999999999833`"}], ",", 
   RowBox[{"-", "0.9999999999999811`"}], ",", 
   RowBox[{"-", "0.9999999999999446`"}], ",", 
   RowBox[{"-", "0.9999999999999324`"}], ",", 
   RowBox[{"-", "0.9999999999998264`"}], ",", 
   RowBox[{"-", "0.9999999999996803`"}], ",", 
   RowBox[{"-", "0.9999999999993857`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.621325119728353*^9, 3.621325133623863*^9}, {
   3.621325173089992*^9, 3.621325192804158*^9}, 3.621325293447916*^9, 
   3.621325432135935*^9, 3.6213262471384974`*^9, 3.621326385526622*^9, 
   3.6213265864947042`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "dimension", " ", "de", " ", "Hausdorff", " ", "par", " ", "box"}], "-", 
    RowBox[{"counting", " ", "direct"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "=", "1."}], ",", 
      RowBox[{"r", "=", ".1"}], ",", 
      RowBox[{"i", "=", "10"}], ",", "spec", ",", "vp", ",", "b", ",", 
      RowBox[{"\[Delta]", "=", "8"}], ",", 
      RowBox[{"n", "=", "6"}], ",", "weight", ",", 
      RowBox[{"weights", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "spectre", " ", "du", " ", "syst\[EGrave]me", " ", "avec", " ", 
      "conditions", " ", "aux", " ", "limites", " ", "nulles"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"spec", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"h", "[", "i", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"normalisation", " ", "du", " ", 
       RowBox[{"spectre", " ", ":", " ", 
        RowBox[{
        "intervalle", " ", "de", " ", "longueur", " ", "1", " ", 
         "centr\[EAcute]", " ", "sur", " ", "0"}]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"spec", "=", 
      FractionBox[
       RowBox[{"spec", "-", 
        RowBox[{"spec", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"spec", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"spec", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"ListPlot", "[", "spec", "]"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      SuperscriptBox["\[Delta]", 
       RowBox[{"-", "n"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vp", "=", 
      RowBox[{"spec", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"b", "\[LessEqual]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"weight", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"vp", "\[LessEqual]", "b"}], ",", 
          RowBox[{
           RowBox[{"weight", "++"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "spec", "]"}], ">", "1"}], ",", 
             RowBox[{"spec", "=", 
              RowBox[{"Rest", "[", "spec", "]"}]}], ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
           RowBox[{"vp", "=", 
            RowBox[{"spec", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"weight", ">", "0"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"weights", ",", "weight"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"b", "+=", 
         SuperscriptBox["\[Delta]", 
          RowBox[{"-", "n"}]]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Length", "[", "weights", "]"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"n", " ", 
          RowBox[{"Log", "[", "\[Delta]", "]"}]}], ")"}]}], "//", "N"}], 
      "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6213177486552477`*^9, 3.6213177554913483`*^9}, {
   3.621318249719843*^9, 3.621318273656596*^9}, {3.6213183617222853`*^9, 
   3.621318395258926*^9}, {3.621318466459366*^9, 3.621318510859006*^9}, {
   3.621318601227849*^9, 3.621318739357875*^9}, {3.621318912350746*^9, 
   3.621318919869945*^9}, {3.621318967247773*^9, 3.6213190208664083`*^9}, {
   3.621319073361862*^9, 3.6213190935533533`*^9}, 3.621329194193602*^9, {
   3.62132944611479*^9, 3.6213295453821697`*^9}, {3.621330471835965*^9, 
   3.6213304720123243`*^9}, {3.62133051358145*^9, 3.6213305172603827`*^9}, {
   3.621330672588552*^9, 3.621330720317449*^9}, {3.621330819006278*^9, 
   3.621330832750617*^9}, {3.621506234348976*^9, 3.621506234634797*^9}, {
   3.621507186646544*^9, 3.621507188170453*^9}, {3.621508067093939*^9, 
   3.621508171580122*^9}, {3.6215082367083273`*^9, 3.621508244331706*^9}, {
   3.621508443747266*^9, 3.621508445508531*^9}, {3.6215084891641703`*^9, 
   3.621508512488591*^9}, {3.621508547837652*^9, 3.6215087253865*^9}, {
   3.621508774781681*^9, 3.6215087820781527`*^9}, {3.621508829362413*^9, 
   3.6215088878892813`*^9}, {3.6215089202423277`*^9, 3.621509003049241*^9}, {
   3.621509086484482*^9, 3.6215091611145763`*^9}, {3.621509283212495*^9, 
   3.62150929844816*^9}, {3.62150936925937*^9, 3.621509414784573*^9}, {
   3.621509445695819*^9, 3.621509445889983*^9}, {3.621509552191605*^9, 
   3.6215095765600758`*^9}, {3.621509612919066*^9, 3.6215096555292788`*^9}, {
   3.621509690739802*^9, 3.621509696794156*^9}, {3.621509734945093*^9, 
   3.621509736621595*^9}, {3.621509796486487*^9, 3.6215098548338013`*^9}, {
   3.621510191570797*^9, 3.62151019178543*^9}, {3.621510242360696*^9, 
   3.6215102528151627`*^9}, {3.621510819414681*^9, 3.621510912066676*^9}, {
   3.621510969608478*^9, 3.6215110081104097`*^9}, {3.621511183457767*^9, 
   3.6215113399260807`*^9}, {3.621511377640308*^9, 3.621511378264203*^9}, {
   3.621511513943287*^9, 3.621511564479494*^9}, 3.6215121377763023`*^9, {
   3.6215122637913513`*^9, 3.621512389533072*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Eigenvalues", "::", "arh"}], "MessageName"], ":", 
  " ", "\<\"Because finding \[NoBreak]\\!\\(1024\\)\[NoBreak] out of the \
\[NoBreak]\\!\\(1024\\)\[NoBreak] eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\[NoBreak]\\!\\(Eigenvalues\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Eigenvalues\\\", ButtonNote -> \
\\\"Eigenvalues::arh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.62151123829408*^9, 3.6215113403459044`*^9}, 
   3.621511378561035*^9, {3.621511518838532*^9, 3.621511564857955*^9}, 
   3.621512138449851*^9, {3.621512283636231*^9, 3.6215123369387693`*^9}, 
   3.6215128254850683`*^9}],

Cell[BoxData["0.3135475660985958`"], "Print",
 CellChangeTimes->{{3.6215112186623*^9, 3.621511341363811*^9}, 
   3.621511387772375*^9, {3.6215115273745117`*^9, 3.621511557453364*^9}, 
   3.621511623452365*^9, 3.621512139408307*^9, {3.621512284696862*^9, 
   3.62151233735174*^9}, 3.62151282653298*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dimensions", " ", "fractales", " ", "par", " ", "box"}], "-", 
    RowBox[{"counting", " ", "direct"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "dDir", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dDir", "[", 
     RowBox[{
      RowBox[{"q_", "?", "NumberQ"}], ",", "n_", ",", "\[Delta]_", ",", 
      "i_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "=", "1."}], ",", 
        RowBox[{"r", "=", ".1"}], ",", "spec", ",", "vp", ",", "b", ",", 
        "weight", ",", 
        RowBox[{"weights", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "spectre", " ", "du", " ", "syst\[EGrave]me", " ", "avec", " ", 
        "conditions", " ", "aux", " ", "limites", " ", "nulles"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"spec", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"h", "[", "i", "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"normalisation", " ", "du", " ", 
         RowBox[{"spectre", " ", ":", " ", 
          RowBox[{
          "intervalle", " ", "de", " ", "longueur", " ", "1", " ", 
           "centr\[EAcute]", " ", "sur", " ", "0"}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"spec", "=", 
        FractionBox[
         RowBox[{"spec", "-", 
          RowBox[{"spec", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"spec", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"spec", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"ListPlot", "[", "spec", "]"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        SuperscriptBox["\[Delta]", 
         RowBox[{"-", "n"}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vp", "=", 
        RowBox[{"spec", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"b", "\[LessEqual]", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"weight", "=", "0"}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"vp", "\[LessEqual]", "b"}], ",", 
            RowBox[{
             RowBox[{"weight", "++"}], ";", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "spec", "]"}], ">", "1"}], ",", 
               RowBox[{"spec", "=", 
                RowBox[{"Rest", "[", "spec", "]"}]}], ",", 
               RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
             RowBox[{"vp", "=", 
              RowBox[{"spec", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"weight", ">", "0"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"weights", ",", "weight"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"b", "+=", 
           SuperscriptBox["\[Delta]", 
            RowBox[{"-", "n"}]]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"q", "\[Equal]", "0"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"Length", "[", "weights", "]"}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"n", " ", 
              RowBox[{"Log", "[", "\[Delta]", "]"}]}], ")"}]}], "//", "N"}], 
          "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"Total", "[", 
             RowBox[{"N", "[", 
              SuperscriptBox["weights", "q"], "]"}], "]"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"n", " ", 
             RowBox[{"Log", "[", "\[Delta]", "]"}]}], ")"}]}], "]"}]}], "]"}],
        ";"}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.621512394069059*^9, 3.621512531366152*^9}, {
  3.621512595144683*^9, 3.621512623370976*^9}, {3.621512672087191*^9, 
  3.621512684042798*^9}, {3.621512776446931*^9, 3.62151277757467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dDir", "[", 
  RowBox[{"0", ",", "6", ",", "8", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.6215125331499243`*^9, 3.6215125464725733`*^9}, {
  3.621512629747403*^9, 3.621512646628559*^9}, {3.6215126865602207`*^9, 
  3.621512701517577*^9}, {3.621512786918058*^9, 3.621512789545619*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Eigenvalues", "::", "arh"}], "MessageName"], ":", 
  " ", "\<\"Because finding \[NoBreak]\\!\\(1024\\)\[NoBreak] out of the \
\[NoBreak]\\!\\(1024\\)\[NoBreak] eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\[NoBreak]\\!\\(Eigenvalues\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Eigenvalues\\\", ButtonNote -> \
\\\"Eigenvalues::arh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.621512790190646*^9, 3.621512845042898*^9}],

Cell[BoxData["0.3135475660985958`"], "Output",
 CellChangeTimes->{
  3.621512592746687*^9, {3.621512638505093*^9, 3.62151264755795*^9}, {
   3.621512687983246*^9, 3.6215127140346317`*^9}, {3.621512781655942*^9, 
   3.62151279113822*^9}, 3.6215128460258827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"nlist", ",", "d0list"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"nn", ",", 
     RowBox[{"{", 
      RowBox[{"nn", ",", "1", ",", "10", ",", ".2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"d0list", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"dDir", "[", 
     RowBox[{"0", ",", "#", ",", "5", ",", "10"}], "]"}], "&"}], "/@", " ", 
   "nlist"}]}]}], "Input",
 CellChangeTimes->{{3.62151285180613*^9, 3.6215128991866293`*^9}, {
  3.6215129637822123`*^9, 3.6215129873561697`*^9}, {3.621513165334367*^9, 
  3.6215131679814377`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Eigenvalues", "::", "arh"}], "MessageName"], ":", 
  " ", "\<\"Because finding \[NoBreak]\\!\\(1024\\)\[NoBreak] out of the \
\[NoBreak]\\!\\(1024\\)\[NoBreak] eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\[NoBreak]\\!\\(Eigenvalues\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Eigenvalues\\\", ButtonNote -> \
\\\"Eigenvalues::arh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.621512900221067*^9, 3.621512988120872*^9, 
  3.621513168590988*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Eigenvalues", "::", "arh"}], "MessageName"], ":", 
  " ", "\<\"Because finding \[NoBreak]\\!\\(1024\\)\[NoBreak] out of the \
\[NoBreak]\\!\\(1024\\)\[NoBreak] eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\[NoBreak]\\!\\(Eigenvalues\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Eigenvalues\\\", ButtonNote -> \
\\\"Eigenvalues::arh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.621512900221067*^9, 3.621512988120872*^9, 
  3.6215131687003927`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Eigenvalues", "::", "arh"}], "MessageName"], ":", 
  " ", "\<\"Because finding \[NoBreak]\\!\\(1024\\)\[NoBreak] out of the \
\[NoBreak]\\!\\(1024\\)\[NoBreak] eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\[NoBreak]\\!\\(Eigenvalues\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Eigenvalues\\\", ButtonNote -> \
\\\"Eigenvalues::arh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.621512900221067*^9, 3.621512988120872*^9, 
  3.6215131688847322`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Eigenvalues :: \
arh\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.621512900221067*^9, 3.621512988120872*^9, 
  3.6215131689148693`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8613531161467861`", ",", "0.5688384954049878`", ",", 
   "0.615252225819133`", ",", "0.625`", ",", "0.4785295089704367`", ",", 
   "0.5566413762796892`", ",", "0.45454545454545453`", ",", 
   "0.4166666666666666`", ",", "0.42818567406129937`", ",", 
   "0.3976009830569209`", ",", "0.43067655807339306`", ",", 
   "0.42662887155374085`", ",", "0.35560645738887275`", ",", 
   "0.3588971317278275`", ",", "0.35926641815051863`", ",", 
   "0.3859898276581929`", ",", "0.3794506288493053`", ",", 
   "0.36220287299251874`", ",", "0.3657839553230403`", ",", 
   "0.341612190249075`", ",", "0.35917778940907275`", ",", 
   "0.3385335437928054`", ",", "0.33879311119169453`", ",", 
   "0.3206944548295292`", ",", "0.34045446012175246`", ",", 
   "0.32910597811769415`", ",", "0.3374546022850806`", ",", 
   "0.3269091459636718`", ",", "0.3262701197525705`", ",", 
   "0.32993962425778367`", ",", "0.3205127778504185`", ",", 
   "0.31615261606292605`", ",", "0.31180703473623295`", ",", 
   "0.314767264230706`", ",", "0.31626680337044405`", ",", 
   "0.3153618865301116`", ",", "0.3036458661469486`", ",", 
   "0.3028522988848537`", ",", "0.3037816759898335`", ",", 
   "0.30389386398026397`", ",", "0.3042276239023908`", ",", 
   "0.2959463295971274`", ",", "0.2944299559386656`", ",", 
   "0.2960862235893268`", ",", "0.29801761841616037`", ",", 
   "0.29481920934663797`"}], "}"}]], "Output",
 CellChangeTimes->{3.621512905801949*^9, 3.621513009480541*^9, 
  3.621513277345358*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"nlist", ",", "d0list"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.621512936051806*^9, 3.621512961290847*^9}, {
  3.621513099171632*^9, 3.62151310257043*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQDQEf7Iv5WTNNJry2NwaDz/aFPOdPvjF+ZJ8GBt/s
y59NzVfd8Nh+1kwQ+GkP0ffE/uwZEPhjf3X3GWurBfeg4gwOihLhkxkvPISq
Z3QQjy256Cp+194EbD6zw8pVIHALqp/FwShh7aOU9NtQ+9gc9CccTfEuugk1
j8MB4r7bUPM4HVZN2qb32Pc21Dxuh2+X9KY5HroGNY/H4X7PzTXaP67Zp4PN
43NoqlaYbPHvGtQ8AYd/0TPW8m25AVUv4FC/LszrtccNqPmCDlWejV9D9K5D
3SPkIPU0QZox8zrUPmGHpRZOCT/vXIWaJ+LwqnPvtSN/YPaLOHyQPDOjY9VV
qHmiDlbZ2r4n112FukfMYYLYAw6ntitQ88Qd/FkYGhlPwcyTcHix37pVSOAq
1DwJB4N9Oga3Z8DMk3Swi1gdJvLmCtQ8KYe8L/WCcx7CzJN2mHDvq+huWZh5
Mg69IVvYPJqvQM2TcXC1X6R3w/oK1DxZhx9bzeqWfrkMNU/OYYdl3gxVVZh5
8g7hYUFy222vQM1TcHjr5zz/sd4VaPgoOFxdrSX0Pu8y1HwFh61Lz81+l3gZ
ql/RYQ7bg00ahZeh9ik6sLBesP9fdBlqnpLDq6tnlMsrYPYrOTzJ2n//xIdL
UPOUHG5wvNv74folaPpUdvimf3yh8OdLUPOUHapW69XuEIKZp+KwR2xGcuC9
S/YAt5s6eQ==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.2944299559386656},
  Method->{},
  PlotRange->{{0, 10.}, {0.2944299559386656, 0.6146233891828525}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.2, 0.2}, {0.006403868664883738, 
   0.006403868664883738}}]], "Output",
 CellChangeTimes->{3.62151310306166*^9, 3.621513310818425*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "dimensions", " ", "fractales", " ", "des", " ", "fonctions", " ", 
    RowBox[{"d", "'"}], "onde"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dWF", "[", 
    RowBox[{
     RowBox[{"q_", "?", "NumberQ"}], ",", "i_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"v", "=", "1."}], ",", 
       RowBox[{"r", "=", ".1"}], ",", "chi", ",", "chiN", ",", "vec", ",", 
       "vecN"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vec", "=", 
       RowBox[{
        RowBox[{"Eigenvectors", "[", 
         RowBox[{"h", "[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vecN", "=", 
       RowBox[{
        RowBox[{"Eigenvectors", "[", 
         RowBox[{"h", "[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"chi", "=", 
       RowBox[{"Plus", "@@", 
        SuperscriptBox[
         RowBox[{"(", "vec", ")"}], 
         RowBox[{"2", "q"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"chiN", "=", 
       RowBox[{"Plus", "@@", 
        SuperscriptBox[
         RowBox[{"(", "vecN", ")"}], 
         RowBox[{"2", "q"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"\[Tau]", 
        RowBox[{"(", "q", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"-", 
        RowBox[{"Log2", "[", 
         FractionBox["chiN", "chi"], "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6215140272742443`*^9, 3.6215140677292147`*^9}, {
  3.621514141480297*^9, 3.62151417608897*^9}, {3.621514302353395*^9, 
  3.621514311976715*^9}, {3.6215143548864937`*^9, 3.621514418021378*^9}, {
  3.62151446557393*^9, 3.621514541701792*^9}, {3.621514585872046*^9, 
  3.621514612657185*^9}, {3.621514674812352*^9, 3.6215146862809267`*^9}, {
  3.621514806614806*^9, 3.621514811943492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dWF", "[", 
  RowBox[{"2", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.621514627276353*^9, 3.621514632693493*^9}, {
  3.621514820626976*^9, 3.6215148576839743`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Eigenvectors", "::", "arh"}], "MessageName"], ":", 
  " ", "\<\"Because finding \[NoBreak]\\!\\(1024\\)\[NoBreak] out of the \
\[NoBreak]\\!\\(1024\\)\[NoBreak] eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\[NoBreak]\\!\\(Eigenvectors\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Eigenvectors\\\", ButtonNote -> \
\\\"Eigenvectors::arh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6215148240826406`*^9, 3.6215148582071667`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Eigenvectors", "::", "arh"}], "MessageName"], ":", 
  " ", "\<\"Because finding \[NoBreak]\\!\\(2048\\)\[NoBreak] out of the \
\[NoBreak]\\!\\(2048\\)\[NoBreak] eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\[NoBreak]\\!\\(Eigenvectors\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Eigenvectors\\\", ButtonNote -> \
\\\"Eigenvectors::arh\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6215148240826406`*^9, 3.621514858979512*^9}}],

Cell[BoxData["0.9967936296961598`"], "Output",
 CellChangeTimes->{
  3.621514633621662*^9, {3.62151467719706*^9, 3.621514687967166*^9}, {
   3.6215148148555393`*^9, 3.6215148637487183`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 994},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.5,
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 120, 1, 100, "Section"],
Cell[CellGroupData[{
Cell[725, 27, 1292, 37, 201, "Input"],
Cell[2020, 66, 881, 27, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2938, 98, 770, 19, 133, "Input"],
Cell[3711, 119, 1493, 51, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5241, 175, 1912, 55, 305, "Input"],
Cell[7156, 232, 272, 4, 45, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7477, 242, 118, 1, 100, "Section"],
Cell[CellGroupData[{
Cell[7620, 247, 96, 1, 55, "Subsubsection"],
Cell[CellGroupData[{
Cell[7741, 252, 694, 19, 104, "Input"],
Cell[8438, 273, 831, 26, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9306, 304, 812, 22, 104, "Input"],
Cell[10121, 328, 703, 20, 112, "Output"]
}, Open  ]],
Cell[10839, 351, 3229, 101, 375, "Text"],
Cell[CellGroupData[{
Cell[14093, 456, 1196, 30, 133, "Input"],
Cell[15292, 488, 1418, 46, 75, "Output"],
Cell[16713, 536, 1136, 37, 75, "Output"]
}, Open  ]],
Cell[17864, 576, 194, 4, 73, "Text"],
Cell[CellGroupData[{
Cell[18083, 584, 1875, 47, 214, "Input"],
Cell[19961, 633, 464, 16, 62, "Print"],
Cell[20428, 651, 859, 22, 84, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21336, 679, 95, 1, 68, "Subsection"],
Cell[CellGroupData[{
Cell[21456, 684, 122, 1, 55, "Subsubsection"],
Cell[21581, 687, 915, 28, 850, "Input"],
Cell[CellGroupData[{
Cell[22521, 719, 4051, 102, 2733, "Input"],
Cell[26575, 823, 2426, 47, 1720, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[29050, 876, 116, 1, 44, "Subsubsection"],
Cell[29169, 879, 1347, 34, 214, "Input"],
Cell[30519, 915, 1887, 47, 221, "Input"],
Cell[CellGroupData[{
Cell[32431, 966, 207, 4, 45, "Input"],
Cell[32641, 972, 3103, 69, 408, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35781, 1046, 1534, 32, 162, "Input"],
Cell[37318, 1080, 7183, 127, 582, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44538, 1212, 342, 9, 75, "Input"],
Cell[44883, 1223, 1122, 28, 104, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46042, 1256, 3114, 66, 243, "Input"],
Cell[49159, 1324, 15170, 337, 402, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64366, 1666, 3006, 70, 360, "Input"],
Cell[67375, 1738, 1113, 26, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68525, 1769, 3057, 72, 360, "Input"],
Cell[71585, 1843, 984, 25, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72606, 1873, 2507, 56, 249, "Input"],
Cell[75116, 1931, 1366, 26, 339, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76519, 1962, 3908, 94, 518, "Input"],
Cell[CellGroupData[{
Cell[80452, 2060, 831, 12, 34, "Print"],
Cell[81286, 2074, 89330, 1477, 566, 44884, 749, "CachedBoxData", "BoxData", \
"Print"]
}, Open  ]],
Cell[170631, 3554, 63546, 1053, 609, 41571, 693, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234214, 4612, 8989, 203, 839, "Input"],
Cell[CellGroupData[{
Cell[243228, 4819, 1291, 18, 51, "Print"],
Cell[244522, 4839, 1284, 19, 51, "Print"],
Cell[245809, 4860, 3911, 74, 778, "Print"]
}, Open  ]]
}, Open  ]],
Cell[249747, 4938, 8398, 181, 1684, "Input"],
Cell[CellGroupData[{
Cell[258170, 5123, 154, 3, 103, "Input"],
Cell[258327, 5128, 351, 7, 76, "Print"],
Cell[258681, 5137, 130, 2, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258848, 5144, 450, 10, 103, "Input"],
Cell[CellGroupData[{
Cell[259323, 5158, 476, 9, 76, "Print"],
Cell[259802, 5169, 476, 9, 76, "Print"],
Cell[260281, 5180, 473, 9, 76, "Print"],
Cell[260757, 5191, 474, 9, 76, "Print"],
Cell[261234, 5202, 473, 9, 76, "Print"],
Cell[261710, 5213, 476, 9, 76, "Print"],
Cell[262189, 5224, 474, 9, 76, "Print"],
Cell[262666, 5235, 476, 9, 76, "Print"],
Cell[263145, 5246, 479, 10, 76, "Print"],
Cell[263627, 5258, 481, 10, 76, "Print"]
}, Open  ]],
Cell[264123, 5271, 741, 15, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264901, 5291, 133, 2, 103, "Input"],
Cell[265037, 5295, 1242, 30, 735, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266316, 5330, 502, 11, 103, "Input"],
Cell[CellGroupData[{
Cell[266843, 5345, 498, 9, 76, "Print"],
Cell[267344, 5356, 498, 9, 76, "Print"],
Cell[267845, 5367, 500, 9, 76, "Print"],
Cell[268348, 5378, 498, 9, 76, "Print"],
Cell[268849, 5389, 498, 9, 76, "Print"],
Cell[269350, 5400, 500, 9, 76, "Print"],
Cell[269853, 5411, 500, 9, 76, "Print"],
Cell[270356, 5422, 498, 9, 76, "Print"],
Cell[270857, 5433, 503, 10, 76, "Print"],
Cell[271363, 5445, 503, 10, 76, "Print"]
}, Open  ]],
Cell[271881, 5458, 729, 16, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272647, 5479, 5745, 126, 1260, "Input"],
Cell[278395, 5607, 958, 16, 198, "Message"],
Cell[279356, 5625, 301, 4, 76, "Print"]
}, Open  ]],
Cell[279672, 5632, 4694, 119, 1327, "Input"],
Cell[CellGroupData[{
Cell[284391, 5755, 317, 5, 103, "Input"],
Cell[284711, 5762, 781, 13, 198, "Message"],
Cell[285495, 5777, 261, 4, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285793, 5786, 686, 19, 240, "Input"],
Cell[286482, 5807, 806, 14, 198, "Message"],
Cell[287291, 5823, 808, 14, 198, "Message"],
Cell[288102, 5839, 808, 14, 198, "Message"],
Cell[288913, 5855, 569, 11, 76, "Message"],
Cell[289485, 5868, 1523, 27, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291045, 5900, 370, 10, 103, "Input"],
Cell[291418, 5912, 1276, 26, 811, "Output"]
}, Open  ]],
Cell[292709, 5941, 2095, 52, 789, "Input"],
Cell[CellGroupData[{
Cell[294829, 5997, 197, 4, 103, "Input"],
Cell[295029, 6003, 791, 13, 198, "Message"],
Cell[295823, 6018, 789, 13, 198, "Message"],
Cell[296615, 6033, 190, 3, 175, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
